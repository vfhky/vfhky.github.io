<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>TypeCodes</title><link>https://typecodes.com/</link><description>Beauty of programming</description><atom:link href="https://typecodes.com/feed.xml" rel="self"></atom:link><lastBuildDate>Wed, 23 Mar 2016 22:44:00 +0800</lastBuildDate><item><title>C语言删除无序整型数组中的重复元素及时间复杂度</title><link>https://typecodes.com/cseries/deldisorderintarrrepeatele.html</link><description>&lt;p&gt;遇到一个题，大概要求是写一个函数处理来去掉一个无序的整型数组（例如int i_arr[] = { 1, 2, 2, 3, 4, 2, 3, 5 };）中重复的元素，并返回最终的长度。&lt;/p&gt;


&lt;h4&gt;1 思路&lt;/h4&gt;
&lt;p&gt;看到这道题的时候，第一反应就是需要删除元素，然后联想到单链表。但是后面一想还是不划算，因为单链表还得先把数组中的元素遍历到链表节点中。&lt;/p&gt;
&lt;p&gt;换一下思路，可以先创建另一个整型数组（大小和原数组一样），然后正向遍历数组中的元素，比较当前元素和它前面所有的元素是否重复，如果这个整数之前没有出现过，那么就放到新的数组中，于是有了小节2中的Method1；另外一种就是不需要创建新的数组，在正向遍历数组中的元素时，比较当前元素和它后面所有的元素是否重复，如果重复就把后面的所有元素向前移动（即覆盖），于是有了小节2中的Method2。&lt;/p&gt;
&lt;h4&gt;2 完整程序&lt;/h4&gt;
&lt;p&gt;程序中第104行的&lt;code&gt;--j&lt;/code&gt;语句非常重要，这是为了避免当前元素连续出现3次（或以上）而没有被删除。&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt; * @FileName    int_del_repeat.c&lt;/span&gt;
&lt;span class="cm"&gt; * @Describe    A simple example for deleting the repeated elements in a deldisor interger array.&lt;/span&gt;
&lt;span class="cm"&gt; * @Author      vfhky 2016-03-23 22:44 https://typecodes.com/cseries/deldisorderintarrrepeatele.html&lt;/span&gt;
&lt;span class="cm"&gt; * @Compile     gcc int_del_repeat.c -o int_del_repeat&lt;/span&gt;
&lt;span class="cm"&gt; */&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;string.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;malloc.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;quot;print.h&amp;quot;&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;f_del1&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;iLen&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;f_del2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;i_f_del2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;len&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;argc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;//The test array.&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i_arr1&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;26&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;23&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i_arr2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;26&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;23&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i_ar2r&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;26&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;17&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;23&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;24&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i_ar3r&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;26&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;17&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;23&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;24&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;

    &lt;span class="c1"&gt;//The length of .&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i_p_len&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="cp"&gt;#if 1&lt;/span&gt;
    &lt;span class="n"&gt;i_p_len&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;f_del1&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;i_ar2r&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;26&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;PRINT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;len=[%d].&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i_p_len&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="cp"&gt;#endif&lt;/span&gt;

    &lt;span class="n"&gt;PRINT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;------------------------------&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="cp"&gt;#if 1&lt;/span&gt;
    &lt;span class="n"&gt;i_p_len&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;f_del2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;i_ar3r&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;26&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;PRINT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;len=[%d].&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i_p_len&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="cp"&gt;#endif&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;//Method 1: Using malloc to init an array for storing the elements after deleting the repeated ones.&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;f_del1&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;iLen&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i_recycle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="c1"&gt;//Flags to store an element into the array i_f_del1.&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i_flag&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="c1"&gt;//Length of the sorted array, name as i_f_del1.&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i_f_del1_len&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;//Init an array for storing the elements after deleting the repeated ones.&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;i_f_del1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;malloc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;iLen&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="c1"&gt;//Init the first interger element.&lt;/span&gt;
    &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;i_f_del1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;iLen&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;i_flag&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;i_recycle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;i_recycle&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i_recycle&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;i_flag&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="c1"&gt;//If i_flag equals 1, we should put the current element to the array i_f_del1.&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;i_flag&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;i_f_del1&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i_f_del1_len&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="cp"&gt;#if 1&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;i_f_del1_len&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;PRINT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;i_f_del1[%d]=[%d].&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i_f_del1&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="cp"&gt;#endif&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;i_f_del1_len&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;//Method 2: cover up the repeated elements.&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;f_del2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;i_f_del2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;len&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;len&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;len&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;i_f_del2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;i_f_del2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;len&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="n"&gt;i_f_del2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;i_f_del2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;        &lt;span class="c1"&gt;//cover up&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;len&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="c1"&gt;//Key step to avoiding the continuous elements repeated more than 2 times.&lt;/span&gt;
                &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cp"&gt;#if 1&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;len&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;PRINT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;i_f_del2[%d]=[%d].&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i_f_del2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="cp"&gt;#endif&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;len&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h4&gt;3 测试执行&lt;/h4&gt;
&lt;p&gt;使用&lt;a href="https://typecodes.com/cseries/cppgeneralmakefile.html" title="查看原文"&gt;《Linux C/C++工程中可生成ELF、动/静态库文件的通用Makefile》&lt;/a&gt;一文中的Makefile文件进行程序编译，当然也可以使用命令进行编译&lt;code&gt;gcc int_del_repeat.c -o int_del_repeat&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img alt="C语言删除无序整型数组中的重复元素" src="https://o3cex9zsl.qnssl.com/2016/03/int_del_repeat_disorder_array.png" title="C语言删除无序整型数组中的重复元素" /&gt;&lt;/p&gt;
&lt;h4&gt;4 时间复杂度&lt;/h4&gt;
&lt;p&gt;Method 2中的时间复杂度为O(N＾2)，Method 2中的时间复杂度为O(N＾3)。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Wed, 23 Mar 2016 22:44:00 +0800</pubDate><guid>tag:typecodes.com,2016-03-23:cseries/deldisorderintarrrepeatele.html</guid><category>数组</category><category>时间复杂度</category></item><item><title>UNIX环境高级编程（APUE）之单实例守护进程</title><link>https://typecodes.com/cseries/apuesingledaemonprocess.html</link><description>&lt;p&gt;在UNIX环境高级编程（APUE）中提到了守护进程的创建方法，思路很清晰，所以这里通过代码具体研究下。&lt;/p&gt;
&lt;p&gt;&lt;img alt="UNIX环境高级编程（APUE）之单实例守护进程" src="https://o3cex9zsl.qnssl.com/2016/03/apue.png" title="UNIX环境高级编程（APUE）之单实例守护进程" /&gt;&lt;/p&gt;


&lt;h4&gt;1 完整程序：单实例守护进程&lt;/h4&gt;
&lt;p&gt;根据APUE的介绍，创建守护进程基本需要如下7个步骤。需要注意的是由于守护进程没有TTY（控制终端），所以代码中部分特意写上去的printf语句是不会输出到终端界面上的。&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt; * @FileName    daemon_process.c&lt;/span&gt;
&lt;span class="cm"&gt; * @Describe    A simple example for creating a single object of daemon process in linux.&lt;/span&gt;
&lt;span class="cm"&gt; * @Author      vfhky 2016-03-14 17:52 https://typecodes.com/cseries/apuesingledaemonprocess.html&lt;/span&gt;
&lt;span class="cm"&gt; * @Compile     gcc daemon_process.c -o daemon_process&lt;/span&gt;
&lt;span class="cm"&gt; * @Reference   program list 13-1 in APUE.&lt;/span&gt;
&lt;span class="cm"&gt; */&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;unistd.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;stdarg.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;string.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;stdlib.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;signal.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;syslog.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;fcntl.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;sys/types.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;sys/stat.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;sys/resource.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;errno.h&amp;gt;&lt;/span&gt;

&lt;span class="cp"&gt;#define PRINT_PID() printf( &amp;quot;Row[%d]: getpid=[%d].\n&amp;quot;, __LINE__, getpid() )&lt;/span&gt;
&lt;span class="c1"&gt;//守护进程对应的用户必须对该文件具有访问权限&lt;/span&gt;
&lt;span class="cp"&gt;#define LOCK_FILE &amp;quot;/home/vfhky/daemon_process.pid&amp;quot;&lt;/span&gt;
&lt;span class="cp"&gt;#define MAXLINE 1024&lt;/span&gt;


&lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt; * Print a message and return to caller.&lt;/span&gt;
&lt;span class="cm"&gt; * Caller specifies &amp;quot;errnoflag&amp;quot;.&lt;/span&gt;
&lt;span class="cm"&gt; */&lt;/span&gt;
&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;err_doit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;errnoflag&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;va_list&lt;/span&gt; &lt;span class="n"&gt;ap&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;char&lt;/span&gt;    &lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;MAXLINE&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

    &lt;span class="n"&gt;vsnprintf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;MAXLINE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ap&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;errnoflag&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;snprintf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;strlen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;MAXLINE&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;strlen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;: %s&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                 &lt;span class="n"&gt;strerror&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="n"&gt;strcat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;fflush&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;     &lt;span class="cm"&gt;/* in case stdout and stderr are the same */&lt;/span&gt;
    &lt;span class="n"&gt;fputs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;stderr&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;fflush&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;       &lt;span class="cm"&gt;/* flushes all stdio output streams */&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt; * Fatal error unrelated to a system call.&lt;/span&gt;
&lt;span class="cm"&gt; * Print a message and terminate.&lt;/span&gt;
&lt;span class="cm"&gt; */&lt;/span&gt;
&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;err_quit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;va_list&lt;/span&gt;     &lt;span class="n"&gt;ap&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="n"&gt;va_start&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ap&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;err_doit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ap&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;va_end&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ap&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;daemonize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;cmd&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt;                 &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fd0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fd1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fd2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kt"&gt;pid_t&lt;/span&gt;               &lt;span class="n"&gt;pid&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;rlimit&lt;/span&gt;       &lt;span class="n"&gt;rl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;sigaction&lt;/span&gt;    &lt;span class="n"&gt;sa&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt;     * 第一步：设置文件模式屏蔽字为0&lt;/span&gt;
&lt;span class="cm"&gt;     * Clear file creation mask.&lt;/span&gt;
&lt;span class="cm"&gt;     */&lt;/span&gt;
    &lt;span class="n"&gt;umask&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt;     * 获取最大的文件描述符数目&lt;/span&gt;
&lt;span class="cm"&gt;     * Get maximum number of file descriptors.&lt;/span&gt;
&lt;span class="cm"&gt;     */&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;getrlimit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;RLIMIT_NOFILE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;rl&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;err_quit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%s: can&amp;#39;t get file limit&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cmd&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt;     * 第二步：创建一个子进程，使父进程退出&lt;/span&gt;
&lt;span class="cm"&gt;     * Become a session leader to lose controlling TTY.&lt;/span&gt;
&lt;span class="cm"&gt;     */&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;pid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;fork&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;err_quit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%s: can&amp;#39;t fork&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cmd&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pid&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="cm"&gt;/* parent */&lt;/span&gt;
        &lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="n"&gt;PRINT_PID&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt;     * 第三步：创建一个新的会话ID&lt;/span&gt;
&lt;span class="cm"&gt;     */&lt;/span&gt;
    &lt;span class="n"&gt;setsid&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt;     * Ensure future opens won&amp;#39;t allocate controlling TTYs.&lt;/span&gt;
&lt;span class="cm"&gt;     */&lt;/span&gt;
    &lt;span class="n"&gt;sa&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sa_handler&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;SIG_IGN&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;sigemptyset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;sa&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sa_mask&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;sa&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sa_flags&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;sigaction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SIGHUP&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;sa&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;err_quit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;%s: can&amp;#39;t ignore SIGHUP&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;pid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;fork&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;                  &lt;span class="c1"&gt;//再次创建一个子进程，同样使父进程退出&lt;/span&gt;
        &lt;span class="n"&gt;err_quit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%s: can&amp;#39;t fork&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cmd&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;pid&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="cm"&gt;/* parent */&lt;/span&gt;
        &lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="n"&gt;PRINT_PID&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt;     * 第四步：切换当前工作目录到根目录&lt;/span&gt;
&lt;span class="cm"&gt;     * Change the current working directory to the root so&lt;/span&gt;
&lt;span class="cm"&gt;     * we won&amp;#39;t prevent file systems from being unmounted.&lt;/span&gt;
&lt;span class="cm"&gt;     */&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;chdir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;err_quit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%s: can&amp;#39;t change directory to /&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt;     * 第五步：关闭所有打开的文件描述符&lt;/span&gt;
&lt;span class="cm"&gt;     * Close all open file descriptors.&lt;/span&gt;
&lt;span class="cm"&gt;     */&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rlim_max&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;RLIM_INFINITY&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;rl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rlim_max&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1024&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;rl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rlim_max&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt;     * 第六步：使/dev/null具有文件描述符0，1，2.&lt;/span&gt;
&lt;span class="cm"&gt;     * Attach file descriptors 0, 1, and 2 to /dev/null.&lt;/span&gt;
&lt;span class="cm"&gt;     */&lt;/span&gt;
    &lt;span class="n"&gt;fd0&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/dev/null&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;O_RDWR&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;fd1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;fd2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt;     * Initialize the log file.&lt;/span&gt;
&lt;span class="cm"&gt;     * @para-in:    cmd: the identifier in the log.&lt;/span&gt;
&lt;span class="cm"&gt;     */&lt;/span&gt;
    &lt;span class="n"&gt;openlog&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;cmd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;LOG_CONS&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;LOG_DAEMON&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;fd0&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;fd1&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;fd2&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;syslog&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;LOG_ERR&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;unexpected file descriptors %d %d %d&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fd0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fd1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fd2&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt;     * 第7步：通过文件锁避免重复运行多个守护进程&lt;/span&gt;
&lt;span class="cm"&gt;     */&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;lockfd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;LOCK_FILE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;O_RDWR&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;lockfd&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;syslog&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;LOG_ERR&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Cannot lock file[%s], aborting[%s].&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;LOCK_FILE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;strerror&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;errno&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="c1"&gt;//下面这一行无法打印到控制台，项目上应该打印到日志文件中&lt;/span&gt;
        &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Cannot lock file[%s], aborting[%s].&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;LOCK_FILE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;strerror&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;errno&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;lockf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lockfd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;F_TLOCK&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;syslog&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;LOG_ERR&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Daemon process is already running[%s].&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;strerror&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;errno&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="c1"&gt;//下面这一行无法打印到控制台，项目上应该打印到日志文件中&lt;/span&gt;
        &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Daemon process is already running[%s].&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;strerror&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;errno&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;argc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;PRINT_PID&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="n"&gt;daemonize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Daemon test.&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="c1"&gt;//由于父进程退出，所有只有最后一个子进程执行下面的语句（休眠）&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;This line will not be print for the daemon process has no terminate.&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;120&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h4&gt;2 程序编译&lt;/h4&gt;
&lt;p&gt;使用&lt;a href="https://typecodes.com/cseries/cppgeneralmakefile.html" title="查看原文"&gt;《Linux C/C++工程中可生成ELF、动/静态库文件的通用Makefile》&lt;/a&gt;一文中的Makefile文件进行程序编译，当然也可以使用命令进行编译&lt;code&gt;gcc daemon_process.c -o daemon_process&lt;/code&gt;。&lt;/p&gt;
&lt;h4&gt;3 创建第一个守护进程&lt;/h4&gt;
&lt;p&gt;如下图所示，程序先执行第178行main函数中的打印语句，输出当前第一个进程的PID值为25872；然后由于在daemonize函数中第一个进程(PID:25872)退出，所以它的子进程(PID:25873)执行第101行的打印语句；接着由于第二个进程(PID:25873)退出，那么它的子进程(PID:25874)执行第121行的打印语句；在关闭了所有文件描述符后，该子进程(PID:25874)打开标准输入/输出/错误流，最后该子进程成为由Linux系统init进程托管的&lt;code&gt;孤儿进程&lt;/code&gt;，没有终端terminal，这也就是守护进程。&lt;/p&gt;
&lt;p&gt;&lt;img alt="创建第一个守护进程" src="https://o3cex9zsl.qnssl.com/2016/03/daemon_process1.png" title="创建第一个守护进程" /&gt;&lt;/p&gt;
&lt;p&gt;其中使用&lt;code&gt;ps -axj|head -n 1; ps -axj|grep daemon_process&lt;/code&gt;命令发现子进程(PID:25874)的父进程为1进程(init进程)，终端TTY为空。&lt;/p&gt;
&lt;p&gt;接着使用命令&lt;code&gt;pstree -pul&lt;/code&gt;查看当前用户的所有进程情况，如下图所示，再次说明守护进程(PID:25874)创建成功了。&lt;/p&gt;
&lt;p&gt;&lt;img alt="使用命令pstree -pul查看用户进程" src="https://o3cex9zsl.qnssl.com/2016/03/daemon_process_pstree_pul.png" title="使用命令pstree -pul查看用户进程" /&gt;&lt;/p&gt;
&lt;h4&gt;4 创建第二个守护进程&lt;/h4&gt;
&lt;p&gt;如果尝试再次创建一个同样的守护进程，如下图所示。执行命令&lt;code&gt;ps -axj|head -n 1; ps -axj|grep daemon_process&lt;/code&gt;，发现仍然只有一个守护进程(PID:25874)，也就是创建第二个守护进程失败。&lt;/p&gt;
&lt;p&gt;&lt;img alt="创建第二个守护进程失败" src="https://o3cex9zsl.qnssl.com/2016/03/daemon_process2.png" title="创建第二个守护进程失败" /&gt;&lt;/p&gt;
&lt;p&gt;这时使用&lt;code&gt;cat /var/log/message&lt;/code&gt;命令查看进程在Linux系统日志文件中打印的内容，如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img alt="查看/var/log/message日志内容" src="https://o3cex9zsl.qnssl.com/2016/03/var_log_message_err.png" title="查看/var/log/message日志内容" /&gt;&lt;/p&gt;
&lt;p&gt;很显然程序执行到第160行，由于第一个守护进程对LOCK_FILE文件加锁的缘故而无法获取该文件的访问权限最终导致子进程(PID:25909)终止。于是，第二次创建守护进程失败了。&lt;/p&gt;
&lt;h4&gt;5 附录&lt;/h4&gt;
&lt;p&gt;关于&lt;code&gt;openlog&lt;/code&gt;和&lt;code&gt;syslog&lt;/code&gt;函数的使用方法，可以通过命令&lt;code&gt;man 3 syslog&lt;/code&gt;查看，大概就是根据日志标识符（ident）和日志level（LOG_EMERG、LOG_ERR、LOG_WARNING等）和日志文件类型facility（LOG_CRON、LOG_MAIL、LOG_SYSLOG和默认的LOG_USER等）把进程的内容输出到Linux系统某一类型的日志文件中。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;SYNOPSIS&lt;/span&gt;
    &lt;span class="cp"&gt;#include &amp;lt;syslog.h&amp;gt;&lt;/span&gt;

    &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="n"&gt;openlog&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;ident&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;option&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;facility&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;syslog&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;priority&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...);&lt;/span&gt;
    &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;closelog&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="n"&gt;DESCRIPTION&lt;/span&gt;
    &lt;span class="n"&gt;closelog&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;  &lt;span class="n"&gt;closes&lt;/span&gt;  &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;descriptor&lt;/span&gt; &lt;span class="n"&gt;being&lt;/span&gt; &lt;span class="n"&gt;used&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;write&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;system&lt;/span&gt; &lt;span class="n"&gt;logger&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
    &lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;use&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;closelog&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="n"&gt;optional&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;

    &lt;span class="n"&gt;openlog&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="n"&gt;opens&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;connection&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;system&lt;/span&gt; &lt;span class="n"&gt;logger&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;program&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;  &lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;string&lt;/span&gt;
    &lt;span class="n"&gt;pointed&lt;/span&gt;  &lt;span class="n"&gt;to&lt;/span&gt;  &lt;span class="n"&gt;by&lt;/span&gt; &lt;span class="n"&gt;ident&lt;/span&gt; &lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="n"&gt;prepended&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;every&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="n"&gt;typically&lt;/span&gt; &lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt;
    &lt;span class="n"&gt;the&lt;/span&gt;  &lt;span class="n"&gt;program&lt;/span&gt;  &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;   &lt;span class="n"&gt;If&lt;/span&gt;  &lt;span class="n"&gt;ident&lt;/span&gt;  &lt;span class="n"&gt;is&lt;/span&gt;  &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="n"&gt;the&lt;/span&gt;  &lt;span class="n"&gt;program&lt;/span&gt;   &lt;span class="n"&gt;name&lt;/span&gt;   &lt;span class="n"&gt;is&lt;/span&gt;   &lt;span class="n"&gt;used&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;POSIX&lt;/span&gt;&lt;span class="mf"&gt;.1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2008&lt;/span&gt; &lt;span class="n"&gt;does&lt;/span&gt; &lt;span class="n"&gt;not&lt;/span&gt; &lt;span class="n"&gt;specify&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;behavior&lt;/span&gt; &lt;span class="n"&gt;when&lt;/span&gt; &lt;span class="n"&gt;ident&lt;/span&gt; &lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;.)&lt;/span&gt;

    &lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;option&lt;/span&gt; &lt;span class="n"&gt;argument&lt;/span&gt; &lt;span class="n"&gt;specifies&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt; &lt;span class="n"&gt;which&lt;/span&gt; &lt;span class="n"&gt;control&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;operation&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;openlog&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="n"&gt;subsequent&lt;/span&gt; &lt;span class="n"&gt;calls&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt;  &lt;span class="n"&gt;syslog&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;   &lt;span class="n"&gt;The&lt;/span&gt;  &lt;span class="n"&gt;facility&lt;/span&gt;  &lt;span class="n"&gt;argument&lt;/span&gt;  &lt;span class="n"&gt;establishes&lt;/span&gt;  &lt;span class="n"&gt;a&lt;/span&gt;
    &lt;span class="k"&gt;default&lt;/span&gt;  &lt;span class="n"&gt;to&lt;/span&gt;  &lt;span class="n"&gt;be&lt;/span&gt;  &lt;span class="n"&gt;used&lt;/span&gt;  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;none&lt;/span&gt; &lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="n"&gt;specified&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="n"&gt;subsequent&lt;/span&gt; &lt;span class="n"&gt;calls&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;syslog&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;
    &lt;span class="n"&gt;Values&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;option&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="n"&gt;facility&lt;/span&gt; &lt;span class="n"&gt;are&lt;/span&gt; &lt;span class="n"&gt;given&lt;/span&gt; &lt;span class="n"&gt;below&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;  &lt;span class="n"&gt;The&lt;/span&gt;  &lt;span class="n"&gt;use&lt;/span&gt;  &lt;span class="n"&gt;of&lt;/span&gt;  &lt;span class="n"&gt;openlog&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;  &lt;span class="n"&gt;is&lt;/span&gt;
    &lt;span class="n"&gt;optional&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="n"&gt;automatically&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;called&lt;/span&gt; &lt;span class="n"&gt;by&lt;/span&gt; &lt;span class="n"&gt;syslog&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;necessary&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="n"&gt;which&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="n"&gt;ident&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;

    &lt;span class="n"&gt;syslog&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="n"&gt;generates&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;log&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;which&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;distributed&lt;/span&gt;  &lt;span class="n"&gt;by&lt;/span&gt;  &lt;span class="n"&gt;syslogd&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;
    &lt;span class="n"&gt;The&lt;/span&gt;  &lt;span class="n"&gt;priority&lt;/span&gt;  &lt;span class="n"&gt;argument&lt;/span&gt; &lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="n"&gt;formed&lt;/span&gt; &lt;span class="n"&gt;by&lt;/span&gt; &lt;span class="n"&gt;ORing&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;facility&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;level&lt;/span&gt; &lt;span class="n"&gt;values&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;explained&lt;/span&gt; &lt;span class="n"&gt;below&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;  &lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;remaining&lt;/span&gt; &lt;span class="n"&gt;arguments&lt;/span&gt; &lt;span class="n"&gt;are&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="n"&gt;as&lt;/span&gt;  &lt;span class="n"&gt;in&lt;/span&gt;  &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;and&lt;/span&gt;  &lt;span class="n"&gt;any&lt;/span&gt;  &lt;span class="n"&gt;arguments&lt;/span&gt;  &lt;span class="n"&gt;required&lt;/span&gt;  &lt;span class="n"&gt;by&lt;/span&gt;  &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;except&lt;/span&gt; &lt;span class="n"&gt;that&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;two&lt;/span&gt; &lt;span class="n"&gt;character&lt;/span&gt;
    &lt;span class="n"&gt;sequence&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;replaced&lt;/span&gt; &lt;span class="n"&gt;by&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt; &lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="n"&gt;strerror&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;errno&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;  &lt;span class="n"&gt;A&lt;/span&gt;
    &lt;span class="n"&gt;trailing&lt;/span&gt; &lt;span class="n"&gt;newline&lt;/span&gt; &lt;span class="n"&gt;may&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;added&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;needed&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Mon, 14 Mar 2016 17:52:00 +0800</pubDate><guid>tag:typecodes.com,2016-03-14:cseries/apuesingledaemonprocess.html</guid><category>apue</category><category>守护进程</category></item><item><title>Linux使用KILL 0检测进程是否存在</title><link>https://typecodes.com/cseries/kill0checkprocessifexist.html</link><description>&lt;p&gt;之前遇到过&lt;code&gt;kill( pid, 0 )&lt;/code&gt;的情况，由于平常没注意到kill函数的形参为0的情况，不知道它的作用。后面用&lt;code&gt;man 2 kill&lt;/code&gt;命令查看了下kill函数的说明，发现可以用来检测进程的存在情况。&lt;/p&gt;
&lt;p&gt;&lt;img alt="man 2 kill查看关于形参0的说明" src="https://o3cex9zsl.qnssl.com/2016/03/man2kill0.png" title="man 2 kill查看关于形参0的说明" /&gt;&lt;/p&gt;


&lt;h4&gt;1 关于kill 0的说明1&lt;/h4&gt;
&lt;p&gt;从上图DESCRIPTION区域的文字可以看出，kill函数中的形参sig是0的话，那么不会向pid进程发送任何信号，但是仍然会继续检测错误（进程ID或者进程组ID是否存在）。kill函数的返回值和具体的错误信息如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;RETURN VALUE
       On  success  (at least one signal was sent), zero is returned.  On error, -1
       is returned, and errno is set appropriately.

ERRORS
       EINVAL An invalid signal was specified.

       EPERM  The process does not have permission to send the signal to any of the
              target processes.

       ESRCH  The  pid  or  process  group  does  not exist.  Note that an existing
              process might be a zombie, a process which already committed termina‐
              tion, but has not yet been wait(2)ed for.
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;2 简单测试程序&lt;/h4&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt; * @FileName    chk_signal_exist.c&lt;/span&gt;
&lt;span class="cm"&gt; * @Describe    A simple example for checking if a proccess is existing in linux.&lt;/span&gt;
&lt;span class="cm"&gt; * @Author      vfhky 2016-03-14 11:48 https://typecodes.com/cseries/kill0checkprocessifexist.html&lt;/span&gt;
&lt;span class="cm"&gt; * @Compile     gcc chk_signal_exist.c -o chk_signal_exist&lt;/span&gt;
&lt;span class="cm"&gt; */&lt;/span&gt;

&lt;span class="cp"&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;signal.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;malloc.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;stdlib.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;string.h&amp;gt;&lt;/span&gt;

&lt;span class="cp"&gt;#define GO_FREE(p) \&lt;/span&gt;
&lt;span class="cp"&gt;    free(p);    \&lt;/span&gt;
&lt;span class="cp"&gt;    p = NULL;   \&lt;/span&gt;
&lt;span class="cp"&gt;    printf( &amp;quot;exit.\n&amp;quot; );&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;argc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;argc&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Usage: %s %s&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;pid&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;malloc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;memcpy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;strlen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt;     * no signal is sent, but error checking is still performed;&lt;/span&gt;
&lt;span class="cm"&gt;     * this can be used to check for the existence of a process ID or process group ID.&lt;/span&gt;
&lt;span class="cm"&gt;     */&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;kill&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;atoi&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;perror&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;error&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Signal[%s] exist.&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;GO_FREE&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h4&gt;3 测试执行&lt;/h4&gt;
&lt;p&gt;使用&lt;a href="https://typecodes.com/cseries/cppgeneralmakefile.html" title="查看原文"&gt;《Linux C/C++工程中可生成ELF、动/静态库文件的通用Makefile》&lt;/a&gt;一文中的Makefile文件进行程序编译，当然也可以使用命令进行编译&lt;code&gt;gcc chk_signal_exist.c -o chk_signal_exist&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;先测试进程不存在的情况：随便输入一个进程ID(23232)作为参数1&lt;/p&gt;
&lt;p&gt;&lt;img alt="使用kill 0测试进程不存在的情况" src="https://o3cex9zsl.qnssl.com/2016/03/chk_signal_exist1.png" title="使用kill 0测试进程不存在的情况" /&gt;&lt;/p&gt;
&lt;p&gt;然后测试进程存在的情况：先使用ps命令查看已存在的进程daemon_sleep1(20608)，然后把作为参数1传入&lt;/p&gt;
&lt;p&gt;&lt;img alt="使用kill 0测试进程存在的情况" src="https://o3cex9zsl.qnssl.com/2016/03/chk_signal_exist2.png" title="使用kill 0测试进程存在的情况" /&gt;&lt;/p&gt;
&lt;h4&gt;4 其它说明&lt;/h4&gt;
&lt;p&gt;网上有资料说0代表的是&lt;code&gt;信号0&lt;/code&gt;，但是使用命令&lt;code&gt;kill -l&lt;/code&gt;却没有显示，所以这里个人觉得不应该叫&lt;code&gt;信号0&lt;/code&gt;。它只是kill函数中的一个普通形参而已，大于0的时候发送对应信号给某个进程，等于0的时候表示检测某个进程是否存在。&lt;/p&gt;
&lt;p&gt;&lt;img alt="kill -l命令查看所有支持的信号" src="https://o3cex9zsl.qnssl.com/2016/03/killlshowsignals.png" title="kill -l命令查看所有支持的信号" /&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Mon, 14 Mar 2016 11:48:00 +0800</pubDate><guid>tag:typecodes.com,2016-03-14:cseries/kill0checkprocessifexist.html</guid><category>kill</category><category>信号</category></item><item><title>vsnprintf字符串格式化输出实例：日志中打印程序名和行号</title><link>https://typecodes.com/cseries/vsnprintffilenameline.html</link><description>&lt;p&gt;在Linux C/C++程序中打印日志时，可能会由于需要打印未知个数的变量参数，那么&lt;code&gt;vsnprintf&lt;/code&gt;函数就排上用场了。这里使用一个简单的C程序例子，演示在打印源程序文件名和该打印函数所在的行号的同时，使用vsnprintf函数打印个数未知的参数变量。&lt;/p&gt;


&lt;h4&gt;1 完整程序&lt;/h4&gt;
&lt;p&gt;代码比较简单，如果需要把内容打印在日志文件中的话，还需要调用文件处理函数。为了便于理解，这里直接把内容输出到控制台上了。需要说明的三个地方：&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;静态全局变量 c_FileName 和 i_FileLineNum 分别用于存储源程序文件名和打印函数所在的行号；
自定义标识符 PRINT 先调用源程序文件名和行号的赋值函数 Get_File_Line ，然后调用个数未知的参数的处理函数 F_vsnprintf；
类似于sprintf和snprintf这两个函数，相比vsprintf函数，vsnprintf加了最大字节( MAXBYTES )的限制，防止内存溢出。
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;具体代码如下：&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt; * @FileName    vsnprintf_name_line.c&lt;/span&gt;
&lt;span class="cm"&gt; * @Describe    A simple example for using vsnprintf to print the name and line-num of source file in linux.&lt;/span&gt;
&lt;span class="cm"&gt; * @Author      vfhky 2016-03-13 23:28 https://typecodes.com/cseries/vsnprintffilenameline.html&lt;/span&gt;
&lt;span class="cm"&gt; * @Compile     gcc vsnprintf_name_line.c -o vsnprintf_name_line&lt;/span&gt;
&lt;span class="cm"&gt; */&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;string.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;stdarg.h&amp;gt;&lt;/span&gt;

&lt;span class="cp"&gt;#define FILENAME_LEN 100&lt;/span&gt;
&lt;span class="cp"&gt;#define MAXLINE 1024&lt;/span&gt;
&lt;span class="cp"&gt;#define MAXBYTES 50&lt;/span&gt;

&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;c_FileName&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;FILENAME_LEN&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;  &lt;span class="n"&gt;i_FileLineNum&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;//Self-define a function which can print the name and line-number of the source file calling it.&lt;/span&gt;
&lt;span class="cp"&gt;#define PRINT Get_File_Line( __FILE__, __LINE__ );\&lt;/span&gt;
&lt;span class="cp"&gt;              F_vsnprintf&lt;/span&gt;

&lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt; * Get the linenum and filename of the source file.&lt;/span&gt;
&lt;span class="cm"&gt; * @Para-in:        p_FileName: The name of the source file.&lt;/span&gt;
&lt;span class="cm"&gt; * @Para-in:        i_FileLine: The line-number of the source file.&lt;/span&gt;
&lt;span class="cm"&gt; */&lt;/span&gt;
&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;Get_File_Line&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p_FileName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i_FileLine&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;strcpy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;c_FileName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;p_FileName&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;i_FileLineNum&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;i_FileLine&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt; * Print the arguments according to the first argument, name as fmt.&lt;/span&gt;
&lt;span class="cm"&gt; */&lt;/span&gt;
&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;F_vsnprintf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;MAXLINE&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="n"&gt;snprintf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;MAXBYTES&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;[%s:%d] &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;c_FileName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i_FileLineNum&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kt"&gt;va_list&lt;/span&gt; &lt;span class="n"&gt;ap&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;va_start&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;ap&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fmt&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;vsnprintf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;strlen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;MAXLINE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ap&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;va_end&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;ap&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="n"&gt;strcat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;fflush&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;stdout&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="n"&gt;fputs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;stderr&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;fflush&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;argc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;PRINT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;[%s]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Hello.&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;PRINT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;[%s %s]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Hello&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;world.&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h4&gt;2 编译执行&lt;/h4&gt;
&lt;p&gt;使用&lt;a href="https://typecodes.com/cseries/cppgeneralmakefile.html" title="查看原文"&gt;《Linux C/C++工程中可生成ELF、动/静态库文件的通用Makefile》&lt;/a&gt;一文中的Makefile文件进行程序编译（当然也可以使用命令进行编译&lt;code&gt;gcc vsnprintf_name_line.c -o vsnprintf_name_line&lt;/code&gt;），接着执行该程序，得到如下图所示的结果：&lt;/p&gt;
&lt;p&gt;&lt;img alt="vsnprintf字符串格式化输出实例" src="https://o3cex9zsl.qnssl.com/2016/03/vsnprintf_name_line.png" title="vsnprintf字符串格式化输出实例" /&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Sun, 13 Mar 2016 23:28:00 +0800</pubDate><guid>tag:typecodes.com,2016-03-13:cseries/vsnprintffilenameline.html</guid><category>vsnprintf</category><category>字符串格式化</category></item><item><title>Disqus支持的HTML标签和代码高亮方法</title><link>https://typecodes.com/mix/disqushtmltaghighlight.html</link><description>&lt;p&gt;由于Disqus不支持Markdown的原因，所以在评论中使用HTML标签和代码高亮就不像Markdown那样方便了。在查看了&lt;a href="https://help.disqus.com/customer/portal/articles/466253-what-html-tags-are-allowed-within-comments" title="点击查看"&gt;Disqus官方&lt;/a&gt;关于HTML标签和代码高亮的说明后，发现Disqus只支持原生的HTML标签和代码高亮方式。&lt;/p&gt;
&lt;p&gt;&lt;img alt="Disqus中HTML标签和代码高亮的效果" src="https://o3cex9zsl.qnssl.com/2016/03/disqus_htmltag_highlight_result.png" title="Disqus中HTML标签和代码高亮的效果" /&gt;&lt;/p&gt;


&lt;h4&gt;1 支持的HTML标签&lt;/h4&gt;
&lt;p&gt;Disqus官方给出的HTML标签如下，BZ推测大部分原生的HTML TAG应该都是支持的。&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;br&amp;gt;&lt;/span&gt;Defines a single line break.&lt;span class="nt"&gt;&amp;lt;/br&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;i&amp;gt;&lt;/span&gt;italic text&lt;span class="nt"&gt;&amp;lt;/i&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;a&amp;gt;&lt;/span&gt; Defines an anchor.&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;strong&amp;gt;&lt;/span&gt; Defines bold text.&lt;span class="nt"&gt;&amp;lt;/strong&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;blockquote&amp;gt;&lt;/span&gt; Defines a long quotation.&lt;span class="nt"&gt;&amp;lt;/blockquote&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;caption&amp;gt;&lt;/span&gt; Defines a table caption.&lt;span class="nt"&gt;&amp;lt;/caption&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;cite&amp;gt;&lt;/span&gt; Defines a citation.&lt;span class="nt"&gt;&amp;lt;/cite&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;em&amp;gt;&lt;/span&gt; Defines italic text.&lt;span class="nt"&gt;&amp;lt;/em&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt; Defines a paragraph.&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;span&amp;gt;&lt;/span&gt; Defines a section in a document.&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;s&amp;gt;&lt;/span&gt; Defines strikethrough text.&lt;span class="nt"&gt;&amp;lt;/s&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;strike&amp;gt;&lt;/span&gt; Defines strikethrough text.&lt;span class="nt"&gt;&amp;lt;/strike&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;u&amp;gt;&lt;/span&gt; Defines strikethrough text.&lt;span class="nt"&gt;&amp;lt;/u&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h4&gt;2 支持的代码高亮方式&lt;/h4&gt;
&lt;p&gt;只要将代码包含在&lt;code&gt;&amp;lt;pre&amp;gt;&amp;lt;code class="代码类型"&amp;gt;......&amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt;&lt;/code&gt;标签内就行了。目前官方支持的代码类型包括：&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;C#
HTML/XML (Note: You must first HTML-encode these tags to display them)
Java
Python
C/C++
HTTP
JavaScript
Ruby
CSS
Ini
PHP
SQL
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h4&gt;3 演示&lt;/h4&gt;
&lt;p&gt;这里演示了在Disqus评论中使用&lt;code&gt;blockquote&lt;/code&gt;标签以及代码高亮的方法，如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img alt="Disqus中HTML标签和代码高亮的使用方法" src="https://o3cex9zsl.qnssl.com/2016/03/disqus_htmltag_highlight.png" title="Disqus中HTML标签和代码高亮的使用方法" /&gt;&lt;/p&gt;
&lt;p&gt;最终的效果如本文第一张图片所示。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Thu, 03 Mar 2016 13:09:00 +0800</pubDate><guid>tag:typecodes.com,2016-03-03:mix/disqushtmltaghighlight.html</guid><category>pelican</category><category>disqus</category><category>代码高亮</category></item><item><title>更新博客生成发布及同步GitHub的Shell脚本：解决文件名空格问题</title><link>https://typecodes.com/linux/updatesyngithubpelicanshell.html</link><description>&lt;p&gt;&lt;a href="https://typecodes.com/linux/syngithubmarkdownpelican.html" title="《同步GitHub Markdown文章到Linux服务器后更新Pelican博客的脚本》"&gt;前面一篇文章&lt;/a&gt;通过Linux Shell脚本的方式，实现博客生成发布及同步GitHub的的功能：先同步GitHub个人仓库中的Markdown文章到本地，然后通过Pelican编译生成静态HTML文件，最后发布到Nginx的web目录下面，同时更新到GitHub个人主页（vfhky.github.io）。&lt;/p&gt;
&lt;p&gt;由于没仔细考虑到Markdown文件名中可能包含空格的问题，所以在Shell脚本的文件名遍历时（代码第108行）出现了BUG：Linux Shell默认把空格空格做为值与值之间的分隔符，所以原本一个带空格的文件名就被拆分成了几个文件名。&lt;/p&gt;
&lt;p&gt;&lt;img alt="CentOS7.2服务器默认的IFS为空值" src="https://o3cex9zsl.qnssl.com/2016/03/centos_ifs_default.png" title="CentOS7.2服务器默认的IFS为空值" /&gt;&lt;/p&gt;


&lt;h4&gt;1 解决方法&lt;/h4&gt;
&lt;p&gt;网上查找相关资料后，有两种主要的实现方法：Method 1是通过修改&lt;code&gt;IFS(Internal Field Seperator: Linuxshell中预设的分隔符，用来把command line分解成word)&lt;/code&gt;实现。如上图所示，BZ用命令&lt;code&gt;echo $IFS&lt;/code&gt;查看了自己的CentOS7.2服务器默认的IFS为空值。&lt;/p&gt;
&lt;p&gt;Method 2是直接在使用&lt;code&gt;find&lt;/code&gt;命令遍历文件时，把结果作为&lt;code&gt;while read&lt;/code&gt;的输入，这样就可以避免空格作为文件名的分隔符了。&lt;/p&gt;
&lt;h4&gt;2 完整代码&lt;/h4&gt;
&lt;p&gt;根据这两种方法，修改后的代码如下，同时也已经更新到了当前脚本所在的GitHub工程：&lt;a href="https://github.com/vfhky/shell-tools" title="点击查看"&gt;https://github.com/vfhky/shell-tools&lt;/a&gt;。&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="c"&gt;# FileName:      github_pelican_nginx.sh&lt;/span&gt;
&lt;span class="c"&gt;# Description:   Synchronize markdown articles with github, convert to html files using Pelican, deliver it to nginx environment.&lt;/span&gt;
&lt;span class="c"&gt;# Simple Usage:  ./github_pelican_nginx.sh &amp;quot;commit_comments&amp;quot;&lt;/span&gt;
&lt;span class="c"&gt;# Crontab Usage: 00 01 * * * /mydata/backups/bak_list/github_pelican_nginx.sh &amp;gt;/dev/null 2&amp;gt;&amp;amp;1&lt;/span&gt;
&lt;span class="c"&gt;# (c) 2016 vfhky https://typecodes.com/linux/syngithubmarkdownpelican.html&lt;/span&gt;
&lt;span class="c"&gt;# https://github.com/vfhky/shell-tools/blob/master/synchronize/github_pelican_nginx.sh&lt;/span&gt;


&lt;span class="c"&gt;# Basic command.&lt;/span&gt;
&lt;span class="nv"&gt;FINDCMD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;find&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;MVCMD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;\mv -f&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;CPCMD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;\cp -rf&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;RMCMD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;\rm -rf&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;TARXCMD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;tar -zxf&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;TARZIPCMD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;tar --warning=no-file-changed -zcf&amp;quot;&lt;/span&gt;

&lt;span class="c"&gt;# Pelican compile markdown files to html.&lt;/span&gt;
&lt;span class="nv"&gt;PELICAN_COMPILE_DIR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/mydata/GitBang/pelican
&lt;span class="c"&gt;# Private bang in github for store your markdown files.&lt;/span&gt;
&lt;span class="nv"&gt;GITHUB_PELICAN_DIR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/mydata/GitBang/GitHub/BlogBak
&lt;span class="c"&gt;# Backup dir for your website&amp;#39;s version management.&lt;/span&gt;
&lt;span class="nv"&gt;PELICAN_TAR_DIR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/share/nginx/html/pelican_content_bak
&lt;span class="c"&gt;# Dir of your website in nginx server.&lt;/span&gt;
&lt;span class="nv"&gt;PELICAN_BLOG_DIR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/share/nginx/html/pelican
&lt;span class="c"&gt;# Dir for this shell script to generate logs automatically.&lt;/span&gt;
&lt;span class="nv"&gt;BLOG_PUBLISH_LOG_DIR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/mydata/backups/logs/blogpublish
&lt;span class="c"&gt;# Your personal homepage in github.&lt;/span&gt;
&lt;span class="nv"&gt;GITHUB_PERSONAL_PAGE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/mydata/GitBang/GitHub/vfhky.github.io
&lt;span class="c"&gt;# Articles in 15 minutes are legal.&lt;/span&gt;
&lt;span class="nv"&gt;TIME_GAP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;15

&lt;span class="c"&gt;# Get the newest file name.&lt;/span&gt;
&lt;span class="c"&gt;#Newest_File=&amp;quot;ls -lrt| tail -n 1 | awk &amp;#39;{print $9}&amp;#39;&amp;quot;&lt;/span&gt;

&lt;span class="c"&gt;# Name of this shell script.&lt;/span&gt;
&lt;span class="nv"&gt;PRGNAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;github_pelican_nginx&amp;quot;&lt;/span&gt;

&lt;span class="c"&gt;# Current date format: e.g 20150505_2015.&lt;/span&gt;
&lt;span class="nv"&gt;Current_Date&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;date +%Y%m%d_%H%M&lt;span class="k"&gt;)&lt;/span&gt;

&lt;span class="c"&gt;# Check if current user is root.&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;id -u&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; !&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;0&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Error: You must be root to run this script.&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;exit &lt;/span&gt;1

&lt;span class="c"&gt;# Check parameter.&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;$# &lt;/span&gt;-gt &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Usage:    ./github_pelican_nginx.sh \&amp;quot;commit_comments\&amp;quot;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;exit &lt;/span&gt;1
&lt;span class="k"&gt;fi&lt;/span&gt;

&lt;span class="c"&gt;# Run command functions.&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; ERROR&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; &amp;gt;/dev/null &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;[&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;date +%H:%M:%S:%N&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;][error] &lt;/span&gt;&lt;span class="nv"&gt;$*&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;BLOG_PUBLISH_LOG_DIR&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;/&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;Current_Date&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;.log
    &lt;span class="nb"&gt;exit &lt;/span&gt;1
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;function&lt;/span&gt; NOTICE&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; &amp;gt;/dev/null &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;[&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;date +%H:%M:%S:%N&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;][notice] &lt;/span&gt;&lt;span class="nv"&gt;$*&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;BLOG_PUBLISH_LOG_DIR&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;/&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;Current_Date&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;.log
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;function&lt;/span&gt; RUNCMD&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;[&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;date +%H:%M:%S:%N&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;][notice] &lt;/span&gt;&lt;span class="nv"&gt;$*&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;BLOG_PUBLISH_LOG_DIR&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;/&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;Current_Date&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;.log
    &lt;span class="nb"&gt;eval&lt;/span&gt; &lt;span class="nv"&gt;$@&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;# Git pull command function.&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; Git_Pull&lt;span class="o"&gt;(){&lt;/span&gt;
    RUNCMD &lt;span class="s2"&gt;&amp;quot;git pull origin master &amp;gt;/dev/null&amp;quot;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;# Git commit command function.&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; Git_Commit&lt;span class="o"&gt;(){&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;$# &lt;/span&gt;-ne &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
        ERROR &lt;span class="s2"&gt;&amp;quot;Usage: Git_Commit commit_comments!&amp;quot;&lt;/span&gt;
        &lt;span class="nb"&gt;exit &lt;/span&gt;1&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
        RUNCMD &lt;span class="s2"&gt;&amp;quot;git pull &amp;amp;&amp;amp; git add --all &amp;amp;&amp;amp; git commit -m \&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;\&amp;quot; &amp;amp;&amp;amp; git push origin master&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;# Get the path of markdown articles in TIME_GAP minutes.&lt;/span&gt;
&lt;span class="c"&gt;# function Get_Files_Path(){&lt;/span&gt;
&lt;span class="c"&gt;#    RUNCMD &amp;quot;${FINDCMD} . -mmin -${TIME_GAP} -type f -name \&amp;quot;*.md\&amp;quot; -print0&amp;quot;&lt;/span&gt;
&lt;span class="c"&gt;# }&lt;/span&gt;

&lt;span class="c"&gt;# Lock down permissions.You should be careful when it comes to your website for the permission of files, but it&amp;#39;s safe using 022.&lt;/span&gt;
&lt;span class="c"&gt;# umask 022&lt;/span&gt;

&lt;span class="c"&gt;# Create the log dir.&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; ! -d &lt;span class="nv"&gt;$BLOG_PUBLISH_LOG_DIR&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
    mkdir -p &lt;span class="nv"&gt;$BLOG_PUBLISH_LOG_DIR&lt;/span&gt;
&lt;span class="k"&gt;fi&lt;/span&gt;


&lt;span class="c"&gt;# Main process begin.&lt;/span&gt;
NOTICE &lt;span class="s2"&gt;&amp;quot;[1]Start pull from GitHub.&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;RC&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;0
RUNCMD &lt;span class="s2"&gt;&amp;quot;cd &lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;GITHUB_PELICAN_DIR&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/md_article &amp;amp;&amp;amp; Git_Pull&amp;quot;&lt;/span&gt;

&lt;span class="nv"&gt;RC&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$?&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;$RC&lt;/span&gt; -gt &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
    ERROR &lt;span class="s2"&gt;&amp;quot;Git pull failed!&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;fi&lt;/span&gt;


&lt;span class="c"&gt;#### Method 1:Chang the IFS to del with the blank word in the filename.&lt;/span&gt;
&lt;span class="c"&gt;#old_IFS=$IFS&lt;/span&gt;
&lt;span class="c"&gt;#IFS=$(echo -en &amp;quot;\n\b&amp;quot;)&lt;/span&gt;

NOTICE &lt;span class="s2"&gt;&amp;quot;[2]Start copy the pulled articles to the compile dir of PELICAN.&amp;quot;&lt;/span&gt;
&lt;span class="c"&gt;# New_Article_Files=$(Get_Files_Path ${GITHUB_PELICAN_DIR}/md_article)&lt;/span&gt;
&lt;span class="c"&gt;# You should not delete the double quotation marks in case of existing a blank in the file path.&lt;/span&gt;
&lt;span class="c"&gt;#### Method 1: for New_Article_File in `${FINDCMD} . -mmin -${TIME_GAP} -type f -name &amp;quot;*.md&amp;quot;`&lt;/span&gt;
&lt;span class="c"&gt;#### Method 2: use the while recycle.&lt;/span&gt;
&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;FINDCMD&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; . -mmin -&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;TIME_GAP&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; -type f -name &lt;span class="s2"&gt;&amp;quot;*.md&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="nb"&gt;read &lt;/span&gt;New_Article_File
&lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; -z &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;New_Article_File&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
        &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;No articles, nothing to do.&amp;quot;&lt;/span&gt;
        ERROR &lt;span class="s2"&gt;&amp;quot;No articles, nothing to do.&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;fi&lt;/span&gt;
    &lt;span class="nv"&gt;FILE_PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;dirname &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;PELICAN_COMPILE_DIR&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;/content/articles/&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;New_Article_File&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nv"&gt;2&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;
    RUNCMD &lt;span class="s2"&gt;&amp;quot;mkdir -p &lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;FILE_PATH&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; &amp;amp;&amp;amp; &lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;CPCMD&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; \&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;New_Article_File&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;\&amp;quot; &lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;FILE_PATH&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;done&lt;/span&gt;

&lt;span class="c"&gt;#### Method 1:Recovery the IFS setting.&lt;/span&gt;
&lt;span class="c"&gt;#IFS=${old_IFS}&lt;/span&gt;

&lt;span class="nv"&gt;RC&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$?&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;$RC&lt;/span&gt; -gt &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
    ERROR &lt;span class="s2"&gt;&amp;quot;Copy the pulled articles failed!&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;fi&lt;/span&gt;


NOTICE &lt;span class="s2"&gt;&amp;quot;[3]Start compile in pelican.&amp;quot;&lt;/span&gt;
RUNCMD &lt;span class="s2"&gt;&amp;quot;cd &lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;PELICAN_COMPILE_DIR&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; &amp;amp;&amp;amp; make publish &amp;gt; /dev/null&amp;quot;&lt;/span&gt;

&lt;span class="nv"&gt;RC&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$?&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;$RC&lt;/span&gt; -gt &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
    ERROR &lt;span class="s2"&gt;&amp;quot;Compile in pelican failed!&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;fi&lt;/span&gt;


NOTICE &lt;span class="s2"&gt;&amp;quot;[4]Start generate a tar packgage and move it to the backup dir.&amp;quot;&lt;/span&gt;
&lt;span class="c"&gt;# The command of tar cause the problem that file changed as we read with the value 1, so we should ignore it using OR logic.&lt;/span&gt;
RUNCMD &lt;span class="s2"&gt;&amp;quot;cd &lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;PELICAN_COMPILE_DIR&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/output &amp;amp;&amp;amp; &lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;TARZIPCMD&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;Current_Date&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;.tar.gz . || &lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;MVCMD&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;Current_Date&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;.tar.gz &lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;PELICAN_BLOG_DIR&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;

&lt;span class="nv"&gt;RC&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$?&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;$RC&lt;/span&gt; -gt &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
    ERROR &lt;span class="s2"&gt;&amp;quot;Generate a tar packgage failed!&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;fi&lt;/span&gt;


NOTICE &lt;span class="s2"&gt;&amp;quot;[5]Start unpack the target files.&amp;quot;&lt;/span&gt;
RUNCMD &lt;span class="s2"&gt;&amp;quot;cd &lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;PELICAN_BLOG_DIR&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; &amp;amp;&amp;amp; &lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;TARXCMD&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;Current_Date&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;.tar.gz &amp;amp;&amp;amp; &lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;MVCMD&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;Current_Date&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;.tar.gz &lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;PELICAN_TAR_DIR&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;

&lt;span class="nv"&gt;RC&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$?&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;$RC&lt;/span&gt; -gt &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
    ERROR &lt;span class="s2"&gt;&amp;quot;Unpack the target files failed!&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;fi&lt;/span&gt;

&lt;span class="c"&gt;# if [ $# -eq 1 ]; then&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; -n &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Ready to synchronize to the homepage on github.com.&amp;quot;&lt;/span&gt;
    NOTICE &lt;span class="s2"&gt;&amp;quot;[6]Start copy the packgage to the local homepage bang cloned from remote in GitHub.&amp;quot;&lt;/span&gt;
    RUNCMD &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;CPCMD&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;PELICAN_TAR_DIR&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;Current_Date&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;.tar.gz &lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;GITHUB_PERSONAL_PAGE&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; &amp;amp;&amp;amp; cd &lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;GITHUB_PERSONAL_PAGE&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; &amp;amp;&amp;amp; &lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;TARXCMD&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;Current_Date&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;.tar.gz &amp;amp;&amp;amp; &lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;RMCMD&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;Current_Date&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;.tar.gz&amp;quot;&lt;/span&gt;

    &lt;span class="nv"&gt;RC&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$?&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;$RC&lt;/span&gt; -gt &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
        ERROR &lt;span class="s2"&gt;&amp;quot;Copy the packgage to the local homepage bang failed!&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;fi&lt;/span&gt;

    NOTICE &lt;span class="s2"&gt;&amp;quot;[7]Start synchronize website to my homepage on GitHub.&amp;quot;&lt;/span&gt;
    &lt;span class="c"&gt;# read -p &amp;quot;Please input your comments on this commitment: &amp;quot; COMMIT_COMMENTS&lt;/span&gt;
    &lt;span class="c"&gt;# while [[ -z &amp;quot;${COMMIT_COMMENTS}&amp;quot; ]]&lt;/span&gt;
    &lt;span class="c"&gt;# do&lt;/span&gt;
    &lt;span class="c"&gt;#   read -p &amp;quot;Comments can not be empty.Please input again: &amp;quot; COMMIT_COMMENTS&lt;/span&gt;
    &lt;span class="c"&gt;# done&lt;/span&gt;
    &lt;span class="c"&gt;# RUNCMD &amp;quot;Git_Commit \&amp;quot;${COMMIT_COMMENTS}\&amp;quot;&amp;quot;&lt;/span&gt;
    RUNCMD &lt;span class="s2"&gt;&amp;quot;Git_Commit \&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;\&amp;quot;&amp;quot;&lt;/span&gt;

    &lt;span class="nv"&gt;RC&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$?&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;$RC&lt;/span&gt; -gt &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
        ERROR &lt;span class="s2"&gt;&amp;quot;Synchronize website to GitHub failed!&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Not synchronize your weibsite to the homepage on github.com.&amp;quot;&lt;/span&gt;
    NOTICE &lt;span class="s2"&gt;&amp;quot;[6]Not synchronize your weibsite to the homepage on github.com.&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;fi&lt;/span&gt;


NOTICE &lt;span class="s2"&gt;&amp;quot;------END------&amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;exit &lt;/span&gt;0
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h4&gt;3 脚本执行结果&lt;/h4&gt;
&lt;p&gt;&lt;img alt="github_pelican_nginx脚本执行结果" src="https://o3cex9zsl.qnssl.com/2016/03/github_pelican_nginx_excute_log.png" title="github_pelican_nginx脚本执行结果" /&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Wed, 02 Mar 2016 23:55:00 +0800</pubDate><guid>tag:typecodes.com,2016-03-02:linux/updatesyngithubpelicanshell.html</guid><category>pelican</category><category>github</category><category>markdown</category></item><item><title>一个sigprocmask和sigsuspend函数的综合应用</title><link>https://typecodes.com/cseries/sigprocmasksigsuspendapp.html</link><description>&lt;p&gt;在Linux服务端后台开发中，经常会用到信号处理函数：&lt;code&gt;sigprocmask&lt;/code&gt;和&lt;code&gt;sigsuspend&lt;/code&gt;。这篇文章主要通过一个综合实例演示如何使用sigprocmask函数屏蔽目标信号（信号掩码）以及sigsuspend函数挂起进程。&lt;/p&gt;
&lt;p&gt;&lt;img alt="Linux中编译执行sigprocmask_sigsuspend程序" src="https://o3cex9zsl.qnssl.com/2016/02/sigprocmask_sigsuspend_init.png" title="Linux中编译执行sigprocmask_sigsuspend程序" /&gt;&lt;/p&gt;


&lt;h4&gt;1 sigprocmask和sigsuspend函数的说明&lt;/h4&gt;
&lt;p&gt;关于&lt;code&gt;sigprocmask&lt;/code&gt;函数的说明：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;头文件：    #include &amp;lt;signal.h&amp;gt;
函数：     int sigprocmask(int how, const sigset_t *set, sigset_t *oldset);
功能：     用于获取或者改变当前进程的信号掩码（当前进程屏蔽的信号集）。
返回值：    0成功，-1失败（具体原因由errno值表示）。
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;关于&lt;code&gt;sigsuspend&lt;/code&gt;函数的说明：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;头文件：    #include &amp;lt;signal.h&amp;gt;
函数：     int sigsuspend(const sigset_t *mask);
功能：     阻塞当前进程（TASK_INTERRUPTIBLE可中断状态），等待mask信号集（信号掩码）之外的任何信号的到来。
            在收到pendmask之外）信号后，先调用该信号的处理函数，然后把信号集mask还原为原来的信号集，接着从sigsuspend调用处返回（进程恢复执行）。
返回值：    该系统调用始终返回-1，并将errno设置为EINTR。
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;2 完整的程序实例&lt;/h4&gt;
&lt;p&gt;在CentOS服务器中使用编译并执行下面这段程序，效果如上图所示。&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt; * @FileName    sigprocmask_sigsuspend.c&lt;/span&gt;
&lt;span class="cm"&gt; * @Describe    A simple example for using sigprocmask and sigsuspend functions in linux.&lt;/span&gt;
&lt;span class="cm"&gt; * @Author      vfhky 2016-02-29 11:21 https://typecodes.com/cseries/sigprocmasksigsuspendapp.html&lt;/span&gt;
&lt;span class="cm"&gt; * @Compile     gcc sigprocmask_sigsuspend.c -o sigprocmask_sigsuspend&lt;/span&gt;
&lt;span class="cm"&gt; */&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;stdlib.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;sys/types.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;unistd.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;signal.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;errno.h&amp;gt;&lt;/span&gt;

&lt;span class="c1"&gt;//Signal handle function.&lt;/span&gt;
&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;sig_handler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;signal&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Receive signal=[%d].&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;signal&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;argc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;getpid=[%d].&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;getpid&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;//Register a signal.&lt;/span&gt;
    &lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;sigaction&lt;/span&gt; &lt;span class="n"&gt;new_act&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;sigemptyset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;new_act&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sa_mask&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;new_act&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sa_handler&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sig_handler&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;new_act&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sa_flags&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;sigaction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;SIGUSR1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;new_act&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;sigaction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;SIGUSR2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;new_act&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;sigaction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;SIGINT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;new_act&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="c1"&gt;//Add SIGINT, SIGUSR1/SIGUSR2 signals to the signal-set of new_set.&lt;/span&gt;
    &lt;span class="kt"&gt;sigset_t&lt;/span&gt; &lt;span class="n"&gt;new_set&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;old_set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;sigemptyset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;new_set&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;sigaddset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;new_set&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;SIGINT&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;              &lt;span class="c1"&gt;//2&lt;/span&gt;
    &lt;span class="n"&gt;sigaddset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;new_set&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;SIGUSR1&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;             &lt;span class="c1"&gt;//10&lt;/span&gt;
    &lt;span class="c1"&gt;//sigaddset( &amp;amp;new_set, SIGUSR2 );           //12&lt;/span&gt;

    &lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt;     * Repalce the old mask set with the new mask set.Thus the process will block the signal of SIGINT and SIGUSR1, &lt;/span&gt;
&lt;span class="cm"&gt;     * but it will excute the function of sig_handler when the signal such as SIGUSR2 other than SIGINT, SIGUSR1 arrives.&lt;/span&gt;
&lt;span class="cm"&gt;     */&lt;/span&gt;
    &lt;span class="n"&gt;sigprocmask&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;SIG_SETMASK&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;new_set&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;old_set&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="c1"&gt;//Add SIGUSR1 and SIGUSR2 signals to the signal-set of pendmask.&lt;/span&gt;
    &lt;span class="kt"&gt;sigset_t&lt;/span&gt; &lt;span class="n"&gt;pendmask&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;sigemptyset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;pendmask&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;sigaddset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;pendmask&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;SIGUSR1&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;            &lt;span class="c1"&gt;//10&lt;/span&gt;
    &lt;span class="n"&gt;sigaddset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;pendmask&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;SIGUSR2&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;            &lt;span class="c1"&gt;//12&lt;/span&gt;

    &lt;span class="c1"&gt;//Replaces the signal mask of the process with pendmask temporarily and suspends the process until delivery of a signal whose action is to invoke a signal handler or to terminate a process.&lt;/span&gt;
    &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sigsuspend&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;pendmask&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Sigsuspend returned with value[%d].&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;errno&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;EINTR&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;[%d]Interrupted by a signal.&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;errno&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;--while.&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h4&gt;3 发送SIGUSR1和SIGUSR2信号&lt;/h4&gt;
&lt;p&gt;如下图所示，使用&lt;code&gt;kill&lt;/code&gt;命令向进程（PID:7154）发送&lt;code&gt;SIGUSR1&lt;/code&gt;和&lt;code&gt;SIGUSR2&lt;/code&gt;信号。&lt;/p&gt;
&lt;p&gt;&lt;img alt="发送SIGUSR1和SIGUSR2信号" src="https://o3cex9zsl.qnssl.com/2016/02/kill_sigusr1_sigusr2.png" title="发送SIGUSR1和SIGUSR2信号" /&gt;&lt;/p&gt;
&lt;p&gt;由于&lt;code&gt;sigsuspend&lt;/code&gt;函数把信号&lt;code&gt;SIGUSR1&lt;/code&gt;和&lt;code&gt;SIGUSR2&lt;/code&gt;加入到信号掩码&lt;code&gt;pendmask&lt;/code&gt;中，所以这两个信号的到来对当前进程没有任何影响。&lt;/p&gt;
&lt;h4&gt;4 发送SIGINT信号&lt;/h4&gt;
&lt;p&gt;使用命令&lt;code&gt;kill -SIGINT 7154&lt;/code&gt;向当前进程（PID:7154）发送&lt;code&gt;SIGINT&lt;/code&gt;信号。由于该信号不在信号掩码&lt;code&gt;pendmask&lt;/code&gt;中，所以先调用&lt;code&gt;SIGINT&lt;/code&gt;信号的处理函数sig_handler，然后把现在的信号集&lt;code&gt;pendmask&lt;/code&gt;还原为原来的&lt;code&gt;new_set&lt;/code&gt;信号集。&lt;/p&gt;
&lt;p&gt;这时，由于之前由于信号掩码&lt;code&gt;pendmask&lt;/code&gt;被屏蔽的未决信号信号&lt;code&gt;SIGUSR1&lt;/code&gt;和&lt;code&gt;SIGUSR2&lt;/code&gt;由内核重新传递，所以进程会执行&lt;code&gt;SIGUSR2&lt;/code&gt;信号的处理函数（SIGUSR1信号被信号集new_set所屏蔽，因此不会执行）。接着进程从sigsuspend调用处返回，恢复执行（进入while循环）。&lt;/p&gt;
&lt;p&gt;&lt;img alt="执行SIGINT和SIGUSR2信号处理函数" src="https://o3cex9zsl.qnssl.com/2016/02/sigint_while.png" title="执行SIGINT和SIGUSR2信号处理函数" /&gt;&lt;/p&gt;
&lt;p&gt;如果继续发送&lt;code&gt;SIGINT&lt;/code&gt;信号，因为被加入到了当前信号掩码&lt;code&gt;new_set&lt;/code&gt;中，所以也会被屏蔽（对进程无影响）。最后可以通过命令&lt;code&gt;kill -SIGKILL 7154&lt;/code&gt;将整个进程关闭。&lt;/p&gt;
&lt;p&gt;&lt;img alt="继续发送SIGINT和SIGKILL信号" src="https://o3cex9zsl.qnssl.com/2016/02/sigint_sigkill.png" title="继续发送SIGINT和SIGKILL信号" /&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Mon, 29 Feb 2016 11:39:00 +0800</pubDate><guid>tag:typecodes.com,2016-02-29:cseries/sigprocmasksigsuspendapp.html</guid><category>sigprocmask</category><category>sigsuspend</category><category>信号</category></item><item><title>Linux TCP通信出现CLOSE_WAIT后导致服务端进程挂掉</title><link>https://typecodes.com/cseries/tcpclosewaitsigpipe.html</link><description>&lt;p&gt;在&lt;a href="https://typecodes.com/cseries/tcpdumpwiresharkclosewait2.html" title="《使用TCPDUMP和Wireshark排查服务端CLOSE_WAIT（二）》"&gt;前文&lt;/a&gt;中讲述了Linux服务端TCP通信出现&lt;code&gt;CLOSE_WAIT&lt;/code&gt;状态的原因，这篇文章主要通过一个实例演示它个一个“恶劣”影响：直接使服务端进程Down掉。&lt;/p&gt;
&lt;p&gt;&lt;img alt="CentOS服务端建立监听端口" src="https://o3cex9zsl.qnssl.com/2016/02/tcp_socket_server1.png" title="CentOS服务端建立监听端口" /&gt;&lt;/p&gt;


&lt;h4&gt;1 CentOS服务端建立监听端口&lt;/h4&gt;
&lt;p&gt;如上图所示，在虚拟机CentOS7服务器（192.168.1.178）中打开一个终端界面，建立8000端口的监听服务（PID:13035）。所用代码如下，和&lt;a href="https://typecodes.com/cseries/tcpdumpwiresharkclosewait1.html" title="《使用TCPDUMP和Wireshark排查服务端CLOSE_WAIT（一）》"&gt;上一篇文章&lt;/a&gt;中的程序大体一样，只是多了一个SIGPIPE信号处理以及自动回复(Auto response from server.)部分。&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cm"&gt;/** &lt;/span&gt;
&lt;span class="cm"&gt; * @FileName    server_socket.c&lt;/span&gt;
&lt;span class="cm"&gt; * @Describe    A simple example for creating a listen as a server and simulate generate a sigpipe signal in linux.&lt;/span&gt;
&lt;span class="cm"&gt; * @Author      vfhky 2016-02-29 08:01 https://typecodes.com/cseries/tcpclosewaitsigpipe.html&lt;/span&gt;
&lt;span class="cm"&gt; * @Compile     gcc server_socket.c -o server_socket&lt;/span&gt;
&lt;span class="cm"&gt; */&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;string.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;sys/types.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;sys/socket.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;netinet/in.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;arpa/inet.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;errno.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;signal.h&amp;gt;&lt;/span&gt;

&lt;span class="c1"&gt;//Whether add a signal handle.&lt;/span&gt;
&lt;span class="cp"&gt;#define SIGNAL_HANDLE 0&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;sig_handle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;signal&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Receive a signal=[%d].&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;signal&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;argc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;server_sockfd&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;client_sockfd&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;len&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;llOpt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;sockaddr_in&lt;/span&gt; &lt;span class="n"&gt;my_addr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;sockaddr_in&lt;/span&gt; &lt;span class="n"&gt;remote_addr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;sin_size&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;BUFSIZ&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="n"&gt;memset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;my_addr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;my_addr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;my_addr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sin_family&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;AF_INET&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;my_addr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sin_addr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;s_addr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;INADDR_ANY&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;my_addr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sin_port&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;htons&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="cp"&gt;#if SIGNAL_HANDLE&lt;/span&gt;
    &lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;sigaction&lt;/span&gt; &lt;span class="n"&gt;new_act&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;old_act&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;new_act&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sa_handler&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sig_handle&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;new_act&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sa_flags&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;sigemptyset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;new_act&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sa_mask&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;sigaction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;SIGPIPE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;new_act&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;old_act&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;sigaction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;SIGINT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;new_act&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;old_act&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;    
    &lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="n"&gt;endif&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;server_sockfd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;AF_INET&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;SOCK_STREAM&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;  
        &lt;span class="n"&gt;perror&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;socket&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;setsockopt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;server_sockfd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;SOL_SOCKET&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;SO_REUSEADDR&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;llOpt&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;llOpt&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;server_sockfd&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;errno&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;bind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;server_sockfd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;sockaddr&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;my_addr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;sockaddr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;perror&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;bind&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="n"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;server_sockfd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="n"&gt;sin_size&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;sockaddr_in&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Server is listening with pid=[%d].&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;getpid&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;client_sockfd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;accept&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;server_sockfd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;sockaddr&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;remote_addr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;sin_size&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;perror&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;accept&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="c1"&gt;//Print the ip address and port of client.&lt;/span&gt;
        &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Accept client[%s:%u].&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;inet_ntoa&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;remote_addr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sin_addr&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;ntohs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;remote_addr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sin_port&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="n"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;client_sockfd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Auto response from server.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;strlen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Auto response from server.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="n"&gt;memset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;BUFSIZ&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;len&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;recv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;client_sockfd&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;BUFSIZ&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;len&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sc"&gt;&amp;#39;\0&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Message from client=[%s]&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;buf&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;client_sockfd&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;server_sockfd&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h4&gt;2 在Linux中利用telnet命令创建一个客户端&lt;/h4&gt;
&lt;p&gt;新建一个shell脚本netstat_nap.sh，里面只包含一条有效命令&lt;code&gt;netstat -nap|head -n 2;netstat -nap|grep 8000&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;再打开一个Linux终端界面，然后输入命令&lt;code&gt;telnet 192.168.1.177 8000&lt;/code&gt;作为客户端建立与服务端的TCP连接。这时执行脚本&lt;code&gt;./netstat_nap.sh&lt;/code&gt;可以看到Linux客户端（PID:13045）和服务端（PID:13035）的TCP通信已经变成&lt;code&gt;ESTABLISHED&lt;/code&gt;状态，效果如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img alt="Linux中利用netstat和lsof命令查看TCP服务状态" src="https://o3cex9zsl.qnssl.com/2016/02/tcp_linux_client_established.png" title="Linux中利用netstat和lsof命令查看TCP服务状态" /&gt;&lt;/p&gt;
&lt;h4&gt;3 在Windows中利用telnet命令创建一个客户端&lt;/h4&gt;
&lt;p&gt;在Windows主机（192.168.1.110）中打开一个PowerShell终端界面，然后输入命令&lt;code&gt;telnet 192.168.1.177 8000&lt;/code&gt;作为客户端建立与Linux服务端的TCP连接。&lt;/p&gt;
&lt;p&gt;这时执行脚本&lt;code&gt;./netstat_nap.sh&lt;/code&gt;，可以看到Windows客户端（端口:64012）和服务端（PID:13035）的TCP通信已经变成&lt;code&gt;ESTABLISHED&lt;/code&gt;状态。同时使用命令&lt;code&gt;lsof -i:8000&lt;/code&gt;，可以看到进程打开的文件。&lt;/p&gt;
&lt;p&gt;&lt;img alt="Linux中利用netstat和lsof命令查看TCP服务状态" src="https://o3cex9zsl.qnssl.com/2016/02/win_client_netstat_lsof.png" title="Linux中利用netstat和lsof命令查看TCP服务状态" /&gt;&lt;/p&gt;
&lt;h4&gt;4 直接关闭Windows telnet客户端界面并使用Wireshark抓包&lt;/h4&gt;
&lt;p&gt;在直接关闭telnet界面后，继续使用netstat_nap.sh脚本和lsof命令发现刚才建立的TCP通信出现了&lt;code&gt;CLOSE_WAIT&lt;/code&gt;的状态。&lt;/p&gt;
&lt;p&gt;&lt;img alt="Linux中利用netstat和lsof命令查看TCP服务状态" src="https://o3cex9zsl.qnssl.com/2016/02/win_client_close_netstat_lsof1.png" title="Linux中利用netstat和lsof命令查看TCP服务状态" /&gt;&lt;/p&gt;
&lt;p&gt;在等待2分钟后，在Windows中使用Wireshark抓包发现由于客户端发送了&lt;code&gt;RST+ACK&lt;/code&gt;报文给Linux服务端，所以二者的TCP链路已经被复位了：&lt;/p&gt;
&lt;p&gt;&lt;img alt="在Windows中使用Wireshark抓包" src="https://o3cex9zsl.qnssl.com/2016/02/win_client_wireshark1.png" title="在Windows中使用Wireshark抓包" /&gt;&lt;/p&gt;
&lt;p&gt;这时在Linux中再次使用netstat_nap.sh脚本和lsof命令发现&lt;code&gt;CLOSE_WAIT&lt;/code&gt;的状态已经不存在了。&lt;/p&gt;
&lt;p&gt;&lt;img alt="Linux中利用netstat和lsof命令查看TCP服务状态" src="https://o3cex9zsl.qnssl.com/2016/02/win_client_close_netstat_lsof2.png" title="Linux中利用netstat和lsof命令查看TCP服务状态" /&gt;&lt;/p&gt;
&lt;h4&gt;5 关闭Linux telnet客户端&lt;/h4&gt;
&lt;p&gt;在Windows关闭telnet客户端界面并发送&lt;code&gt;RST+ACK&lt;/code&gt;报文后，关闭小节2中在Linux中打开的telnet客户端。这时Linux服务端进程会执行第90行处的close()函数，也即执行正常&lt;code&gt;四次挥手&lt;/code&gt;关闭TCP连接。&lt;/p&gt;
&lt;p&gt;接着Linux服务端进程继续从内核中已完成连接队列中取出已完成连接，这样之前小节3中Windows telnet建立的客户端连接被读取。如下图所示，服务端进程打印了第80行出的数据（Accept client[192.168.1.110:64012].），但是服务端进程却挂掉了。&lt;/p&gt;
&lt;p&gt;&lt;img alt="CentOS服务端建立监听端口" src="https://o3cex9zsl.qnssl.com/2016/02/tcp_socket_server2.png" title="CentOS服务端建立监听端口" /&gt;&lt;/p&gt;
&lt;p&gt;这时在Linux中再次使用netstat_nap.sh脚本和lsof命令：&lt;/p&gt;
&lt;p&gt;&lt;img alt="Linux中利用netstat和lsof命令查看TCP服务状态" src="https://o3cex9zsl.qnssl.com/2016/02/win_client_close_netstat_lsof3.png" title="Linux中利用netstat和lsof命令查看TCP服务状态" /&gt;    &lt;/p&gt;
&lt;h4&gt;6 原因分析&lt;/h4&gt;
&lt;p&gt;由于Windows客户端的TCP链路在小节4中由于&lt;code&gt;RST&lt;/code&gt;的缘故而关闭了，没有读端。那么当Linux服务端执行82行的send()函数时，向之前的socket描述符发送26字节的报文数据时，会收到内核发送过来的&lt;code&gt;SIGPIPE信号&lt;/code&gt;，导致服务端进程默认关闭。&lt;/p&gt;
&lt;p&gt;因此，如果想捕捉到这个SIGPIPE信号的话，可以将程序17行的SIGNAL_HANDLE宏定义值改成1，那么就会得到如下图所示的情况（进程能正常运行了）。&lt;/p&gt;
&lt;p&gt;&lt;img alt="Linux TCP通信出现CLOSE_WAIT后导致服务端进程挂掉" src="https://o3cex9zsl.qnssl.com/2016/02/close_wait_sigepipe.png" title="Linux TCP通信出现CLOSE_WAIT后导致服务端进程挂掉" /&gt;   &lt;/p&gt;
&lt;h4&gt;7 问题延伸&lt;/h4&gt;
&lt;p&gt;如果在第4小节中关闭Windows客户端界面后，又直接如第5小节所示关闭Linux telnet客户端界面，那么又会出现什么情况呢？于是又重新做了一遍测试，流程同上，下面是测试结果以及分析。&lt;/p&gt;
&lt;p&gt;先用netstat和lsof命令查看TCP服务状态，发现监听服务正常：&lt;/p&gt;
&lt;p&gt;&lt;img alt="Linux中利用netstat和lsof命令查看TCP服务状态" src="https://o3cex9zsl.qnssl.com/2016/02/extend_netstat_lsof.png" title="Linux中利用netstat和lsof命令查看TCP服务状态" /&gt;&lt;/p&gt;
&lt;p&gt;然后分别用TCPDUMP和Wireshark抓取TCP通信包，截取如下所示。可以发现在Linux telnet客户端完成&lt;code&gt;四次挥手&lt;/code&gt;后，服务端进程继续向之前Windows telnet客户端建立的socket描述符发送26字节的报文数据。&lt;/p&gt;
&lt;p&gt;因为Windows客户端此时处于&lt;code&gt;FIN_WAIT2&lt;/code&gt;状态（Linux服务端处于&lt;code&gt;CLOSE_WAIT&lt;/code&gt;状态），所以服务端能继续发其发送数据（即图中的PUSH+ACK报文），接着Windows客户端回应&lt;code&gt;RST+ACK&lt;/code&gt;报文，从而两者的TCP链路复位。&lt;/p&gt;
&lt;p&gt;&lt;img alt="在Linux中使用TCPDUMP抓包" src="https://o3cex9zsl.qnssl.com/2016/02/extend_tcpdump.png" title="在Linux中使用TCPDUMP抓包" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="在Windows中使用Wireshark抓包" src="https://o3cex9zsl.qnssl.com/2016/02/win_client_wireshark2.png" title="在Windows中使用Wireshark抓包" /&gt;&lt;/p&gt;
&lt;p&gt;这样Linux服务端进程还是能够正常执行监听任务：&lt;/p&gt;
&lt;p&gt;&lt;img alt="服务端进程正常执行监听" src="https://o3cex9zsl.qnssl.com/2016/02/tcp_socket_server3.png" title="服务端进程正常执行监听" /&gt;&lt;/p&gt;
&lt;h4&gt;8 其它&lt;/h4&gt;
&lt;p&gt;网上有人把这种客户端或者服务端异常关闭的连接叫做TCP半关闭（Half-Close），例如网线拔掉、突然断电等，此时对端连接仍认为双方连接处于打开中。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Mon, 29 Feb 2016 08:39:00 +0800</pubDate><guid>tag:typecodes.com,2016-02-29:cseries/tcpclosewaitsigpipe.html</guid><category>tcpdump</category><category>wireshark</category><category>tcp</category><category>close_wait</category><category>sigpipe</category></item><item><title>使用TCPDUMP和Wireshark排查服务端CLOSE_WAIT（二）</title><link>https://typecodes.com/cseries/tcpdumpwiresharkclosewait2.html</link><description>&lt;p&gt;前文&lt;a href="https://typecodes.com/cseries/tcpdumpwiresharkclosewait1.html" title="查看原文"&gt;《使用TCPDUMP和Wireshark排查服务端CLOSE_WAIT（一）》&lt;/a&gt;通过TCPDUMP和Wireshark在利用CentOS7作为服务端、Windows10作为客户端，模拟演示了一个TCP通信的CLOSE_WAIT状态，这篇文章主要利用前文的数据尝试解释Linux服务端产生CLOSE_WAIT状态的原因。&lt;/p&gt;
&lt;p&gt;&lt;img alt="客户端和服务端的TCP通信流程" src="https://o3cex9zsl.qnssl.com/2016/02/socket_tcpflow.png" title="客户端和服务端的TCP通信流程" /&gt;&lt;/p&gt;


&lt;h4&gt;1 原因分析：从客户端和服务端TCP通信的流程出发&lt;/h4&gt;
&lt;p&gt;从前文中的tcpdump和Wireshark抓包都可看到当Windows客户端关闭后，会主动发送带有&lt;code&gt;FIN+ACK&lt;/code&gt;标志的报文给Linux服务端。那么从上图TCP客户端和服务端的通信流程图开始分析：客户端先进入&lt;code&gt;FIN_WAIT_1&lt;/code&gt;状态，在收到服务端应答的&lt;code&gt;ACK&lt;/code&gt;标志的报文后进入&lt;code&gt;FIN_WAIT_2&lt;/code&gt;状态（在Windows中重新打开一个PowerShell窗口，然后输入命令&lt;code&gt;netstat -na|findstr 8000&lt;/code&gt;查看）。&lt;/p&gt;
&lt;p&gt;&lt;img alt="Windows客户端出现FIN_WAIT_2状态" src="https://o3cex9zsl.qnssl.com/2016/02/windows_telnet_fin_wait_2.png" title="Windows客户端出现FIN_WAIT_2状态" /&gt;&lt;/p&gt;
&lt;p&gt;同时，服务端的TCP状态也就变成了&lt;code&gt;CLOSE_WAIT&lt;/code&gt;。但是后面由于Linux服务端没有调用&lt;code&gt;close()&lt;/code&gt;函数关闭socket链路，也即没有发送&lt;code&gt;FIN&lt;/code&gt;标志的报文给主动关闭TCP链路的客户端，所以造成这个问题。&lt;/p&gt;
&lt;h4&gt;2 原因分析：从服务端程序出发&lt;/h4&gt;
&lt;p&gt;在服务端程序的第69行可以看到：一旦客户端关闭socket后，服务端也会调用&lt;code&gt;close( client_sockfd );&lt;/code&gt;来关闭链路。那为什么还是会出现&lt;code&gt;CLOSE_WAIT&lt;/code&gt;现象呢？答案是因为服务端在与客户端&lt;code&gt;三次握手&lt;/code&gt;完后，只有一个进程（PID:5325）在处理客户端的TCP数据交互，而这个进程正在处理在Linux中使用telnet命令建立起来的这个客户端（PID:5331）的请求。&lt;/p&gt;
&lt;p&gt;因此，在Windows中使用telnet命令作为客户端与Linux服务端完成&lt;code&gt;三次握手&lt;/code&gt;后，没有相关进程来处理。这点也可以通过&lt;a href="https://typecodes.com/cseries/tcpdumpwiresharkclosewait1.html" title="《使用TCPDUMP和Wireshark排查服务端CLOSE_WAIT（一）》"&gt;前文&lt;/a&gt;小节4中的截图看出，虽然TCP状态为&lt;code&gt;ESTABLISHED&lt;/code&gt;，但是对应的进程&lt;code&gt;PID/Program name&lt;/code&gt;为空，这点也可以通过&lt;code&gt;lsof -i:8000&lt;/code&gt;命令验证（没有因为Windows客户端的连接出现进程打开的文件）。&lt;/p&gt;
&lt;p&gt;&lt;img alt="Linux中利用netstat命令查看TCP服务状态" src="https://o3cex9zsl.qnssl.com/2016/02/netstat_8000_3.png" title="Linux中利用netstat命令查看TCP服务状态" /&gt;&lt;/p&gt;
&lt;p&gt;当Windows客户端关闭telnet界面后，Linux服务端虽然收到了客户端的&lt;code&gt;FIN+ACK&lt;/code&gt;标志的报文，但是没有相关进程调用&lt;code&gt;close()&lt;/code&gt;函数通知内核发送&lt;code&gt;FIN&lt;/code&gt;报文给客户端。这样就造成了Linux服务端的TCP状态出现了&lt;code&gt;CLOSE_WAIT&lt;/code&gt;，同时Windows客户端的TCP状态变成了对应的&lt;code&gt;FIN_WAIT_2&lt;/code&gt;。&lt;/p&gt;
&lt;h4&gt;3 问题延伸：从服务端程序出发&lt;/h4&gt;
&lt;p&gt;这里可能会存在疑问了，明明Windows客户端与Linux服务端建立了&lt;code&gt;ESTABLISHED&lt;/code&gt;状态，也就是&lt;code&gt;server_socket&lt;/code&gt;进程对它进行了处理，这不是与小节2中的原因分析相矛盾了吗？其实，这是由于对服务端的一些认识有偏差造成的，BZ之前也错误地认为以下命题是成立的：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;listen()函数会使进程阻塞等待客户端的连接，也就是等待与客户端完成三次握手；
accept()函数就是服务端进程在完成三次握手后，接收客户端发送报文数据的请求，然后调用recv()函数来接收；
close()函数就是服务端进程直接向客户端发送FIN报文给客户端。
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;其实不然，在查阅了相关资料后，个人觉得正确的理解如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;listen()函数不会使进程阻塞，UNP第3版84页有一句话：listen函数把一个未连接的套接字转换成一个被动套接字，指示内核应接受指向该该套接字的连接请求。
内核为任何一个给定的监听套接字维护两个队列：未完成连接队列和已完成连接队列。
因此，三次握手是由内核自动完成的，无需服务器进程插手。

accept()函数功能是从由内核维护的处于established状态的已完成连接队列列头部取出下一个已经完成的连接。
如果这个队列为空，accept()函数就会阻塞让进程进入睡眠状态。

close()函数是把一个TCP套接字标记成已关闭，然后立即返回调用进程。
TCP尝试发送已排队等待发送到对端的任何数据，发送完毕后发生的是正常的TCP连接终止序列，于是有了著名的四次挥手。
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;到这里问题其实已经很简单明了了，Linux内核完成“三次握手”跟服务端进程无关，当然这点也可以由程序没有打印第51、60行的数据证实。&lt;/p&gt;
&lt;h4&gt;4 总结&lt;/h4&gt;
&lt;p&gt;socket被动关闭的服务端产生CLOSE_WAIT的根本原因是没有调用&lt;code&gt;close()&lt;/code&gt;函数关闭socket链路，也即没有发送&lt;code&gt;FIN&lt;/code&gt;标志的报文给主动关闭TCP链路的客户端。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Sun, 28 Feb 2016 18:11:00 +0800</pubDate><guid>tag:typecodes.com,2016-02-28:cseries/tcpdumpwiresharkclosewait2.html</guid><category>tcpdump</category><category>wireshark</category><category>tcp</category><category>close_wait</category></item><item><title>使用TCPDUMP和Wireshark排查服务端CLOSE_WAIT（一）</title><link>https://typecodes.com/cseries/tcpdumpwiresharkclosewait1.html</link><description>&lt;p&gt;在Linux后端服务网络通信开发中，可能会遇到CLOSE_WAIT的状况。引起TCP CLOSE_WAIT状态的情况很多，归根结底还是由于被动关闭的一方没有关闭socket链路导致的。这篇文章主要是通过用一个简单的例子通过TCPDUMP和Wireshark这两个工具来模拟产生CLOSE_WAIT的情况，&lt;a href="https://typecodes.com/cseries/tcpdumpwiresharkclosewait2.html" title="《使用TCPDUMP和Wireshark排查服务端CLOSE_WAIT（二）》"&gt;下一篇&lt;/a&gt;主要是对这个问题的原理解释。&lt;/p&gt;
&lt;p&gt;&lt;img alt="CentOS服务端建立监听端口" src="https://o3cex9zsl.qnssl.com/2016/02/server_socket_8000.png" title="CentOS服务端建立监听端口" /&gt;&lt;/p&gt;


&lt;h4&gt;1 CentOS服务端建立监听端口&lt;/h4&gt;
&lt;p&gt;如上图所示，在虚拟机CentOS7服务器（192.168.1.178）中打开一个终端界面，然后使用下面这个简单的服务端程序，建立8000端口的监听服务（PID:5325）。&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cm"&gt;/** &lt;/span&gt;
&lt;span class="cm"&gt; * @FileName    server_socket.c&lt;/span&gt;
&lt;span class="cm"&gt; * @Describe    A simple example for creating a listen as a server in linux system.&lt;/span&gt;
&lt;span class="cm"&gt; * @Author      vfhky 2016-02-26 18:45 https://typecodes.com/cseries/tcpdumpwiresharkclosewait1.html&lt;/span&gt;
&lt;span class="cm"&gt; * @Compile     gcc server_socket.c -o server_socket&lt;/span&gt;
&lt;span class="cm"&gt; */&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;string.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;sys/types.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;sys/socket.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;netinet/in.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;arpa/inet.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;errno.h&amp;gt;&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;argc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;server_sockfd&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;client_sockfd&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;len&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;llOpt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;sockaddr_in&lt;/span&gt; &lt;span class="n"&gt;my_addr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;sockaddr_in&lt;/span&gt; &lt;span class="n"&gt;remote_addr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;sin_size&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;BUFSIZ&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="n"&gt;memset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;my_addr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;my_addr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;my_addr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sin_family&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;AF_INET&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;my_addr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sin_addr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;s_addr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;INADDR_ANY&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;my_addr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sin_port&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;htons&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;server_sockfd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;AF_INET&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;SOCK_STREAM&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;  
        &lt;span class="n"&gt;perror&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;socket&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;setsockopt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;server_sockfd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;SOL_SOCKET&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;SO_REUSEADDR&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;llOpt&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;llOpt&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;server_sockfd&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;errno&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;bind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;server_sockfd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;sockaddr&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;my_addr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;sockaddr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;perror&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;bind&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="n"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;server_sockfd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="n"&gt;sin_size&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;sockaddr_in&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Socket server begin to recieve connectiong from client.&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;client_sockfd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;accept&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;server_sockfd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;sockaddr&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;remote_addr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;sin_size&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;perror&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;accept&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="c1"&gt;//Print the ip address and port of client.&lt;/span&gt;
        &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Accept client[%s:%u].&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;inet_ntoa&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;remote_addr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sin_addr&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;ntohs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;remote_addr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sin_port&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="n"&gt;memset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;BUFSIZ&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;len&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;recv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;client_sockfd&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;BUFSIZ&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;len&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sc"&gt;&amp;#39;\0&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Message from client=[%s]&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;buf&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;client_sockfd&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;server_sockfd&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h4&gt;2 在Linux中使用netstat命令查看TCP服务状态&lt;/h4&gt;
&lt;p&gt;新建一个shell脚本netstat.sh，里面只包含一条有效命令&lt;code&gt;netstat -nap|head -n 2;netstat -nap|grep 8000&lt;/code&gt;。执行该脚本可以看到服务端的监听效果：&lt;/p&gt;
&lt;p&gt;&lt;img alt="Linux中利用netstat命令查看TCP服务状态" src="https://o3cex9zsl.qnssl.com/2016/02/netstat_8000_1.png" title="Linux中利用netstat命令查看TCP服务状态" /&gt;&lt;/p&gt;
&lt;h4&gt;3 在Linux中利用telnet命令创建一个客户端&lt;/h4&gt;
&lt;p&gt;再打开一个Linux终端界面，然后输入命令&lt;code&gt;telnet 192.168.1.177 8000&lt;/code&gt;作为客户端建立与服务端的TCP连接。这时执行脚本&lt;code&gt;./netstat.sh&lt;/code&gt;可以看到Linux客户端（PID:5331）和服务端（PID:5325）的TCP通信已经变成&lt;code&gt;ESTABLISHED&lt;/code&gt;状态，效果如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img alt="Linux中利用netstat命令查看TCP服务状态" src="https://o3cex9zsl.qnssl.com/2016/02/netstat_8000_2.png" title="Linux中利用netstat命令查看TCP服务状态" /&gt;&lt;/p&gt;
&lt;h4&gt;4 在Windows中利用telnet命令创建一个客户端&lt;/h4&gt;
&lt;p&gt;在Windows中打开一个PowerShell终端界面，然后输入命令&lt;code&gt;telnet 192.168.1.177 8000&lt;/code&gt;作为客户端建立与Linux服务端的TCP连接。&lt;/p&gt;
&lt;p&gt;这时执行脚本&lt;code&gt;./netstat.sh&lt;/code&gt;可以看到Windows客户端（端口:52552）和服务端（PID:5325）的TCP通信已经变成&lt;code&gt;ESTABLISHED&lt;/code&gt;状态，效果如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img alt="Linux中利用netstat命令查看TCP服务状态" src="https://o3cex9zsl.qnssl.com/2016/02/netstat_8000_3.png" title="Linux中利用netstat命令查看TCP服务状态" /&gt;&lt;/p&gt;
&lt;h4&gt;5 在Linux中使用tcpdump工具抓包&lt;/h4&gt;
&lt;p&gt;再打开一个Linux终端界面，然后输入命令&lt;code&gt;tcpdump -n port 8000&lt;/code&gt;进行抓包（目的是获取Windows客户端telnet建立的tcp连接的数据包）。当前面第4小节中Windows客户端发起“三次握手”时得到如下数据：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@typecodes ~]# tcpdump -n port 8000
tcpdump: verbose output suppressed, use -v or -vv for full protocol decode
listening on eth0, link-type EN10MB (Ethernet), capture size 65535 bytes

######Windows中的telnet命令作为客户端向Linux服务器发起第一次握手，请求建立连接(SYN)
17:10:43.150463 IP 192.168.1.110.52552 &amp;gt; 192.168.1.177.irdmi: Flags [S], seq 4020000773, win 8192, options [mss 1460,nop,wscale 8,nop,nop,sackOK], length 0
######Linux服务端向Windows客户端发送握手确认包(SYN+ACK)
17:10:43.150518 IP 192.168.1.177.irdmi &amp;gt; 192.168.1.110.52552: Flags [S.], seq 2818288395, ack 4020000774, win 29200, options [mss 1460,nop,nop,sackOK,nop,wscale 7], length 0
######Windows客户端向Linux服务端发送确认包(ACK)，三次握手完毕
17:10:43.150652 IP 192.168.1.110.52552 &amp;gt; 192.168.1.177.irdmi: Flags [.], ack 1, win 256, length 0
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;效果如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img alt="使用tcpdump工具抓包：三次握手" src="https://o3cex9zsl.qnssl.com/2016/02/tcpdump8000_1.png" title="使用tcpdump工具抓包：三次握手" /&gt;&lt;/p&gt;
&lt;h4&gt;6 在Windows中使用Wireshark抓包&lt;/h4&gt;
&lt;p&gt;在Windows中使用&lt;code&gt;telnet 192.168.1.177 8000&lt;/code&gt;命令建立与Linux服务端的TCP链路后（即前面小节4的操作），通过Windows客户端的TCP端口号52552开始准备使用Wireshark进行抓包。&lt;/p&gt;
&lt;p&gt;手动直接关闭小节4中创建的Windows telnet终端界面，然后Wireshark抓包情况如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img alt="在Windows中使用Wireshark抓包" src="https://o3cex9zsl.qnssl.com/2016/02/wireshark_8000.png" title="在Windows中使用Wireshark抓包" /&gt;&lt;/p&gt;
&lt;p&gt;同时，通过Linux中的netstat.sh脚本发现刚才建立的TCP通信出现了&lt;code&gt;CLOSE_WAIT&lt;/code&gt;的状态。&lt;/p&gt;
&lt;p&gt;&lt;img alt="Linux中利用netstat命令查看TCP服务状态" src="https://o3cex9zsl.qnssl.com/2016/02/netstat_8000_4.png" title="Linux中利用netstat命令查看TCP服务状态" /&gt;&lt;/p&gt;
&lt;p&gt;同样，使用第4小节中的tcpdump抓包情况如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;######Windows客户端被“意外”关闭，向Linux服务端发送FIN+ACK报文
17:11:35.668512 IP 192.168.1.110.52552 &amp;gt; 192.168.1.177.irdmi: Flags [F.], seq 1, ack 1, win 256, length 0
######Linux服务端向Windows客户端发送ACK确认报文
17:11:35.668851 IP 192.168.1.177.irdmi &amp;gt; 192.168.1.110.52552: Flags [.], ack 2, win 229, length 0
######2分钟后，Windows系统自动向Linux服务端发送一个RST+ACK报文，告知对方自己已关闭之前的TCP连接，同时要求对方也关闭链路
17:13:35.670464 IP 192.168.1.110.52552 &amp;gt; 192.168.1.177.irdmi: Flags [R.], seq 2, ack 1, win 0, length 0
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;效果如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img alt="在Linux中使用tcpdump抓包" src="https://o3cex9zsl.qnssl.com/2016/02/tcpdump8000_2.png" title="在Linux中使用tcpdump抓包" /&gt;&lt;/p&gt;
&lt;h4&gt;7 原因分析&lt;/h4&gt;
&lt;p&gt;详见&lt;a href="https://typecodes.com/cseries/tcpdumpwiresharkclosewait2.html" title="《使用TCPDUMP和Wireshark排查服务端CLOSE_WAIT（二）》"&gt;下文&lt;/a&gt;。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Fri, 26 Feb 2016 18:41:00 +0800</pubDate><guid>tag:typecodes.com,2016-02-26:cseries/tcpdumpwiresharkclosewait1.html</guid><category>tcpdump</category><category>wireshark</category><category>tcp</category><category>close_wait</category></item><item><title>Linux中使用TCPDUMP进行简单的TCP抓包</title><link>https://typecodes.com/linux/simpletcpdumpapply.html</link><description>&lt;p&gt;在Linux TCP通信的调试中，tcpdump应该算是很好的一个工具。这篇文章主要使用Windows作为客户端，向作为服务端的Linux中的一个socket监听端口发送报文信息，然后在Linux中用TCPDUMP工具进行抓包。通过这个实例，可以较为完整的了解TCP通信中的“三次握手”等过程。&lt;/p&gt;
&lt;p&gt;&lt;img alt="Linux中使用TCPDUMP进行简单的TCP抓包" src="https://o3cex9zsl.qnssl.com/2016/02/linuxtcpdump.png" title="Linux中使用TCPDUMP进行简单的TCP抓包" /&gt;&lt;/p&gt;


&lt;h5&gt;1 CentOS服务端建立监听并抓包&lt;/h5&gt;
&lt;p&gt;在虚拟机服务器（192.168.1.178）使用下面这个简单的服务端程序，建立8000端口的监听服务，然后使用&lt;code&gt;tcpdump -n port 8000&lt;/code&gt;命令抓包。&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cm"&gt;/** &lt;/span&gt;
&lt;span class="cm"&gt; * @FileName    server_socket.c&lt;/span&gt;
&lt;span class="cm"&gt; * @Describe    A simple example for creating a listen as a server in linux system.&lt;/span&gt;
&lt;span class="cm"&gt; * @Author      vfhky 2015-09-25 21:32 https://typecodes.com/linux/simpletcpdumpapply.html&lt;/span&gt;
&lt;span class="cm"&gt; * @Compile     gcc server_socket.c -o server_socket&lt;/span&gt;
&lt;span class="cm"&gt; */&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;string.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;sys/types.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;sys/socket.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;netinet/in.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;arpa/inet.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;errno.h&amp;gt;&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;argc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;server_sockfd&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;client_sockfd&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;len&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;llOpt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;sockaddr_in&lt;/span&gt; &lt;span class="n"&gt;my_addr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;sockaddr_in&lt;/span&gt; &lt;span class="n"&gt;remote_addr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;sin_size&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;BUFSIZ&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="n"&gt;memset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;my_addr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;my_addr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;my_addr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sin_family&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;AF_INET&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;my_addr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sin_addr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;s_addr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;INADDR_ANY&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;my_addr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sin_port&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;htons&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;server_sockfd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;AF_INET&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;SOCK_STREAM&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;  
        &lt;span class="n"&gt;perror&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;socket&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;setsockopt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;server_sockfd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;SOL_SOCKET&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;SO_REUSEADDR&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;llOpt&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;llOpt&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;server_sockfd&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;errno&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;bind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;server_sockfd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;sockaddr&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;my_addr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;sockaddr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;perror&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;bind&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="n"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;server_sockfd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="n"&gt;sin_size&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;sockaddr_in&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Socket server begin to recieve connectiong from client.&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;client_sockfd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;accept&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;server_sockfd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;sockaddr&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;remote_addr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;sin_size&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;perror&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;accept&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Accept client[%s].&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;inet_ntoa&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;remote_addr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sin_addr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="n"&gt;memset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;BUFSIZ&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;len&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;recv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;client_sockfd&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;BUFSIZ&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;len&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sc"&gt;&amp;#39;\0&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Message from client=[%s]&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;buf&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;client_sockfd&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;server_sockfd&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h5&gt;2 Windows客户端发送请求报文&lt;/h5&gt;
&lt;p&gt;在本地Windows机器（192.168.1.109）使用报文发送工具连接到虚拟机服务器192.168.1.178，然后发送两次请求报文。&lt;/p&gt;
&lt;p&gt;其中，第一次发送“11111”的报文：&lt;/p&gt;
&lt;p&gt;&lt;img alt="客户端第一次发送请求报文" src="https://o3cex9zsl.qnssl.com/2016/02/client_first_send.png" title="客户端第一次发送请求报文" /&gt;&lt;/p&gt;
&lt;p&gt;第二次发送“123321”的请求报文：&lt;/p&gt;
&lt;p&gt;&lt;img alt="客户端第二次发送请求报文" src="https://o3cex9zsl.qnssl.com/2016/02/client_second_send.png" title="客户端第二次发送请求报文" /&gt;&lt;/p&gt;
&lt;h5&gt;3 Windows客户端关闭socket&lt;/h5&gt;
&lt;p&gt;点击左边配置菜单栏中的“关闭”按钮，断开tcp连接。&lt;/p&gt;
&lt;p&gt;&lt;img alt="客户端关闭socket" src="https://o3cex9zsl.qnssl.com/2016/02/client_close.png" title="客户端关闭socket" /&gt;&lt;/p&gt;
&lt;h5&gt;4 分析抓包的情况&lt;/h5&gt;
&lt;p&gt;在Linux服务端的抓包情况如下，其中抓包内容中出现冒号表示范围，例如seq 1:6表示seq序号范围从1到6。另外，抓包中的&lt;code&gt;iRDMI&lt;/code&gt;代表&lt;code&gt;iRDMI/Shoutcast Server&lt;/code&gt;，对应着8000端口。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;root&lt;/span&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nx"&gt;typecodes&lt;/span&gt; &lt;span class="err"&gt;~&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="nx"&gt;tcpdump&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="nx"&gt;port&lt;/span&gt; &lt;span class="mi"&gt;8000&lt;/span&gt;
&lt;span class="nx"&gt;tcpdump&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;verbose&lt;/span&gt; &lt;span class="nx"&gt;output&lt;/span&gt; &lt;span class="nx"&gt;suppressed&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;use&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;v&lt;/span&gt; &lt;span class="nx"&gt;or&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;vv&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;full&lt;/span&gt; &lt;span class="nx"&gt;protocol&lt;/span&gt; &lt;span class="nx"&gt;decode&lt;/span&gt;
&lt;span class="nx"&gt;listening&lt;/span&gt; &lt;span class="nx"&gt;on&lt;/span&gt; &lt;span class="nx"&gt;eth0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;link&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;EN10MB&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;Ethernet&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nx"&gt;capture&lt;/span&gt; &lt;span class="nx"&gt;size&lt;/span&gt; &lt;span class="mi"&gt;65535&lt;/span&gt; &lt;span class="nx"&gt;bytes&lt;/span&gt;

&lt;span class="c1"&gt;//内容格式&lt;/span&gt;
&lt;span class="c1"&gt;//时分秒           客户端IP和端口         服务端IP和端口   SYN(客户端主动请求连接服务器)  包序号  8192(Window size),  长度0&lt;/span&gt;
&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;02.534303&lt;/span&gt; &lt;span class="nx"&gt;IP&lt;/span&gt; &lt;span class="mf"&gt;192.168&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mf"&gt;1.109&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;8886&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mf"&gt;192.168&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mf"&gt;1.178&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;irdmi&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Flags&lt;/span&gt; &lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;S&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;seq&lt;/span&gt; &lt;span class="mi"&gt;2639909369&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;win&lt;/span&gt; &lt;span class="mi"&gt;8192&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;options&lt;/span&gt; &lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;mss&lt;/span&gt; &lt;span class="mi"&gt;1460&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;nop&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;wscale&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;nop&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;nop&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;sackOK&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;

&lt;span class="c1"&gt;//服务器端发送SYN+ACK(.)的报文给客户端,  ack=seq+1=2639909369+1,  长度0&lt;/span&gt;
&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;02.534339&lt;/span&gt; &lt;span class="nx"&gt;IP&lt;/span&gt; &lt;span class="mf"&gt;192.168&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mf"&gt;1.178&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;irdmi&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mf"&gt;192.168&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mf"&gt;1.109&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;8886&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Flags&lt;/span&gt; &lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;S.&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;seq&lt;/span&gt; &lt;span class="mi"&gt;1984808639&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ack&lt;/span&gt; &lt;span class="mi"&gt;2639909370&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;win&lt;/span&gt; &lt;span class="mi"&gt;14600&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;options&lt;/span&gt; &lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;mss&lt;/span&gt; &lt;span class="mi"&gt;1460&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;nop&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;nop&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;sackOK&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;nop&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;wscale&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;

&lt;span class="c1"&gt;//客户端收到确认包后，发送ACK(.)报文给服务端,  长度0&lt;/span&gt;
&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;02.534528&lt;/span&gt; &lt;span class="nx"&gt;IP&lt;/span&gt; &lt;span class="mf"&gt;192.168&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mf"&gt;1.109&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;8886&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mf"&gt;192.168&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mf"&gt;1.178&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;irdmi&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Flags&lt;/span&gt; &lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;.&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ack&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;win&lt;/span&gt; &lt;span class="mi"&gt;256&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;

&lt;span class="c1"&gt;//三次握手成功后,  客户端发送&amp;quot;11111&amp;quot;报文内容给服务端, 长度为5字节, 标识P即PSH(Push function)为1时, 代表要发送缓冲区的封包, 无需等待缓冲区满了才送&lt;/span&gt;
&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;16.501177&lt;/span&gt; &lt;span class="nx"&gt;IP&lt;/span&gt; &lt;span class="mf"&gt;192.168&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mf"&gt;1.109&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;8886&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mf"&gt;192.168&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mf"&gt;1.178&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;irdmi&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Flags&lt;/span&gt; &lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;P.&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;seq&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ack&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;win&lt;/span&gt; &lt;span class="mi"&gt;256&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;

&lt;span class="c1"&gt;//服务端收到客户端请求报文包后, 发送ACK(.)报文给客户端,  长度为0字节,  ACK=SEQ+LENGTH=1+5&lt;/span&gt;
&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;16.501208&lt;/span&gt; &lt;span class="nx"&gt;IP&lt;/span&gt; &lt;span class="mf"&gt;192.168&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mf"&gt;1.178&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;irdmi&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mf"&gt;192.168&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mf"&gt;1.109&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;8886&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Flags&lt;/span&gt; &lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;.&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ack&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;win&lt;/span&gt; &lt;span class="mi"&gt;115&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;

&lt;span class="c1"&gt;//客户端继续发送请求报文, 内容为&amp;quot;123321&amp;quot;, 长度6字节&lt;/span&gt;
&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;44&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;16.181474&lt;/span&gt; &lt;span class="nx"&gt;IP&lt;/span&gt; &lt;span class="mf"&gt;192.168&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mf"&gt;1.109&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;8886&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mf"&gt;192.168&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mf"&gt;1.178&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;irdmi&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Flags&lt;/span&gt; &lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;P.&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;seq&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ack&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;win&lt;/span&gt; &lt;span class="mi"&gt;256&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;

&lt;span class="c1"&gt;//服务端发送ACK(.)应答报文给客户端, ack=SEQ+length=6+6=12&lt;/span&gt;
&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;44&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;16.181508&lt;/span&gt; &lt;span class="nx"&gt;IP&lt;/span&gt; &lt;span class="mf"&gt;192.168&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mf"&gt;1.178&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;irdmi&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mf"&gt;192.168&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mf"&gt;1.109&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;8886&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Flags&lt;/span&gt; &lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;.&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ack&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;win&lt;/span&gt; &lt;span class="mi"&gt;115&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;

&lt;span class="c1"&gt;//客户端关闭后向服务端发送标识为(R+.ACK), RST(Reset)为1时, 表示tcp连接马上会被结束，而无需等待终止确认手续. 也就是说, 这是个强制结束的连线, 且发送端已经断开.&lt;/span&gt;
&lt;span class="c1"&gt;//这里即使服务端没有调用close(accept_sockfd)来向客户端发送FIN报文，两者之间建立的tcp链路都会被关闭！！！&lt;/span&gt;
&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;55.047977&lt;/span&gt; &lt;span class="nx"&gt;IP&lt;/span&gt; &lt;span class="mf"&gt;192.168&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mf"&gt;1.109&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;8886&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mf"&gt;192.168&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mf"&gt;1.178&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;irdmi&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Flags&lt;/span&gt; &lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;R.&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;seq&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ack&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;win&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Fri, 26 Feb 2016 15:51:00 +0800</pubDate><guid>tag:typecodes.com,2016-02-26:linux/simpletcpdumpapply.html</guid><category>tcpdump</category><category>tcp</category></item><item><title>CentOS 7.2使用yum安装MYSQL 5.7.10</title><link>https://typecodes.com/linux/yuminstallmysql5710.html</link><description>&lt;p&gt;前面两篇文章&lt;a href="https://typecodes.com/web/centos7compilemysql.html" title="查看原文"&gt;《2015博客升级记(四)：CentOS 7.1编译安装MySQL5.7.7rc》&lt;/a&gt;、&lt;a href="https://typecodes.com/web/centos7yuminstallmysql5.html" title="查看原文"&gt;《阿里云CentOS 7.1使用yum安装MySql5.6.24》&lt;/a&gt;分别使用源码编译和YUM方法安装MySQL数据库，这篇文章同样是使用YUM方法在CentOS7.2(64bits)的机器上安装最新的MySQL5.7.10数据库。&lt;/p&gt;
&lt;h4&gt;1 查看Linux发行版本&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@typecodes ~]# cat /etc/redhat-release
CentOS Linux release 7.2.1511 (Core)
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;2 下载MySQL官方的Yum Repository&lt;/h4&gt;
&lt;p&gt;根据Linux发行版本（CentOS、Fedora都属于红帽系），从mysql官方（http://dev.mysql.com/downloads/repo/yum/）获取Yum Repository。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@typecodes ~]#  wget -i http://dev.mysql.com/get/mysql57-community-release-el7-7.noarch.rpm
--2016-02-03 18:36:02--  http://dev.mysql.com/get/mysql57-community-release-el7-7.noarch.rpm
Resolving dev.mysql.com (dev.mysql.com)... 137.254.60.11
Connecting to dev.mysql.com (dev.mysql.com)|137.254.60.11|:80... connected.
HTTP request sent, awaiting response... 302 Found
Location: http://repo.mysql.com//mysql57-community-release-el7-7.noarch.rpm [following]
--2016-02-03 18:36:04--  http://repo.mysql.com//mysql57-community-release-el7-7.noarch.rpm
Resolving repo.mysql.com (repo.mysql.com)... 104.102.164.25
Connecting to repo.mysql.com (repo.mysql.com)|104.102.164.25|:80... connected.
HTTP request sent, awaiting response... 200 OK
Length: 8984 (8.8K) [application/x-redhat-package-manager]
Saving to: ‘mysql57-community-release-el7-7.noarch.rpm’

100%[=============================================================================================================================&amp;gt;] 8,984       --.-K/s   in 0s

2016-02-03 18:36:07 (68.4 MB/s) - ‘mysql57-community-release-el7-7.noarch.rpm’ saved [8984/8984]
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;3 安装MySQL的Yum Repository&lt;/h4&gt;
&lt;p&gt;安装完MySQL的Yum Repository，每次执行yum update都会检查MySQL是否更新。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@typecodes ~]# yum -y linstall mysql57-community-release-el7-7.noarch.rpm
Loaded plugins: axelget, fastestmirror, langpacks
Examining mysql57-community-release-el7-7.noarch.rpm: mysql57-community-release-el7-7.noarch
Marking mysql57-community-release-el7-7.noarch.rpm to be installed
Resolving Dependencies
--&amp;gt; Running transaction check
---&amp;gt; Package mysql57-community-release.noarch 0:el7-7 will be installed
--&amp;gt; Finished Dependency Resolution

Dependencies Resolved

=======================================================================================================================================================================
 Package                                       Arch                       Version                    Repository                                                   Size
=======================================================================================================================================================================
Installing:
 mysql57-community-release                     noarch                     el7-7                      /mysql57-community-release-el7-7.noarch                     7.8 k

Transaction Summary
=======================================================================================================================================================================
Install  1 Package

Total size: 7.8 k
Installed size: 7.8 k
Downloading packages:
Running transaction check
Running transaction test
Transaction test succeeded
Running transaction
  Installing : mysql57-community-release-el7-7.noarch                                                                                                              1/1 
  Verifying  : mysql57-community-release-el7-7.noarch                                                                                                              1/1

Installed:
  mysql57-community-release.noarch 0:el7-7

Complete!
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;3 安装MySQL数据库的服务器版本&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@typecodes ~]# yum -y install mysql-community-server
Loaded plugins: axelget, fastestmirror, langpacks
No metadata available for base
No metadata available for epel
No metadata available for extras
repomd.xml                                                                                                                                      | 2.5 kB  00:00:00     
update mysql-connectors-community metadata successfully
repomd.xml                                                                                                                                      | 2.5 kB  00:00:00     
update mysql-tools-community metadata successfully
repomd.xml                                                                                                                                      | 2.5 kB  00:00:00     
update mysql57-community metadata successfully
No metadata available for updates
mysql-connectors-community                                                                                                                      | 2.5 kB  00:00:00     
mysql-tools-community                                                                                                                           | 2.5 kB  00:00:00     
mysql57-community                                                                                                                               | 2.5 kB  00:00:00     
(1/3): mysql-tools-community/x86_64/primary_db                                                                                                  |  24 kB  00:00:01     
(2/3): mysql57-community/x86_64/primary_db                                                                                                      |  28 kB  00:00:01     
(3/3): mysql-connectors-community/x86_64/primary_db                                                                                             | 8.6 kB  00:00:02     
Loading mirror speeds from cached hostfile
 * base: mirrors.aliyun.com
 * epel: mirrors.neusoft.edu.cn
 * extras: mirrors.163.com
 * updates: mirrors.163.com
Resolving Dependencies
--&amp;gt; Running transaction check
---&amp;gt; Package mysql-community-server.x86_64 0:5.7.10-1.el7 will be installed
--&amp;gt; Processing Dependency: mysql-community-common(x86-64) = 5.7.10-1.el7 for package: mysql-community-server-5.7.10-1.el7.x86_64
--&amp;gt; Processing Dependency: mysql-community-client(x86-64) = 5.7.10-1.el7 for package: mysql-community-server-5.7.10-1.el7.x86_64
--&amp;gt; Running transaction check
---&amp;gt; Package mysql-community-client.x86_64 0:5.7.10-1.el7 will be installed
--&amp;gt; Processing Dependency: mysql-community-libs(x86-64) = 5.7.10-1.el7 for package: mysql-community-client-5.7.10-1.el7.x86_64
---&amp;gt; Package mysql-community-common.x86_64 0:5.7.10-1.el7 will be installed
--&amp;gt; Running transaction check
---&amp;gt; Package mariadb-libs.x86_64 1:5.5.44-2.el7.centos will be obsoleted
--&amp;gt; Processing Dependency: libmysqlclient.so.18()(64bit) for package: 2:postfix-2.10.1-6.el7.x86_64
--&amp;gt; Processing Dependency: libmysqlclient.so.18(libmysqlclient_18)(64bit) for package: 2:postfix-2.10.1-6.el7.x86_64
---&amp;gt; Package mysql-community-libs.x86_64 0:5.7.10-1.el7 will be obsoleting
--&amp;gt; Running transaction check
---&amp;gt; Package mysql-community-libs-compat.x86_64 0:5.7.10-1.el7 will be obsoleting
--&amp;gt; Finished Dependency Resolution

Dependencies Resolved

=======================================================================================================================================================================
 Package                                            Arch                          Version                               Repository                                Size
=======================================================================================================================================================================
Installing:
 mysql-community-libs                               x86_64                        5.7.10-1.el7                          mysql57-community                        2.2 M
     replacing  mariadb-libs.x86_64 1:5.5.44-2.el7.centos
 mysql-community-libs-compat                        x86_64                        5.7.10-1.el7                          mysql57-community                        2.0 M
     replacing  mariadb-libs.x86_64 1:5.5.44-2.el7.centos
 mysql-community-server                             x86_64                        5.7.10-1.el7                          mysql57-community                        142 M
Installing for dependencies:
 mysql-community-client                             x86_64                        5.7.10-1.el7                          mysql57-community                         24 M
 mysql-community-common                             x86_64                        5.7.10-1.el7                          mysql57-community                        269 k

Transaction Summary
=======================================================================================================================================================================
Install  3 Packages (+2 Dependent packages)

Total download size: 171 M
Downloading packages:
mysql-community-server-5.7.10-1.el7.x86_64.rpm                                                                                                  | 142 MB  00:03:42     
mysql-community-libs-compat-5.7.10-1.el7.x86_64.rpm                                                                                             | 2.0 MB  00:00:03     
mysql-community-libs-5.7.10-1.el7.x86_64.rpm                                                                                                    | 2.2 MB  00:00:05     
mysql-community-client-5.7.10-1.el7.x86_64.rpm                                                                                                  |  24 MB  00:00:41     
warning: /var/cache/yum/x86_64/7/mysql57-community/packages/mysql-community-common-5.7.10-1.el7.x86_64.rpm: Header V3 DSA/SHA1 Signature, key ID 5072e1f5: NOKEY00 ETA 
Public key for mysql-community-common-5.7.10-1.el7.x86_64.rpm is not installed
mysql-community-common-5.7.10-1.el7.x86_64.rpm                                                                                                  | 269 kB  00:00:01     
Retrieving key from file:///etc/pki/rpm-gpg/RPM-GPG-KEY-mysql
Importing GPG key 0x5072E1F5:
 Userid     : &amp;quot;MySQL Release Engineering &amp;lt;mysql-build@oss.oracle.com&amp;gt;&amp;quot;
 Fingerprint: a4a9 4068 76fc bd3c 4567 70c8 8c71 8d3b 5072 e1f5
 Package    : mysql57-community-release-el7-7.noarch (@/mysql57-community-release-el7-7.noarch)
 From       : /etc/pki/rpm-gpg/RPM-GPG-KEY-mysql
Running transaction check
Running transaction test
Transaction test succeeded
Running transaction
  Installing : mysql-community-common-5.7.10-1.el7.x86_64                                                                                                          1/6 
  Installing : mysql-community-libs-5.7.10-1.el7.x86_64                                                                                                            2/6 
  Installing : mysql-community-client-5.7.10-1.el7.x86_64                                                                                                          3/6 
  Installing : mysql-community-server-5.7.10-1.el7.x86_64                                                                                                          4/6 
  Installing : mysql-community-libs-compat-5.7.10-1.el7.x86_64                                                                                                     5/6 
  Erasing    : 1:mariadb-libs-5.5.44-2.el7.centos.x86_64                                                                                                           6/6 
  Verifying  : mysql-community-server-5.7.10-1.el7.x86_64                                                                                                          1/6 
  Verifying  : mysql-community-libs-compat-5.7.10-1.el7.x86_64                                                                                                     2/6 
  Verifying  : mysql-community-common-5.7.10-1.el7.x86_64                                                                                                          3/6 
  Verifying  : mysql-community-libs-5.7.10-1.el7.x86_64                                                                                                            4/6 
  Verifying  : mysql-community-client-5.7.10-1.el7.x86_64                                                                                                          5/6 
  Verifying  : 1:mariadb-libs-5.5.44-2.el7.centos.x86_64                                                                                                           6/6

Installed:
  mysql-community-libs.x86_64 0:5.7.10-1.el7          mysql-community-libs-compat.x86_64 0:5.7.10-1.el7          mysql-community-server.x86_64 0:5.7.10-1.el7

Dependency Installed:
  mysql-community-client.x86_64 0:5.7.10-1.el7                                       mysql-community-common.x86_64 0:5.7.10-1.el7

Replaced:
  mariadb-libs.x86_64 1:5.5.44-2.el7.centos

Complete!
[root@typecodes ~]# clear
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;最后的截图：&lt;/p&gt;
&lt;p&gt;&lt;img alt="yum安装mysql5.7.10" src="https://o3cex9zsl.qnssl.com/2016/02/yum_install_mysql5.7.10.png" title="yum安装mysql5.7.10" /&gt;&lt;/p&gt;
&lt;h4&gt;4 启动数据库：&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@typecodes ~]# systemctl start  mysqld.service
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;然后使用命令&lt;code&gt;systemctl status mysql.service&lt;/code&gt;查看MySQL数据库启动后的服务状态：&lt;/p&gt;
&lt;p&gt;&lt;img alt="systemctl命令查看MySQL服务状态" src="https://o3cex9zsl.qnssl.com/2016/02/mysql_process_status.png" title="systemctl命令查看MySQL服务状态" /&gt;&lt;/p&gt;
&lt;h4&gt;5 获取初始密码&lt;/h4&gt;
&lt;p&gt;使用YUM安装并启动MySQL服务后，MySQL进程会自动在进程日志中打印root用户的初始密码：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;#######从mysql进程日志中获取root用户的初始密码：ra%yk7urCBIh
[root@typecodes ~]# grep &amp;quot;password&amp;quot; /var/log/mysqld.log
2016-02-03T10:42:17.272166Z 1 [Note] A temporary password is generated for root@localhost: ra%yk7urCBIh
2016-02-03T10:42:36.776875Z 2 [Note] Access denied for user &amp;#39;root&amp;#39;@&amp;#39;localhost&amp;#39; (using password: NO)
2016-02-03T10:42:52.063138Z 3 [Note] Access denied for user &amp;#39;root&amp;#39;@&amp;#39;localhost&amp;#39; (using password: NO)
2016-02-03T10:42:57.564373Z 4 [Note] Access denied for user &amp;#39;root&amp;#39;@&amp;#39;localhost&amp;#39; (using password: NO)
2016-02-03T10:43:01.477007Z 5 [Note] Access denied for user &amp;#39;root&amp;#39;@&amp;#39;localhost&amp;#39; (using password: NO)
2016-02-03T10:46:03.642008Z 6 [Note] Access denied for user &amp;#39;root&amp;#39;@&amp;#39;localhost&amp;#39; (using password: NO)
2016-02-03T10:46:11.217889Z 7 [Note] Access denied for user &amp;#39;root&amp;#39;@&amp;#39;localhost&amp;#39; (using password: NO)
2016-02-03T10:47:44.755199Z 0 [Note] Shutting down plugin &amp;#39;validate_password&amp;#39;
2016-02-03T10:47:46.505844Z 0 [Note] Shutting down plugin &amp;#39;sha256_password&amp;#39;
2016-02-03T10:47:46.505851Z 0 [Note] Shutting down plugin &amp;#39;mysql_native_password&amp;#39;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;6 修改root用户密码&lt;/h4&gt;
&lt;p&gt;使用小节5中获取的root用户的初始密码，然后进行修改：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@typecodes ~]# mysql -uroot -p
Enter password:             #######输入默认的root密码后回车
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 2
Server version: 5.7.10

Copyright (c) 2000, 2015, Oracle and/or its affiliates. All rights reserved.

Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.

Type &amp;#39;help;&amp;#39; or &amp;#39;\h&amp;#39; for help. Type &amp;#39;\c&amp;#39; to clear the current input statement.

mysql&amp;gt; ALTER USER &amp;#39;root&amp;#39;@&amp;#39;localhost&amp;#39; IDENTIFIED BY &amp;#39;new password&amp;#39;;
Query OK, 0 rows affected (0.00 sec)

mysql&amp;gt; exit
Bye
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;7 安装完毕&lt;/h4&gt;
&lt;p&gt;至此，使用在CentOS7中使用YUM方法安装MySQL5.7.10数据库完毕。如下所示，可以使用新的root密码登陆MySQL了。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@typecodes ~]# mysql -uroot -ppassword
mysql: [Warning] Using a password on the command line interface can be insecure.
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 3
Server version: 5.7.10 MySQL Community Server (GPL)

Copyright (c) 2000, 2015, Oracle and/or its affiliates. All rights reserved.

Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.

Type &amp;#39;help;&amp;#39; or &amp;#39;\h&amp;#39; for help. Type &amp;#39;\c&amp;#39; to clear the current input statement.

mysql&amp;gt; use mysql;
Reading table information for completion of table and column names
You can turn off this feature to get a quicker startup with -A

Database changed
mysql&amp;gt; show databases;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| mysql              |
| performance_schema |
| sys                |
+--------------------+
4 rows in set (0.00 sec)

mysql&amp;gt; clear
mysql&amp;gt; exit
Bye
[root@typecodes ~]# clear
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;附录1：查看MySQL数据库的配置信息&lt;/h4&gt;
&lt;p&gt;MySQL的配置文件依然是&lt;code&gt;/etc/my.cnf&lt;/code&gt;，其它安装信息可以通过&lt;code&gt;mysql_config&lt;/code&gt;命令查看。其中，动态库文件存放在&lt;code&gt;/usr/lib64/mysql&lt;/code&gt;目录下。&lt;/p&gt;
&lt;p&gt;&lt;img alt="mysql_config命令查看mysql数据库的安装信息" src="https://o3cex9zsl.qnssl.com/2016/02/mysql_config.png" title="mysql_config命令查看mysql数据库的安装信息" /&gt;&lt;/p&gt;
&lt;h4&gt;附录2：删除MySQL的Repository&lt;/h4&gt;
&lt;p&gt;因为小节3中安装了MySQL的Yum Repository，所以以后每次执行yum操作时，都会去检查更新。如果想要去掉这种自动检查操作的话，可以使用如下命令卸载MySQL的Repository即可。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@typecodes ~]# yum -y remove mysql57-community-release-el7-7.noarch
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Fri, 26 Feb 2016 14:55:00 +0800</pubDate><guid>tag:typecodes.com,2016-02-26:linux/yuminstallmysql5710.html</guid><category>mysql</category></item><item><title>Linux多进程和多线程的一次gdb调试实例</title><link>https://typecodes.com/cseries/multilprocessthreadgdb.html</link><description>&lt;p&gt;Linux C/C++开发中gdb进行多进程和多线程的调试一直比较麻烦，在CSDN上看到高科的一篇文章&lt;a href="http://blog.csdn.net/pbymw8iwm/article/details/7876797" title="查看原文"&gt;《gdb调试多进程和多线程命令》&lt;/a&gt;比较有启发，这里就自己重新整理并做了一个GDB多进程/线程的调试实践。&lt;/p&gt;


&lt;h4&gt;1 原文整理&lt;/h4&gt;
&lt;p&gt;默认设置下，在调试多进程程序时gdb只会调试主进程。gdb7以上的版本(gdb --version)支持多进程调试，只需要设置好&lt;code&gt;follow-fork-mode&lt;/code&gt;（fork追踪模式）以及&lt;code&gt;detach-on-fork&lt;/code&gt;（指示GDB在fork之后是否断开某个进程的调试）即可。&lt;/p&gt;
&lt;p&gt;这两个参数的设置命令分别是：set follow-fork-mode [parent|child]，set detach-on-fork [on|off]。两者结合起来构成了GDB的调试模式：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;follow-fork-mode  detach-on-fork    说明
    parent              on          GDB默认的调试模式：只调试主进程
    child               on          只调试子进程
    parent              off         同时调试两个进程，gdb跟主进程，子进程block在fork位置
    child               off         同时调试两个进程，gdb跟子进程，主进程block在fork位置
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;查看gdb默认的参数设置：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;(gdb) show follow-fork-mode
Debugger response to a program call of fork or vfork is &amp;quot;parent&amp;quot;.
(gdb) show detach-on-fork
Whether gdb will detach the child of a fork is on.
(gdb)
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;2 演示代码&lt;/h4&gt;
&lt;p&gt;下面这段代码的主要流程就是在main函数中fork创建一个子进程，然后在父进程中又创建一个线程，接着就使用gdb进行调试（block子进程）。注意，在调试设置断点的时候，由于之前调试的时候代码最前面没有加上这7行说明文字，所以设置断点的行号要加上7。&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cm"&gt;/** &lt;/span&gt;
&lt;span class="cm"&gt; * @FileName    gdb_pthread.c&lt;/span&gt;
&lt;span class="cm"&gt; * @Describe    A simple example for the debug of multiprocess and multithreading using gdb in linux system.&lt;/span&gt;
&lt;span class="cm"&gt; * @Author      vfhky 2016-02-25 22:48 https://typecodes.com/cseries/multilprocessthreadgdb.html&lt;/span&gt;
&lt;span class="cm"&gt; * @Compile     gcc gdb_pthread.c -g -o gdb_pthread&lt;/span&gt;
&lt;span class="cm"&gt; * @Reference   http://blog.csdn.net/pbymw8iwm/article/details/7876797&lt;/span&gt;
&lt;span class="cm"&gt; */&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;pthread.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;sys/types.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;unistd.h&amp;gt;&lt;/span&gt;


&lt;span class="c1"&gt;//Parent process handle.&lt;/span&gt;
&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;Parent&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="c1"&gt;//Child process handle.&lt;/span&gt;
&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;Child&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="c1"&gt;//Parent process handle after generate a thread.&lt;/span&gt;
&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nf"&gt;ParentDo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;argc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;pid&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;pid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;fork&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pid&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;        &lt;span class="c1"&gt;//add the first breakpoint.&lt;/span&gt;
        &lt;span class="n"&gt;Parent&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
        &lt;span class="n"&gt;Child&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;//Parent process handle.&lt;/span&gt;
&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;Parent&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;pid_t&lt;/span&gt; &lt;span class="n"&gt;pid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;getpid&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;cParent&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Parent&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;cThread&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Thread&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kt"&gt;pthread_t&lt;/span&gt; &lt;span class="n"&gt;pt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;[%s]: [%d] [%s]&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cParent&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;step1&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;pthread_create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;pt&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;ParentDo&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cThread&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;[%s]: Can not create a thread.&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cParent&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="n"&gt;ParentDo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;cParent&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nf"&gt;ParentDo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;pid_t&lt;/span&gt; &lt;span class="n"&gt;pid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;getpid&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="kt"&gt;pthread_t&lt;/span&gt; &lt;span class="n"&gt;tid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pthread_self&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;     &lt;span class="c1"&gt;//Get the thread-id selfly.&lt;/span&gt;
    &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;tprefix&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;thread&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;[%s]: [%d] [%s] [%lu] [%s]&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tprefix&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;step2&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;         &lt;span class="c1"&gt;//add the second breakpoint.&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;[%s]: [%d] [%s] [%lu] [%s]&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tprefix&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;step3&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;Child&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;pid_t&lt;/span&gt; &lt;span class="n"&gt;pid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;getpid&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;prefix&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Child&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;[%s]: [%d] [%s]&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;prefix&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;step1&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;已知如果直接运行程序，那么输出的内容如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[vfhky@typecodes pthread_key]$ gdb_pthread
[Parent]: [22648] [step1]
[Parent]: [22648] [thread] [139722467432256] [step2]
[Parent]: [22648] [thread] [139722467432256] [step3]
[Thread]: [22648] [thread] [139722450630400] [step2]
[Thread]: [22648] [thread] [139722450630400] [step3]
[Child]: [22649] [step1]
[vfhky@typecodes pthread_key]$
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;3 gdb调试&lt;/h4&gt;
&lt;h5&gt;3.1 设置调试模式和Catchpoint&lt;/h5&gt;
&lt;p&gt;设置调试父子进程，gdb跟主进程，子进程block在fork位置。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[vfhky@typecodes pthread_key]$ gdb gdb_pthread
GNU gdb (GDB) Red Hat Enterprise Linux 7.6.1-80.el7
Copyright (C) 2013 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later &amp;lt;http://gnu.org/licenses/gpl.html&amp;gt;
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type &amp;quot;show copying&amp;quot;
and &amp;quot;show warranty&amp;quot; for details.
This GDB was configured as &amp;quot;x86_64-redhat-linux-gnu&amp;quot;.
For bug reporting instructions, please see:
&amp;lt;http://www.gnu.org/software/gdb/bugs/&amp;gt;...
Reading symbols from /home/vfhky/bin/gdb_pthread...done.
(gdb) set detach-on-fork off
#####catch让程序在发生某种事件（fork、异常throw、异常catch、动态库加载等）的时候停止运行
(gdb) catch fork 
Catchpoint 1 (fork)
(gdb) info b
Num     Type           Disp Enb Address            What
1       catchpoint     keep y                      fork
(gdb)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img alt="开启gdb调试" src="https://o3cex9zsl.qnssl.com/2016/02/start_gdb_debug.png" title="开启gdb调试" /&gt;&lt;/p&gt;
&lt;h5&gt;3.2 开始gdb调试&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;(gdb) r                         ####运行到断点/捕捉点（第17行处的fork函数，23873是子进程PID）
Starting program: /home/vfhky/bin/gdb_pthread 
[Thread debugging using libthread_db enabled]
Using host libthread_db library &amp;quot;/lib64/libthread_db.so.1&amp;quot;.

Catchpoint 1 (forked process 23873), 0x00007ffff709b50c in __libc_fork () at ../nptl/sysdeps/unix/sysv/linux/fork.c:130
130       pid = ARCH_FORK ();
(gdb) bt                        #####查看堆栈情况
#0  0x00007ffff709b50c in __libc_fork () at ../nptl/sysdeps/unix/sysv/linux/fork.c:130
#1  0x00000000004007b4 in main (argc=1, argv=0x7fffffffe4c8) at gdb_pthread.c:17
(gdb) info threads              #######显示运行的线程信息(23869是父进程的PID)
  Id   Target Id         Frame 
* 1    Thread 0x7ffff7fe1740 (LWP 23869) &amp;quot;gdb_pthread&amp;quot; 0x00007ffff709b50c in __libc_fork () at ../nptl/sysdeps/unix/sysv/linux/fork.c:130
(gdb) info inferiors            ######显示正在调试的进程：1前面的星号表示当前调试的进程（PID 23869）。  
  Num  Description       Executable        
* 1    process 23869     /home/vfhky/bin/gdb_pthread 
(gdb) info b                    ######列出所有断点和捕捉点，此时已经hit 1 time，即捕捉到了一次fork事件
Num     Type           Disp Enb Address            What
1       catchpoint     keep y                      fork, process 23873                   #####子进程23873
        catchpoint already hit 1 time
(gdb)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这时使用如下命令查看当前CentOS系统所有进程的状态：发现父进程PID为23869，通过fork产生的子进程为23873：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[vfhky@typecodes ~]$ pstree -pul
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="pstree -pul查看CentOS系统所有进程信息" src="https://o3cex9zsl.qnssl.com/2016/02/pstree_pul_process.png" title="pstree -pul查看CentOS系统所有进程信息" /&gt;&lt;/p&gt;
&lt;p&gt;同时，使用命令&lt;code&gt;cat /proc/23869/status&lt;/code&gt;查看当前进程的详细信息：进程PID为23869，它的父进程（即GDB进程）为23859，同时这也是追踪进程ID，线程数Threads为1（共享使用该信号描述符的线程数，在POSIX多线程序应用程序中，线程组中的所有线程使用同一个信号描述符）。&lt;/p&gt;
&lt;p&gt;&lt;img alt="proc查看进程的状态信息" src="https://o3cex9zsl.qnssl.com/2016/02/proc_23869_1.png" title="proc查看进程的状态信息" /&gt;&lt;/p&gt;
&lt;h5&gt;3.3 设置第一个断点&lt;/h5&gt;
&lt;p&gt;在程序的第18行设置断点：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;(gdb) b gdb_pthread.c:18
Breakpoint 2 at 0x4007b7: file gdb_pthread.c, line 18.
(gdb) info b                        ######列出所有断点和捕捉点
Num     Type           Disp Enb Address            What
1       catchpoint     keep y                      fork, process 23873                 ########子进程23873
        catchpoint already hit 1 time
2       breakpoint     keep y   0x00000000004007b7 in main at gdb_pthread.c:18
(gdb)
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;3.4 执行到第一个断点&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;(gdb) c                #####执行到第18行处的断点
Continuing.
[New process 23873]                     #####父进程23869执行完第1个捕捉点的程序，产生子进程23873
[Thread debugging using libthread_db enabled]
Using host libthread_db library &amp;quot;/lib64/libthread_db.so.1&amp;quot;.

Breakpoint 2, main (argc=1, argv=0x7fffffffe4c8) at gdb_pthread.c:18            ##########父进程执行到第18行处的断点
18              if(pid != 0)
(gdb) info threads                      ####查看所有运行的线程，有父进程23869和子进程23873
  Id   Target Id         Frame 
  2    Thread 0x7ffff7fe1740 (LWP 23873) &amp;quot;gdb_pthread&amp;quot; 0x00007ffff709b50c in __libc_fork () at ../nptl/sysdeps/unix/sysv/linux/fork.c:130
* 1    Thread 0x7ffff7fe1740 (LWP 23869) &amp;quot;gdb_pthread&amp;quot; main (argc=1, argv=0x7fffffffe4c8) at gdb_pthread.c:18
(gdb) info inferiors                    #####显示正在调试的进程
  Num  Description       Executable        
  2    process 23873     /home/vfhky/bin/gdb_pthread                ########子进程
* 1    process 23869     /home/vfhky/bin/gdb_pthread                ########父进程
(gdb) info b                    #######查看当前所有的断点
Num     Type           Disp Enb Address            What
1       catchpoint     keep y                      fork, process 23873 
        catchpoint already hit 1 time
2       breakpoint     keep y   &amp;lt;MULTIPLE&amp;gt;         
        breakpoint already hit 1 time
2.1                         y     0x00000000004007b7 in main at gdb_pthread.c:18 inf 2
2.2                         y     0x00000000004007b7 in main at gdb_pthread.c:18 inf 1
(gdb)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;截图如下：&lt;/p&gt;
&lt;p&gt;&lt;img alt="执行到第1个断点处查看线程和进程状况" src="https://o3cex9zsl.qnssl.com/2016/02/break_1_info.png" title="执行到第1个断点处查看线程和进程状况" /&gt;&lt;/p&gt;
&lt;p&gt;这时使用命令查看当前系统进程的状态：发现此时仍然只有父进程23869和子进程23873。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[vfhky@typecodes ~]$ pstree -pul
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="pstree -pul查看CentOS系统所有进程信息" src="https://o3cex9zsl.qnssl.com/2016/02/pstree_pul_process.png" title="pstree -pul查看CentOS系统所有进程信息" /&gt;&lt;/p&gt;
&lt;h5&gt;3.5 执行到第一个断点此时如果切换到子进程23873&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;(gdb) inferior 2
[Switching to inferior 2 [process 23873] (/home/vfhky/bin/gdb_pthread)]
[Switching to thread 2 (Thread 0x7ffff7fe1740 (LWP 23873))] 
#0  0x00007ffff709b50c in __libc_fork () at ../nptl/sysdeps/unix/sysv/linux/fork.c:130
130       pid = ARCH_FORK ();
(gdb) info inferiors                 #####显示正在调试的进程 
  Num  Description       Executable        
* 2    process 23873     /home/vfhky/bin/gdb_pthread                #####子进程
  1    process 23869     /home/vfhky/bin/gdb_pthread                #####父进程
(gdb)
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;3.6 重新切换到父进程23869&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;(gdb) inferior 1
[Switching to inferior 1 [process 23869] (/home/vfhky/bin/gdb_pthread)]
[Switching to thread 1 (Thread 0x7ffff7fe1740 (LWP 23869))] 
#0  main (argc=1, argv=0x7fffffffe4c8) at gdb_pthread.c:18
18              if(pid != 0)
(gdb) info inferiors                 #####显示正在调试的进程
  Num  Description       Executable        
  2    process 23873     /home/vfhky/bin/gdb_pthread 
* 1    process 23869     /home/vfhky/bin/gdb_pthread 
(gdb)
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;3.7 设置第二个断点并调试&lt;/h5&gt;
&lt;p&gt;在第50行设置断点继续调试主进程（使父进程产生线程），其中父进程和线程到底是谁先执行是由内核调度控制的。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;(gdb) b gdb_pthread.c:50
Breakpoint 3 at 0x4008a7: gdb_pthread.c:50. (2 locations)
(gdb) c                    ######继续执行代码到第50行处的断点
Continuing.
[Parent]: [23869] [step1]                              ######第33行父进程打印Parent()函数中的数据
[New Thread 0x7ffff6fdd700 (LWP 24024)]                ######第35行父进程创建了一个线程24024（LWP表示轻量级进程）
[Switching to Thread 0x7ffff6fdd700 (LWP 24024)]            #####已经自动切换到线程24024（LWP表示轻量。进程），也就是GDB继续调试线程而不是父进程了。

Breakpoint 3, ParentDo (argv=0x7fffffffe390 &amp;quot;Thread&amp;quot;) at gdb_pthread.c:50            ######线程24024阻塞在程序的第50行
50              printf( &amp;quot;[%s]: [%d] [%s] [%lu] [%s]\n&amp;quot;, argv, pid, tprefix, tid, &amp;quot;step2&amp;quot; );
(gdb)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这时使用命令查看当前系统进程的状态：存在父进程23869和子进程23873以及父进程创建的一个线程24024（线程用大括号{}表示）。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[vfhky@typecodes ~]$ pstree -pul
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="pstree -pul查看CentOS系统所有进程信息" src="https://o3cex9zsl.qnssl.com/2016/02/pstree_pul_process_2.png" title="pstree -pul查看CentOS系统所有进程信息" /&gt;  &lt;/p&gt;
&lt;p&gt;同时，使用命令&lt;code&gt;cat /proc/23869/status&lt;/code&gt;查看当前进程的详细信息：进程PID为23869，它的父进程（即GDB进程）为23859，同时这也是追踪进程ID，线程数Threads为2（当前父进程23869+线程24024）。&lt;/p&gt;
&lt;p&gt;&lt;img alt="proc查看进程的状态信息" src="https://o3cex9zsl.qnssl.com/2016/02/proc_23869_2.png" title="proc查看进程的状态信息" /&gt;&lt;/p&gt;
&lt;h5&gt;3.8 查看第二个断点处的调试信息&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;(gdb) info inferiors                 #####显示正在调试的进程 
  Num  Description       Executable        
  2    process 23873     /home/vfhky/bin/gdb_pthread                     ###子进程
* 1    process 23869     /home/vfhky/bin/gdb_pthread                     ###父进程 
(gdb) info threads         ####查看所有运行的线程，父进程23869、子进程23873、线程24024，由星号可以发现目前调试已经切换到了线程24024了。 
  Id   Target Id         Frame 
* 3    Thread 0x7ffff6fdd700 (LWP 24024) &amp;quot;gdb_pthread&amp;quot; ParentDo (argv=0x7fffffffe390 &amp;quot;Thread&amp;quot;) at gdb_pthread.c:50
  2    Thread 0x7ffff7fe1740 (LWP 23873) &amp;quot;gdb_pthread&amp;quot; 0x00007ffff709b50c in __libc_fork () at ../nptl/sysdeps/unix/sysv/linux/fork.c:130
  1    Thread 0x7ffff7fe1740 (LWP 23869) &amp;quot;gdb_pthread&amp;quot; ParentDo (argv=0x7fffffffe3a0 &amp;quot;Parent&amp;quot;) at gdb_pthread.c:50
(gdb) info b                #####查看设置的所有的断点breakpoint和捕捉点catchpoint（共3个）：
Num     Type           Disp Enb Address            What
1       catchpoint     keep y                      fork, process 23873 
        catchpoint already hit 1 time
2       breakpoint     keep y   &amp;lt;MULTIPLE&amp;gt;         
        breakpoint already hit 1 time
2.1                         y     0x00000000004007b7 in main at gdb_pthread.c:18 inf 2
2.2                         y     0x00000000004007b7 in main at gdb_pthread.c:18 inf 1
3       breakpoint     keep y   &amp;lt;MULTIPLE&amp;gt;         
        breakpoint already hit 1 time
3.1                         y     0x00000000004008a7 in ParentDo at gdb_pthread.c:50 inf 2
3.2                         y     0x00000000004008a7 in ParentDo at gdb_pthread.c:50 inf 1
(gdb)
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;3.9 如果手动切换到线程24024&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;(gdb) thread 3
[Switching to thread 3 (Thread 0x7ffff6fdd700 (LWP 24024))]
#0  ParentDo (argv=0x7fffffffe390 &amp;quot;Thread&amp;quot;) at gdb_pthread.c:50
50              printf( &amp;quot;[%s]: [%d] [%s] [%lu] [%s]\n&amp;quot;, argv, pid, tprefix, tid, &amp;quot;step2&amp;quot; );
(gdb) info threads                   #####查看所有运行的线程
  Id   Target Id         Frame 
* 3    Thread 0x7ffff6fdd700 (LWP 24024) &amp;quot;gdb_pthread&amp;quot; ParentDo (argv=0x7fffffffe390 &amp;quot;Thread&amp;quot;) at gdb_pthread.c:50
  2    Thread 0x7ffff7fe1740 (LWP 23873) &amp;quot;gdb_pthread&amp;quot; 0x00007ffff709b50c in __libc_fork () at ../nptl/sysdeps/unix/sysv/linux/fork.c:130
  1    Thread 0x7ffff7fe1740 (LWP 23869) &amp;quot;gdb_pthread&amp;quot; ParentDo (argv=0x7fffffffe3a0 &amp;quot;Parent&amp;quot;) at gdb_pthread.c:50
(gdb) info inferiors                 #####显示正在调试的进程  
  Num  Description       Executable        
  2    process 23873     /home/vfhky/bin/gdb_pthread 
* 1    process 23869     /home/vfhky/bin/gdb_pthread 
(gdb)
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;3.10 开始执行第二个断点处的代码&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;(gdb) c
Continuing.
[Thread]: [23869] [thread] [140737337218816] [step2]            #####线程24024执行第50行处，打印数据
[Thread]: [23869] [thread] [140737337218816] [step3]            #####线程24024执行第51行处，打印数据
[Thread 0x7ffff6fdd700 (LWP 24024) exited]                      #####线程24024退出
[Switching to Thread 0x7ffff7fe1740 (LWP 23869)]                #####切换到父进程中去

Breakpoint 3, ParentDo (argv=0x7fffffffe3a0 &amp;quot;Parent&amp;quot;) at gdb_pthread.c:50                #####父进程继续停在第50行处的断点
50              printf( &amp;quot;[%s]: [%d] [%s] [%lu] [%s]\n&amp;quot;, argv, pid, tprefix, tid, &amp;quot;step2&amp;quot; );
(gdb) info inferiors                    ######列出正在调试进程（父进程23869和子进程23873），1前面的星号表示当前调试的进程（父进程23869）。 
  Num  Description       Executable        
  2    process 23873     /home/vfhky/bin/gdb_pthread 
* 1    process 23869     /home/vfhky/bin/gdb_pthread 
(gdb) info threads                     ######查看所有运行的线程
  Id   Target Id         Frame 
  2    Thread 0x7ffff7fe1740 (LWP 23873) &amp;quot;gdb_pthread&amp;quot; 0x00007ffff709b50c in __libc_fork () at ../nptl/sysdeps/unix/sysv/linux/fork.c:130            #####子进程23873
* 1    Thread 0x7ffff7fe1740 (LWP 23869) &amp;quot;gdb_pthread&amp;quot; ParentDo (argv=0x7fffffffe3a0 &amp;quot;Parent&amp;quot;) at gdb_pthread.c:50          #####父进程23869
(gdb)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这时使用命令查看当前系统进程的状态：存在父进程23869和子进程23873，其中线程24024已经结束了。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[vfhky@typecodes ~]$ pstree -pul
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="pstree -pul查看CentOS系统所有进程信息" src="https://o3cex9zsl.qnssl.com/2016/02/pstree_pul_process.png" title="pstree -pul查看CentOS系统所有进程信息" /&gt;    &lt;/p&gt;
&lt;h5&gt;3.11 继续调试父进程&lt;/h5&gt;
&lt;p&gt;此时，由于线程的退出，父进程作为自动选择的要调试的线程。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;(gdb) c
Continuing.
[Parent]: [23869] [thread] [140737354012480] [step2]        #####父进程23869执行第50行
[Parent]: [23869] [thread] [140737354012480] [step3]        #####父进程23869执行第51行
[Inferior 1 (process 23869) exited normally]                #####正在调试的父进程23869退出
(gdb) info inferiors             ######显示正在调试的进程
  Num  Description       Executable        
  2    process 23873     /home/vfhky/bin/gdb_pthread        #####fork创建的子进程23873
* 1    &amp;lt;null&amp;gt;            /home/vfhky/bin/gdb_pthread        #####fork创建的父进程23869已经退出 
(gdb) info threads              ####显示正在运行的线程：只存在子进程23873，父进程23869已经退出 
  Id   Target Id         Frame 
  2    Thread 0x7ffff7fe1740 (LWP 23873) &amp;quot;gdb_pthread&amp;quot; 0x00007ffff709b50c in __libc_fork () at ../nptl/sysdeps/unix/sysv/linux/fork.c:130

No selected thread.  See `help thread&amp;#39;.         #####提示没有被选中的要调试的线程
(gdb) info b                                    #####查看所有的断点
Num     Type           Disp Enb Address            What
1       catchpoint     keep y                      fork, process 23873 
        catchpoint already hit 1 time
2       breakpoint     keep y   &amp;lt;MULTIPLE&amp;gt;         
        breakpoint already hit 1 time
2.1                         y     0x00000000004007b7 in main at gdb_pthread.c:18 inf 2
2.2                         y     0x00000000004007b7 in main at gdb_pthread.c:18 inf 1
3       breakpoint     keep y   &amp;lt;MULTIPLE&amp;gt;         
        breakpoint already hit 2 times
3.1                         y     0x00000000004008a7 in ParentDo at gdb_pthread.c:50 inf 2      #####子进程23873
3.2                         y     0x00000000004008a7 in ParentDo at gdb_pthread.c:50 inf 1      #####父进程23869
(gdb)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这时使用命令查看当前系统进程的状态：只有子进程23873（由内核init进程接管这个孤儿进程），父进程23869也已经结束了。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[vfhky@typecodes ~]$ pstree -pul
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="pstree -pul查看CentOS系统所有进程信息" src="https://o3cex9zsl.qnssl.com/2016/02/pstree_pul_process_3.png" title="pstree -pul查看CentOS系统所有进程信息" /&gt;  &lt;/p&gt;
&lt;p&gt;再用&lt;code&gt;ps ux&lt;/code&gt;命令查看子进程23873：&lt;/p&gt;
&lt;p&gt;&lt;img alt="ps ux命令查看子进程信息" src="https://o3cex9zsl.qnssl.com/2016/02/ps_ux_child_process.png" title="ps ux命令查看子进程信息" /&gt; &lt;/p&gt;
&lt;h4&gt;4 附录&lt;/h4&gt;
&lt;p&gt;在gdb中，经常用到的恢复程序运行和单步调试的命令有：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;continue        继续运行程序直到下一个断点（类似于VS里的F5）
next            逐过程步进，不会进入子函数（类似VS里的F10）
setp            逐语句步进，会进入子函数（类似VS里的F11）
until           运行至当前语句块结束
finish          运行至函数结束并跳出，并打印函数的返回值（类似VS的Shift+F11）
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Thu, 25 Feb 2016 23:18:00 +0800</pubDate><guid>tag:typecodes.com,2016-02-25:cseries/multilprocessthreadgdb.html</guid><category>gdb</category><category>fork</category><category>进程</category><category>线程</category></item><item><title>同步GitHub Markdown文章到Linux服务器后更新Pelican博客的脚本</title><link>https://typecodes.com/linux/syngithubmarkdownpelican.html</link><description>&lt;p&gt;使用了Pelican后，最多的操作就是编译Markdown文章生成HTML文件，然后发布到Nginx的博客目录下。&lt;/p&gt;
&lt;p&gt;&lt;img alt="我的Pelican博客管理和发布流程" src="https://o3cex9zsl.qnssl.com/2016/01/github_pelican_nginx.png" title="我的Pelican博客管理和发布流程" /&gt;&lt;/p&gt;


&lt;p&gt;如上面的流程图所示，目前自己在CentOS7.1服务器上通过Pelican生成和发布博客的做法如下：&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;在Windows中写好Markdown文章，然后git push到GitHub中的私人仓库中；
在CentOS7.1服务器中git pull到本地仓库；
把Markdown文件复制到Pelican的文章目录(content)生成HTML文件；
用tar命令打包Pelcian在OUTPUT目录中生成的所有HTML文件到一个博客版本备份目录形成一个博客版本；
将这个版本复制到Nginx的博客目录下解压，这样就更新了博客；
同时，也可以发布到GitHub个人主页上。
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h4&gt;1 考虑点&lt;/h4&gt;
&lt;p&gt;如果每次手动执行上面的操作步骤实在是太麻烦了，所以决定使用shell脚本来自动完成。当然除了实现上面的基本功能点之外，脚本还需具备如下4个特点：&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;脚本执行过程打印到日志文件中，方便查看；
脚本中每条重要语句的执行时间都有记录在日志中；
如果没有从GitHub个人仓库中检测到更新的文章，那么直接结束；
能自动判断是否同步发布到GitHub的个人主页中（博主的是vfhky.github.io）。
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h4&gt;2 具体代码&lt;/h4&gt;
&lt;p&gt;代码比较简单，需要注明的是，如果个人没有Github主页的话，可以直接执行命令&lt;code&gt;./github_pelican_nginx.sh&lt;/code&gt;即可，这样就不会执行脚本中的第7个步骤。否则，需要执行命令&lt;code&gt;./github_pelican_nginx.sh "关于本次更新的说明内容"&lt;/code&gt;。&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="c"&gt;# FileName:      github_pelican_nginx.sh&lt;/span&gt;
&lt;span class="c"&gt;# Description:   Synchronize markdown articles with github, convert to html files using Pelican, deliver it to nginx environment.&lt;/span&gt;
&lt;span class="c"&gt;# Simple Usage:  ./github_pelican_nginx.sh &amp;quot;commit_comments&amp;quot;&lt;/span&gt;
&lt;span class="c"&gt;# Crontab Usage: 00 01 * * * /mydata/backups/bak_list/github_pelican_nginx.sh &amp;gt;/dev/null 2&amp;gt;&amp;amp;1&lt;/span&gt;
&lt;span class="c"&gt;# (c) 2016 vfhky https://typecodes.com/linux/githubpelicanpublishshell.html&lt;/span&gt;
&lt;span class="c"&gt;# https://github.com/vfhky/shell-tools/blob/master/synchronize/github_pelican_nginx.sh&lt;/span&gt;


&lt;span class="c"&gt;# Basic command.&lt;/span&gt;
&lt;span class="nv"&gt;FINDCMD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;find&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;MVCMD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;\mv -f&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;CPCMD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;\cp -rf&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;RMCMD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;\rm -rf&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;TARXCMD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;tar -zxf&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;TARZIPCMD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;tar --warning=no-file-changed -zcf&amp;quot;&lt;/span&gt;

&lt;span class="c"&gt;# Pelican compile markdown files to html.&lt;/span&gt;
&lt;span class="nv"&gt;PELICAN_COMPILE_DIR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/mydata/GitBang/pelican
&lt;span class="c"&gt;# Private bang in github for store your markdown files.&lt;/span&gt;
&lt;span class="nv"&gt;GITHUB_PELICAN_DIR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/mydata/GitBang/GitHub/BlogBak
&lt;span class="c"&gt;# Backup dir for your website&amp;#39;s version management.&lt;/span&gt;
&lt;span class="nv"&gt;PELICAN_TAR_DIR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/share/nginx/html/pelican_content_bak
&lt;span class="c"&gt;# Dir of your website in nginx server.&lt;/span&gt;
&lt;span class="nv"&gt;PELICAN_BLOG_DIR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/share/nginx/html/pelican
&lt;span class="c"&gt;# Dir for this shell script to generate logs automatically.&lt;/span&gt;
&lt;span class="nv"&gt;BLOG_PUBLISH_LOG_DIR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/mydata/backups/logs/blogpublish
&lt;span class="c"&gt;# Your personal homepage in github.&lt;/span&gt;
&lt;span class="nv"&gt;GITHUB_PERSONAL_PAGE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/mydata/GitBang/GitHub/vfhky.github.io
&lt;span class="c"&gt;# Articles in 15 minutes are legal.&lt;/span&gt;
&lt;span class="nv"&gt;TIME_GAP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;15

&lt;span class="c"&gt;# Get the newest file name.&lt;/span&gt;
&lt;span class="c"&gt;#Newest_File=&amp;quot;ls -lrt| tail -n 1 | awk &amp;#39;{print $9}&amp;#39;&amp;quot;&lt;/span&gt;

&lt;span class="c"&gt;# Name of this shell script.&lt;/span&gt;
&lt;span class="nv"&gt;PRGNAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;github_pelican_nginx&amp;quot;&lt;/span&gt;

&lt;span class="c"&gt;# Current date format: e.g 20150505_2015.&lt;/span&gt;
&lt;span class="nv"&gt;Current_Date&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;date +%Y%m%d_%H%M&lt;span class="k"&gt;)&lt;/span&gt;

&lt;span class="c"&gt;# Check if current user is root.&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;id -u&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; !&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;0&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Error: You must be root to run this script.&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;exit &lt;/span&gt;1

&lt;span class="c"&gt;# Check parameter.&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;$# &lt;/span&gt;-gt &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Usage:    ./github_pelican_nginx.sh \&amp;quot;commit_comments\&amp;quot;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;exit &lt;/span&gt;1
&lt;span class="k"&gt;fi&lt;/span&gt;

&lt;span class="c"&gt;# Run command functions.&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; ERROR&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; &amp;gt;/dev/null &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;[&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;date +%H:%M:%S:%N&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;][error] &lt;/span&gt;&lt;span class="nv"&gt;$*&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;BLOG_PUBLISH_LOG_DIR&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;/&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;Current_Date&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;.log
    &lt;span class="nb"&gt;exit &lt;/span&gt;1
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;function&lt;/span&gt; NOTICE&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; &amp;gt;/dev/null &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;[&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;date +%H:%M:%S:%N&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;][notice] &lt;/span&gt;&lt;span class="nv"&gt;$*&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;BLOG_PUBLISH_LOG_DIR&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;/&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;Current_Date&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;.log
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;function&lt;/span&gt; RUNCMD&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;[&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;date +%H:%M:%S:%N&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;][notice] &lt;/span&gt;&lt;span class="nv"&gt;$*&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;BLOG_PUBLISH_LOG_DIR&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;/&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;Current_Date&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;.log
    &lt;span class="nb"&gt;eval&lt;/span&gt; &lt;span class="nv"&gt;$@&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;# Git pull command function.&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; Git_Pull&lt;span class="o"&gt;(){&lt;/span&gt;
    RUNCMD &lt;span class="s2"&gt;&amp;quot;git pull origin master &amp;gt;/dev/null&amp;quot;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;# Git commit command function.&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; Git_Commit&lt;span class="o"&gt;(){&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;$# &lt;/span&gt;-ne &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
        ERROR &lt;span class="s2"&gt;&amp;quot;Usage: Git_Commit commit_comments!&amp;quot;&lt;/span&gt;
        &lt;span class="nb"&gt;exit &lt;/span&gt;1&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
        RUNCMD &lt;span class="s2"&gt;&amp;quot;git pull &amp;amp;&amp;amp; git add --all &amp;amp;&amp;amp; git commit -m \&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;\&amp;quot; &amp;amp;&amp;amp; git push origin master&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;# Get the path of markdown articles in TIME_GAP minutes.&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; Get_Files_Path&lt;span class="o"&gt;(){&lt;/span&gt;
    RUNCMD &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;FINDCMD&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; . -mmin -&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;TIME_GAP&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; -type f -name \&amp;quot;*.md\&amp;quot; -print0&amp;quot;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;# Lock down permissions.You should be careful when it comes to your website for the permission of files, but it&amp;#39;s safe using 022.&lt;/span&gt;
&lt;span class="c"&gt;# umask 022&lt;/span&gt;

&lt;span class="c"&gt;# Create the log dir.&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; ! -d &lt;span class="nv"&gt;$BLOG_PUBLISH_LOG_DIR&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
    mkdir -p &lt;span class="nv"&gt;$BLOG_PUBLISH_LOG_DIR&lt;/span&gt;
&lt;span class="k"&gt;fi&lt;/span&gt;


&lt;span class="c"&gt;# Main process begin.&lt;/span&gt;
NOTICE &lt;span class="s2"&gt;&amp;quot;[1]Start pull from GitHub.&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;RC&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;0
RUNCMD &lt;span class="s2"&gt;&amp;quot;cd &lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;GITHUB_PELICAN_DIR&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/md_article &amp;amp;&amp;amp; Git_Pull&amp;quot;&lt;/span&gt;

&lt;span class="nv"&gt;RC&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$?&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;$RC&lt;/span&gt; -gt &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
    ERROR &lt;span class="s2"&gt;&amp;quot;Git pull failed!&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;fi&lt;/span&gt;


NOTICE &lt;span class="s2"&gt;&amp;quot;[2]Start copy the pulled articles to the compile dir of PELICAN.&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;New_Article_Files&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;Get_Files_Path &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;GITHUB_PELICAN_DIR&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;/md_article&lt;span class="k"&gt;)&lt;/span&gt;
&lt;span class="c"&gt;# You should not delete the double quotation marks in case of existing a blank in the file path.&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; New_Article_File in &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;New_Article_Files&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; -z &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;New_Article_File&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
        &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;No articles, nothing to do.&amp;quot;&lt;/span&gt;
        ERROR &lt;span class="s2"&gt;&amp;quot;No articles, nothing to do.&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;fi&lt;/span&gt;
    &lt;span class="nv"&gt;FILE_PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;dirname &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;PELICAN_COMPILE_DIR&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;/content/articles/&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;New_Article_Files&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nv"&gt;2&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;
    RUNCMD &lt;span class="s2"&gt;&amp;quot;mkdir -p &lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;FILE_PATH&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; &amp;amp;&amp;amp; &lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;CPCMD&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; \&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;New_Article_File&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;\&amp;quot; &lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;FILE_PATH&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;done&lt;/span&gt;

&lt;span class="nv"&gt;RC&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$?&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;$RC&lt;/span&gt; -gt &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
    ERROR &lt;span class="s2"&gt;&amp;quot;Copy the pulled articles failed!&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;fi&lt;/span&gt;


NOTICE &lt;span class="s2"&gt;&amp;quot;[3]Start compile in pelican.&amp;quot;&lt;/span&gt;
RUNCMD &lt;span class="s2"&gt;&amp;quot;cd &lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;PELICAN_COMPILE_DIR&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; &amp;amp;&amp;amp; make publish &amp;gt; /dev/null&amp;quot;&lt;/span&gt;

&lt;span class="nv"&gt;RC&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$?&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;$RC&lt;/span&gt; -gt &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
    ERROR &lt;span class="s2"&gt;&amp;quot;Compile in pelican failed!&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;fi&lt;/span&gt;


NOTICE &lt;span class="s2"&gt;&amp;quot;[4]Start generate a tar packgage and move it to the backup dir.&amp;quot;&lt;/span&gt;
&lt;span class="c"&gt;# The command of tar cause the problem that file changed as we read with the value 1, so we should ignore it using OR logic.&lt;/span&gt;
RUNCMD &lt;span class="s2"&gt;&amp;quot;cd &lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;PELICAN_COMPILE_DIR&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/output &amp;amp;&amp;amp; &lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;TARZIPCMD&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;Current_Date&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;.tar.gz . || &lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;MVCMD&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;Current_Date&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;.tar.gz &lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;PELICAN_TAR_DIR&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;

&lt;span class="nv"&gt;RC&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$?&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;$RC&lt;/span&gt; -gt &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
    ERROR &lt;span class="s2"&gt;&amp;quot;Generate a tar packgage failed!&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;fi&lt;/span&gt;


NOTICE &lt;span class="s2"&gt;&amp;quot;[5]Start unpack the target files.&amp;quot;&lt;/span&gt;
RUNCMD &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;CPCMD&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;PELICAN_TAR_DIR&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;Current_Date&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;.tar.gz &lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;PELICAN_BLOG_DIR&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; &amp;amp;&amp;amp; cd &lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;PELICAN_BLOG_DIR&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; &amp;amp;&amp;amp; &lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;TARXCMD&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;Current_Date&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;.tar.gz &amp;amp;&amp;amp; &lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;RMCMD&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;Current_Date&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;.tar.gz&amp;quot;&lt;/span&gt;

&lt;span class="nv"&gt;RC&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$?&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;$RC&lt;/span&gt; -gt &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
    ERROR &lt;span class="s2"&gt;&amp;quot;Unpack the target files failed!&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;fi&lt;/span&gt;

&lt;span class="c"&gt;# if [ $# -eq 1 ]; then&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; -n &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;You&amp;#39;re going to synchronize your weibsite to the homepage on github.com.&amp;quot;&lt;/span&gt;
    NOTICE &lt;span class="s2"&gt;&amp;quot;[6]Start copy the packgage to the local homepage bang cloned from remote in GitHub.&amp;quot;&lt;/span&gt;
    RUNCMD &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;CPCMD&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;PELICAN_TAR_DIR&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;Current_Date&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;.tar.gz &lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;GITHUB_PERSONAL_PAGE&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; &amp;amp;&amp;amp; cd &lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;GITHUB_PERSONAL_PAGE&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; &amp;amp;&amp;amp; &lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;TARXCMD&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;Current_Date&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;.tar.gz &amp;amp;&amp;amp; &lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;RMCMD&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;Current_Date&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;.tar.gz&amp;quot;&lt;/span&gt;

    &lt;span class="nv"&gt;RC&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$?&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;$RC&lt;/span&gt; -gt &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
        ERROR &lt;span class="s2"&gt;&amp;quot;Copy the packgage to the local homepage bang failed!&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;fi&lt;/span&gt;

    NOTICE &lt;span class="s2"&gt;&amp;quot;[7]Start synchronize website to my homepage on GitHub.&amp;quot;&lt;/span&gt;
    &lt;span class="c"&gt;# read -p &amp;quot;Please input your comments on this commitment: &amp;quot; COMMIT_COMMENTS&lt;/span&gt;
    &lt;span class="c"&gt;# while [[ -z &amp;quot;${COMMIT_COMMENTS}&amp;quot; ]]&lt;/span&gt;
    &lt;span class="c"&gt;# do&lt;/span&gt;
    &lt;span class="c"&gt;#   read -p &amp;quot;Comments can not be empty.Please input again: &amp;quot; COMMIT_COMMENTS&lt;/span&gt;
    &lt;span class="c"&gt;# done&lt;/span&gt;
    &lt;span class="c"&gt;# RUNCMD &amp;quot;Git_Commit \&amp;quot;${COMMIT_COMMENTS}\&amp;quot;&amp;quot;&lt;/span&gt;
    RUNCMD &lt;span class="s2"&gt;&amp;quot;Git_Commit \&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;\&amp;quot;&amp;quot;&lt;/span&gt;

    &lt;span class="nv"&gt;RC&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$?&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;$RC&lt;/span&gt; -gt &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
        ERROR &lt;span class="s2"&gt;&amp;quot;Synchronize website to GitHub failed!&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Not synchronize your weibsite to the homepage on github.com.&amp;quot;&lt;/span&gt;
    NOTICE &lt;span class="s2"&gt;&amp;quot;[6]Not synchronize your weibsite to the homepage on github.com.&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;fi&lt;/span&gt;


NOTICE &lt;span class="s2"&gt;&amp;quot;------END------&amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;exit &lt;/span&gt;0
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h4&gt;3 脚本执行结果&lt;/h4&gt;
&lt;p&gt;&lt;img alt="github_pelican_nginx脚本执行结果" src="https://o3cex9zsl.qnssl.com/2016/01/pelican_shell_excute_result.png" title="github_pelican_nginx脚本执行结果" /&gt;&lt;/p&gt;
&lt;h4&gt;4 脚本管理&lt;/h4&gt;
&lt;p&gt;目前已经把这个脚本放在Github了，地址是&lt;a href="https://github.com/vfhky/shell-tools" title="点击查看"&gt;https://github.com/vfhky/shell-tools&lt;/a&gt;，以后脚本的更新或者更多好用的脚本也都会加入到这个工程中。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Sun, 10 Jan 2016 22:22:00 +0800</pubDate><guid>tag:typecodes.com,2016-01-10:linux/syngithubmarkdownpelican.html</guid><category>pelican</category><category>github</category><category>markdown</category></item><item><title>Linux c语言连接MySQL数据库实例</title><link>https://typecodes.com/cseries/linuxgccgconnectmysql.html</link><description>&lt;p&gt;工作上自己在Linux C/C++开发时，用的都是Oracle数据库，毕竟企业级应用追求稳定性好、安全可靠。业余时间做了一些WEB开发，接触到MySQL数据库比较多，也比较喜欢开源的MySQL。之前都是用PHP连接MySQL数据库，这里自己用C语言连接MySQL，执行一些简单的连接、查询操作、异常处理等操作。&lt;/p&gt;


&lt;h4&gt;1 测试程序&lt;/h4&gt;
&lt;p&gt;代码比较简单，先把MySQL数据库安装后得到的头文件&lt;code&gt;mysql.h&lt;/code&gt;包含进来，然后编译时需要用到MySQL对外提供的API接口。查阅了下&lt;a href="http://dev.mysql.com/doc/refman/5.6/en/c-api.html"&gt;MySQL官方文档&lt;/a&gt;，MySQL对C语言提供了一个静态库libmysqlclient.a和一个动态库libmysqlclient.so接口文件，本文选择使用动态库libmysqlclient.so。&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cm"&gt;/** &lt;/span&gt;
&lt;span class="cm"&gt; * @FileName    linux_c_mysql.c&lt;/span&gt;
&lt;span class="cm"&gt; * @Describe    A simple example for operating mysql using c programming in linux system.&lt;/span&gt;
&lt;span class="cm"&gt; * @Author      vfhky 2015.12.29 15:40 https://typecodes.com/cseries/linuxconnectmysql.html&lt;/span&gt;
&lt;span class="cm"&gt; * @Compile     gcc -I/usr/local/mysql/include  -L/usr/local/mysql/lib -lmysqlclient  linux_c_mysql.c -o linux_c_mysql&lt;/span&gt;
&lt;span class="cm"&gt; * @Reference   http://dev.mysql.com/doc/refman/5.7/en/c-api-function-overview.html&lt;/span&gt;
&lt;span class="cm"&gt; */&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;stdlib.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;string.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;mysql.h&amp;gt;&lt;/span&gt;


&lt;span class="c1"&gt;//MySQL connection.&lt;/span&gt;
&lt;span class="n"&gt;MYSQL&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;pMysqlConn&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;//result set.&lt;/span&gt;
&lt;span class="n"&gt;MYSQL_RES&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;pMysqlRes&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;//an instance of a row from the result.&lt;/span&gt;
&lt;span class="n"&gt;MYSQL_ROW&lt;/span&gt; &lt;span class="n"&gt;MysqlRow&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="cp"&gt;#define MAX_BUF_SIZE 1024&lt;/span&gt;

&lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;pHostName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;localhost&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;    &lt;span class="c1"&gt;//or set the remote ip address.&lt;/span&gt;
&lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;pUserName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;root&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;pPassword&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;password&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;pDbName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;typecodes&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;      &lt;span class="c1"&gt;//database name of my typecho blog.&lt;/span&gt;
&lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="kt"&gt;unsigned&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;iDbPort&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3306&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="cm"&gt;/* print the last error message. */&lt;/span&gt;
&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;finish_with_error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;msg&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Error message[%s]: [%s].&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mysql_error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pMysqlConn&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
        &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Error message[%s].&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mysql_error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pMysqlConn&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;mysql_close&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pMysqlConn&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt;     * When errors such as MySQL server has gone away hapended, the program should be end immeidately.&lt;/span&gt;
&lt;span class="cm"&gt;     * Otherwise, we should encounter the error below.&lt;/span&gt;
&lt;span class="cm"&gt;     * *** Error in `./linux_c_mysql&amp;#39;: double free or corruption (!prev): 0x0000000001223560 ***&lt;/span&gt;
&lt;span class="cm"&gt;     */&lt;/span&gt;
    &lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt; * mysql_query() cannot be used for statements that contain binary data; you must use mysql_real_query() instead. &lt;/span&gt;
&lt;span class="cm"&gt; * Binary data may contain the “\0” character, which mysql_query() interprets as the end of the statement string.&lt;/span&gt;
&lt;span class="cm"&gt; * In addition, mysql_real_query() is faster than mysql_query() because it does not call strlen() on the statement string. &lt;/span&gt;
&lt;span class="cm"&gt; */&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;executesql&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;sql&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;mysql_real_query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;pMysqlConn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sql&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;strlen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sql&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="cm"&gt;/* init the mysql connection. */&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;init_mysql&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;pMysqlConn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mysql_init&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;pMysqlConn&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; 
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;mysql_real_connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;pMysqlConn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pHostName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pUserName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pPassword&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pDbName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;iDbPort&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="c1"&gt;//set the language for the results excuted.&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;executesql&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;set names utf8&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;argc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt; &lt;span class="n"&gt;argv&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;A example for connecting mysql using c program in linux.&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;init_mysql&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;finish_with_error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;cSqlData&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;MAX_BUF_SIZE&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;

    &lt;span class="n"&gt;memcpy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;cSqlData&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;SELECT * FROM typecodes_users&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;strlen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;SELECT * FROM vfhkytpvfhky_users&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;executesql&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;cSqlData&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;finish_with_error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="c1"&gt;//pMysqlRes = mysql_use_result(pMysqlConn);&lt;/span&gt;
    &lt;span class="n"&gt;pMysqlRes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mysql_store_result&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pMysqlConn&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;iNum_rows&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mysql_num_rows&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pMysqlRes&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;iNum_fields&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mysql_num_fields&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pMysqlRes&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Table have [%d] records containing [%d] fields in each one.&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;iNum_rows&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;iNum_fields&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;+------------------------------------------------+&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;MysqlRow&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mysql_fetch_row&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pMysqlRes&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;iNum_fields&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;| %s&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;MysqlRow&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="n"&gt;MysqlRow&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;NULL&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;strlen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;MysqlRow&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;21&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;|&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;+------------------------------------------------+&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;mysql_free_result&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pMysqlRes&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;mysql_close&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pMysqlConn&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h4&gt;2 gcc编译方法&lt;/h4&gt;
&lt;p&gt;由于之前在&lt;a href="https://typecodes.com/web/centos7compilemysql.html" title="《2015博客升级记(四)：CentOS 7.1编译安装MySQL5.7.7rc》"&gt;搭建MySQL服务&lt;/a&gt;的时候，已经把MySQL的动态库路径通过ldconfig命令添加到了Linux系统动态库搜索路径当中了，所以这里直接生成可执行文件就行了。当然，还可以像&lt;a href="https://typecodes.com/cseries/gccgensharedlib.html" title="《Linux gcc编译生成静态库及使用方法》"&gt;上一篇文章&lt;/a&gt;中的其它3种操作方法，把MySQL动态库mysqlclient.so链接进来最终生成可执行文件。&lt;/p&gt;
&lt;p&gt;用下面这条命令编译即可，其中-I参数表示MySQL数据库头文件路径，-L参数表示MySQL数据库的动态库路径。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@typecodes ~]# gcc -I/usr/local/mysql/include  -L/usr/local/mysql/lib -lmysqlclient  linux_c_mysql.c -o linux_c_mysql
[root@typecodes ~]# ldd linux_c_mysql
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="ldd命令查看可执行文件所依赖的动态库" src="https://o3cex9zsl.qnssl.com/2016/01/gcc_compile_conncet_mysql.png" title="ldd命令查看可执行文件所依赖的动态库" /&gt;&lt;/p&gt;
&lt;h4&gt;3 执行结果&lt;/h4&gt;
&lt;p&gt;下图是程序执行获取的之前Typecho博客数据库typecodes中的用户表typecodes_users中的数据：&lt;/p&gt;
&lt;p&gt;&lt;img alt="ldd命令查看可执行文件所依赖的动态库" src="https://o3cex9zsl.qnssl.com/2016/01/excute_connect_mysql.png" title="ldd命令查看可执行文件所依赖的动态库" /&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Thu, 07 Jan 2016 14:42:00 +0800</pubDate><guid>tag:typecodes.com,2016-01-07:cseries/linuxgccgconnectmysql.html</guid><category>gcc</category><category>mysql</category></item><item><title>Linux gcc编译生成静态库及使用方法</title><link>https://typecodes.com/cseries/gccgensharedlib.html</link><description>&lt;p&gt;这篇文章主要通过实例演示在Linux下如何使用gcc编译生成动态库文件以及其它程序如何使用该动态库。&lt;/p&gt;


&lt;h4&gt;1 要用到的3个测试程序&lt;/h4&gt;
&lt;p&gt;1、头文件hello.h：&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;#ifndef HELLO_H&lt;/span&gt;
&lt;span class="cp"&gt;#define HELLO_H&lt;/span&gt;
  &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;hello&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="cp"&gt;#endif&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;2、hello.c程序：&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6
7
8&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;
&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;hello&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Welcome to %s.&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;libmyhello.so.1.0.1&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="c1"&gt;//printf( &amp;quot;libmyhello.so.1.0.2\n&amp;quot; );&lt;/span&gt;
    &lt;span class="c1"&gt;//printf( &amp;quot;libmyhello.so.1.0.3\n&amp;quot; );&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;3、主程序main.c：&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;#include &amp;quot;hello.h&amp;quot;&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;argc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;hello&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;typecodes.com&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h4&gt;2 生成静态库文件&lt;/h4&gt;
&lt;p&gt;使用如下两个命令即可把.o目标文件聚合成.a静态库文件：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@typecodes howto_gen_static_lib]# ls
hello.c  hello.h  main.c

####生成目标文件 hello.o
[root@typecodes howto_gen_static_lib]# gcc -c hello.c
[root@typecodes howto_gen_static_lib]# ls
hello.c  hello.h  hello.o  main.c

#####生成静态库文件 libmyhello.a
[root@typecodes howto_gen_static_lib]# ar rcs libmyhello.a hello.o
[root@typecodes howto_gen_static_lib]# ls
hello.c  hello.h  hello.o  libmyhello.a  main.c
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;那么如何使用生成的静态库文件呢？这里以main.c中调用静态库文件并生成最终的可执行文件hello为例：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@typecodes howto_gen_static_lib]# gcc -o hello main.c libmyhello.a
####或者类似于动态共享库
[root@typecodes howto_gen_static_lib]# gcc -o hello main.c -L . -lmyhello
[root@typecodes howto_gen_static_lib]# gcc -o hello main.c -static -L. -lmyhello
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;注意：如果出现下面这个错误，那么是由于程序链接需要静态库，系统没有安装静态库导致报错：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@typecodes howto_gen_static_lib]# gcc -o hello main.c -static -L. -lmyhello
/usr/bin/ld: cannot find -lc
collect2: error: ld returned 1 exit status
[root@typecodes ~]# yum info glibc-static
Loaded plugins: axelget, fastestmirror, langpacks
No metadata available for base
No metadata available for epel
No metadata available for extras
No metadata available for updates
Loading mirror speeds from cached hostfile
 * base: mirrors.aliyun.com
 * epel: mirrors.yun-idc.com
 * extras: mirrors.aliyun.com
 * updates: mirrors.aliyun.com
Available Packages
Name        : glibc-static
Arch        : i686
Version     : 2.17
Release     : 106.el7_2.1
Size        : 1.2 M
Repo        : updates/7/x86_64
Summary     : C library static libraries for -static linking.
URL         : http://www.gnu.org/software/glibc/
License     : LGPLv2+ and LGPLv2+ with exceptions and GPLv2+
Description : The glibc-static package contains the C library static libraries
            : for -static linking.  You don&amp;#39;t need these, unless you link statically,
            : which is highly discouraged.

Name        : glibc-static
Arch        : x86_64
Version     : 2.17
Release     : 106.el7_2.1
Size        : 1.5 M
Repo        : updates/7/x86_64
Summary     : C library static libraries for -static linking.
URL         : http://www.gnu.org/software/glibc/
License     : LGPLv2+ and LGPLv2+ with exceptions and GPLv2+
Description : The glibc-static package contains the C library static libraries
            : for -static linking.  You don&amp;#39;t need these, unless you link statically,
            : which is highly discouraged.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;解决方法：使用如下命令，安装glibc-static程序即可。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@typecodes howto_gen_static_lib]# yum -y install glibc-static
[root@typecodes howto_gen_static_lib]# ls
hello  hello.c  hello.h  hello.o  libmyhello.a  main.c

#####运行可执行文件即可
[root@typecodes howto_gen_static_lib]# ./hello 
Hello everyone!
[root@typecodes howto_gen_static_lib]#
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;3 生成动态库&lt;/h4&gt;
&lt;p&gt;可以如下面3.1小节所示通过gcc直接生成动态库文件，也可以像3.2小节中那样依次生成realname、soname、linkname库文件。不经常更新动态库版本的话，一般会采用3.1小节中的做法；版本更新较频繁的动态库，诸如MySQL的一些动态库就是采用的2.2小节中的做法。&lt;/p&gt;
&lt;h5&gt;3.1 直接编译生成symbolic link动态库文件&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;##### 生成hello.o目标文件
[root@typecodes ~]# gcc -c -fPIC hello.c
##### 生成动态库文件libmyhello.so
[root@typecodes ~]# gcc -shared -fPIC -o libmyhello.so hello.o
##### main.c调用动态库文件并生成可执行文件hello
[root@typecodes ~]# gcc -o hello main.c -L. -lmyhello
##### 如果直接执行程序则会报错
[root@typecodes ~]# ./hello 
./hello: error while loading shared libraries: libmyhello.so: cannot open shared object file: No such file or directory
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;如下图所示，可执行文件hello找不到链接的动态库libmyhello.so而报错：&lt;/p&gt;
&lt;p&gt;&lt;img alt="error while loading shared libraries" src="https://o3cex9zsl.qnssl.com/2016/01/errorloadingsharedlib.png" title="error while loading shared libraries" /&gt;&lt;/p&gt;
&lt;p&gt;原因分析：使用&lt;code&gt;ldd hello&lt;/code&gt;命令查看可执行文件hello依赖的动态库libmyhello.so，结果是not found。&lt;/p&gt;
&lt;p&gt;&lt;img alt="ldd命令查看可执行文件所依赖的动态库" src="https://o3cex9zsl.qnssl.com/2016/01/lddlibnotfound.png" title="ldd命令查看可执行文件所依赖的动态库" /&gt;&lt;/p&gt;
&lt;p&gt;解决方法：使用&lt;code&gt;root&lt;/code&gt;用户把自己生成的动态共享库路径添加系统动态库中即可。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;##### ldconfig更新配置文件目录下的所有动态链接库为Linux系统所共享
[root@typecodes ~]# echo &amp;quot;/root/&amp;quot;&amp;gt;/etc/ld.so.conf.d/test.conf
[root@typecodes ~]# ldconfig
##### 运行可执行文件
[root@typecodes ~]# ./hello
Welcome to typecodes.com.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这时使用&lt;code&gt;ldconfig -v&lt;/code&gt;命令查看系统动态库的搜索路径，可以看到libmyhello.so.1动态库所在的路径为绝对路径&lt;code&gt;/root/&lt;/code&gt;：&lt;/p&gt;
&lt;p&gt;&lt;img alt="ldconfig命令查看系统动态库路径" src="https://o3cex9zsl.qnssl.com/2016/01/ldconfigviewlibrary.png" title="ldconfig命令查看系统动态库路径" /&gt;&lt;/p&gt;
&lt;h5&gt;3.2 先生成real name动态库文件，然后创建soname软连接，最后创建link name软链接&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;##### 生成hello.o目标文件
[root@typecodes ~]# gcc -c -fPIC hello.c
##### 生成共享库：对应real name是libmyhello.so.1.0.1, 对应soname是libmyhello.so.1
[root@typecodes ~]# gcc -g -shared -Wl,-soname,libmyhello.so.1 -o libmyhello.so.1.0.1 hello.o
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="gcc通过-Wl,-soname参数生成动态库" src="https://o3cex9zsl.qnssl.com/2016/01/gccsharedWlsoname.png" title="gcc通过-Wl,-soname参数生成动态库" /&gt;&lt;/p&gt;
&lt;p&gt;如下图所示，使用&lt;code&gt;readelf -d libmyhello.so.1.0.1&lt;/code&gt;命令查看动态库libmyhello.so.1.0.1的信息，可以看到对应的soname为libmyhello.so.1：&lt;/p&gt;
&lt;p&gt;&lt;img alt="readelf查看动态库信息" src="https://o3cex9zsl.qnssl.com/2016/01/readelfdynamiclib.png" title="readelf查看动态库信息" /&gt;&lt;/p&gt;
&lt;p&gt;如下图所示，使用&lt;code&gt;ldconfig -vn .&lt;/code&gt;命令在当前目录自动生成一个软链接：将soname（libmyhello.so.1）链接到real name（libmyhello.so.1.0.1）。&lt;/p&gt;
&lt;p&gt;&lt;img alt="ldconfig命令生成soname文件软链接" src="https://o3cex9zsl.qnssl.com/2016/01/ldconfigvngensoftlink.png" title="ldconfig命令生成soname文件软链接" /&gt;&lt;/p&gt;
&lt;p&gt;如下图所示，使用&lt;code&gt;ln -sf libmyhello.so.1 libmyhello.so&lt;/code&gt;命令创建链接到soname的共享库文件名(Link Name)：libmyhello.so。&lt;/p&gt;
&lt;p&gt;&lt;img alt="创建链接到real name的Link Name库文件" src="https://o3cex9zsl.qnssl.com/2016/01/lnsfgensoftliblink.png" title="创建链接到real name的Link Name库文件" /&gt;&lt;/p&gt;
&lt;p&gt;这里如果和前面一样，直接链接创建的动态库文件libmyhello.so生成可执行文件hello，然后直至执行hello，那么也会提示找不到链接的动态库libmyhello.so：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@typecodes ~]# gcc -o hello main.c -L. -lmyhello
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;原因也是一样的，可执行文件hello找不到链接库：&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;[root@typecodes ~]# ldd hello
        linux-vdso.so.1 =&amp;gt;  (0x00007ffd7e7f7000)
        libmyhello.so.1 =&amp;gt; not found
        libc.so.6 =&amp;gt; /lib64/libc.so.6 (0x00007f641cb7d000)
        /lib64/ld-linux-x86-64.so.2 (0x00007f641cf53000)
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;3.1小节中的方法需要root用户权限，对于非root用户还可以有另一种等效方法：如前文&lt;a href="https://typecodes.com/cseries/gcclderrlibrarypath.html" title="查看原文"&gt;《Linux gcc链接动态库出错：LIBRARY_PATH和LD_LIBRARY_PATH的区别》&lt;/a&gt;所述，只要在当前Linux系统中配置&lt;code&gt;LD_LIBRARY_PATH&lt;/code&gt;变量，就可以搜索到依赖的动态库libmyhello.so。&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;[root@typecodes ~]# gcc -o hello main.c -L. -lmyhello
##### 把当前动态库路径添加到Linux环境变量LD_LIBRARY_PATH中
[root@typecodes ~]# export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/root
[root@typecodes ~]# echo $LD_LIBRARY_PATH
/root
##### 执行程序
[root@typecodes ~]# ./hello
Welcome to typecodes.com.
libmyhello.so.1.0
##### ldd查看可执行文件依赖的动态库
[root@typecodes ~]# ldd hello
        linux-vdso.so.1 =&amp;gt;  (0x00007fffccf0d000)
        libmyhello.so =&amp;gt; /root/libmyhello.so (0x00007f6b58770000)
        libc.so.6 =&amp;gt; /lib64/libc.so.6 (0x00007f6b5839b000)
        /lib64/ld-linux-x86-64.so.2 (0x00007f6b58973000)
[root@typecodes ~]#
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;&lt;img alt="设置LD_LIBRARY_PATH变量后，使用readelf查看动态库信息" src="https://o3cex9zsl.qnssl.com/2016/01/export_ld_library_path.png" title="设置LD_LIBRARY_PATH变量后，使用readelf查看动态库信息" /&gt;&lt;/p&gt;
&lt;p&gt;当然还有方法三：gcc链接动态库生成可执行文件时，加入rpath参数。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@typecodes ~]# gcc -o hello main.c -Wl,-rpath=./ -L. -lmyhello
[root@typecodes ~]# ./hello
Welcome to typecodes.com.
libmyhello.so.1.0.1
[root@typecodes ~]#
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="gcc链接动态库生成可执行文件时，加入rpath参数" src="https://o3cex9zsl.qnssl.com/2016/01/gccwlrpath.png" title="gcc链接动态库生成可执行文件时，加入rpath参数" /&gt;&lt;/p&gt;
&lt;p&gt;方法四：最简单的操作就是直接将生成的动态库文件拷贝到Linux系统动态库搜索目录下。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;/lib、/lib64：                        系统必备共享库
/usr/lib、/usr/lib64：                标准共享库和静态库
/usr/local/lib：                 本地/第三方函数库
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Tue, 05 Jan 2016 22:48:00 +0800</pubDate><guid>tag:typecodes.com,2016-01-05:cseries/gccgensharedlib.html</guid><category>gcc</category><category>静态库</category><category>soname</category><category>real name</category><category>link name</category><category>rpath</category><category>ldconfig</category></item><item><title>Linux下Nginx、MySQL和PHP等应用的日志切割脚本</title><link>https://typecodes.com/linux/applogsbackup.html</link><description>&lt;p&gt;在Linux中如果应用程序会产生日志，那么就需要考虑日志切割，例如按照固定的大小切割、按照日期进行切割等等。同样，在编译&lt;a href="https://typecodes.com/web/centos7compilenginx.html" title="《2015博客升级记(三)：CentOS 7.1编译安装Nginx1.9.0》"&gt;Nginx1.9.0&lt;/a&gt;、&lt;a href="https://typecodes.com/web/centos7compilemysql.html" title="《2015博客升级记(四)：CentOS 7.1编译安装MySQL5.7.7rc》"&gt;MySQL5.7.7rc&lt;/a&gt;和&lt;a href="https://typecodes.com/web/centos7compilephp7.html" title="《2015博客升级记(五)：CentOS 7.1编译安装PHP7》"&gt;PHP7&lt;/a&gt;后，这三个应用服务都会产生日志，尤其是Nginx进程根据配置文件ngnix.conf记录每条访问记录到access.log中。如果所有的日志都打印到同一个文件中的话，那么时间长了的话就会影响效率。&lt;/p&gt;
&lt;p&gt;&lt;img alt="Nginx日志切割实例" src="https://o3cex9zsl.qnssl.com/2015/12/nginx_logs_backup.png" title="Nginx日志切割实例" /&gt;&lt;/p&gt;


&lt;p&gt;这篇文章就是针对Linux下应用使用shell脚本进行分割的描述，该脚本特点是：按天切割、自定义切割出来的日志保留的天数以及记录脚本执行过程和耗时。在使用时需要配置好对应应用的日志目录（&lt;code&gt;Source_Log_Dir&lt;/code&gt;变量）、日志备份目录（&lt;code&gt;Backup_Dirs&lt;/code&gt;变量），然后使用Crontab定时任务执行该脚本即可。&lt;/p&gt;
&lt;p&gt;&lt;img alt="Nginx日志切割时shell脚本执行过程" src="https://o3cex9zsl.qnssl.com/2015/12/nginx_logs_backup_process.png" title="Nginx日志切割时shell脚本执行过程" /&gt;&lt;/p&gt;
&lt;p&gt;下面是脚本nginx_log_backup.sh的具体内容，这里备份的是Nginx日志，其它诸如MySQL、php等Linux应用只要修改脚本对应的日志路径即可。目前该脚本已经同步到博客在GitHub上创建的关于LNMP配置的工程上了，地址是：&lt;a href="https://github.com/vfhky/mylnmp" title="点击查看"&gt;https://github.com/vfhky/mylnmp&lt;/a&gt;。&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="c"&gt;# Backup Log Files for linux applications such as nginx, php, mysql and so on.&lt;/span&gt;
&lt;span class="c"&gt;# Crontab Usage: 00 01 * * * /mydata/backups/bak_list/nginx_log_backup.sh &amp;gt;/dev/null 2&amp;gt;&amp;amp;1&lt;/span&gt;
&lt;span class="c"&gt;# (c) 2015 vfhky https://typecodes.com/linux/applogsbackup.html&lt;/span&gt;
&lt;span class="c"&gt;# https://github.com/vfhky/mylnmp/blob/master/nginx_log_backup.sh&lt;/span&gt;

&lt;span class="c"&gt;# Basic command.&lt;/span&gt;
&lt;span class="nv"&gt;TARCMD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;tar -zcf&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;MVCMD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;\mv -f&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;FINDCMD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;find&amp;quot;&lt;/span&gt;

&lt;span class="c"&gt;# Number of days to keep.&lt;/span&gt;
&lt;span class="nv"&gt;NUMDAYS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;40

&lt;span class="c"&gt;# Path of the logs you want backup.You can set it as the nginx log path or the mysql log path and so on.&lt;/span&gt;
&lt;span class="nv"&gt;Source_Log_Dir&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/var/log/nginx
&lt;span class="c"&gt;# Set the file types you want backup accoding to the suffix of log files.&lt;/span&gt;
&lt;span class="nv"&gt;Source_Log_Files&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;ls &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;Source_Log_Dir&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;/*.log&lt;span class="sb"&gt;`&lt;/span&gt;
&lt;span class="c"&gt;# Set the backup path.&lt;/span&gt;
&lt;span class="nv"&gt;Backup_Dirs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;Source_Log_Dir&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
&lt;span class="c"&gt;# Previous date format: e.g 20150505&lt;/span&gt;
&lt;span class="nv"&gt;Previous_Date&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;date -d &lt;span class="s2"&gt;&amp;quot;-1 days&amp;quot;&lt;/span&gt; +%Y%m%d&lt;span class="sb"&gt;`&lt;/span&gt;
&lt;span class="c"&gt;# The target backup dir.&lt;/span&gt;
&lt;span class="nv"&gt;Backup_Dir&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;Backup_Dirs&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;/&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;Previous_Date&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
&lt;span class="c"&gt;# Path of the log generated by this shell script automatically.&lt;/span&gt;
&lt;span class="nv"&gt;Shell_Log&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;Backup_Dir&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;/process.log


&lt;span class="c"&gt;# Run command functions.&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; ERROR&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="nb"&gt;echo&lt;/span&gt; &amp;gt;/dev/null &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;[`date +%H:%M:%S:%N`][error] &lt;/span&gt;&lt;span class="nv"&gt;$@&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;Shell_Log&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
  &lt;span class="nb"&gt;exit &lt;/span&gt;1
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;function&lt;/span&gt; NOTICE&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="nb"&gt;echo&lt;/span&gt; &amp;gt;/dev/null &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;[`date +%H:%M:%S:%N`][notice] &lt;/span&gt;&lt;span class="nv"&gt;$@&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;Shell_Log&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;function&lt;/span&gt; RUNCMD&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$@&lt;/span&gt; &amp;gt;&amp;gt; &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;Shell_Log&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
  &lt;span class="nb"&gt;eval&lt;/span&gt; &lt;span class="nv"&gt;$@&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;


&lt;span class="c"&gt;# Check the days user input.You can delete the codes below generally.&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt; ! &lt;span class="nv"&gt;$NUMDAYS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;~ ^&lt;span class="o"&gt;[&lt;/span&gt;0-9&lt;span class="o"&gt;]&lt;/span&gt;+&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="o"&gt;]]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
  ERROR &lt;span class="s2"&gt;&amp;quot;Invalid number of days[&lt;/span&gt;&lt;span class="nv"&gt;$NUMDAYS&lt;/span&gt;&lt;span class="s2"&gt;]!&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$NUMDAYS&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; -eq &lt;span class="s2"&gt;&amp;quot;0&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
  ERROR &lt;span class="s2"&gt;&amp;quot;Number of days must be greater than zero!&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;fi&lt;/span&gt;


&lt;span class="c"&gt;# Lock down permissions.&lt;/span&gt;
&lt;span class="nb"&gt;umask &lt;/span&gt;077

&lt;span class="c"&gt;# Create the backup log dir and a shell log.&lt;/span&gt;
mkdir -p &lt;span class="nv"&gt;$Backup_Dir&lt;/span&gt;
touch &lt;span class="nv"&gt;$Shell_Log&lt;/span&gt;


NOTICE &lt;span class="s2"&gt;&amp;quot;[1]Start backup.&amp;quot;&lt;/span&gt;


NOTICE &lt;span class="s2"&gt;&amp;quot;[2]Start compress the log files using the tar command.&amp;quot;&lt;/span&gt;
RUNCMD &lt;span class="s2"&gt;&amp;quot;cd &lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;Source_Log_Dir&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; &amp;amp;&amp;amp; &lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;TARCMD&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;Previous_Date&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;.tar.gz *.log&amp;quot;&lt;/span&gt;

&lt;span class="nv"&gt;RC&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$?&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;$RC&lt;/span&gt; -gt &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
  ERROR &lt;span class="s2"&gt;&amp;quot;Creat the backup package failed!&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;fi&lt;/span&gt;


NOTICE &lt;span class="s2"&gt;&amp;quot;[3]Start move the compress file to backup dir.&amp;quot;&lt;/span&gt;
RUNCMD &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;MVCMD&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;Previous_Date&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;.tar.gz &lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;Backup_Dir&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/&amp;quot;&lt;/span&gt;

&lt;span class="nv"&gt;RC&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$?&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;$RC&lt;/span&gt; -gt &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
  ERROR &lt;span class="s2"&gt;&amp;quot;Move the compress file failed!&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;fi&lt;/span&gt;


NOTICE &lt;span class="s2"&gt;&amp;quot;[4]Start empty every log file.&amp;quot;&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; file in &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;Source_Log_Files&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;do&lt;/span&gt;
    RUNCMD &lt;span class="s2"&gt;&amp;quot;&amp;gt;&lt;/span&gt;&lt;span class="nv"&gt;$file&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
    &lt;span class="nv"&gt;RC&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$?&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;$RC&lt;/span&gt; -gt &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
      ERROR &lt;span class="s2"&gt;&amp;quot;Empty every log file failed!&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;span class="k"&gt;done&lt;/span&gt;


NOTICE &lt;span class="s2"&gt;&amp;quot;[5]Removing older folders than &lt;/span&gt;&lt;span class="nv"&gt;$NUMDAYS&lt;/span&gt;&lt;span class="s2"&gt; days.&amp;quot;&lt;/span&gt;
&lt;span class="c"&gt;# ls ${Source_Log_Dir} | grep &amp;#39;^[0-9]\{8\}$&amp;#39; | xargs rm -rf&lt;/span&gt;
RUNCMD &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$FINDCMD&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;Source_Log_Dir&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; -type d -name [0-9]*\[0-9] -mtime +&lt;/span&gt;&lt;span class="nv"&gt;$NUMDAYS&lt;/span&gt;&lt;span class="s2"&gt; | xargs rm -rf&amp;quot;&lt;/span&gt;


NOTICE &lt;span class="s2"&gt;&amp;quot;[6]End backup.&amp;quot;&lt;/span&gt;

&lt;span class="nb"&gt;exit &lt;/span&gt;0
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Fri, 18 Dec 2015 21:01:00 +0800</pubDate><guid>tag:typecodes.com,2015-12-18:linux/applogsbackup.html</guid><category>博客成长录</category><category>shell</category><category>nginx</category><category>mysql</category><category>php</category></item><item><title>成功将博客从Typecho迁移到Pelican</title><link>https://typecodes.com/mix/sucesstypechotopelican.html</link><description>&lt;p&gt;根据&lt;a href="https://typecodes.com/mix/begintypechotopelican.html" title="《准备将博客从Typecho迁移到Pelican》"&gt;前文&lt;/a&gt;的上线步骤，目前已经成功的将博客从Typecho迁移到了Pelican。中间上线发布的时候，遇到了好几个问题，不过由于上线步骤中有失败的处理方案（保留Typecho程序），所以在Typecho到Pelican之间来来回回切换了好几次。&lt;/p&gt;


&lt;h5&gt;1 遇到的问题&lt;/h5&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;主题部分代码在测试的时候存在写死的情况，尤其是网站地址；
测试用的代码没被正常替换成正式发布的版本。
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h5&gt;2 上线心得&lt;/h5&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;切换前做好备份工作，并且有失败的处理方案，尽量避免对访问造成影响；
对Nginx来说，从Typecho切换到Pelican，只需要去掉PHP的配置部分就行了。
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;最后，大家在访问博客的时候出现任何问题，请告知博主，谢谢~&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Thu, 10 Dec 2015 22:06:00 +0800</pubDate><guid>tag:typecodes.com,2015-12-10:mix/sucesstypechotopelican.html</guid><category>博客成长录</category><category>typecho</category><category>pelican</category></item><item><title>准备将博客从Typecho迁移到Pelican</title><link>https://typecodes.com/mix/begintypechotopelican.html</link><description>&lt;p&gt;8月份的时候，终于从庞大的WordPress转到了轻量级的&lt;a href="https://typecodes.com/mix/eventualwptotypecho.html" title="《终于从WordPress转向Typecho了》"&gt;博客程序Typecho&lt;/a&gt;。简洁的设计和比较出色的Markdown支持，整个Typecho体验还是挺不错的。到10月份的时候，自己了解了一些静态博客程序，包括nodejs的Ghost、Hexo等，ruby写的jekyll以及Python写的&lt;a href="http://docs.getpelican.com/en/3.6.3/" title="Pelican最新3.6.3官方文档"&gt;Pelican&lt;/a&gt;等。&lt;/p&gt;
&lt;p&gt;由于当时正好接触到了大蟒蛇，而且对js不熟（ruby都没用过），所以就在本地尝试了一下Pelican。之间折腾了一个从Octopress移植过来的主题Pelican-Octopress未果，后面忙着就没怎么弄了。&lt;/p&gt;
&lt;p&gt;前段时间辞职后，闲着就打算把博客“简洁到底”：抛弃MySQL数据库和PHP执行解释，完全采用Python生成静态HTML文件。这样以后就只需要在本地通过Markdown写好文章，然后通过pelican生成html文件即可。&lt;/p&gt;
&lt;p&gt;&lt;img alt="准备将博客从Typecho迁移到Pelican" src="https://o3cex9zsl.qnssl.com/2015/12/10/begintypechotopelican.png" title="准备将博客从Typecho迁移到Pelican" /&gt;&lt;/p&gt;


&lt;h5&gt;1 目前已完成的操作&lt;/h5&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;将之前这份Typecho主题平滑移植到Pelican中，并在本地调试完毕；
备份目前LNMP环境中的博客数据库和PHP程序（可能会迁移到SAE）；
导出Typecho文章和评论到Disqus中；
在目前CentOS7.1机器上搭建Pelican环境。
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h5&gt;2 上线步骤&lt;/h5&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;关闭博客自带评论；
修改博客PHP程序使之支持Disqus评论，并测试导入到Disqus中的评论是否正常；
上传本地Pelican生成的博客（静态HTML文件）；
可选步骤：设置博客所有HTML文件权限为444，文件夹为555（没有执行权限X的话会造成403错误）；
更改Nginx的配置文件，支持Pelican静态博客；
暂时保留PHP和MySQL服务，以便Pelican上线失败的切换；
完成Disqus测试；
service nginx reload重载Nginx服务，开放博客评论；
关闭PHP和MySQL服务；
上线完毕。
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h5&gt;3 后续操作&lt;/h5&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;更新博客文章；
继续优化主题模板；
将博客PHP版本迁移到SAE上；
开源博客Typecho版的主题程序和目前Pelican版本的主题程序；
保留新浪微博的PHP版本的API接口（可能会开放）。
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h5&gt;4 Pelican简介&lt;/h5&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;Pelican是一个用Python语言编写的静态网站生成器，完全不需要数据库和逻辑服务端支持。
可以使用restructuredText和Markdown进行写作，全静态化对主机非常友好。
特性：使用Jinja模板自定义制作Pelican主题，多语言支持，Atom/RSS feeds，代码高亮，丰富的插件支持...
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Thu, 10 Dec 2015 16:20:00 +0800</pubDate><guid>tag:typecodes.com,2015-12-10:mix/begintypechotopelican.html</guid><category>博客成长录</category><category>typecho</category><category>pelican</category></item><item><title>Linux TCP连接Connection Refused和Connection timed out的问题</title><link>https://typecodes.com/linux/tcpconnectiontimedout.html</link><description>&lt;p&gt;前段时间和其它系统做联调测试，对方系统采用的是负载均衡模式。调试时采用的是多台手机作为客户端发送到对方负载均衡服务器，然后再把报文转发送到我这边的服务端。在测试的时候，对方测试人员说有的手机客户端会偶尔出现报文发不过来的情况。&lt;/p&gt;
&lt;p&gt;故事有点长，先发一张tcp三次握手的过程图镇楼~&lt;/p&gt;
&lt;p&gt;&lt;img alt="Linux tcp三次握手" src="https://o3cex9zsl.qnssl.com/2015/09/tcp_handshake.png" title="Linux tcp三次握手" /&gt;&lt;/p&gt;


&lt;h5&gt;1 自己服务端的socket监听出现问题&lt;/h5&gt;
&lt;p&gt;一开始认为可能是自己作为服务端的监听有问题，因为后面排查监听端口的时候发现了&lt;code&gt;close_wait&lt;/code&gt;的情况。当时没多想，认为对方负载均衡不会出错（先前跟其它系统联调过了），就急着解决close_wait的问题去了。&lt;/p&gt;
&lt;p&gt;可是后面测试的时候，尽管服务端监听没有任何异常，但是手机APP还是有发包失败的情况，而且怪异的是服务端日志也没打印请求包内容。&lt;/p&gt;
&lt;h5&gt;2 防火墙只收到对方系统的一个IP记录&lt;/h5&gt;
&lt;p&gt;折腾了很久还是没找到原因所在，后面联系了对方系统测试人员得到回复说他们的日志报错：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;java.net.SocketTimeoutException: SocketTimeoutException invoking https://123.123.123.214:7070: connect timed out
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;于是联系网络管理员，看防火墙是否拒掉了对方请求报文。结果网管回复防火墙正常，但是只收到对方的一台IP记录，另一IP没有发送过报文。&lt;/p&gt;
&lt;p&gt;立即反映给对方开发人员，结果对方发现是负载均衡系统的一台服务器连接我这边系统的网络有问题。&lt;/p&gt;
&lt;h5&gt;3 问题的总结&lt;/h5&gt;
&lt;p&gt;到这里问题已经解决了，但是自己对于tcp出现&lt;code&gt;Connection timed out&lt;/code&gt;的错误认识不足，只想到是自己服务端&lt;code&gt;close_wait&lt;/code&gt;引起的问题。下面是自己对tcp握手过程中出现&lt;code&gt;Connection refused&lt;/code&gt;和&lt;code&gt;Connection timed out&lt;/code&gt;的总结。&lt;/p&gt;
&lt;h6&gt;3.1 Connection refused&lt;/h6&gt;
&lt;p&gt;使用telnet来检查tcp链路时，如果遇到"Connection refused"的错误，那么表示从本地客户端到目标IP地址的路由是正常的，但是该目标端口没有进程在监听，然后服务端拒绝掉了连接。&lt;/p&gt;
&lt;p&gt;一个成功的tcp链接将会看到&lt;code&gt;Syn&lt;/code&gt;，&lt;code&gt;Syn-Ack&lt;/code&gt;，&lt;code&gt;Ack&lt;/code&gt;，这也就是我们预期的TCP三次握手。当使用&lt;code&gt;tcpdump&lt;/code&gt;或&lt;code&gt;wireshark&lt;/code&gt;抓包工具来探测发送过来的请求报文包时，&lt;code&gt;Connection refused&lt;/code&gt;将会看到&lt;code&gt;Syn&lt;/code&gt;,&lt;code&gt;Rst&lt;/code&gt;。&lt;/p&gt;
&lt;h6&gt;3.2 Connection timed out&lt;/h6&gt;
&lt;p&gt;如果telnet的时候，TCP路由不正常，那么会得到一个&lt;code&gt;Connection timed out&lt;/code&gt;的错误。"Couldn't connect"原因有很多，可能是服务器无法ping通，可能是服务器（防火墙等）丢弃了该请求报文包，也可能是服务器应答太慢，又或者存在间歇性的问题（这种情况很难从日志文件中排查问题）。&lt;/p&gt;
&lt;p&gt;下面演示“Connection timed out”的情况：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;# 先打开一个ssh会话，telnet任意一个不存在IP
[root@typecodes ~]# telnet 10.10.223.123 9010
Trying 10.10.223.123...

# 然后打开另一个ssh会话，netstat服务器上tcp连接状况
[root@typecodes ~]# netstat -anpt
tcp        0      1 10.169.218.97:53794     10.10.223.123:9010      SYN_SENT    4271/telnet
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;由下图可知，telnet进程作为客户端发送SYN包后，进入&lt;code&gt;SYN_SENT&lt;/code&gt;状态，等待服务端应答。&lt;/p&gt;
&lt;p&gt;&lt;img alt="netstat查看tcp连接状态" src="https://o3cex9zsl.qnssl.com/2015/09/linux_netstat_antp.png" title="netstat查看tcp连接状态" /&gt;&lt;/p&gt;
&lt;p&gt;但是由于客户端和目标IP的路由无法建立（也就是BZ遇到的情况），所以在3分钟后该tcp链路显示&lt;code&gt;Connection timed out&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img alt="Linux telenet connection timed out" src="https://o3cex9zsl.qnssl.com/2015/09/linux_telnet_timeout.png" title="Linux telenet connection timed out" /&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Sat, 12 Sep 2015 22:39:00 +0800</pubDate><guid>tag:typecodes.com,2015-09-12:linux/tcpconnectiontimedout.html</guid><category>tcp</category><category>connection refused</category><category>connection timed out</category></item><item><title>博客MySQL服务惊魂记：Linux磁盘空间不足(Core Dump文件引爆)</title><link>https://typecodes.com/linux/mysqlerrornospace.html</link><description>&lt;p&gt;昨天在更新完文章&lt;a href="https://typecodes.com/mix/synweibophpmarkdownimgurl.html"&gt;《升级博客文章同步微博的插件：PHP正则提取Markdown的图片地址》&lt;/a&gt;后，博客突然无法访问了。&lt;/p&gt;
&lt;p&gt;&lt;img alt="MySQL的错误日志" src="https://o3cex9zsl.qnssl.com/2015/08/mysql_space_error.png" title="MySQL的错误日志" /&gt;&lt;/p&gt;


&lt;h4&gt;1 查看Nginx的错误日志error.log&lt;/h4&gt;
&lt;p&gt;惊愕之余，换了多个浏览器打开博客首页无果(一直显示加载状态)，最终报内部服务器500的错误。立即查看Nginx服务的错误日志：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@typecodes nginx]# vim error.log 
........
[error] 19620#0: *1 FastCGI sent in stderr: &amp;quot;PHP message: SQLSTATE[HY000] [2002] No such file or directory&amp;quot; while reading response header from php-fpm.sock:&amp;quot;, host: &amp;quot;typecodes.com&amp;quot;
........
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="Nginx的错误日志" src="https://o3cex9zsl.qnssl.com/2015/08/php_cannot_mysql.png" title="Nginx的错误日志" /&gt;&lt;/p&gt;
&lt;h4&gt;2 查看MySQL的错误日志error.log&lt;/h4&gt;
&lt;p&gt;从上面的Nginx错误日志中可以看出，可能是MySQL的错误。于是查看MySQL的错误日志error.log，但是当时没注意到下面这条重要错误信息提示：&lt;code&gt;No space left on device&lt;/code&gt;。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="err"&gt;####&lt;/span&gt; &lt;span class="nx"&gt;查看MySQL的错误日志error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;
&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;root&lt;/span&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nx"&gt;typecodes&lt;/span&gt; &lt;span class="nx"&gt;mysql&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="nx"&gt;ls&lt;/span&gt;
&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;  &lt;span class="nx"&gt;mysql&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pid&lt;/span&gt;
&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;root&lt;/span&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nx"&gt;typecodes&lt;/span&gt; &lt;span class="nx"&gt;mysql&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="nx"&gt;vim&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt; 
&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;02&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;34&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt; &lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;20150816&lt;/span&gt;&lt;span class="nx"&gt;_02&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;34&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt; &lt;span class="mi"&gt;103&lt;/span&gt; &lt;span class="mi"&gt;2015&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;08&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="nx"&gt;T18&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;11.843790&lt;/span&gt;&lt;span class="nx"&gt;Z&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;ERROR&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt; &lt;span class="nx"&gt;InnoDB&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Error&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt; &lt;span class="mi"&gt;28&lt;/span&gt; &lt;span class="nx"&gt;means&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;No space left on device&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;02&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;34&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt; &lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;20150816&lt;/span&gt;&lt;span class="nx"&gt;_02&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;34&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;     &lt;span class="nx"&gt;es&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;html&lt;/span&gt;
&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;02&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;34&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt; &lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;20150816&lt;/span&gt;&lt;span class="nx"&gt;_02&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;34&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt; &lt;span class="mi"&gt;105&lt;/span&gt; &lt;span class="mi"&gt;2015&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;08&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="nx"&gt;T18&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;11.843805&lt;/span&gt;&lt;span class="nx"&gt;Z&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;Warning&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt; &lt;span class="nx"&gt;InnoDB&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Retry&lt;/span&gt; &lt;span class="nx"&gt;attempts&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;writing&lt;/span&gt; &lt;span class="nx"&gt;partial&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="nx"&gt;failed&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;02&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;34&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt; &lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;20150816&lt;/span&gt;&lt;span class="nx"&gt;_02&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;34&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt; &lt;span class="mi"&gt;106&lt;/span&gt; &lt;span class="mi"&gt;2015&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;08&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="nx"&gt;T18&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;11.843812&lt;/span&gt;&lt;span class="nx"&gt;Z&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;ERROR&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt; &lt;span class="nx"&gt;InnoDB&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Write&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;file&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;ibtmp1&lt;/span&gt; &lt;span class="nx"&gt;failed&lt;/span&gt; &lt;span class="nx"&gt;at&lt;/span&gt; &lt;span class="nx"&gt;offset&lt;/span&gt; &lt;span class="mi"&gt;11534336&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="mi"&gt;1048576&lt;/span&gt; &lt;span class="nx"&gt;bytes&lt;/span&gt; &lt;span class="nx"&gt;should&lt;/span&gt; &lt;span class="nx"&gt;have&lt;/span&gt; &lt;span class="nx"&gt;been&lt;/span&gt; &lt;span class="nx"&gt;written&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;only&lt;/span&gt; &lt;span class="mi"&gt;1044480&lt;/span&gt; &lt;span class="nx"&gt;were&lt;/span&gt; &lt;span class="nx"&gt;written&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;02&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;34&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt; &lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;20150816&lt;/span&gt;&lt;span class="nx"&gt;_02&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;34&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;     &lt;span class="nx"&gt;Check&lt;/span&gt; &lt;span class="nx"&gt;that&lt;/span&gt; &lt;span class="nx"&gt;your&lt;/span&gt; &lt;span class="nx"&gt;OS&lt;/span&gt; &lt;span class="nx"&gt;and&lt;/span&gt; &lt;span class="nx"&gt;file&lt;/span&gt; &lt;span class="nx"&gt;system&lt;/span&gt; &lt;span class="nx"&gt;support&lt;/span&gt; &lt;span class="nx"&gt;files&lt;/span&gt; &lt;span class="nx"&gt;of&lt;/span&gt;  &lt;span class="k"&gt;this&lt;/span&gt; &lt;span class="nx"&gt;size&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;Check&lt;/span&gt; &lt;span class="nx"&gt;also&lt;/span&gt; &lt;span class="nx"&gt;that&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;disk&lt;/span&gt; &lt;span class="nx"&gt;is&lt;/span&gt; &lt;span class="nx"&gt;not&lt;/span&gt; &lt;span class="nx"&gt;full&lt;/span&gt; &lt;span class="nx"&gt;or&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;disk&lt;/span&gt; &lt;span class="nx"&gt;quota&lt;/span&gt;  &lt;span class="nx"&gt;exceeded&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;02&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;34&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt; &lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;20150816&lt;/span&gt;&lt;span class="nx"&gt;_02&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;34&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt; &lt;span class="mi"&gt;107&lt;/span&gt; &lt;span class="mi"&gt;2015&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;08&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="nx"&gt;T18&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;11.843821&lt;/span&gt;&lt;span class="nx"&gt;Z&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;ERROR&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt; &lt;span class="nx"&gt;InnoDB&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Could&lt;/span&gt; &lt;span class="nx"&gt;not&lt;/span&gt; &lt;span class="nx"&gt;set&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;file&lt;/span&gt; &lt;span class="nx"&gt;size&lt;/span&gt; &lt;span class="nx"&gt;of&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;./ibtmp1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;Probably&lt;/span&gt; &lt;span class="nx"&gt;out&lt;/span&gt; &lt;span class="nx"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;disk&lt;/span&gt; &lt;span class="nx"&gt;space&lt;/span&gt;
&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;02&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;34&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt; &lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;20150816&lt;/span&gt;&lt;span class="nx"&gt;_02&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;34&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt; &lt;span class="mi"&gt;108&lt;/span&gt; &lt;span class="mi"&gt;2015&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;08&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="nx"&gt;T18&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;11.843828&lt;/span&gt;&lt;span class="nx"&gt;Z&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;ERROR&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt; &lt;span class="nx"&gt;InnoDB&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Unable&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;create&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;shared&lt;/span&gt; &lt;span class="nx"&gt;innodb_temporary&lt;/span&gt;
&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;02&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;34&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt; &lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;20150816&lt;/span&gt;&lt;span class="nx"&gt;_02&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;34&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt; &lt;span class="mi"&gt;109&lt;/span&gt; &lt;span class="mi"&gt;2015&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;08&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="nx"&gt;T18&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;11.947045&lt;/span&gt;&lt;span class="nx"&gt;Z&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;Note&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt; &lt;span class="nx"&gt;InnoDB&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Removed&lt;/span&gt; &lt;span class="nx"&gt;temporary&lt;/span&gt; &lt;span class="nx"&gt;tablespace&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="nx"&gt;file&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;ibtmp1&amp;quot;&lt;/span&gt;
&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;02&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;34&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt; &lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;20150816&lt;/span&gt;&lt;span class="nx"&gt;_02&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;34&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt; &lt;span class="mi"&gt;110&lt;/span&gt; &lt;span class="mi"&gt;2015&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;08&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="nx"&gt;T18&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;11.947081&lt;/span&gt;&lt;span class="nx"&gt;Z&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;ERROR&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt; &lt;span class="nx"&gt;Plugin&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;InnoDB&amp;#39;&lt;/span&gt; &lt;span class="nx"&gt;init&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;returned&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;02&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;34&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt; &lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;20150816&lt;/span&gt;&lt;span class="nx"&gt;_02&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;34&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt; &lt;span class="mi"&gt;111&lt;/span&gt; &lt;span class="mi"&gt;2015&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;08&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="nx"&gt;T18&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;11.947089&lt;/span&gt;&lt;span class="nx"&gt;Z&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;ERROR&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt; &lt;span class="nx"&gt;Plugin&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;InnoDB&amp;#39;&lt;/span&gt; &lt;span class="nx"&gt;registration&lt;/span&gt; &lt;span class="nx"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;STORAGE&lt;/span&gt; &lt;span class="nx"&gt;ENGINE&lt;/span&gt; &lt;span class="nx"&gt;failed&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;02&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;34&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt; &lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;20150816&lt;/span&gt;&lt;span class="nx"&gt;_02&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;34&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt; &lt;span class="mi"&gt;112&lt;/span&gt; &lt;span class="mi"&gt;2015&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;08&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="nx"&gt;T18&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;11.947098&lt;/span&gt;&lt;span class="nx"&gt;Z&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;ERROR&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt; &lt;span class="nx"&gt;Failed&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;initialize&lt;/span&gt; &lt;span class="nx"&gt;plugins&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;02&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;34&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt; &lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;20150816&lt;/span&gt;&lt;span class="nx"&gt;_02&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;34&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt; &lt;span class="mi"&gt;113&lt;/span&gt; &lt;span class="mi"&gt;2015&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;08&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="nx"&gt;T18&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;11.947143&lt;/span&gt;&lt;span class="nx"&gt;Z&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;ERROR&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt; &lt;span class="nx"&gt;Aborting&lt;/span&gt;
&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;02&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;34&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt; &lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;20150816&lt;/span&gt;&lt;span class="nx"&gt;_02&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;34&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt; &lt;span class="mi"&gt;114&lt;/span&gt; 
&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;02&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;34&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt; &lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;20150816&lt;/span&gt;&lt;span class="nx"&gt;_02&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;34&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt; &lt;span class="mi"&gt;115&lt;/span&gt; &lt;span class="mi"&gt;2015&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;08&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="nx"&gt;T18&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;11.947154&lt;/span&gt;&lt;span class="nx"&gt;Z&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;Note&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt; &lt;span class="nx"&gt;Binlog&lt;/span&gt; &lt;span class="nx"&gt;end&lt;/span&gt;
&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;02&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;34&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt; &lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;20150816&lt;/span&gt;&lt;span class="nx"&gt;_02&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;34&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt; &lt;span class="mi"&gt;116&lt;/span&gt; &lt;span class="mi"&gt;2015&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;08&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="nx"&gt;T18&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;11.947598&lt;/span&gt;&lt;span class="nx"&gt;Z&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;Note&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;local&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;mysql&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;mysqld&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Shutdown&lt;/span&gt; &lt;span class="nx"&gt;complete&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;由于本能反应（BZ的CentOS7.1服务器20G系统盘+20G数据盘），服务器不可能会出现磁盘空间不足的问题。结果再一次忽略了&lt;code&gt;No space left on device&lt;/code&gt;提示。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@typecodes mysql]# vim error.log 
........
mysql/data
etting it to a valid, non-empty path.
rc-log) starting as process 22504 ...
c builtins
2015-08-15T18:49:59.921545Z 0 [Note] InnoDB: Uses event mutexes
) is used for memory barrier
2015-08-15T18:49:59.921559Z 0 [Note] InnoDB: Compressed tables use zlib 1.2.3
2015-08-15T18:49:59.922232Z 0 [Note] InnoDB: Number of pools: 1
2015-08-15T18:49:59.922362Z 0 [Note] InnoDB: Using CPU crc32 instructions
ze = 128M, instances = 1, chunk size = 128M
pool
e distribution
user: &amp;#39;TypeCodes_test&amp;#39; host: &amp;#39;localhost&amp;#39; (Got an error reading communication packets)
user: &amp;#39;TypeCodes_test&amp;#39; host: &amp;#39;localhost&amp;#39; (Got an error reading communication packets)
pecodes.log&amp;#39; (errno: 28 - No space left on device)
00 secs
s)
s)
.......
2015-08-16T14:36:25.977210Z 831 [ERROR] Retry in 60 secs. Message reprinted in
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;后面尝试使用一个MySQL测试用户登录数据库，还是报错：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@typecodes ~]# mysql -u TypeCodes_test -p
[02:43:32] [20150816_02:43:32] Enter password: 
[02:43:32] [20150816_02:43:32] ERROR 2002 (HY000): Can&amp;#39;t connect to local MySQL server through socket &amp;#39;/var/run/mysql/mysql.sock&amp;#39; (2)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;找不到方法，只能先重启一下MySQL服务，结果一直报&lt;code&gt;The server quit without updating PID file&lt;/code&gt;的错误。又一次查看日志，最终确认从问题&lt;code&gt;No space left on device&lt;/code&gt;入手。&lt;/p&gt;
&lt;h4&gt;3 查看Linux磁盘空间信息&lt;/h4&gt;
&lt;p&gt;根据上面MySQL的&lt;code&gt;No space left on device&lt;/code&gt;提示，立马使用&lt;code&gt;df -hl&lt;/code&gt;命令查看当前CentOS7.1服务器的磁盘空间信息。结果很明显，挂载在&lt;code&gt;/dev/xvdb2&lt;/code&gt;数据盘下面的分区&lt;code&gt;/mydata&lt;/code&gt;只剩的&lt;code&gt;12M&lt;/code&gt;的空间了！而mysql得数据文件正好存放在mydata分区中，悲剧！&lt;/p&gt;
&lt;p&gt;&lt;img alt="CentOS7.1服务器上查看磁盘空间" src="https://o3cex9zsl.qnssl.com/2015/08/centos_space.png" title="CentOS7.1服务器上查看磁盘空间]" /&gt;&lt;/p&gt;
&lt;p&gt;接着进入到&lt;code&gt;/mydata&lt;/code&gt;分区，使用命令&lt;code&gt;du -sh&lt;/code&gt;查看当前目录下各个子目录所占用的空间大小。结果太出乎意料了，竟然是存放Core Dump文件的corefile目录占用了16G的空间！&lt;/p&gt;
&lt;p&gt;&lt;img alt="Core Dump文件占用空间过大" src="https://o3cex9zsl.qnssl.com/2015/08/corefile_too_large.png" title="Core Dump文件占用空间过大" /&gt;&lt;/p&gt;
&lt;p&gt;这才想起在&lt;a href="https://typecodes.com/linux/centoscoredumpcfgshell.html" title="查看原文"&gt;《CentOS开启coredump转储并生成core文件的配置》&lt;/a&gt;文中，设置了Core Dump文件大小为&lt;code&gt;unlimited&lt;/code&gt;。日积月累，终于把MySQL搞挂掉了！&lt;/p&gt;
&lt;h4&gt;4 解决&lt;/h4&gt;
&lt;p&gt;先删掉corefile目录下面的大部分Core Dump文件，然后使用命令&lt;code&gt;ulimit -c 10240&lt;/code&gt;设置coredump file-size为10M。最后，使用命令&lt;code&gt;service mysqld start&lt;/code&gt;成功启动MySQL服务！看了下时间，从发现问题到解决用了40多分钟，还好只是个个人博客~&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Mon, 17 Aug 2015 22:33:00 +0800</pubDate><guid>tag:typecodes.com,2015-08-17:linux/mysqlerrornospace.html</guid><category>coredump</category><category>mysql</category></item><item><title>升级博客文章同步微博的插件：PHP正则提取Markdown的图片地址</title><link>https://typecodes.com/mix/synweibophpmarkdownimgurl.html</link><description>&lt;p&gt;作为一个微博控，为了把博客的文章同步到新浪微博上，BZ在&lt;a href="http://open.weibo.com" title="点击查看"&gt;新浪微博开放平台&lt;/a&gt;申请了一个应用。然后在自己的CentOS服务器上，利用&lt;a href="http://open.weibo.com/wiki/SDK#PHP_SDK" title="点击查看"&gt;官方PHP SDK&lt;/a&gt;搭了个服务端应用。这样通过博客插件作为请求客户端，调用相关API接口把文章同步到微博上。微博发布后，会显示来源，也即应用名称（如下图BZ的是&lt;code&gt;TypeCodes&lt;/code&gt;）。&lt;/p&gt;
&lt;p&gt;&lt;img alt="博客文章同步到新浪微博的效果" src="https://o3cex9zsl.qnssl.com/2015/08/blog_synchronize_weibo.png" title="博客文章同步到新浪微博的效果" /&gt;&lt;/p&gt;


&lt;h5&gt;1 插件升级：增加微博图片模式&lt;/h5&gt;
&lt;p&gt;之前插件同步文章时，调用的是新浪微博API中的&lt;code&gt;update&lt;/code&gt;接口，只能发布一条无图片的微博信息。昨天把插件升级了下，支持选择是否发布带图片的微博。对于发布带图片模式的微博，改用API中的&lt;code&gt;upload&lt;/code&gt;接口。&lt;/p&gt;
&lt;p&gt;&lt;img alt="插件升级：增加微博图片模式" src="https://o3cex9zsl.qnssl.com/2015/08/update_weibo_plugin.png" title="插件升级：增加微博图片模式" /&gt;&lt;/p&gt;
&lt;h5&gt;2 升级原理：利用PHP正则提取Markdown的图片地址&lt;/h5&gt;
&lt;p&gt;下面是处理发布带图片模式的微博的核心代码：&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
    &lt;span class="sd"&gt;/**&lt;/span&gt;
&lt;span class="sd"&gt;     * @FILENAME    regexmarkdownimgurl.php&lt;/span&gt;
&lt;span class="sd"&gt;     * @DESCRIPT    PHP利用正则表达式提取Markdown中的图片地址&lt;/span&gt;
&lt;span class="sd"&gt;     * @AUTHOR      vfhky 2015.08.15 https://typecodes.com/mix/synweibophpmarkdownimgurl.html&lt;/span&gt;
&lt;span class="sd"&gt;     */&lt;/span&gt;

    &lt;span class="c1"&gt;//测试数据：文章中带有图片URL地址的Markdown数据&lt;/span&gt;
    &lt;span class="nv"&gt;$content_substr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;升级博客文章同步微博的插件：PHP正则提取Markdown的图片地址。&lt;/span&gt;

&lt;span class="s1"&gt;    ![博客文章同步到新浪微博的效果](https://o3cex9zsl.qnssl.com/2015/08/blog_synchronize_weibo.png &amp;quot;博客文章同步到新浪微博的效果&amp;quot; )&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;//开始利用正则表达式提取Markdown中的图片地址，只要匹配一次就结束&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;preg_match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;/!\[[^\]]*]\((https):\/\/[^\)]*\.(png|jpg)(.*)\)/i&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$content_substr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$img_match&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;preg_match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;/(https:\/\/)[^&amp;gt;]*?\.(png|jpg)/i&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$img_match&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="nv"&gt;$img_match_retult&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="nv"&gt;$post_img&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$img_match_retult&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;//输出匹配到的图片地址url： https://o3cex9zsl.qnssl.com/2015/08/blog_synchronize_weibo.png&lt;/span&gt;
    &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$post_img&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Sun, 16 Aug 2015 22:31:00 +0800</pubDate><guid>tag:typecodes.com,2015-08-16:mix/synweibophpmarkdownimgurl.html</guid><category>博客成长录</category><category>新浪微博开放平台</category></item><item><title>Linux C/C++工程中可生成ELF、动/静态库文件的通用Makefile</title><link>https://typecodes.com/cseries/cppgeneralmakefile.html</link><description>&lt;p&gt;最近写了一个*nix环境下的Makefile文件，支持编译C/C++，同时能够通过参数配置生成ELF目标文件、动态链接库(.so)和静态链接库(.a)文件。&lt;/p&gt;
&lt;p&gt;&lt;img alt="Linux C/C++工程中可生成ELF、动/静态库文件的通用Makefile" src="https://o3cex9zsl.qnssl.com/2015/08/linux_general_makefile.png" title="Linux C/C++工程中可生成ELF、动/静态库文件的通用Makefile" /&gt;&lt;/p&gt;


&lt;h4&gt;1 Makefile文件配置说明&lt;/h4&gt;
&lt;p&gt;首先，根据生成的目标文件类型（ELF可执行文件，动态链接库文件或静态链接库文件），配置&lt;code&gt;GEN_LIBS&lt;/code&gt;、&lt;code&gt;GEN_DYN_LIB&lt;/code&gt;、&lt;code&gt;EXCUTE_BIN&lt;/code&gt;、&lt;code&gt;STATIC_LIBS&lt;/code&gt;和&lt;code&gt;DYNAMIC_LIBS&lt;/code&gt;等变量。&lt;/p&gt;
&lt;p&gt;其次，如果生成的目标文件依赖其它库文件，那么只要将&lt;code&gt;LD_LIB_DIR&lt;/code&gt;设置成该动态库所在的目录，&lt;code&gt;LD_LIBS&lt;/code&gt;设置成要链接的动态库文件名即可。更建议的做法是在当前C/C++工程的配置文件中设置&lt;code&gt;LIBPATH&lt;/code&gt;参数为动态库所在的目录，这样就不用在设置变量&lt;code&gt;LD_LIB_DIR&lt;/code&gt;的值了，例如：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;export LIBPATH=/usr/lib64/:&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;LIBPATH&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;:/home/typecodes/lib
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;最后需要说明的是，变量&lt;code&gt;$(PROJECT_DIR)&lt;/code&gt;表示当前C/C++工程的根路径，可以直接将本Makefile文件中的命令&lt;code&gt;# PROJECT_DIR   := /home/typecodes&lt;/code&gt;前面的&lt;code&gt;#&lt;/code&gt;号去掉，然后设置成自己的工程根目录即可。同样，更建议在工程的配置文件中配置，例如：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;export PROJECT_DIR=/home/typecodes
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;2 使用方法&lt;/h4&gt;
&lt;p&gt;在配置好Makefile文件中的变量对应的值后，直接将该文件放置在需要编译的C/C++工程目录下面，然后执行&lt;code&gt;make&lt;/code&gt;或者&lt;code&gt;make all&lt;/code&gt;就可以了。伪目标&lt;code&gt;clean&lt;/code&gt;对应的命令&lt;code&gt;make clean&lt;/code&gt;能够清除上次执行make命令产生的影响；伪目标&lt;code&gt;help&lt;/code&gt;对应的命令&lt;code&gt;make help&lt;/code&gt;能够在界面上输出Makefile文件中的重要变量的值，方便调试。&lt;/p&gt;
&lt;p&gt;执行完make命令后，在当前目录下会生成.o目标文件以及.d依赖文件，ELF可执行文件放在工程的bin目录下，动/静态库文件放在工程的lib目录下。&lt;/p&gt;
&lt;h4&gt;3 附录：Makefile文件源码&lt;/h4&gt;
&lt;p&gt;已将下面的Makefile源文件托管到两个仓库中：&lt;/p&gt;
&lt;p&gt;1、GitHub： &lt;a href="https://github.com/vfhky/General_Makefile" title="点击查看"&gt;https://github.com/vfhky/General_Makefile&lt;/a&gt;；&lt;/p&gt;
&lt;p&gt;2、Coding： &lt;a href="https://coding.net/u/vfhky/p/General_Makefile/git" title="点击查看"&gt;https://coding.net/u/vfhky/p/General_Makefile/git&lt;/a&gt;。&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;##################################################################&lt;/span&gt;
&lt;span class="c"&gt;#&lt;/span&gt;
&lt;span class="c"&gt;# FILENAME   :  Makefile&lt;/span&gt;
&lt;span class="c"&gt;# DESCRIPT   :  A general makefile to generate an ELF or a&lt;/span&gt;
&lt;span class="c"&gt;#                   dynamic or a static library for C/C++ project.&lt;/span&gt;
&lt;span class="c"&gt;# AUTHOR     :  vfhky  2015.08.07&lt;/span&gt;
&lt;span class="c"&gt;# URI        :  https://typecodes.com/cseries/cppgeneralmakefile.html&lt;/span&gt;
&lt;span class="c"&gt;#&lt;/span&gt;
&lt;span class="c"&gt;##################################################################&lt;/span&gt;

&lt;span class="nf"&gt;.PHONY&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;all&lt;/span&gt; &lt;span class="n"&gt;clean&lt;/span&gt; &lt;span class="n"&gt;help&lt;/span&gt;
&lt;span class="nf"&gt;all&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;

&lt;span class="c"&gt;# Some important on-off settings. You can not be too careful about them.&lt;/span&gt;
&lt;span class="nv"&gt;DEBUG&lt;/span&gt;           &lt;span class="o"&gt;:=&lt;/span&gt; y
&lt;span class="c"&gt;# Flag of generate a dynamic lib or a static lib: y means yes. If the target is a excutable file, it should be blank!&lt;/span&gt;
&lt;span class="nv"&gt;GEN_LIBS&lt;/span&gt;        &lt;span class="o"&gt;:=&lt;/span&gt; y
&lt;span class="c"&gt;# Flag of generate a dynamic lib: y means yes. It should be blank unless you want to generate a dynamic lib!&lt;/span&gt;
&lt;span class="nv"&gt;GEN_DYN_LIB&lt;/span&gt;     &lt;span class="o"&gt;:=&lt;/span&gt; y
&lt;span class="c"&gt;# The name of target bin file.Please let it be blank unless the target is a excutable file. &lt;/span&gt;
&lt;span class="nv"&gt;EXCUTE_BIN&lt;/span&gt;      &lt;span class="o"&gt;:=&lt;/span&gt; 
&lt;span class="c"&gt;# Name of the static lib. It should be blank unless the target is a static lib, then the GEN_LIBS is y and GEN_DYN_LIB is blank.&lt;/span&gt;
&lt;span class="c"&gt;# STATIC_LIBS       := libsrcpbl.a&lt;/span&gt;
&lt;span class="c"&gt;# Name of the dynamic lib. It should be blank unless the target is a dynamic lib, then the GEN_LIBS is y and GEN_DYN_LIB is y.&lt;/span&gt;
&lt;span class="nv"&gt;DYNAMIC_LIBS&lt;/span&gt;    &lt;span class="o"&gt;:=&lt;/span&gt; libsrcpbl.so

&lt;span class="c"&gt;# Environment settings. The value of PROJECT_DIR shoule be set in the *nix system as the the absolute dir path of your project.&lt;/span&gt;
&lt;span class="c"&gt;# PROJECT_DIR   := /home/typecodes&lt;/span&gt;
&lt;span class="c"&gt;#CURDIR         := $(PROJECT_DIR)/src/pbl&lt;/span&gt;
&lt;span class="nv"&gt;CURDIR&lt;/span&gt;          &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;shell &lt;span class="nb"&gt;pwd&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;PRG_BIN_DIR&lt;/span&gt;     &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;PROJECT_DIR&lt;span class="k"&gt;)&lt;/span&gt;/bin
&lt;span class="nv"&gt;PRG_LIB_DIR&lt;/span&gt;     &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;PROJECT_DIR&lt;span class="k"&gt;)&lt;/span&gt;/lib
&lt;span class="nv"&gt;PRG_INC_DIR&lt;/span&gt;     &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;PROJECT_DIR&lt;span class="k"&gt;)&lt;/span&gt;/include

&lt;span class="c"&gt;# Cross compile tools defined. You needn&amp;#39;t modify these vars below generally.&lt;/span&gt;
&lt;span class="nv"&gt;AS&lt;/span&gt;      &lt;span class="o"&gt;:=&lt;/span&gt; as
&lt;span class="nv"&gt;LD&lt;/span&gt;      &lt;span class="o"&gt;:=&lt;/span&gt; ld
&lt;span class="nv"&gt;CC&lt;/span&gt;      &lt;span class="o"&gt;:=&lt;/span&gt; gcc
&lt;span class="nv"&gt;CXX&lt;/span&gt;     &lt;span class="o"&gt;:=&lt;/span&gt; g++
&lt;span class="nv"&gt;CPP&lt;/span&gt;     &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;CC&lt;span class="k"&gt;)&lt;/span&gt; -E
&lt;span class="nv"&gt;AR&lt;/span&gt;      &lt;span class="o"&gt;:=&lt;/span&gt; ar rcs
&lt;span class="nv"&gt;NM&lt;/span&gt;      &lt;span class="o"&gt;:=&lt;/span&gt; nm
&lt;span class="nv"&gt;STRIP&lt;/span&gt;   &lt;span class="o"&gt;:=&lt;/span&gt; strip
&lt;span class="nv"&gt;RANLIB&lt;/span&gt;  &lt;span class="o"&gt;:=&lt;/span&gt; ranlib
&lt;span class="nv"&gt;STD_OPT&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; -std&lt;span class="o"&gt;=&lt;/span&gt;c99 -D_GNU_SOURCE 
&lt;span class="nv"&gt;CC&lt;/span&gt;      &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;STD_OPT&lt;span class="k"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;CXX&lt;/span&gt;     &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;STD_OPT&lt;span class="k"&gt;)&lt;/span&gt;

&lt;span class="c"&gt;# *nix system tools defined. You needn&amp;#39;t modify these vars below generally.&lt;/span&gt;
&lt;span class="nv"&gt;CP&lt;/span&gt;      &lt;span class="o"&gt;:=&lt;/span&gt; cp
&lt;span class="nv"&gt;SED&lt;/span&gt;     &lt;span class="o"&gt;:=&lt;/span&gt; sed
&lt;span class="nv"&gt;FIND&lt;/span&gt;    &lt;span class="o"&gt;:=&lt;/span&gt; find
&lt;span class="nv"&gt;MKDIR&lt;/span&gt;   &lt;span class="o"&gt;:=&lt;/span&gt; mkdir -p
&lt;span class="nv"&gt;XARGS&lt;/span&gt;   &lt;span class="o"&gt;:=&lt;/span&gt; xargs
&lt;span class="nv"&gt;MV&lt;/span&gt;      &lt;span class="o"&gt;:=&lt;/span&gt; mv
&lt;span class="nv"&gt;RM&lt;/span&gt;      &lt;span class="o"&gt;:=&lt;/span&gt; rm -rf


&lt;span class="c"&gt;# Get .c, .cpp source files by searching from current directory.&lt;/span&gt;
&lt;span class="nv"&gt;CUR_SRC_DIR&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;shell ls -AxR &lt;span class="k"&gt;$(&lt;/span&gt;CURDIR&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;grep &lt;span class="s2"&gt;&amp;quot;:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;tr -d &lt;span class="s1"&gt;&amp;#39;:&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;CUR_SRC&lt;/span&gt;     &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;foreach subdir,&lt;span class="k"&gt;$(&lt;/span&gt;CUR_SRC_DIR&lt;span class="k"&gt;)&lt;/span&gt;,&lt;span class="k"&gt;$(&lt;/span&gt;wildcard &lt;span class="k"&gt;$(&lt;/span&gt;subdir&lt;span class="k"&gt;)&lt;/span&gt;/*.c &lt;span class="k"&gt;$(&lt;/span&gt;subdir&lt;span class="k"&gt;)&lt;/span&gt;/*.cpp&lt;span class="k"&gt;))&lt;/span&gt;
&lt;span class="c"&gt;#CUR_SRC    := $(shell find . -name &amp;quot;*.c&amp;quot; -o -name &amp;quot;*.cpp&amp;quot;|sed -e &amp;#39;s,./,,&amp;#39;)&lt;/span&gt;
&lt;span class="nv"&gt;CUR_C&lt;/span&gt;       &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;filter %.c, &lt;span class="k"&gt;$(&lt;/span&gt;CUR_SRC&lt;span class="k"&gt;))&lt;/span&gt;
&lt;span class="nv"&gt;CUR_CPP&lt;/span&gt;     &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;filter %.cpp, &lt;span class="k"&gt;$(&lt;/span&gt;CUR_SRC&lt;span class="k"&gt;))&lt;/span&gt;

&lt;span class="c"&gt;# Get the include files, object files, dependent files by searching from PRG_INC_DIR.&lt;/span&gt;
&lt;span class="nv"&gt;CUR_INC_DIR&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;shell ls -AxR &lt;span class="k"&gt;$(&lt;/span&gt;PRG_INC_DIR&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;grep &lt;span class="s2"&gt;&amp;quot;:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;tr -d &lt;span class="s1"&gt;&amp;#39;:&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;CUR_INC&lt;/span&gt;     &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;foreach subdir,&lt;span class="k"&gt;$(&lt;/span&gt;CUR_INC_DIR&lt;span class="k"&gt;)&lt;/span&gt;,&lt;span class="k"&gt;$(&lt;/span&gt;subdir&lt;span class="k"&gt;)&lt;/span&gt;/*.h&lt;span class="k"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;SRC_H&lt;/span&gt;       &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;filter %.h, &lt;span class="k"&gt;$(&lt;/span&gt;CUR_INC&lt;span class="k"&gt;))&lt;/span&gt;
&lt;span class="c"&gt;#CUR_OBJ    := $(addprefix $(PRG_BIN_DIR)/,$(strip $(CUR_CPP:.cpp=.o) $(CUR_C:.c=.o)))&lt;/span&gt;
&lt;span class="c"&gt;#CUR_OBJ    := $(addprefix $(PRG_BIN_DIR)/,$(notdir $(CUR_CPP:.cpp=.o) $(CUR_C:.c=.o)))&lt;/span&gt;
&lt;span class="nv"&gt;CUR_OBJ&lt;/span&gt;     &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;strip &lt;span class="k"&gt;$(&lt;/span&gt;CUR_CPP:.cpp&lt;span class="o"&gt;=&lt;/span&gt;.o&lt;span class="k"&gt;)&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;CUR_C:.c&lt;span class="o"&gt;=&lt;/span&gt;.o&lt;span class="k"&gt;))&lt;/span&gt;
&lt;span class="c"&gt;#CUR_DEP    := $(addprefix $(PRG_BIN_DIR)/,$(notdir $(CUR_CPP:.cpp=.d) $(CUR_C:.c=.d)))&lt;/span&gt;
&lt;span class="nv"&gt;CUR_DEP&lt;/span&gt;     &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;strip &lt;span class="k"&gt;$(&lt;/span&gt;CUR_CPP:.cpp&lt;span class="o"&gt;=&lt;/span&gt;.d&lt;span class="k"&gt;)&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;CUR_C:.c&lt;span class="o"&gt;=&lt;/span&gt;.d&lt;span class="k"&gt;))&lt;/span&gt;

&lt;span class="c"&gt;# Create directory in the header files, bin and library directory.&lt;/span&gt;
&lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="nv"&gt;foreach&lt;/span&gt; &lt;span class="nv"&gt;dirname&lt;/span&gt;,&lt;span class="k"&gt;$&lt;/span&gt;(&lt;span class="nv"&gt;sort&lt;/span&gt; &lt;span class="k"&gt;$&lt;/span&gt;(&lt;span class="nv"&gt;PRG_INC_DIR&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="nv"&gt;PRG_BIN_DIR&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="nv"&gt;PRG_LIB_DIR&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="err"&gt;),\&lt;/span&gt;
  &lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="nv"&gt;shell&lt;/span&gt; &lt;span class="k"&gt;$&lt;/span&gt;(&lt;span class="nv"&gt;MKDIR&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="nv"&gt;dirname&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="err"&gt;))&lt;/span&gt;

&lt;span class="c"&gt;# Complie and link variables. LD_LIBS means the dynamic or static library needed for the object file.&lt;/span&gt;
&lt;span class="nv"&gt;CFLAGS&lt;/span&gt;      &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="k"&gt;$(if&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;DEBUG&lt;span class="k"&gt;)&lt;/span&gt;,-g -Wall, -O2 -Wall&lt;span class="k"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;CFLAGS&lt;/span&gt;      &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="k"&gt;$(if&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;GEN_DYN_LIB&lt;span class="k"&gt;)&lt;/span&gt;, &lt;span class="k"&gt;$(&lt;/span&gt;addprefix -fPIC -I ,&lt;span class="k"&gt;$(&lt;/span&gt;sort &lt;span class="k"&gt;$(&lt;/span&gt;dir &lt;span class="k"&gt;$(&lt;/span&gt;SRC_H&lt;span class="k"&gt;))))&lt;/span&gt;, &lt;span class="k"&gt;$(&lt;/span&gt;addprefix -I ,&lt;span class="k"&gt;$(&lt;/span&gt;sort &lt;span class="k"&gt;$(&lt;/span&gt;dir &lt;span class="k"&gt;$(&lt;/span&gt;SRC_H&lt;span class="k"&gt;)))))&lt;/span&gt;
&lt;span class="nv"&gt;CXXFLAGS&lt;/span&gt;    &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;CFLAGS&lt;span class="k"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;LDFLAGS&lt;/span&gt;     &lt;span class="o"&gt;:=&lt;/span&gt; 
&lt;span class="nv"&gt;LD_LIB_DIR&lt;/span&gt;  &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="c"&gt;#-L $(PRG_LIB_DIR)&lt;/span&gt;
&lt;span class="nv"&gt;LD_LIBS&lt;/span&gt;     &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="c"&gt;#-lsrcpbl -lmysqlclient&lt;/span&gt;
&lt;span class="nv"&gt;XLD_FLG&lt;/span&gt;     &lt;span class="o"&gt;:=&lt;/span&gt; -Xlinker &lt;span class="s2"&gt;&amp;quot;-(&amp;quot;&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;LDFLAGS&lt;span class="k"&gt;)&lt;/span&gt; -Xlinker &lt;span class="s2"&gt;&amp;quot;-)&amp;quot;&lt;/span&gt;

&lt;span class="c"&gt;# Add vpath.&lt;/span&gt;
&lt;span class="cp"&gt;vpath %.h $(sort $(dir $(SRC_H)))&lt;/span&gt;
&lt;span class="cp"&gt;vpath %.c $(sort $(dir $(CUR_C)))&lt;/span&gt;
&lt;span class="cp"&gt;vpath %.cpp $(sort $(dir $(CUR_CPP)))&lt;/span&gt;

&lt;span class="c"&gt;# Generate depend files.&lt;/span&gt;
&lt;span class="cp"&gt;ifneq &amp;quot;$(MAKECMDGOALS)&amp;quot; &amp;quot;clean&amp;quot;&lt;/span&gt;
&lt;span class="err"&gt;sinclude&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="nv"&gt;CUR_DEP&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;
&lt;span class="cp"&gt;endif&lt;/span&gt;

&lt;span class="c"&gt;# Gen_depend(depend-file,source-file,object-file,cc). This command-package is used to generate a depend file with a postfix of .d.&lt;/span&gt;
&lt;span class="cp"&gt;define gen_depend&lt;/span&gt;
  &lt;span class="err"&gt;@set&lt;/span&gt; &lt;span class="err"&gt;-e;&lt;/span&gt;                                      &lt;span class="err"&gt;\&lt;/span&gt;
  &lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="nv"&gt;RM&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt; &lt;span class="err"&gt;$1;&lt;/span&gt;                                     &lt;span class="err"&gt;\&lt;/span&gt;
  &lt;span class="err"&gt;$4&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="nv"&gt;CFLAGS&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt; &lt;span class="err"&gt;-MM&lt;/span&gt; &lt;span class="err"&gt;$2&lt;/span&gt; &lt;span class="err"&gt;|&lt;/span&gt;                         &lt;span class="err"&gt;\&lt;/span&gt;
  &lt;span class="nf"&gt;$(SED) &amp;#39;s,\($(notdir $3)\)&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;$3: &lt;span class="p"&gt;,&lt;/span&gt;&amp;#39; &amp;gt; $1.&lt;span class="n"&gt;tmp&lt;/span&gt;; \
  &lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="nv"&gt;SED&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt; -&lt;span class="n"&gt;e&lt;/span&gt; &amp;#39;&lt;span class="n"&gt;s&lt;/span&gt;/&lt;span class="c"&gt;#.*//&amp;#39;                           \&lt;/span&gt;
         -e &lt;span class="s1"&gt;&amp;#39;s/^[^:]*: *//&amp;#39;&lt;/span&gt;                     &lt;span class="se"&gt;\&lt;/span&gt;
         -e &lt;span class="s1"&gt;&amp;#39;s/ *\\$$//&amp;#39;&lt;/span&gt;                        &lt;span class="se"&gt;\&lt;/span&gt;
         -e &lt;span class="s1"&gt;&amp;#39;/^$$/ d&amp;#39;&lt;/span&gt;                           &lt;span class="se"&gt;\&lt;/span&gt;
         -e &lt;span class="s1"&gt;&amp;#39;s/$$/ :/&amp;#39;&lt;/span&gt; &amp;lt; &lt;span class="nv"&gt;$1&lt;/span&gt;.tmp &amp;gt;&amp;gt; &lt;span class="nv"&gt;$1&lt;/span&gt;.tmp&lt;span class="p"&gt;;&lt;/span&gt;      &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="k"&gt;$(&lt;/span&gt;MV&lt;span class="k"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;$1&lt;/span&gt;.tmp &lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="cp"&gt;endef&lt;/span&gt;

&lt;span class="c"&gt;# Rules to generate objects file(.o) from .c or .cpp files.&lt;/span&gt;
&lt;span class="nf"&gt;$(CURDIR)/%.o&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; %.&lt;span class="n"&gt;c&lt;/span&gt;
    @&lt;span class="k"&gt;$(&lt;/span&gt;call gen_depend,&lt;span class="k"&gt;$(&lt;/span&gt;patsubst %.o,%.d,&lt;span class="nv"&gt;$@&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;,&lt;span class="nv"&gt;$&amp;lt;&lt;/span&gt;,&lt;span class="nv"&gt;$@&lt;/span&gt;,&lt;span class="k"&gt;$(&lt;/span&gt;CC&lt;span class="k"&gt;))&lt;/span&gt;
    &lt;span class="k"&gt;$(&lt;/span&gt;CC&lt;span class="k"&gt;)&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;CFLAGS&lt;span class="k"&gt;)&lt;/span&gt; -o &lt;span class="nv"&gt;$@&lt;/span&gt; -c &lt;span class="nv"&gt;$&amp;lt;&lt;/span&gt;

&lt;span class="nf"&gt;$(CURDIR)/%.o&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; %.&lt;span class="n"&gt;cpp&lt;/span&gt;
    @&lt;span class="k"&gt;$(&lt;/span&gt;call gen_depend,&lt;span class="k"&gt;$(&lt;/span&gt;patsubst %.o,%.d,&lt;span class="nv"&gt;$@&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;,&lt;span class="nv"&gt;$&amp;lt;&lt;/span&gt;,&lt;span class="nv"&gt;$@&lt;/span&gt;,&lt;span class="k"&gt;$(&lt;/span&gt;CXX&lt;span class="k"&gt;))&lt;/span&gt;
    &lt;span class="k"&gt;$(&lt;/span&gt;CXX&lt;span class="k"&gt;)&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;CXXFLAGS&lt;span class="k"&gt;)&lt;/span&gt; -o &lt;span class="nv"&gt;$@&lt;/span&gt; -c &lt;span class="nv"&gt;$&amp;lt;&lt;/span&gt;

&lt;span class="c"&gt;# Gen_excbin(target,CUR_OBJ,cc). This command-package is used to generate a excutable file.&lt;/span&gt;
&lt;span class="cp"&gt;define gen_excbin&lt;/span&gt;
  ULT_BIN +&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;PRG_BIN_DIR&lt;span class="k"&gt;)&lt;/span&gt;/&lt;span class="nv"&gt;$1&lt;/span&gt;
  &lt;span class="k"&gt;$(&lt;/span&gt;PRG_BIN_DIR&lt;span class="k"&gt;)&lt;/span&gt;/&lt;span class="nv"&gt;$1&lt;/span&gt;: &lt;span class="nv"&gt;$2&lt;/span&gt;
    &lt;span class="nv"&gt;$3&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;LDFLAGS&lt;span class="k"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;$$&lt;/span&gt;^ &lt;span class="k"&gt;$(&lt;/span&gt;LD_LIB_DIR&lt;span class="k"&gt;)&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;LD_LIBS&lt;span class="k"&gt;)&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;XLD_FLG&lt;span class="k"&gt;)&lt;/span&gt; -o &lt;span class="nv"&gt;$$&lt;/span&gt;@
&lt;span class="cp"&gt;endef&lt;/span&gt;

&lt;span class="c"&gt;# Gen_libs(libs,CUR_OBJ,cc). This command-package is used to generate a dynamic lib or a static lib.&lt;/span&gt;
&lt;span class="cp"&gt;define gen_libs&lt;/span&gt;
  ULT_LIBS +&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;PRG_LIB_DIR&lt;span class="k"&gt;)&lt;/span&gt;/&lt;span class="nv"&gt;$1&lt;/span&gt;
  &lt;span class="k"&gt;$(&lt;/span&gt;PRG_LIB_DIR&lt;span class="k"&gt;)&lt;/span&gt;/&lt;span class="nv"&gt;$1&lt;/span&gt;: &lt;span class="nv"&gt;$2&lt;/span&gt;
    &lt;span class="nv"&gt;$3&lt;/span&gt; &lt;span class="k"&gt;$(if&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;GEN_DYN_LIB&lt;span class="k"&gt;)&lt;/span&gt;,-shared &lt;span class="nv"&gt;$$&lt;/span&gt;^ &lt;span class="k"&gt;$(&lt;/span&gt;CXXFLAGS&lt;span class="k"&gt;)&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;LD_LIB_DIR&lt;span class="k"&gt;)&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;LD_LIBS&lt;span class="k"&gt;)&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;XLD_FLG&lt;span class="k"&gt;)&lt;/span&gt; -o &lt;span class="nv"&gt;$$&lt;/span&gt;@,&lt;span class="nv"&gt;$$&lt;/span&gt;@ &lt;span class="nv"&gt;$$&lt;/span&gt;^&lt;span class="k"&gt;)&lt;/span&gt;
&lt;span class="cp"&gt;endef&lt;/span&gt;

&lt;span class="c"&gt;# Call gen_excbin to generate a excutale file.&lt;/span&gt;
&lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="nv"&gt;foreach&lt;/span&gt; &lt;span class="nv"&gt;bin&lt;/span&gt;,&lt;span class="k"&gt;$&lt;/span&gt;(&lt;span class="nv"&gt;EXCUTE_BIN&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="nv"&gt;eval&lt;/span&gt; &lt;span class="k"&gt;$&lt;/span&gt;(&lt;span class="nv"&gt;call&lt;/span&gt; &lt;span class="nv"&gt;gen_excbin&lt;/span&gt;,&lt;span class="k"&gt;$&lt;/span&gt;(&lt;span class="nv"&gt;bin&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="nv"&gt;CUR_OBJ&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="nv"&gt;CXX&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="err"&gt;)))&lt;/span&gt;

&lt;span class="c"&gt;# Call gen_libs to generate a dynamic lib.&lt;/span&gt;
&lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="nv"&gt;foreach&lt;/span&gt; &lt;span class="nv"&gt;lib&lt;/span&gt;,&lt;span class="k"&gt;$&lt;/span&gt;(&lt;span class="nv"&gt;DYNAMIC_LIBS&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="nv"&gt;eval&lt;/span&gt; &lt;span class="k"&gt;$&lt;/span&gt;(&lt;span class="nv"&gt;call&lt;/span&gt; &lt;span class="nv"&gt;gen_libs&lt;/span&gt;,&lt;span class="k"&gt;$&lt;/span&gt;(&lt;span class="nv"&gt;lib&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="nv"&gt;CUR_OBJ&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="nv"&gt;CXX&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="err"&gt;)))&lt;/span&gt;

&lt;span class="c"&gt;# Call gen_libs to generate a static lib.&lt;/span&gt;
&lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="nv"&gt;foreach&lt;/span&gt; &lt;span class="nv"&gt;lib&lt;/span&gt;,&lt;span class="k"&gt;$&lt;/span&gt;(&lt;span class="nv"&gt;STATIC_LIBS&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="nv"&gt;eval&lt;/span&gt; &lt;span class="k"&gt;$&lt;/span&gt;(&lt;span class="nv"&gt;call&lt;/span&gt; &lt;span class="nv"&gt;gen_libs&lt;/span&gt;,&lt;span class="k"&gt;$&lt;/span&gt;(&lt;span class="nv"&gt;lib&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="nv"&gt;CUR_OBJ&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="nv"&gt;AR&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="err"&gt;)))&lt;/span&gt;


&lt;span class="nf"&gt;all&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="nv"&gt;ULT_BIN&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="nv"&gt;ULT_LIBS&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;


&lt;span class="nf"&gt;clean&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; 
    -&lt;span class="k"&gt;$(&lt;/span&gt;FIND&lt;span class="k"&gt;)&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;CURDIR&lt;span class="k"&gt;)&lt;/span&gt; -name &lt;span class="s2"&gt;&amp;quot;*.o&amp;quot;&lt;/span&gt; -o -name &lt;span class="s2"&gt;&amp;quot;*.d&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;XARGS&lt;span class="k"&gt;)&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;RM&lt;span class="k"&gt;)&lt;/span&gt;
    -&lt;span class="k"&gt;$(&lt;/span&gt;RM&lt;span class="k"&gt;)&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;ULT_BIN&lt;span class="k"&gt;)&lt;/span&gt;
    -&lt;span class="k"&gt;$(&lt;/span&gt;RM&lt;span class="k"&gt;)&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;ULT_LIBS&lt;span class="k"&gt;)&lt;/span&gt;


&lt;span class="nf"&gt;help&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    @echo &lt;span class="nv"&gt;PROJECT_DIR&lt;/span&gt;&lt;span class="o"&gt;=[&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;PROJECT_DIR&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
    @echo &lt;span class="nv"&gt;CURDIR&lt;/span&gt;&lt;span class="o"&gt;=[&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;CURDIR&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
    @echo &lt;span class="nv"&gt;PRG_BIN_DIR&lt;/span&gt;&lt;span class="o"&gt;=[&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;PRG_BIN_DIR&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
    @echo &lt;span class="nv"&gt;PRG_LIB_DIR&lt;/span&gt;&lt;span class="o"&gt;=[&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;PRG_LIB_DIR&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
    @echo &lt;span class="nv"&gt;PRG_INC_DIR&lt;/span&gt;&lt;span class="o"&gt;=[&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;PRG_INC_DIR&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
    @echo &lt;span class="nv"&gt;CUR_SRC_DIR&lt;/span&gt;&lt;span class="o"&gt;=[&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;CUR_SRC_DIR&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
    @echo &lt;span class="nv"&gt;CUR_SRC&lt;/span&gt;&lt;span class="o"&gt;=[&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;CUR_SRC&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
    @echo &lt;span class="nv"&gt;CUR_C&lt;/span&gt;&lt;span class="o"&gt;=[&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;CUR_C&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
    @echo &lt;span class="nv"&gt;CUR_CPP&lt;/span&gt;&lt;span class="o"&gt;=[&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;CUR_CPP&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
    @echo &lt;span class="nv"&gt;CUR_OBJ&lt;/span&gt;&lt;span class="o"&gt;=[&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;CUR_OBJ&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
    @echo &lt;span class="nv"&gt;CUR_DEP&lt;/span&gt;&lt;span class="o"&gt;=[&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;CUR_DEP&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
    @echo &lt;span class="nv"&gt;STD_OPT&lt;/span&gt;&lt;span class="o"&gt;=[&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;STD_OPT&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
    @echo &lt;span class="nv"&gt;CFLAGS&lt;/span&gt;&lt;span class="o"&gt;=[&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;CFLAGS&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
    @echo &lt;span class="nv"&gt;STATIC_LIBS&lt;/span&gt;&lt;span class="o"&gt;=[&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;STATIC_LIBS&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
    @echo &lt;span class="nv"&gt;DYNAMIC_LIBS&lt;/span&gt;&lt;span class="o"&gt;=[&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;DYNAMIC_LIBS&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Fri, 14 Aug 2015 20:27:00 +0800</pubDate><guid>tag:typecodes.com,2015-08-14:cseries/cppgeneralmakefile.html</guid><category>makefile</category></item><item><title>解决make编译链接动态库错误：libxx.so: undefined reference to xx</title><link>https://typecodes.com/cseries/libraryundefinedref.html</link><description>&lt;p&gt;最近在写一个Makefile，调试时遇到了&lt;code&gt;libsrcpbl.so: undefined reference to gcProgramName&lt;/code&gt;的问题。在这个Makefile脚本里面，终极目标是通过链接一个自定义的动态库&lt;code&gt;libsrcpbl.so&lt;/code&gt;生成一个ELF目标文件。&lt;/p&gt;
&lt;p&gt;由于链接生成libsrcpbl.so动态库的.o文件比较多，无法定位具体的错误程序文件和位置，所以折腾了较长时间。&lt;/p&gt;


&lt;h4&gt;1 场景再现&lt;/h4&gt;
&lt;p&gt;为了能快速定位出错的位置，自己写了一个很简单的测试程序test.c，该程序调用了libsrcpbl.so动态库中的一个自定义的公共头文件&lt;code&gt;pbl_global.h&lt;/code&gt;。&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cm"&gt;/** &lt;/span&gt;
&lt;span class="cm"&gt; * @FileName    tst.c&lt;/span&gt;
&lt;span class="cm"&gt; * @Describe    a simple test program to find out the reason of dynamic library undefined reference.&lt;/span&gt;
&lt;span class="cm"&gt; * @Author      vfhky 2015.08.12 https://typecodes.com/cseries/libraryundefinedref.html&lt;/span&gt;
&lt;span class="cm"&gt; */&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;quot;pbl_global.h&amp;quot;     &lt;/span&gt;&lt;span class="c1"&gt;//为减少“干扰”，还可以去掉这个头文件引用&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;argc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt; &lt;span class="n"&gt;argv&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;exit&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;接着使用&lt;code&gt;make&lt;/code&gt;命令编译链接生成目标ELF文件test，但是在ld链接自定义的动态库libsrcpbl.so的时候报错。为了减少&lt;code&gt;干扰&lt;/code&gt;，还可以把pbl_global.h头文件引用去掉。也就是tst.c中是一个及其普通的程序，与libsrcpbl.so中的数据完全没关系，但是还是报出同样的错误：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@typecodes test]# make
gcc -std=c99 -D_GNU_SOURCE  -g -Wall  -I /root/gcc_test/tcp_msg/include/ -I /root/gcc_test/tcp_msg/include/CommAPI/ -I /root/gcc_test/tcp_msg/include/pbl/ -o /root/gcc_test/tcp_msg/src/test/tst.o -c tst.c
g++ -std=c99 -D_GNU_SOURCE   /root/gcc_test/tcp_msg/src/test/tst.o -L /root/gcc_test/tcp_msg/lib  -lsrcpbl -Xlinker &amp;quot;-(&amp;quot;  -Xlinker &amp;quot;-)&amp;quot; -o /root/gcc_test/tcp_msg/bin/test
/root/gcc_test/tcp_msg/lib/libsrcpbl.so: undefined reference to `gcProgramName&amp;#39;
collect2: error: ld returned 1 exit status
make: *** [/root/gcc_test/tcp_msg/bin/test] Error 1
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="ld链接时报错：undefined reference" src="https://o3cex9zsl.qnssl.com/2015/08/library_undefined_reference.png" title="ld链接时报错：undefined reference" /&gt;&lt;/p&gt;
&lt;h4&gt;2 查找 libsrcpbl.so: undefined reference to gcProgramName 的原因&lt;/h4&gt;
&lt;p&gt;通过make显示的内容，基本判断Makefile文件是正确的。用&lt;code&gt;nm libsrcpbl.so&lt;/code&gt;命令查看一下链接的动态库，结果如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;##### 使用nm查看动态库
[root@typecodes test]# nm -A /root/gcc_test/tcp_msg/lib/libsrcpbl.so|grep gcProgramName
/root/gcc_test/tcp_msg/lib/libsrcpbl.so:                 U gcProgramName
[root@typecodes test]#
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="使用nm查看动态库中的符号" src="https://o3cex9zsl.qnssl.com/2015/08/nm_library_grep.png" title="使用nm查看动态库中的符号" /&gt;&lt;/p&gt;
&lt;p&gt;根据上图中的信息，结合前文&lt;a href="https://typecodes.com/cseries/nmobjectfilesymbol.html" title="查看原文"&gt;《Unix系统中nm命令展示目标文件符号的方法》&lt;/a&gt;nm命令的man手册关于符号&lt;code&gt;U&lt;/code&gt;的说明，推测可能原因：libsrcpbl.so动态库文件中存在gcProgramName符号（即变量），需要从test.o对象文件中链接进来，但是test.c程序中没有定义gcProgramName变量，所以报错了。&lt;/p&gt;
&lt;p&gt;于是查看原工程中的头文件pbl_global.h，果然发现了gcProgramName是一个外部全局变量，其声明如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;extern char gcProgramName[20 + 1];
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;接着发现生成这个libsrcpbl.so动态库的一个源程序中，通过引用头文件pbl_global.h，然后直接使用了这个外部全局变量gcProgramName，因此需要在tst.c对这个变量进行定义。&lt;/p&gt;
&lt;h5&gt;2 解决方法&lt;/h5&gt;
&lt;p&gt;找到原因后，解决就很简单了：只要在test.c程序中定义这个外部全局变量gcProgramName即可。&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;

&lt;span class="c1"&gt;//定义外部全局变量，解决libsrcpbl.so: undefined reference to gcProgramName的问题&lt;/span&gt;
&lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;gcProgramName&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;argc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt; &lt;span class="n"&gt;argv&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;//在这里就可以随便赋值使用了&lt;/span&gt;
    &lt;span class="n"&gt;memcpy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;gcProgramName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;TestPrg&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;strlen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;TestPrg&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;exit&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;最后重新make一下，链接生成ELF文件成功！&lt;/p&gt;
&lt;p&gt;&lt;img alt="使用nm查看动态库中的符号" src="https://o3cex9zsl.qnssl.com/2015/08/make_link_library_sucess.png" title="使用nm查看动态库中的符号" /&gt;&lt;/p&gt;
&lt;h5&gt;4 总结&lt;/h5&gt;
&lt;p&gt;在make编译链接某个动态库lxx.so时，如果报&lt;code&gt;libxx.so: undefined reference to xx&lt;/code&gt;的话，很可能是由下面两种原因引起的。Unix/Linux系统中使用&lt;code&gt;nm&lt;/code&gt;、&lt;code&gt;objdump&lt;/code&gt;和&lt;code&gt;readelf&lt;/code&gt;命令可以辅助调试目标文件。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;1、链接的动态库中存在只做了声明的自定义的函数/全局变量，但是在其它对象文件中没有实现定义；
2、链接生成的目标文件中引用了某动态库的自定义函数/全局变量，但是没有通过`-lXX`选项链接进来。
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Thu, 13 Aug 2015 21:05:00 +0800</pubDate><guid>tag:typecodes.com,2015-08-13:cseries/libraryundefinedref.html</guid><category>nm</category><category>undefined reference</category></item><item><title>Unix系统中nm命令展示目标文件符号的方法</title><link>https://typecodes.com/cseries/nmobjectfilesymbol.html</link><description>&lt;p&gt;在*nix系统中，通过gnu开源gcc或者g++工具生成的目标文件（object file），可以用&lt;code&gt;nm&lt;/code&gt;、&lt;code&gt;objdump&lt;/code&gt;和&lt;code&gt;readelf&lt;/code&gt;这三个命令来查看。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;nm：显示目标文件中的符号；
objdump：打印目标文件中的详细信息；
readelf：显示关于 ELF 目标文件的信息。
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;之前在调试makefile文件的时候，链接动态库出错：&lt;code&gt;libsrcpbl.so: undefined reference to 'gcProgramName'&lt;/code&gt;。也就是变量gcProgramName没定义，后来通过&lt;code&gt;nm -u libsrcpbl.so&lt;/code&gt;命令辅助排查解决了。&lt;/p&gt;


&lt;p&gt;为了更全面的了解一下这个命令，在自己的CentOS7.1机器上通过&lt;code&gt;man nm&lt;/code&gt;操作查看gnu官方说明手册。同时，对里面涉及的一些opinion选项和nm命令显示的符号做了DESCRIPTION说明，供以后参考。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="err"&gt;######&lt;/span&gt; &lt;span class="nx"&gt;CentOS7&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="nx"&gt;上查看nm命令的man手册&lt;/span&gt;&lt;span class="err"&gt;，&lt;/span&gt;&lt;span class="nx"&gt;部分选项仍未能理解&lt;/span&gt;&lt;span class="err"&gt;。&lt;/span&gt;&lt;span class="nx"&gt;如有熟悉者请指教&lt;/span&gt;&lt;span class="err"&gt;，&lt;/span&gt;&lt;span class="nx"&gt;谢谢&lt;/span&gt;&lt;span class="err"&gt;！&lt;/span&gt;
&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;root&lt;/span&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nx"&gt;typecodes&lt;/span&gt; &lt;span class="nx"&gt;lib&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="nx"&gt;man&lt;/span&gt; &lt;span class="nx"&gt;nm&lt;/span&gt;
&lt;span class="nx"&gt;NM&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                                                                  &lt;span class="nx"&gt;GNU&lt;/span&gt; &lt;span class="nx"&gt;Development&lt;/span&gt; &lt;span class="nx"&gt;Tools&lt;/span&gt;                                                                 &lt;span class="nx"&gt;NM&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nx"&gt;NAME&lt;/span&gt;
       &lt;span class="nx"&gt;nm&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;list&lt;/span&gt; &lt;span class="nx"&gt;symbols&lt;/span&gt; &lt;span class="nx"&gt;from&lt;/span&gt; &lt;span class="nx"&gt;object&lt;/span&gt; &lt;span class="nx"&gt;files&lt;/span&gt;

&lt;span class="nx"&gt;SYNOPSIS&lt;/span&gt;&lt;span class="err"&gt;【&lt;/span&gt;&lt;span class="nx"&gt;纲要&lt;/span&gt;&lt;span class="err"&gt;】&lt;/span&gt;
       &lt;span class="nx"&gt;nm&lt;/span&gt; &lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="na"&gt;-A&lt;/span&gt;&lt;span class="o"&gt;|-&lt;/span&gt;&lt;span class="nx"&gt;o&lt;/span&gt;&lt;span class="o"&gt;|--&lt;/span&gt;&lt;span class="nx"&gt;print&lt;/span&gt;&lt;span class="na"&gt;-file-name&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt; &lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="na"&gt;-a&lt;/span&gt;&lt;span class="o"&gt;|--&lt;/span&gt;&lt;span class="nx"&gt;debug&lt;/span&gt;&lt;span class="na"&gt;-syms&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;
          &lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="na"&gt;-B&lt;/span&gt;&lt;span class="o"&gt;|--&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;bsd&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt; &lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="na"&gt;-C&lt;/span&gt;&lt;span class="o"&gt;|--&lt;/span&gt;&lt;span class="nx"&gt;demangle&lt;/span&gt;&lt;span class="err"&gt;[&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
          &lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="na"&gt;-D&lt;/span&gt;&lt;span class="o"&gt;|--&lt;/span&gt;&lt;span class="nx"&gt;dynamic&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt; &lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="na"&gt;-fformat&lt;/span&gt;&lt;span class="o"&gt;|--&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;format&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;
          &lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="na"&gt;-g&lt;/span&gt;&lt;span class="o"&gt;|--&lt;/span&gt;&lt;span class="nx"&gt;extern&lt;/span&gt;&lt;span class="na"&gt;-only&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt; &lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="na"&gt;-h&lt;/span&gt;&lt;span class="o"&gt;|--&lt;/span&gt;&lt;span class="nx"&gt;help&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;
          &lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="na"&gt;-l&lt;/span&gt;&lt;span class="o"&gt;|--&lt;/span&gt;&lt;span class="nx"&gt;line&lt;/span&gt;&lt;span class="na"&gt;-numbers&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt; &lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="na"&gt;-n&lt;/span&gt;&lt;span class="o"&gt;|-&lt;/span&gt;&lt;span class="nx"&gt;v&lt;/span&gt;&lt;span class="o"&gt;|--&lt;/span&gt;&lt;span class="nx"&gt;numeric&lt;/span&gt;&lt;span class="na"&gt;-sort&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;
          &lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="na"&gt;-P&lt;/span&gt;&lt;span class="o"&gt;|--&lt;/span&gt;&lt;span class="nx"&gt;portability&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt; &lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="na"&gt;-p&lt;/span&gt;&lt;span class="o"&gt;|--&lt;/span&gt;&lt;span class="nx"&gt;no&lt;/span&gt;&lt;span class="na"&gt;-sort&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;
          &lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="na"&gt;-r&lt;/span&gt;&lt;span class="o"&gt;|--&lt;/span&gt;&lt;span class="nx"&gt;reverse&lt;/span&gt;&lt;span class="na"&gt;-sort&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt; &lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="na"&gt;-S&lt;/span&gt;&lt;span class="o"&gt;|--&lt;/span&gt;&lt;span class="nx"&gt;print&lt;/span&gt;&lt;span class="na"&gt;-size&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;
          &lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="na"&gt;-s&lt;/span&gt;&lt;span class="o"&gt;|--&lt;/span&gt;&lt;span class="nx"&gt;print&lt;/span&gt;&lt;span class="na"&gt;-armap&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt; &lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="na"&gt;-t&lt;/span&gt; &lt;span class="nx"&gt;radix&lt;/span&gt;&lt;span class="o"&gt;|--&lt;/span&gt;&lt;span class="n"&gt;radix&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;radix&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;
          &lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="na"&gt;-u&lt;/span&gt;&lt;span class="o"&gt;|--&lt;/span&gt;&lt;span class="nx"&gt;undefined&lt;/span&gt;&lt;span class="na"&gt;-only&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt; &lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="na"&gt;-V&lt;/span&gt;&lt;span class="o"&gt;|--&lt;/span&gt;&lt;span class="nx"&gt;version&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;
          &lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="na"&gt;-X&lt;/span&gt; &lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="nx"&gt;_64&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt; &lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;defined&lt;/span&gt;&lt;span class="na"&gt;-only&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt; &lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;no&lt;/span&gt;&lt;span class="na"&gt;-demangle&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;
          &lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;plugin&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt; &lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;size&lt;/span&gt;&lt;span class="na"&gt;-sort&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt; &lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;special&lt;/span&gt;&lt;span class="na"&gt;-syms&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;
          &lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;synthetic&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt; &lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;bfdname&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;
          &lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;objfile...&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;

&lt;span class="nx"&gt;DESCRIPTION&lt;/span&gt;
       &lt;span class="nx"&gt;GNU&lt;/span&gt; &lt;span class="nx"&gt;nm&lt;/span&gt; &lt;span class="nx"&gt;lists&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;symbols&lt;/span&gt; &lt;span class="nx"&gt;from&lt;/span&gt; &lt;span class="nx"&gt;object&lt;/span&gt; &lt;span class="nx"&gt;files&lt;/span&gt; &lt;span class="nx"&gt;objfile&lt;/span&gt;&lt;span class="p"&gt;....&lt;/span&gt;  &lt;span class="nx"&gt;If&lt;/span&gt; &lt;span class="nx"&gt;no&lt;/span&gt; &lt;span class="nx"&gt;object&lt;/span&gt; &lt;span class="nx"&gt;files&lt;/span&gt; &lt;span class="nx"&gt;are&lt;/span&gt; &lt;span class="nx"&gt;listed&lt;/span&gt; &lt;span class="nx"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;arguments&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;nm&lt;/span&gt; &lt;span class="nx"&gt;assumes&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;file&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="err"&gt;【&lt;/span&gt;&lt;span class="nx"&gt;GNU&lt;/span&gt; &lt;span class="nx"&gt;nm命令展示nm参数中的所有目标文件中的符号&lt;/span&gt;&lt;span class="err"&gt;（&lt;/span&gt;&lt;span class="nx"&gt;默认目标文件是a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;out&lt;/span&gt;&lt;span class="err"&gt;）】&lt;/span&gt;

       &lt;span class="nx"&gt;For&lt;/span&gt; &lt;span class="nx"&gt;each&lt;/span&gt; &lt;span class="nx"&gt;symbol&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;nm&lt;/span&gt; &lt;span class="nx"&gt;shows&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;

       &lt;span class="nx"&gt;o&lt;/span&gt;   &lt;span class="nx"&gt;The&lt;/span&gt; &lt;span class="nx"&gt;symbol&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;radix&lt;/span&gt; &lt;span class="nx"&gt;selected&lt;/span&gt; &lt;span class="nx"&gt;by&lt;/span&gt; &lt;span class="nx"&gt;options&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;see&lt;/span&gt; &lt;span class="nx"&gt;below&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nx"&gt;or&lt;/span&gt; &lt;span class="nx"&gt;hexadecimal&lt;/span&gt; &lt;span class="nx"&gt;by&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="err"&gt;【&lt;/span&gt;&lt;span class="nx"&gt;符号是按照下面radix进制&lt;/span&gt;&lt;span class="err"&gt;（&lt;/span&gt;&lt;span class="nx"&gt;默认十六进制&lt;/span&gt;&lt;span class="err"&gt;）&lt;/span&gt;&lt;span class="nx"&gt;显示&lt;/span&gt;&lt;span class="err"&gt;】&lt;/span&gt;

       &lt;span class="nx"&gt;o&lt;/span&gt;   &lt;span class="nx"&gt;The&lt;/span&gt; &lt;span class="nx"&gt;symbol&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;  &lt;span class="nx"&gt;At&lt;/span&gt; &lt;span class="nx"&gt;least&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;following&lt;/span&gt; &lt;span class="nx"&gt;types&lt;/span&gt; &lt;span class="nx"&gt;are&lt;/span&gt; &lt;span class="nx"&gt;used&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;others&lt;/span&gt; &lt;span class="nx"&gt;are&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;well&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;depending&lt;/span&gt; &lt;span class="nx"&gt;on&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;object&lt;/span&gt; &lt;span class="nx"&gt;file&lt;/span&gt; &lt;span class="nx"&gt;format&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;  &lt;span class="nx"&gt;If&lt;/span&gt; &lt;span class="nx"&gt;lowercase&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;symbol&lt;/span&gt; &lt;span class="nx"&gt;is&lt;/span&gt; &lt;span class="nx"&gt;usually&lt;/span&gt;
           &lt;span class="nx"&gt;local&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nx"&gt;uppercase&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;symbol&lt;/span&gt; &lt;span class="nx"&gt;is&lt;/span&gt; &lt;span class="nx"&gt;global&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;external&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;  &lt;span class="nx"&gt;There&lt;/span&gt; &lt;span class="nx"&gt;are&lt;/span&gt; &lt;span class="nx"&gt;however&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;few&lt;/span&gt; &lt;span class="nx"&gt;lowercase&lt;/span&gt; &lt;span class="nx"&gt;symbols&lt;/span&gt; &lt;span class="nx"&gt;that&lt;/span&gt; &lt;span class="nx"&gt;are&lt;/span&gt; &lt;span class="nx"&gt;shown&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;special&lt;/span&gt; &lt;span class="nx"&gt;global&lt;/span&gt; &lt;span class="nx"&gt;symbols&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;u&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;v&amp;quot;&lt;/span&gt;
           &lt;span class="nx"&gt;and&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;w&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="err"&gt;【&lt;/span&gt;&lt;span class="nx"&gt;小写符号通常表示值是局部的&lt;/span&gt;&lt;span class="err"&gt;，&lt;/span&gt;&lt;span class="nx"&gt;大写表示全局或外部的&lt;/span&gt;&lt;span class="err"&gt;。&lt;/span&gt;&lt;span class="nx"&gt;小写u&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;v&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;w除外&lt;/span&gt;&lt;span class="err"&gt;】&lt;/span&gt;

           &lt;span class="s2"&gt;&amp;quot;A&amp;quot;&lt;/span&gt; &lt;span class="nx"&gt;The&lt;/span&gt; &lt;span class="nx"&gt;symbol&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;s value is absolute, and will not be changed by further linking.【符号的值是绝对固定的，在后面的链接中也不会改变】&lt;/span&gt;

&lt;span class="s1"&gt;           &amp;quot;B&amp;quot;&lt;/span&gt;
&lt;span class="s1"&gt;           &amp;quot;b&amp;quot; The symbol is in the uninitialized data section (known as BSS).【符号位于内存中未初始化的区域，即BSS段】&lt;/span&gt;

&lt;span class="s1"&gt;           &amp;quot;C&amp;quot; The symbol is common.  Common symbols are uninitialized data.  When linking, multiple common symbols may appear with the same name.  If the symbol&lt;/span&gt;
&lt;span class="s1"&gt;               is defined anywhere, the common symbols are treated as undefined references.【C表示符号类型是未初始化的。当链接时，可能出现多个常用符号同名，这时如果该符号值都被定义了，那么会被当作未定义的引用（重定义错误）】&lt;/span&gt;

&lt;span class="s1"&gt;           &amp;quot;D&amp;quot;&lt;/span&gt;
&lt;span class="s1"&gt;           &amp;quot;d&amp;quot; The symbol is in the initialized data section.【已经初始化的数据段（全局变量）】&lt;/span&gt;

&lt;span class="s1"&gt;           &amp;quot;G&amp;quot;&lt;/span&gt;
&lt;span class="s1"&gt;           &amp;quot;g&amp;quot; The symbol is in an initialized data section for small objects.  Some object file formats permit more efficient access to small data objects, such&lt;/span&gt;
&lt;span class="s1"&gt;               as a global int variable as opposed to a large global array.【小目标文件中的未初始化的数据段的符号】&lt;/span&gt;

&lt;span class="s1"&gt;           &amp;quot;i&amp;quot; For PE format files this indicates that the symbol is in a section specific to the implementation of DLLs.  For ELF format files this indicates&lt;/span&gt;
&lt;span class="s1"&gt;               that the symbol is an indirect function.  This is a GNU extension to the standard set of ELF symbol types.  It indicates a symbol which if&lt;/span&gt;
&lt;span class="s1"&gt;               referenced by a relocation does not evaluate to its address, but instead must be invoked at runtime.  The runtime execution will then return the&lt;/span&gt;
&lt;span class="s1"&gt;               value to be used in the relocation.&lt;/span&gt;

&lt;span class="s1"&gt;           &amp;quot;N&amp;quot; The symbol is a debugging symbol.【N代表调试符号】&lt;/span&gt;

&lt;span class="s1"&gt;           &amp;quot;p&amp;quot; The symbols is in a stack unwind section.【非重定向的栈区】&lt;/span&gt;

&lt;span class="s1"&gt;           &amp;quot;R&amp;quot;&lt;/span&gt;
&lt;span class="s1"&gt;           &amp;quot;r&amp;quot; The symbol is in a read only data section.【只读数据区】&lt;/span&gt;

&lt;span class="s1"&gt;           &amp;quot;S&amp;quot;&lt;/span&gt;
&lt;span class="s1"&gt;           &amp;quot;s&amp;quot; The symbol is in an uninitialized data section for small objects.【未初始化的数据区域】&lt;/span&gt;

&lt;span class="s1"&gt;           &amp;quot;T&amp;quot;&lt;/span&gt;
&lt;span class="s1"&gt;           &amp;quot;t&amp;quot; The symbol is in the text (code) section.【内存中代码文本段（通常是全局非静态函数等）】&lt;/span&gt;

&lt;span class="s1"&gt;           &amp;quot;U&amp;quot; The symbol is undefined.【未定义的符号，需要从其它对象文件中链接进来】&lt;/span&gt;

&lt;span class="s1"&gt;           &amp;quot;u&amp;quot; The symbol is a unique global symbol.  This is a GNU extension to the standard set of ELF symbol bindings.  For such a symbol the dynamic linker&lt;/span&gt;
&lt;span class="s1"&gt;               will make sure that in the entire process there is just one symbol with this name and type in use.【链接器保证唯一性的符号】&lt;/span&gt;

&lt;span class="s1"&gt;           &amp;quot;V&amp;quot;&lt;/span&gt;
&lt;span class="s1"&gt;           &amp;quot;v&amp;quot; The symbol is a weak object.  When a weak defined symbol is linked with a normal defined symbol, the normal defined symbol is used with no error.&lt;/span&gt;
&lt;span class="s1"&gt;               When a weak undefined symbol is linked and the symbol is not defined, the value of the weak symbol becomes zero with no error.  On some systems,&lt;/span&gt;
&lt;span class="s1"&gt;               uppercase indicates that a default value has been specified.&lt;/span&gt;

&lt;span class="s1"&gt;           &amp;quot;W&amp;quot;&lt;/span&gt;
&lt;span class="s1"&gt;           &amp;quot;w&amp;quot; The symbol is a weak symbol that has not been specifically tagged as a weak object symbol.  When a weak defined symbol is linked with a normal&lt;/span&gt;
&lt;span class="s1"&gt;               defined symbol, the normal defined symbol is used with no error.  When a weak undefined symbol is linked and the symbol is not defined, the value&lt;/span&gt;
&lt;span class="s1"&gt;               of the symbol is determined in a system-specific manner without error.  On some systems, uppercase indicates that a default value has been&lt;/span&gt;
&lt;span class="s1"&gt;               specified.【表示如果其他函数库中也有对这个符号的定义，则其他符号的定义可以覆盖这个定义】&lt;/span&gt;

&lt;span class="s1"&gt;           &amp;quot;-&amp;quot; The symbol is a stabs symbol in an a.out object file.  In this case, the next values printed are the stabs other field, the stabs desc field, and&lt;/span&gt;
&lt;span class="s1"&gt;               the stab type.  Stabs symbols are used to hold debugging information.&lt;/span&gt;

&lt;span class="s1"&gt;           &amp;quot;?&amp;quot; The symbol type is unknown, or object file format specific.&lt;/span&gt;

&lt;span class="s1"&gt;       o   The symbol name.&lt;/span&gt;

&lt;span class="s1"&gt;OPTIONS     【nm 可以使用的参数】&lt;/span&gt;
&lt;span class="s1"&gt;       The long and short forms of options, shown here as alternatives, are equivalent.【下面展示的分别以长、短形式的选项都是等效的】&lt;/span&gt;

&lt;span class="s1"&gt;       -A&lt;/span&gt;
&lt;span class="s1"&gt;       -o&lt;/span&gt;
&lt;span class="s1"&gt;       --print-file-name&lt;/span&gt;
&lt;span class="s1"&gt;           Precede each symbol by the name of the input file (or archive member) in which it was found, rather than identifying the input file once only, before&lt;/span&gt;
&lt;span class="s1"&gt;           all of its symbols.【输出符号所对应的库的名字，便于查找符号对应的被定义的库】&lt;/span&gt;

&lt;span class="s1"&gt;       -a&lt;/span&gt;
&lt;span class="s1"&gt;       --debug-syms&lt;/span&gt;
&lt;span class="s1"&gt;           Display all symbols, even debugger-only symbols; normally these are not listed.【展示所有的符号（包括默认不展示的调试符号）】&lt;/span&gt;

&lt;span class="s1"&gt;       -B  The same as --format=bsd (for compatibility with the MIPS nm).&lt;/span&gt;

&lt;span class="s1"&gt;       -C&lt;/span&gt;
&lt;span class="s1"&gt;       --demangle&lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="s1"&gt;&lt;/span&gt;
&lt;span class="s1"&gt;           Decode (demangle) low-level symbol names into user-level names.  Besides removing any initial underscore prepended by the system, this makes C++&lt;/span&gt;
&lt;span class="s1"&gt;           function names readable. Different compilers have different mangling styles. The optional demangling style argument can be used to choose an&lt;/span&gt;
&lt;span class="s1"&gt;           appropriate demangling style for your compiler.【将低级符号名解码(demangle)成用户级的名字，使得C++函数名具有可读性。为了区分重载函数，c++编译器会将函数返回值/参数等信息附加到函数名称中去组成一个mangle过的符号。这里的-C选项就是做一个逆操作，输出其原始可理解的符号名称】&lt;/span&gt;

&lt;span class="s1"&gt;       --no-demangle&lt;/span&gt;
&lt;span class="s1"&gt;           Do not demangle low-level symbol names.  This is the default.&lt;/span&gt;

&lt;span class="s1"&gt;       -D&lt;/span&gt;
&lt;span class="s1"&gt;       --dynamic&lt;/span&gt;
&lt;span class="s1"&gt;           Display the dynamic symbols rather than the normal symbols.  This is only meaningful for dynamic objects, such as certain types of shared libraries.【显示动态符号（只对动态目标有效，如特定类型的共享库）】&lt;/span&gt;

&lt;span class="s1"&gt;       -f format&lt;/span&gt;
&lt;span class="s1"&gt;       --format=format&lt;/span&gt;
&lt;span class="s1"&gt;           Use the output format format, which can be &amp;quot;bsd&amp;quot;, &amp;quot;sysv&amp;quot;, or &amp;quot;posix&amp;quot;.  The default is &amp;quot;bsd&amp;quot;.  Only the first character of format is significant; it can&lt;/span&gt;
&lt;span class="s1"&gt;           be either upper or lower case.【使用format格式输出】&lt;/span&gt;

&lt;span class="s1"&gt;       -g&lt;/span&gt;
&lt;span class="s1"&gt;       --extern-only&lt;/span&gt;
&lt;span class="s1"&gt;           Display only external symbols.【仅显示外部符号】&lt;/span&gt;

&lt;span class="s1"&gt;       -h&lt;/span&gt;
&lt;span class="s1"&gt;       --help&lt;/span&gt;
&lt;span class="s1"&gt;           Show a summary of the options to nm and exit.&lt;/span&gt;

&lt;span class="s1"&gt;       -l&lt;/span&gt;
&lt;span class="s1"&gt;       --line-numbers&lt;/span&gt;
&lt;span class="s1"&gt;           For each symbol, use debugging information to try to find a filename and line number.  For a defined symbol, look for the line number of the address of&lt;/span&gt;
&lt;span class="s1"&gt;           the symbol.  For an undefined symbol, look for the line number of a relocation entry which refers to the symbol.  If line number information can be&lt;/span&gt;
&lt;span class="s1"&gt;           found, print it after the other symbol information.【对每个符号，使用调试信息（对象文件编译时增加-g选项）以便找到文件名和行号。对于已定义的符号，查找符号地址的行号。对于未定义符号，查找指向符号重定位入口的行号。如果可以找到行号信息，显示在符号信息之后】&lt;/span&gt;

&lt;span class="s1"&gt;       -n&lt;/span&gt;
&lt;span class="s1"&gt;       -v&lt;/span&gt;
&lt;span class="s1"&gt;       --numeric-sort&lt;/span&gt;
&lt;span class="s1"&gt;           Sort symbols numerically by their addresses, rather than alphabetically by their names.【按照符号对应的地址排序而不是字母】&lt;/span&gt;

&lt;span class="s1"&gt;       -p&lt;/span&gt;
&lt;span class="s1"&gt;       --no-sort&lt;/span&gt;
&lt;span class="s1"&gt;           Do not bother to sort the symbols in any order; print them in the order encountered.【按目标文件中遇到的符号顺序显示】&lt;/span&gt;

&lt;span class="s1"&gt;       -P&lt;/span&gt;
&lt;span class="s1"&gt;       --portability&lt;/span&gt;
&lt;span class="s1"&gt;           Use the POSIX.2 standard output format instead of the default format.  Equivalent to -f posix.【使用POSIX.2标准输出格式代替默认的输出格式。等同于使用任选项-f?posix】&lt;/span&gt;

&lt;span class="s1"&gt;       -r&lt;/span&gt;
&lt;span class="s1"&gt;       --reverse-sort&lt;/span&gt;
&lt;span class="s1"&gt;           Reverse the order of the sort (whether numeric or alphabetic); let the last come first.【不管以数字或字母为基本，都反转排序】&lt;/span&gt;

&lt;span class="s1"&gt;       -S&lt;/span&gt;
&lt;span class="s1"&gt;       --print-size&lt;/span&gt;
&lt;span class="s1"&gt;           Print both value and size of defined symbols for the &amp;quot;bsd&amp;quot; output style.  This option has no effect for object formats that do not record symbol sizes,&lt;/span&gt;
&lt;span class="s1"&gt;           unless --size-sort is also used in which case a calculated size is displayed.&lt;/span&gt;

&lt;span class="s1"&gt;       -s&lt;/span&gt;
&lt;span class="s1"&gt;       --print-armap&lt;/span&gt;
&lt;span class="s1"&gt;           When listing symbols from archive members, include the index: a mapping (stored in the archive by ar or ranlib) of which modules contain definitions&lt;/span&gt;
&lt;span class="s1"&gt;           for which names.【当列出库中成员的符号时，包含索引（即哪些模块包含哪些名字的映射）】&lt;/span&gt;

&lt;span class="s1"&gt;       -t radix&lt;/span&gt;
&lt;span class="s1"&gt;       --radix=radix&lt;/span&gt;
&lt;span class="s1"&gt;           Use radix as the radix for printing the symbol values.  It must be d for decimal, o for octal, or x for hexadecimal.【使用radix进制显示符号值。radix只能为―d(十进制)、―o(八进制)或―x(十六进制)】&lt;/span&gt;

&lt;span class="s1"&gt;       -u&lt;/span&gt;
&lt;span class="s1"&gt;       --undefined-only&lt;/span&gt;
&lt;span class="s1"&gt;           Display only undefined symbols (those external to each object file).【仅显示未定义的符号（它们对目标文件都是外部的）】&lt;/span&gt;

&lt;span class="s1"&gt;       -V&lt;/span&gt;
&lt;span class="s1"&gt;       --version&lt;/span&gt;
&lt;span class="s1"&gt;           Show the version number of nm and exit.【显示nm版本并退出】&lt;/span&gt;

&lt;span class="s1"&gt;       -X  This option is ignored for compatibility with the AIX version of nm.  It takes one parameter which must be the string 32_64.  The default mode of AIX&lt;/span&gt;
&lt;span class="s1"&gt;           nm corresponds to -X 32, which is not supported by GNU nm.&lt;/span&gt;

&lt;span class="s1"&gt;       --defined-only&lt;/span&gt;
&lt;span class="s1"&gt;           Display only defined symbols for each object file.【仅显示每个目标文件中已定义的符号】&lt;/span&gt;

&lt;span class="s1"&gt;       --plugin name&lt;/span&gt;
&lt;span class="s1"&gt;           Load the plugin called name to add support for extra target types.  This option is only available if the toolchain has been built with plugin support&lt;/span&gt;
&lt;span class="s1"&gt;           enabled.&lt;/span&gt;

&lt;span class="s1"&gt;       --size-sort&lt;/span&gt;
&lt;span class="s1"&gt;           Sort symbols by size.  The size is computed as the difference between the value of the symbol and the value of the symbol with the next higher value.&lt;/span&gt;
&lt;span class="s1"&gt;           If the &amp;quot;bsd&amp;quot; output format is used the size of the symbol is printed, rather than the value, and -S must be used in order both size and value to be&lt;/span&gt;
&lt;span class="s1"&gt;           printed.【按大小排列符号顺序。该大小是按照一个符号的值与它下一个符号的值进行计算的】&lt;/span&gt;

&lt;span class="s1"&gt;       --special-syms&lt;/span&gt;
&lt;span class="s1"&gt;           Display symbols which have a target-specific special meaning.  These symbols are usually used by the target for some special processing and are not&lt;/span&gt;
&lt;span class="s1"&gt;           normally helpful when included included in the normal symbol lists.  For example for ARM targets this option would skip the mapping symbols used to&lt;/span&gt;
&lt;span class="s1"&gt;           mark transitions between ARM code, THUMB code and data.&lt;/span&gt;

&lt;span class="s1"&gt;       --synthetic&lt;/span&gt;
&lt;span class="s1"&gt;           Include synthetic symbols in the output.  These are special symbols created by the linker for various purposes.  They are not shown by default since&lt;/span&gt;
&lt;span class="s1"&gt;           they are not part of the binary&amp;#39;&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt; &lt;span class="nx"&gt;original&lt;/span&gt; &lt;span class="nx"&gt;source&lt;/span&gt; &lt;span class="nx"&gt;code&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;

       &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;bfdname&lt;/span&gt;
           &lt;span class="nx"&gt;Specify&lt;/span&gt; &lt;span class="nx"&gt;an&lt;/span&gt; &lt;span class="nx"&gt;object&lt;/span&gt; &lt;span class="nx"&gt;code&lt;/span&gt; &lt;span class="nx"&gt;format&lt;/span&gt; &lt;span class="nx"&gt;other&lt;/span&gt; &lt;span class="nx"&gt;than&lt;/span&gt; &lt;span class="nx"&gt;your&lt;/span&gt; &lt;span class="nx"&gt;system&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;format&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="err"&gt;【&lt;/span&gt;&lt;span class="nx"&gt;指定一个目标代码的格式&lt;/span&gt;&lt;span class="err"&gt;，&lt;/span&gt;&lt;span class="nx"&gt;而非系统默认的格式&lt;/span&gt;&lt;span class="err"&gt;】&lt;/span&gt;

       &lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="nx"&gt;file&lt;/span&gt;
           &lt;span class="nx"&gt;Read&lt;/span&gt; &lt;span class="nx"&gt;command&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;line&lt;/span&gt; &lt;span class="nx"&gt;options&lt;/span&gt; &lt;span class="nx"&gt;from&lt;/span&gt; &lt;span class="nx"&gt;file&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;  &lt;span class="nx"&gt;The&lt;/span&gt; &lt;span class="nx"&gt;options&lt;/span&gt; &lt;span class="nx"&gt;read&lt;/span&gt; &lt;span class="nx"&gt;are&lt;/span&gt; &lt;span class="nx"&gt;inserted&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nx"&gt;place&lt;/span&gt; &lt;span class="nx"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;original&lt;/span&gt; &lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="nx"&gt;file&lt;/span&gt; &lt;span class="nx"&gt;option&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;  &lt;span class="nx"&gt;If&lt;/span&gt; &lt;span class="nx"&gt;file&lt;/span&gt; &lt;span class="nx"&gt;does&lt;/span&gt; &lt;span class="nx"&gt;not&lt;/span&gt; &lt;span class="nx"&gt;exist&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;or&lt;/span&gt; &lt;span class="nx"&gt;cannot&lt;/span&gt; &lt;span class="nx"&gt;be&lt;/span&gt; &lt;span class="nx"&gt;read&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
           &lt;span class="nx"&gt;then&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;option&lt;/span&gt; &lt;span class="nx"&gt;will&lt;/span&gt; &lt;span class="nx"&gt;be&lt;/span&gt; &lt;span class="nx"&gt;treated&lt;/span&gt; &lt;span class="nx"&gt;literally&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;and&lt;/span&gt; &lt;span class="nx"&gt;not&lt;/span&gt; &lt;span class="nx"&gt;removed&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;

           &lt;span class="nx"&gt;Options&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nx"&gt;file&lt;/span&gt; &lt;span class="nx"&gt;are&lt;/span&gt; &lt;span class="nx"&gt;separated&lt;/span&gt; &lt;span class="nx"&gt;by&lt;/span&gt; &lt;span class="nx"&gt;whitespace&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;  &lt;span class="nx"&gt;A&lt;/span&gt; &lt;span class="nx"&gt;whitespace&lt;/span&gt; &lt;span class="nx"&gt;character&lt;/span&gt; &lt;span class="nx"&gt;may&lt;/span&gt; &lt;span class="nx"&gt;be&lt;/span&gt; &lt;span class="nx"&gt;included&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nx"&gt;an&lt;/span&gt; &lt;span class="nx"&gt;option&lt;/span&gt; &lt;span class="nx"&gt;by&lt;/span&gt; &lt;span class="nx"&gt;surrounding&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;entire&lt;/span&gt; &lt;span class="nx"&gt;option&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nx"&gt;either&lt;/span&gt; &lt;span class="nx"&gt;single&lt;/span&gt; &lt;span class="nx"&gt;or&lt;/span&gt;
           &lt;span class="kr"&gt;double&lt;/span&gt; &lt;span class="nx"&gt;quotes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;  &lt;span class="nx"&gt;Any&lt;/span&gt; &lt;span class="nx"&gt;character&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;including&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;backslash&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;may&lt;/span&gt; &lt;span class="nx"&gt;be&lt;/span&gt; &lt;span class="nx"&gt;included&lt;/span&gt; &lt;span class="nx"&gt;by&lt;/span&gt; &lt;span class="nx"&gt;prefixing&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;character&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;be&lt;/span&gt; &lt;span class="nx"&gt;included&lt;/span&gt; &lt;span class="kd"&gt;with&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;backslash&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;  &lt;span class="nx"&gt;The&lt;/span&gt; &lt;span class="nx"&gt;file&lt;/span&gt; &lt;span class="nx"&gt;may&lt;/span&gt; &lt;span class="nx"&gt;itself&lt;/span&gt;
           &lt;span class="nx"&gt;contain&lt;/span&gt; &lt;span class="nx"&gt;additional&lt;/span&gt; &lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="nx"&gt;file&lt;/span&gt; &lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;any&lt;/span&gt; &lt;span class="nx"&gt;such&lt;/span&gt; &lt;span class="nx"&gt;options&lt;/span&gt; &lt;span class="nx"&gt;will&lt;/span&gt; &lt;span class="nx"&gt;be&lt;/span&gt; &lt;span class="nx"&gt;processed&lt;/span&gt; &lt;span class="nx"&gt;recursively&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;

&lt;span class="nx"&gt;SEE&lt;/span&gt; &lt;span class="nx"&gt;ALSO&lt;/span&gt;
       &lt;span class="nx"&gt;ar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nx"&gt;objdump&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nx"&gt;ranlib&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nx"&gt;and&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;Info&lt;/span&gt; &lt;span class="nx"&gt;entries&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;binutils&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;

&lt;span class="nx"&gt;COPYRIGHT&lt;/span&gt;
       &lt;span class="nx"&gt;Copyright&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="mi"&gt;1991&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2013&lt;/span&gt; &lt;span class="nx"&gt;Free&lt;/span&gt; &lt;span class="nx"&gt;Software&lt;/span&gt; &lt;span class="nx"&gt;Foundation&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Inc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;

       &lt;span class="nx"&gt;Permission&lt;/span&gt; &lt;span class="nx"&gt;is&lt;/span&gt; &lt;span class="nx"&gt;granted&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;copy&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;distribute&lt;/span&gt; &lt;span class="nx"&gt;and&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;or&lt;/span&gt; &lt;span class="nx"&gt;modify&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt; &lt;span class="nx"&gt;under&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;terms&lt;/span&gt; &lt;span class="nx"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;GNU&lt;/span&gt; &lt;span class="nx"&gt;Free&lt;/span&gt; &lt;span class="nx"&gt;Documentation&lt;/span&gt; &lt;span class="nx"&gt;License&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Version&lt;/span&gt; &lt;span class="mf"&gt;1.3&lt;/span&gt; &lt;span class="nx"&gt;or&lt;/span&gt; &lt;span class="nx"&gt;any&lt;/span&gt; &lt;span class="nx"&gt;later&lt;/span&gt;
       &lt;span class="nx"&gt;version&lt;/span&gt; &lt;span class="nx"&gt;published&lt;/span&gt; &lt;span class="nx"&gt;by&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;Free&lt;/span&gt; &lt;span class="nx"&gt;Software&lt;/span&gt; &lt;span class="nx"&gt;Foundation&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="kd"&gt;with&lt;/span&gt; &lt;span class="nx"&gt;no&lt;/span&gt; &lt;span class="nx"&gt;Invariant&lt;/span&gt; &lt;span class="nx"&gt;Sections&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;with&lt;/span&gt; &lt;span class="nx"&gt;no&lt;/span&gt; &lt;span class="nx"&gt;Front&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;Cover&lt;/span&gt; &lt;span class="nx"&gt;Texts&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;and&lt;/span&gt; &lt;span class="kd"&gt;with&lt;/span&gt; &lt;span class="nx"&gt;no&lt;/span&gt; &lt;span class="nx"&gt;Back&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;Cover&lt;/span&gt; &lt;span class="nx"&gt;Texts&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;  &lt;span class="nx"&gt;A&lt;/span&gt; &lt;span class="nx"&gt;copy&lt;/span&gt; &lt;span class="nx"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt;
       &lt;span class="nx"&gt;license&lt;/span&gt; &lt;span class="nx"&gt;is&lt;/span&gt; &lt;span class="nx"&gt;included&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;section&lt;/span&gt; &lt;span class="nx"&gt;entitled&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;GNU Free Documentation License&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;

&lt;span class="nx"&gt;binutils&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;2.23&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mf"&gt;52.0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;                                                        &lt;span class="mi"&gt;2015&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;05&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;                                                                       &lt;span class="nx"&gt;NM&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
 &lt;span class="nx"&gt;Manual&lt;/span&gt; &lt;span class="nx"&gt;page&lt;/span&gt; &lt;span class="nx"&gt;nm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;178&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;223&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;END&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;press&lt;/span&gt; &lt;span class="nx"&gt;h&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;help&lt;/span&gt; &lt;span class="nx"&gt;or&lt;/span&gt; &lt;span class="nx"&gt;q&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;quit&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Wed, 12 Aug 2015 00:07:00 +0800</pubDate><guid>tag:typecodes.com,2015-08-12:cseries/nmobjectfilesymbol.html</guid><category>nm</category></item><item><title>搭了个Shadowsocks+Proxy SwitchyOmega+net-speeder梯子</title><link>https://typecodes.com/mix/vpsshadowsockswitchyomegaspeeder.html</link><description>&lt;p&gt;前段时间以来，自己的GoAgent完全无法使用，估计是墙得厉害。后面用GitHub上的这个&lt;a href="https://github.com/XX-net/XX-Net" title="GitHub查看该项目"&gt;XX-Net&lt;/a&gt;，采用的依然是GoAgent+Proxy SwitchySharp。这个梯子效果不错，就是有时上谷歌会比较慢。&lt;/p&gt;


&lt;h4&gt;1 需要一把速度快的梯子&lt;/h4&gt;
&lt;p&gt;先前用amazon的免费云作一些开发测试，ssh速度几乎慢到BZ要崩溃了。没办法，前天打算买个国外VPS，一来用于一些小型的开发测试，二来弄个梯子（世界这么大，我也想去看看呀）。&lt;/p&gt;
&lt;p&gt;在v2ex搜了下大伙推荐的vps，大概集中在Linode、Digial Ocean、bandwagon、Azure HK这几个上，不过貌似Linode也被Q得厉害。网上搜了一个优惠码，在bandwagon上的选了个一年$19.99配置的VPS（竟然支持支付宝~）。&lt;/p&gt;
&lt;p&gt;在更换VPS的操作系统为CentOS7.1 64位后，网上找了些Shadowsocks的教程搭了个梯子（耗时不到1个小时）。&lt;/p&gt;
&lt;p&gt;已经用了三天，连接vps的ssh速度比较给力（BZ的最爱），通过Shadowsocks+Proxy SwitchyOmega+net-speeder梯子上谷歌也很快。&lt;/p&gt;
&lt;p&gt;&lt;img alt="Shadowsocks+Proxy SwitchyOmega+net-speeder梯子" src="https://o3cex9zsl.qnssl.com/2015/08/shadowsocks_proxyswitchyomega.png" title="Shadowsocks+Proxy SwitchyOmega+net-speeder梯子" /&gt;&lt;/p&gt;
&lt;h4&gt;2 分享下自己的操作过程&lt;/h4&gt;
&lt;p&gt;1、一台国外的VPS：BZ买的是&lt;a href="https://bandwagonhost.com/vps-hosting.php" title="点击进入"&gt;搬瓦工(bandwagon) VPS&lt;/a&gt;；&lt;/p&gt;
&lt;p&gt;2、搭Shadowsocks梯子的给力教程：来自&lt;a href="https://www.ifshow.com/centos-7-installation-and-configuration-shadowsocks/" title="查看教程"&gt;boxwang&lt;/a&gt;童鞋；&lt;/p&gt;
&lt;p&gt;3、net-speeder优化Shadowsocks梯子的给力教程：来自&lt;a href="http://wuchong.me/blog/2015/02/02/shadowsocks-install-and-optimize/"&gt;Jark&lt;/a&gt;童鞋；不过建议将net-speeder采用后台运行的模式，只要将&lt;code&gt;./net_speeder eth0 "ip"&lt;/code&gt;改成&lt;code&gt;./net_speeder eth0 "ip" &amp;amp;&lt;/code&gt;即可。&lt;/p&gt;
&lt;p&gt;4、Chrome插件Proxy SwitchyOmega 2.3.15：&lt;a href="https://o3cex9zsl.qnssl.com/libs/google/SwitchyOmega.crx" title="点击下载"&gt;本地备份下载&lt;/a&gt;，完成后把它拖到Chrome浏览器中就行了；&lt;/p&gt;
&lt;p&gt;5、Shadowsocks的Windows GUI客户端：&lt;a href="https://o3cex9zsl.qnssl.com/libs/google/Shadowsocks.exe" title="点击下载"&gt;本地备份下载&lt;/a&gt;，完成后直接运行然后配置VPS服务器上Shadowsocks的IP、端口和密码就行了。话说GitHub上的&lt;a href="https://github.com/shadowsocks/shadowsocks-windows" title="点击查看"&gt;C#源码&lt;/a&gt;用vs编译不过去，不知道有没有遇到过的童鞋。&lt;/p&gt;
&lt;h4&gt;3 利用Crontab定时执行shell脚本清除tcp连接&lt;/h4&gt;
&lt;p&gt;net-speeder缺点就是如果同时连接Shadowsocks服务端的请求过多的话，会导致梯子速度变慢。如下图所示，Shadowsocks服务端tcp出现了很多&lt;code&gt;SYN_RECV&lt;/code&gt;、&lt;code&gt;TIME_WAIT&lt;/code&gt;等状态。&lt;/p&gt;
&lt;p&gt;&lt;img alt="Shadowsocks+Proxy SwitchyOmega+net-speeder梯子" src="https://o3cex9zsl.qnssl.com/2015/08/shadowsocks_netstat.png" title="Shadowsocks+Proxy SwitchyOmega+net-speeder梯子" /&gt;&lt;/p&gt;
&lt;p&gt;解决方法：先创建一个shell控制脚本，然后通过crontab定时执行关闭所有net-speeder进程后重启net-speeder。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@typecodes net_speeder]# pwd
/root/net_speeder
###### build.sh脚本用于gcc编译net_speeder.c生成net_speeder二进制文件
[root@typecodes net_speeder]# ls
build.sh  net_speeder  net_speeder.c
###### 创建net_speeder_crontab.sh脚本（共4行）
[root@typecodes net_speeder]# vim net_speeder_crontab.sh 
#!/bin/bash

killall net_speeder
./net_speeder lo &amp;quot;ip&amp;quot; &amp;amp;

###### crontab设置每天凌晨1点自动执行net_speeder_crontab.sh 脚本
[root@typecodes ~]# crontab -e
no crontab for root - using an empty one
0 1 * * * /root/net_speeder/net_speeder_crontab.sh &amp;gt;/dev/null 2&amp;gt;&amp;amp;1
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Sun, 09 Aug 2015 14:09:00 +0800</pubDate><guid>tag:typecodes.com,2015-08-09:mix/vpsshadowsockswitchyomegaspeeder.html</guid><category>shadowsocks</category><category>梯子</category></item><item><title>Linux gcc链接动态库出错：LIBRARY_PATH和LD_LIBRARY_PATH的区别</title><link>https://typecodes.com/cseries/gcclderrlibrarypath.html</link><description>&lt;p&gt;昨天在自己的CentOs7.1上写makefile的时候，发现在一个C程序在编译并链接一个已生成好的lib动态库的时候出错。链接命令大概是这样的：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@typecodes tcpmsg]# gcc -o hello main.c -lmyhello
/usr/bin/ld: cannot find -lmyhello
collect2: error: ld returned 1 exit status
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="Linux gcc链接动态库出错" src="https://o3cex9zsl.qnssl.com/2015/08/gcc_linux.png" title="Linux gcc链接动态库出错" /&gt;&lt;/p&gt;


&lt;h4&gt;1 gcc链接动态库时的搜索路径&lt;/h4&gt;
&lt;p&gt;自以为在当前工程中设置好了环境变量&lt;code&gt;LD_LIBRARY_PATH&lt;/code&gt;包含了工程中的lib库路径，并且还在&lt;code&gt;/etc/ld.so.conf/apphome.conf&lt;/code&gt;中配置了lib库的路径。那么在调用动态库的时候，gcc就应该能自动去搜索该目录。&lt;/p&gt;
&lt;p&gt;&lt;img alt="gcc链接动态库时的搜索路径" src="https://o3cex9zsl.qnssl.com/2015/08/centos7_gcc_cannot_find_library.png" title="gcc链接动态库时的搜索路径" /&gt;&lt;/p&gt;
&lt;p&gt;很遗憾ld链接器报了如上的错误，但是如果在上面的gcc命令中添加上&lt;code&gt;-L /root/gcc_test/tcp_msg/lib/&lt;/code&gt;参数，即明确动态库的绝对路径，是能够链接成功的。&lt;/p&gt;
&lt;h4&gt;2 Google上查找 /usr/bin/ld: cannot find -l* 的出错原因&lt;/h4&gt;
&lt;p&gt;gg了很久gcc ld链接动态库出错的原因，结果还是没找到理想的答案。后来猜想是不是在CentOs7中LD_LIBRARY_PATH不起作用的缘故，但是也不应该，因为自己用的GCC（version 4.8.3）跟操作系统没关系。于是重新搜索了gcc LD_LIBRARY_PATH的作用，竟然发现gcc在编译链接时链接的动态库跟&lt;code&gt;LIBRARY_PATH&lt;/code&gt;有关而跟&lt;code&gt;LD_LIBRARY_PATH&lt;/code&gt;没关系！&lt;/p&gt;
&lt;h4&gt;3 关于Linux gcc中的&lt;code&gt;LIBRARY_PATH&lt;/code&gt;和&lt;code&gt;LD_LIBRARY_PATH&lt;/code&gt;参数说明&lt;/h4&gt;
&lt;p&gt;下面摘取了两篇较权威的说明资料： &lt;/p&gt;
&lt;p&gt;1、&lt;a href="https://gcc.gnu.org/onlinedocs/gcc/Environment-Variables.html" title="查看原文"&gt;GNU&lt;/a&gt;上关于LIBRARY_PATH的说明：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;LIBRARY_PATH
The value of LIBRARY_PATH is a colon-separated list of directories, much like PATH.
When configured as a native compiler, GCC tries the directories thus specified when searching for special linker files, if it can&amp;#39;t find them using GCC_EXEC_PREFIX.
Linking using GCC also uses these directories when searching for ordinary libraries for the -l option (but directories specified with -L come first).
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;2、&lt;a href="http://man7.org/linux/man-pages/man8/ld.so.8.html" title="查看原文"&gt;man7&lt;/a&gt;上关于LD_LIBRARY_PATH的说明：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;LD_LIBRARY_PATH
A colon-separated list of directories in which to search for
ELF libraries at execution-time.  Similar to the PATH
environment variable.  Ignored in set-user-ID and set-group-ID
programs.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;后面发现&lt;a href="http://stackoverflow.com/questions/4250624/ld-library-path-vs-library-path" title="查看详情"&gt;StackOverflow&lt;/a&gt;上关于&lt;code&gt;LIBRARY_PATH&lt;/code&gt;和&lt;code&gt;LD_LIBRARY_PATH&lt;/code&gt;的解释更直白：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;LIBRARY_PATH is used by gcc before compilation to search for directories containing libraries that need to be linked to your program.

LD_LIBRARY_PATH is used by your program to search for directories containing the libraries after it has been successfully compiled and linked.

EDIT: As pointed below, your libraries can be static or shared.
If it is static then the code is copied over into your program and you don&amp;#39;t need to search for the library after your program is compiled and linked.
If your library is shared then it needs to be dynamically linked to your program and that&amp;#39;s when LD_LIBRARY_PATH comes into play.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;通过这三篇资料的说明，很快明白了&lt;code&gt;LIBRARY_PATH&lt;/code&gt;和&lt;code&gt;LD_LIBRARY_PATH&lt;/code&gt;的作用。于是，自己在项目配置文件中添加&lt;code&gt;export LIBRARY_PATH=${LIBRARY_PATH}:${APPHOME}/lib&lt;/code&gt;。接着将这个配置文件加载到CentOs的环境变量中，这样就在gcc编译不用加&lt;code&gt;-L&lt;/code&gt;参数生成目标文件CommuTcp了。&lt;/p&gt;
&lt;h4&gt;4 总结&lt;/h4&gt;
&lt;p&gt;关于&lt;code&gt;LIBRARY_PATH&lt;/code&gt;和&lt;code&gt;LD_LIBRARY_PATH&lt;/code&gt;的关系，这里自己再总结一下。&lt;/p&gt;
&lt;h5&gt;4.1 Linux gcc编译链接时的动态库搜索路径&lt;/h5&gt;
&lt;p&gt;GCC编译、链接生成可执行文件时，动态库的搜索路径顺序如下（注意不会递归性地在其子目录下搜索）：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;1、gcc编译、链接命令中的-L选项；
2、gcc的环境变量的LIBRARY_PATH（多个路径用冒号分割）；
3、gcc默认动态库目录：/lib:/usr/lib:usr/lib64:/usr/local/lib。
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;4.2 执行二进制文件时的动态库搜索路径&lt;/h5&gt;
&lt;p&gt;链接生成二进制可执行文件后，在运行程序加载动态库文件时，搜索的路径顺序如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;1、编译目标代码时指定的动态库搜索路径：用选项-Wl,rpath和include指定的动态库的搜索路径，比如gcc -Wl,-rpath,include -L. -ldltest hello.c，在执行文件时会搜索路径`./include`；
2、环境变量LD_LIBRARY_PATH（多个路径用冒号分割）；
3、在 /etc/ld.so.conf.d/ 目录下的配置文件指定的动态库绝对路径（通过ldconfig生效，一般是非root用户时使用）；
4、gcc默认动态库目录：/lib:/usr/lib:usr/lib64:/usr/local/lib等。
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;其中，Linux GCC默认的动态库搜索路径可以通过&lt;code&gt;ld --verbose&lt;/code&gt;命令查看：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@typecodes tcpmsg]# ld --verbose
    ............
    SEARCH_DIR(&amp;quot;/usr/x86_64-redhat-linux/lib64&amp;quot;);
    SEARCH_DIR(&amp;quot;/usr/local/lib64&amp;quot;);
    SEARCH_DIR(&amp;quot;/lib64&amp;quot;);
    SEARCH_DIR(&amp;quot;/usr/lib64&amp;quot;);               ##### 64位系统
    SEARCH_DIR(&amp;quot;/usr/x86_64-redhat-linux/lib&amp;quot;);
    SEARCH_DIR(&amp;quot;/usr/local/lib&amp;quot;);
    SEARCH_DIR(&amp;quot;/lib&amp;quot;);
    SEARCH_DIR(&amp;quot;/usr/lib&amp;quot;);
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="Linux GCC中ld --verbose命令" src="https://o3cex9zsl.qnssl.com/2015/08/gcc_ld_verbose.png" title="Linux GCC中ld --verbose命令" /&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Sat, 08 Aug 2015 22:51:00 +0800</pubDate><guid>tag:typecodes.com,2015-08-08:cseries/gcclderrlibrarypath.html</guid><category>gcc</category><category>library_path</category><category>ld_library_path</category></item><item><title>Unix系统进程对SIGTERM、SIGUSR1和SIGUSR2信号处理</title><link>https://typecodes.com/cseries/unixsigtermkill.html</link><description>&lt;p&gt;好久没更新博客了，写篇文章除除草。这篇文章主要通过简单的例子说明一下Unix/Linux进程中如果捕捉和处理&lt;code&gt;SIGTERM&lt;/code&gt;、&lt;code&gt;SIGUSR1&lt;/code&gt;和&lt;code&gt;SIGUSR2&lt;/code&gt;信号。&lt;/p&gt;
&lt;p&gt;先说明一下这三个信号：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;信号(signal)是*nix系统中进程之间通信(IPC)的一种常见方式。
SIGTERM：进程终止信号，效果等同于*nix shell中不带-9的kill命令；
SIGUSR1：保留给用户使用的信号；
SIGUSR2：同SIGUSR1，保留给用户使用的信号。
&lt;/pre&gt;&lt;/div&gt;




&lt;h4&gt;1 信号的处理方式&lt;/h4&gt;
&lt;p&gt;对于&lt;code&gt;SIGTERM&lt;/code&gt;、&lt;code&gt;SIGUSR1&lt;/code&gt;和&lt;code&gt;SIGUSR2&lt;/code&gt;这三种信号，如果在当前进程中不进行捕获或者忽略（sighold）的话，*nix系统内核会自动使进程退出然后回收进程资源。那么进程如何&lt;code&gt;优雅&lt;/code&gt;地处理信号呢？通常需要根据实际情况处理：例如忽略，&lt;code&gt;sigset( SIGCLD, SIG_IGN )&lt;/code&gt;父进程忽略子进程退出信号，交由内核init进程回收处理；例如阻塞，&lt;code&gt;sighold( SIGCLD )&lt;/code&gt;暂时把子进程退出信号加入到信号掩码中，然后通过&lt;code&gt;sigrelse( SIGCLD )&lt;/code&gt;删除并重新接收该信号。&lt;/p&gt;
&lt;h4&gt;2 程序演示&lt;/h4&gt;
&lt;p&gt;下面通过两个程序简单演示一个进程如何对SIGTERM信号进行处理。&lt;/p&gt;
&lt;h5&gt;2.1 SIGTERM信号处理进程：sigterm.c&lt;/h5&gt;
&lt;p&gt;先为信号SIGTERM注册一个处理函数sTerminate，然后&lt;code&gt;pause()&lt;/code&gt;函数使当前进程一直处于挂起状态，直到接收到一个信号才返回。通过静态变量iExtFlag决定是否直接在SIGTERM信号处理函数sTerminate中使进程退出。&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cm"&gt;/** &lt;/span&gt;
&lt;span class="cm"&gt; * @FileName    sigterm.c&lt;/span&gt;
&lt;span class="cm"&gt; * @Describe    Use kill function to send a signal to a process with the pid coming from argv[1]&lt;/span&gt;
&lt;span class="cm"&gt; * @Author      vfhky 2015.08.03 https://typecodes.com/cseries/unixsigtermkill.html&lt;/span&gt;
&lt;span class="cm"&gt; * @Excute      ./sigterm means sTerminate() do not exit before;  ./sigterm 1 means sTerminate() containing exit function.&lt;/span&gt;
&lt;span class="cm"&gt; * @Return      0&lt;/span&gt;
&lt;span class="cm"&gt; */&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;stdlib.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;signal.h&amp;gt;&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;sTerminate&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;iExtFlag&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;argc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt; &lt;span class="n"&gt;argv&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;sigset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;SIGTERM&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sTerminate&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Main process_pid=[%d] will sleep!&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;getpid&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;argc&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mh"&gt;0x31&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;iExtFlag&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;//the process will be hung up forever if not receving a signal.&lt;/span&gt;
    &lt;span class="n"&gt;pause&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="c1"&gt;//if there is a signal coming, this code will keep going. &lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Main process begin to work!&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="c1"&gt;//let the process being sleeping 10 sec, and exit then.&lt;/span&gt;
    &lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Main process exit!&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt; * functions to handle the signal of SIGTERM.&lt;/span&gt;
&lt;span class="cm"&gt; * if the value of static variable iExtFlag is not equal zero, this func will exit without waiting for the main function to do to other things.&lt;/span&gt;
&lt;span class="cm"&gt; */&lt;/span&gt;
&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;sTerminate&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Get a SIGTERM signal!&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;iExtFlag&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Making process exit!&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;EXIT_SUCCESS&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h5&gt;2.2 SIGTERM信号发送进程：sigkill.c&lt;/h5&gt;
&lt;p&gt;程序功能很简单：通过&lt;code&gt;kill&lt;/code&gt;函数把&lt;code&gt;SIGTERM&lt;/code&gt;信号发送给前面的sigterm进程。&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cm"&gt;/** &lt;/span&gt;
&lt;span class="cm"&gt; * @FileName    sigkill.c&lt;/span&gt;
&lt;span class="cm"&gt; * @Describe    Use kill function to send a signal to a process with the pid from argv[1]&lt;/span&gt;
&lt;span class="cm"&gt; * @Author      vfhky 2015.08.03 https://typecodes.com/cseries/unixsigtermkill.html&lt;/span&gt;
&lt;span class="cm"&gt; * @Return      success:0    failure: -1&lt;/span&gt;
&lt;span class="cm"&gt; */&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;stdlib.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;signal.h&amp;gt;&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;argc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt; &lt;span class="n"&gt;argv&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;argc&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Usage: ./sigkill process_pid&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;You will send a signal to the process=[%s]!&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;kill&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;atoi&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]),&lt;/span&gt; &lt;span class="n"&gt;SIGTERM&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Send over!&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h4&gt;3 执行结果&lt;/h4&gt;
&lt;p&gt;使用GCC命令&lt;code&gt;gcc -Wall sigterm.c -o sigterm&lt;/code&gt;和&lt;code&gt;gcc -Wall sigkill.c -o sigkill&lt;/code&gt;编译生成可执行文件sigterm和sigkill。
&lt;img alt="使用gcc编译程序" src="https://o3cex9zsl.qnssl.com/2015/08/nixsigtermkill_compile.png" title="使用gcc编译程序" /&gt;&lt;/p&gt;
&lt;p&gt;然后输入./sigterm开启SIGTERM信号处理进程sigterm，界面在显示如下所示的当前进程PID后，由于&lt;code&gt;pause&lt;/code&gt;进入hung up状态。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Main process_pid=[27346] will sleep!
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这时，在另一个shell终端上输入如下命令，sigkill进程向sigterm进程(27346)发送SIGTERM信号。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@typecodes signal]# ./sigkill 27346
##### 作用相当于直接通过Linux shell的kill命令:
[root@typecodes signal]# kill 27346
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;sigterm进程(27346)在接收到信号后，从pause函数中返回，并调用sTerminate函数进行处理。函数处理完后，继续执行pause函数后面的代码。于是，在sleep 10秒后，整个进程退出。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@typecodes signal]# ./sigterm 
Main process_pid=[27346] will sleep!
Get a SIGTERM signal!
Main process begin to work!
Main process exit!
[root@typecodes signal]#
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;效果如图所示：&lt;/p&gt;
&lt;p&gt;&lt;img alt="sigterm进程的对SIGTERM信号的处理过程" src="https://o3cex9zsl.qnssl.com/2015/08/signalkill_excute.png" title="sigterm进程的对SIGTERM信号的处理过程" /&gt;&lt;/p&gt;
&lt;h4&gt;4 其它说明&lt;/h4&gt;
&lt;p&gt;对于通过执行&lt;code&gt;./sigterm 1&lt;/code&gt;使sigterm进程在接收到sigkill进程发送的信号后，这样sigterm进程就不会进入休眠状态而是直接在sTerminate函数中退出了。&lt;/p&gt;
&lt;p&gt;由于进程对&lt;code&gt;SIGUSR1&lt;/code&gt;和&lt;code&gt;SIGUSR2&lt;/code&gt;等其它信号的处理方法和&lt;code&gt;SIGTERM&lt;/code&gt;可以完全一样，这里就不再演示了（只需要把两个程序中的SIGTERM替换即可）。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Wed, 05 Aug 2015 17:41:00 +0800</pubDate><guid>tag:typecodes.com,2015-08-05:cseries/unixsigtermkill.html</guid><category>信号</category><category>sigterm</category><category>sigusr1 sigusr2</category></item><item><title>CentOS中将备份文件同步到BitBucket、GitHub和Coding的shell脚本</title><link>https://typecodes.com/linux/gitsynbackupshell.html</link><description>&lt;p&gt;在&lt;a href="https://typecodes.com/linux/gitaccountconfig.html" title="《CentOS系统BitBucket、GitHub和Coding等多git账户的配置》"&gt;上一篇文章&lt;/a&gt;讲述了如何在Linux系统中配置BitBucket、GitHub和Coding这三个平台的git账户，这篇文章就分享如何通过shell脚本定时获取自己的CentOS7.1服务器上的备份文件，然后使用git命令同步到这三个平台仓库上。&lt;/p&gt;
&lt;p&gt;&lt;img alt="CentOS中git同步的shell脚本" src="https://o3cex9zsl.qnssl.com/2015/07/linux_git.png" title="CentOS中git同步的shell脚本" /&gt;&lt;/p&gt;


&lt;h5&gt;1 功能需求描述&lt;/h5&gt;
&lt;p&gt;我自己为这个shell同步脚本设定了以下三个需求功能点：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;1、自动获取数据库备份目和程序备份目录下自动生成的最新的备份文件；
2、将获取到的最新的备份数据库和程序文件自动同步到BitBucket、GitHub和Coding这三个Git平台；
3、生成相应的执行日志文件。
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;2 shell脚本的思路和流程&lt;/h5&gt;
&lt;p&gt;根据上面的需求，整理出脚本思路：先获取最新的备份文件，然后复制到本地的BitBucket、GitHub和Coding仓库目录下，然后通过Git命令同步到远端仓库即可，整个过程执行的命令以追加的方式保存到同一个日志文件中。&lt;/p&gt;
&lt;p&gt;脚本的主要流程：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;1、先声明变量`Source_DB_Dir`、`Source_PRG_Dir`表示自己的CentOS服务器上的数据库和程序备份目录，然后`Git_Err_Log_Dir`是生成的执行日志目录。

2、接着声明BitBucket、GitHub和Coding这3个Git平台的本地仓库所在目录（主要是数据库DB目录和程序PRG目录）；

3、后面的三个函数`ERROR`、`NOTICE`和`RUNCMD`对应着不同的操作命令级别并生成相应的日志文件；

4、函数`Get_last_file`功能是获取该目录下面最新的文件；

5、`Git_Commit`函数主要会先通过`git pull`获取远端仓库的最新内容到本地仓库，然后再将本地仓库更新的备份文件同步到远端仓库中。
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;3 完整的脚本内容&lt;/h5&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="c"&gt;# TypeCodes Git Synchronous Script v1.0.0&lt;/span&gt;
&lt;span class="c"&gt;# (c) 2015 vfhky https://typecodes.com/linux/gitsynbackupshell.html&lt;/span&gt;


&lt;span class="nv"&gt;Source_DB_Dir&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/mydata/backups/data/mysql
&lt;span class="nv"&gt;Source_PRG_Dir&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/mydata/backups/data/typecodes
&lt;span class="nv"&gt;Git_Err_Log_Dir&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/mydata/backups/logs/git

&lt;span class="c"&gt;# Coding.net&lt;/span&gt;
&lt;span class="nv"&gt;CodingNet_DB_Dir&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/mydata/GitBang/CodingNet/myblog/db
&lt;span class="nv"&gt;CodingNet_PRG_Dir&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/mydata/GitBang/CodingNet/myblog/program

&lt;span class="c"&gt;# BitBucket.org&lt;/span&gt;
&lt;span class="nv"&gt;BitBucket_Dir&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/mydata/GitBang/BitBucket/myblog/db
&lt;span class="nv"&gt;BitBucket_PRG_Dir&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/mydata/GitBang/BitBucket/myblog/program

&lt;span class="c"&gt;# GitHub.com&lt;/span&gt;
&lt;span class="nv"&gt;GitHub_Dir&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/mydata/GitBang/GitHub/myblog/db
&lt;span class="nv"&gt;GitHub_PRG_Dir&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/mydata/GitBang/GitHub/myblog/program

&lt;span class="c"&gt;# Get the newest file name&lt;/span&gt;
&lt;span class="c"&gt;#Newest_File=&amp;quot;ls -lrt| tail -n 1 | awk &amp;#39;{print $9}&amp;#39;&amp;quot;&lt;/span&gt;

&lt;span class="c"&gt;# Space separated list of databases&lt;/span&gt;
&lt;span class="nv"&gt;PRGNAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Git_Synchronous&amp;quot;&lt;/span&gt;

&lt;span class="c"&gt;# Current date format: e.g 20150505_2015&lt;/span&gt;
&lt;span class="nv"&gt;Current_Date&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;date +%Y%m%d_%H%M&lt;span class="sb"&gt;`&lt;/span&gt;

&lt;span class="k"&gt;function&lt;/span&gt; USAGE&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
cat &lt;span class="s"&gt;&amp;lt;&amp;lt; EOF&lt;/span&gt;
&lt;span class="s"&gt;usage: $0 options&lt;/span&gt;

&lt;span class="s"&gt;This script synchronize the backup files to BitBucket, GitHub and Coding.&lt;/span&gt;

&lt;span class="s"&gt;OPTIONS:&lt;/span&gt;
&lt;span class="s"&gt;  -h    Show this message&lt;/span&gt;
&lt;span class="s"&gt;  -n    Number of days to keep backups&lt;/span&gt;
&lt;span class="s"&gt;EOF&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="nb"&gt;getopts&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;hal:n:&amp;quot;&lt;/span&gt; opt&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nv"&gt;$opt&lt;/span&gt; in
    a&lt;span class="o"&gt;)&lt;/span&gt;
      &lt;span class="nv"&gt;PRGNAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;
      &lt;span class="p"&gt;;;&lt;/span&gt;
    h&lt;span class="o"&gt;)&lt;/span&gt;
      USAGE
      &lt;span class="nb"&gt;exit &lt;/span&gt;1
      &lt;span class="p"&gt;;;&lt;/span&gt;
    l&lt;span class="o"&gt;)&lt;/span&gt;
      &lt;span class="nv"&gt;PRGNAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$OPTARG&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
      &lt;span class="p"&gt;;;&lt;/span&gt;
    n&lt;span class="o"&gt;)&lt;/span&gt;
      &lt;span class="nv"&gt;NUMDAYS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$OPTARG&lt;/span&gt;
      &lt;span class="p"&gt;;;&lt;/span&gt;
    &lt;span class="se"&gt;\?&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
      USAGE
      &lt;span class="nb"&gt;exit&lt;/span&gt;
      &lt;span class="p"&gt;;;&lt;/span&gt;
    :&lt;span class="o"&gt;)&lt;/span&gt;
      &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Option -&lt;/span&gt;&lt;span class="nv"&gt;$OPTARG&lt;/span&gt;&lt;span class="s2"&gt; requires an argument.&amp;quot;&lt;/span&gt; &amp;gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;2
      &lt;span class="nb"&gt;exit &lt;/span&gt;1
      &lt;span class="p"&gt;;;&lt;/span&gt;
  &lt;span class="k"&gt;esac&lt;/span&gt;
&lt;span class="k"&gt;done&lt;/span&gt;

&lt;span class="k"&gt;function&lt;/span&gt; ERROR&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;[error] &lt;/span&gt;&lt;span class="nv"&gt;$@&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span class="nv"&gt;$Git_Err_Log_Dir&lt;/span&gt;/Git_&lt;span class="nv"&gt;$Current_Date&lt;/span&gt;.log
  &lt;span class="nb"&gt;exit &lt;/span&gt;1
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;function&lt;/span&gt; NOTICE&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;[notice] &lt;/span&gt;&lt;span class="nv"&gt;$@&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span class="nv"&gt;$Git_Err_Log_Dir&lt;/span&gt;/Git_&lt;span class="nv"&gt;$Current_Date&lt;/span&gt;.log
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;function&lt;/span&gt; RUNCMD&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$@&lt;/span&gt; &amp;gt;&amp;gt; &lt;span class="nv"&gt;$Git_Err_Log_Dir&lt;/span&gt;/Git_&lt;span class="nv"&gt;$Current_Date&lt;/span&gt;.log
  &lt;span class="nb"&gt;eval&lt;/span&gt; &lt;span class="nv"&gt;$@&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;# Git commit command function&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; Git_Commit&lt;span class="o"&gt;(){&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;$# &lt;/span&gt;-ne &lt;span class="m"&gt;0&lt;/span&gt; -a &lt;span class="nv"&gt;$# &lt;/span&gt;-ne &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
    ERROR &lt;span class="s2"&gt;&amp;quot;Usage: Git_Commit or Git_Commit file_path!&amp;quot;&lt;/span&gt;
    &lt;span class="nb"&gt;exit &lt;/span&gt;1&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;$# &lt;/span&gt;-lt &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
    RUNCMD git pull &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; git add --all &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; git commit -m &lt;span class="s2"&gt;&amp;quot;Backup from TypeCodes.com [Time:&lt;/span&gt;&lt;span class="nv"&gt;$Current_Date&lt;/span&gt;&lt;span class="s2"&gt;]&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; git push origin master
  &lt;span class="k"&gt;else&lt;/span&gt;
    RUNCMD git pull &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; git add &lt;span class="nv"&gt;$1&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; git commit -m &lt;span class="s2"&gt;&amp;quot;Backup from TypeCodes.com [Time:&lt;/span&gt;&lt;span class="nv"&gt;$Current_Date&lt;/span&gt;&lt;span class="s2"&gt;]&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; git push origin master
  &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;# $1:path  $2:filter file-type&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; Get_last_file&lt;span class="o"&gt;(){&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;$# &lt;/span&gt;-ne &lt;span class="m"&gt;1&lt;/span&gt; -a &lt;span class="nv"&gt;$# &lt;/span&gt;-ne &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
    ERROR &lt;span class="s2"&gt;&amp;quot;Usage: Get_last_file file_path or Get_last_file file_path file_type!&amp;quot;&lt;/span&gt;
    &lt;span class="nb"&gt;exit &lt;/span&gt;1&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;$# &lt;/span&gt;-lt &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
    ls -lrt &lt;span class="nv"&gt;$1&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; tail -n &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; awk &lt;span class="s1"&gt;&amp;#39;{print $9}&amp;#39;&lt;/span&gt;
  &lt;span class="k"&gt;else&lt;/span&gt;
    ls -lrt &lt;span class="nv"&gt;$1&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; awk &lt;span class="s2"&gt;&amp;quot;/&lt;/span&gt;&lt;span class="nv"&gt;$2&lt;/span&gt;&lt;span class="s2"&gt;/&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; tail -n &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; awk &lt;span class="s1"&gt;&amp;#39;{print $9}&amp;#39;&lt;/span&gt;
  &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; ! -d &lt;span class="nv"&gt;$Git_Err_Log_Dir&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
  mkdir -p &lt;span class="nv"&gt;$Git_Err_Log_Dir&lt;/span&gt;
&lt;span class="k"&gt;fi&lt;/span&gt;


NOTICE &lt;span class="s2"&gt;&amp;quot;Start copy the db_file to git index&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;RC&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;0
&lt;span class="nv"&gt;Last_Source_DB_File&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;Get_last_file &lt;span class="nv"&gt;$Source_DB_Dir&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;
RUNCMD &lt;span class="s2"&gt;&amp;quot;cd &lt;/span&gt;&lt;span class="nv"&gt;$Source_DB_Dir&lt;/span&gt;&lt;span class="s2"&gt; &amp;amp;&amp;amp; \cp -rf &lt;/span&gt;&lt;span class="nv"&gt;$Last_Source_DB_File&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$CodingNet_DB_Dir&lt;/span&gt;&lt;span class="s2"&gt; &amp;amp;&amp;amp; \cp -rf &lt;/span&gt;&lt;span class="nv"&gt;$Last_Source_DB_File&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$BitBucket_Dir&lt;/span&gt;&lt;span class="s2"&gt; &amp;amp;&amp;amp; \cp -rf &lt;/span&gt;&lt;span class="nv"&gt;$Last_Source_DB_File&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$GitHub_Dir&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;

&lt;span class="nv"&gt;RC&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$?&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;$RC&lt;/span&gt; -gt &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
  ERROR &lt;span class="s2"&gt;&amp;quot;Copy db_file failed!&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;fi&lt;/span&gt;

NOTICE &lt;span class="s2"&gt;&amp;quot;Start copy the program_file to git index&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;Last_Program_DB_File&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;Get_last_file &lt;span class="nv"&gt;$Source_PRG_Dir&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;
RUNCMD &lt;span class="s2"&gt;&amp;quot;cd &lt;/span&gt;&lt;span class="nv"&gt;$Source_PRG_Dir&lt;/span&gt;&lt;span class="s2"&gt; &amp;amp;&amp;amp; \cp -rf &lt;/span&gt;&lt;span class="nv"&gt;$Last_Program_DB_File&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$CodingNet_PRG_Dir&lt;/span&gt;&lt;span class="s2"&gt; &amp;amp;&amp;amp; \cp -rf &lt;/span&gt;&lt;span class="nv"&gt;$Last_Program_DB_File&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$BitBucket_PRG_Dir&lt;/span&gt;&lt;span class="s2"&gt; &amp;amp;&amp;amp; \cp -rf &lt;/span&gt;&lt;span class="nv"&gt;$Last_Program_DB_File&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$GitHub_PRG_Dir&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;

&lt;span class="nv"&gt;RC&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$?&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;$RC&lt;/span&gt; -gt &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
  ERROR &lt;span class="s2"&gt;&amp;quot;Copy program_file failed!&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;fi&lt;/span&gt;

NOTICE &lt;span class="s2"&gt;&amp;quot;Start push to CodingNet&amp;quot;&lt;/span&gt;
RUNCMD &lt;span class="s2"&gt;&amp;quot;cd &lt;/span&gt;&lt;span class="nv"&gt;$CodingNet_PRG_Dir&lt;/span&gt;&lt;span class="s2"&gt; &amp;amp;&amp;amp; tar -zxf &lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;Get_last_file &lt;span class="nv"&gt;$CodingNet_PRG_Dir&lt;/span&gt; .tar.gz&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt; &amp;amp;&amp;amp; cd ../ &amp;amp;&amp;amp; Git_Commit&amp;quot;&lt;/span&gt;

NOTICE &lt;span class="s2"&gt;&amp;quot;Start push to BitBucket&amp;quot;&lt;/span&gt;
RUNCMD &lt;span class="s2"&gt;&amp;quot;cd &lt;/span&gt;&lt;span class="nv"&gt;$BitBucket_PRG_Dir&lt;/span&gt;&lt;span class="s2"&gt; &amp;amp;&amp;amp; tar -zxf &lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;Get_last_file &lt;span class="nv"&gt;$BitBucket_PRG_Dir&lt;/span&gt; .tar.gz&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt; &amp;amp;&amp;amp; cd ../ &amp;amp;&amp;amp; Git_Commit&amp;quot;&lt;/span&gt;

NOTICE &lt;span class="s2"&gt;&amp;quot;Start push to GitHub&amp;quot;&lt;/span&gt;
RUNCMD &lt;span class="s2"&gt;&amp;quot;cd &lt;/span&gt;&lt;span class="nv"&gt;$GitHub_PRG_Dir&lt;/span&gt;&lt;span class="s2"&gt; &amp;amp;&amp;amp; tar -zxf &lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;Get_last_file &lt;span class="nv"&gt;$GitHub_PRG_Dir&lt;/span&gt; .tar.gz&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt; &amp;amp;&amp;amp; cd ../ &amp;amp;&amp;amp; Git_Commit&amp;quot;&lt;/span&gt;

&lt;span class="c"&gt;# exit 0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h5&gt;4 单独执行该shell脚本&lt;/h5&gt;
&lt;p&gt;可以将这个脚本保存为git.sh，然后使用时通过&lt;code&gt;chmod +x git.sh&lt;/code&gt;命令添加执行权限，最后通过&lt;code&gt;./git.sh&lt;/code&gt;执行该脚本即可。附图如下：&lt;/p&gt;
&lt;p&gt;同步到BitBucket仓库时的截图：
&lt;img alt="同步到BitBucket仓库时" src="https://o3cex9zsl.qnssl.com/2015/07/git_shell_bitbucket_syn.png" title="同步到BitBucket仓库时" /&gt;&lt;/p&gt;
&lt;p&gt;同步到GitHub仓库时的截图：
&lt;img alt="同步到GitHub仓库时" src="https://o3cex9zsl.qnssl.com/2015/07/git_shell_github_syn.png" title="同步到GitHub仓库时" /&gt;&lt;/p&gt;
&lt;h5&gt;5 定时执行该shell脚本&lt;/h5&gt;
&lt;p&gt;利用Linux系统的crontab定时任务工具执行该脚本，例如下面这个配置就是每天凌晨1点的时候执行该shell脚本。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@typecodes bak_list]# crontab -e
0 1 * * * /mydata/backups/bak_list/git.sh
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;根据脚本中的配置，生成的日志类似于&lt;code&gt;/mydata/backups/logs/git/Git_20150706_0100.log&lt;/code&gt;：&lt;/p&gt;
&lt;p&gt;&lt;img alt="git同步的shell脚本执行生成的日志" src="https://o3cex9zsl.qnssl.com/2015/07/git_syn_log.png" title="git同步的shell脚本执行生成的日志" /&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Tue, 07 Jul 2015 00:30:00 +0800</pubDate><guid>tag:typecodes.com,2015-07-07:linux/gitsynbackupshell.html</guid><category>git</category><category>shell</category></item><item><title>CentOS系统BitBucket、GitHub和Coding等多git账户的配置</title><link>https://typecodes.com/linux/gitaccountconfig.html</link><description>&lt;p&gt;目前自己主要在BitBucket、GitHub和Coding这三个Git平台创建了一些项目，所以这篇文章以自己的CentOS7.1服务器作为示例，说说如何在Linux系统中配置不同平台的Git仓库，也即多git账户的配置。&lt;/p&gt;
&lt;p&gt;类似于Windows机器上的git配置方法，在CentOS上也是一样的。通过设置Git全部变量的配置文件&lt;code&gt;~/.ssh/config&lt;/code&gt;和当前工作仓库的配置文件&lt;code&gt;your_git_project_root/.git/config&lt;/code&gt;即可。&lt;/p&gt;
&lt;p&gt;&lt;img alt="当前git工作仓库的.git目录" src="https://o3cex9zsl.qnssl.com/2015/07/project_git_config_dir.png" title="当前git工作仓库的.git目录" /&gt;&lt;/p&gt;


&lt;h5&gt;1 Git全部变量的配置文件：~/.ssh/config&lt;/h5&gt;
&lt;p&gt;如上图所示，git全部变量的配置文件&lt;code&gt;~/.ssh/config&lt;/code&gt;在当前用户的.ssh目录下面，通过配置这个文件可以实现对多个不同平台的Git账户进行整体控制。例如，使用ssh身份认证的RSA密钥对的存放位置；使用&lt;code&gt;git push&lt;/code&gt;的时候，到底是推送到BitBucket还是GitHub活着Coding呢？这些都是由这个文件控制的。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@typecodes .ssh]# vim config 
Host github.com
    HostName        github.com
    User            vfhky
    IdentityFile    ~/.ssh/github_rsa

Host git.coding.net
    HostName        git.coding.net
    User            vfhky
    IdentityFile    ~/.ssh/coding_rsa

Host bitbucket.org
    HostName        bitbucket.org
    User            vfhky
    IdentityFile    ~/.ssh/bitbucket_rsa

Host typecodes.com
    HostName        typecodes.com
    Port            8866
    User            root
    IdentityFile    ~/.ssh/typecodes_rsa
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;配置要点：
1、&lt;code&gt;Host&lt;/code&gt;表示主机名，当在每个具体的git项目中执行了git操作，那么会先在这个文件里面所有的HOST名字中进行查找匹配出对应的SSH或者HTTPS地址。通过Host别名和&lt;code&gt;User&lt;/code&gt;的配置，可以将不同的Git账户（即使是同一平台的）的区分开来；2、&lt;code&gt;IdentityFile&lt;/code&gt;表示使用SSH登录认证时的私钥路径（一般在.ssh目录下面），对应的公钥复制到对应的Git平台上。&lt;/p&gt;
&lt;p&gt;&lt;img alt="Git的ssh身份认证的RSA密钥对" src="https://o3cex9zsl.qnssl.com/2015/07/git_ssh_rsa_key.png" title="Git的ssh身份认证的RSA密钥对" /&gt;&lt;/p&gt;
&lt;p&gt;注意：如前文&lt;a href="https://typecodes.com/mix/codinggitsshbug.html" title="查看原文"&gt;《Coding.net上git仓库ssh地址的"bug"》&lt;/a&gt;所述，如果错误的配置了Host，那么会造成&lt;code&gt;Permission denied&lt;/code&gt;的错误。&lt;/p&gt;
&lt;h5&gt;2 当前Git项目的配置文件：your_git_project_root/.git/config&lt;/h5&gt;
&lt;p&gt;小节1中是全部变量的配置，那么在对应每个具体的Git项目中，还需要做一些配置。&lt;/p&gt;
&lt;p&gt;vim编辑当前Git项目的隐藏目录&lt;code&gt;.git&lt;/code&gt;下面的config文件（以bitbucket为例），这里很容易猜到&lt;code&gt;git push origin master&lt;/code&gt;命令的含义和来源。我们在末尾添加&lt;code&gt;[user]&lt;/code&gt;信息，包括name和email。当然，也可以直接通过命令&lt;code&gt;git config --global user.name "your git-account-name"&lt;/code&gt;和&lt;code&gt;git config --global user.email "your git-account-email"&lt;/code&gt;配置。&lt;/p&gt;
&lt;p&gt;&lt;img alt="当前Git项目的配置文件" src="https://o3cex9zsl.qnssl.com/2015/07/project_git_config_file.png" title="当前Git项目的配置文件" /&gt;&lt;/p&gt;
&lt;p&gt;如果&lt;code&gt;[user]&lt;/code&gt;信息未配置，很可能在执行git命令时报错：&lt;/p&gt;
&lt;p&gt;&lt;img alt="[user]信息未配置时报错" src="https://o3cex9zsl.qnssl.com/2015/07/git_commit_error.png" title="[user]信息未配置时报错" /&gt;&lt;/p&gt;
&lt;h5&gt;3 结束：关于SSH登录认证的RSA公私钥的权限设置&lt;/h5&gt;
&lt;p&gt;小节1中已经说了，git的SSH登录认证的RSA私钥存放在当前用的&lt;code&gt;.ssh&lt;/code&gt;目录下面。我们需要尽量降低该私钥文件的权限，否则会报&lt;code&gt;Permissions 0644 for '~/.ssh/bitbucket_rsa' are too open.&lt;/code&gt;的错误。&lt;/p&gt;
&lt;p&gt;&lt;img alt="设置git的SSH登录认证的RSA私钥权限为0600" src="https://o3cex9zsl.qnssl.com/2015/07/git_permissions_0644_too_open.png" title="设置git的SSH登录认证的RSA私钥权限为0600" /&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Sun, 05 Jul 2015 22:22:00 +0800</pubDate><guid>tag:typecodes.com,2015-07-05:linux/gitaccountconfig.html</guid><category>git</category></item><item><title>2015博客升级记(八)：CentOS7定时备份博客程序的shell脚本</title><link>https://typecodes.com/linux/centos7blogregularbackup.html</link><description>&lt;p&gt;这是&lt;a href="https://typecodes.com/mix/2015updateblog.html" title="查看原文"&gt;《2015年博客升级记》&lt;/a&gt;系列文章的第八篇，同时也是这一系列文章的最后一篇，内容主要记录在Linux系统中如何使用shell脚本备份服务器上的博客程序（当然也可以是主机上的任何目录或者文件）。&lt;/p&gt;
&lt;p&gt;&lt;img alt="CentOS7定时备份博客程序的shell脚本" src="https://o3cex9zsl.qnssl.com/2015/06/centos_files_backup_shell.png" title="CentOS7定时备份博客程序的shell脚本" /&gt;&lt;/p&gt;


&lt;h5&gt;1 使用说明&lt;/h5&gt;
&lt;p&gt;下面是Linux系统文件的shell备份脚本，其中参数&lt;code&gt;BACKUPDIR&lt;/code&gt;表示备份文件的存储路径、&lt;code&gt;ORGDIR&lt;/code&gt;是待备份的Linux文件路径、&lt;code&gt;NUMDAYS&lt;/code&gt;表示保留多少天以内的备份文件。最终，每次执行这个脚本生成的备份文件名类似于&lt;code&gt;系统日期时间+.tar.gz&lt;/code&gt;，例如20150606.tar.gz。&lt;/p&gt;
&lt;p&gt;使用时通过&lt;code&gt;chmod +x typecodes_backup.sh&lt;/code&gt;命令添加执行权限，然后可以利用Linux系统的crontab定时任务工具执行该脚本。例如下面这个配置就是每天凌晨1点的时候执行该shell脚本，生成博客程序的备份文件。当然也可以手动执行命令&lt;code&gt;./typecodes_backup.sh&lt;/code&gt;即可立即生成备份文件。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@typecodes bak_list]# crontab -e
0 1 * * * /mydata/backups/bak_list/typecodes_backup.sh
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;2 脚本mysql_backup.sh的全部内容&lt;/h5&gt;
&lt;p&gt;利用&lt;a href="https://typecodes.com/linux/centos7mysqlregularbackup.html" title="《2015博客升级记(七)：CentOS7定时备份MySql的shell脚本》"&gt;前文&lt;/a&gt;mysql备份脚本的框架，写了可以备份Linux主机上的任意目录或者文件的shell脚本，内容如下：&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="c"&gt;# Blog Program Backup Script v1.0.0(applying to backup any linux directory or files)&lt;/span&gt;
&lt;span class="c"&gt;# (c) 2015 vfhky https://typecodes.com/linux/centos7blogregularbackup.html&lt;/span&gt;
&lt;span class="c"&gt;# https://github.com/vfhky/shell-tools/blob/master/backup/typcodes-backup.sh&lt;/span&gt;
&lt;span class="c"&gt;# https://coding.net/u/vfhky/p/shell-tools/git/blob/master/backup/typcodes-backup.sh&lt;/span&gt;

&lt;span class="c"&gt;# Shell Script Alias Name&lt;/span&gt;
&lt;span class="nv"&gt;PRGNAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;typecodes&amp;quot;&lt;/span&gt;

&lt;span class="c"&gt;# Backup to this directory&lt;/span&gt;
&lt;span class="nv"&gt;BACKUPDIR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/mydata/backups/data/typecodes
&lt;span class="c"&gt;# The blog programs dir&lt;/span&gt;
&lt;span class="nv"&gt;ORGDIR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/share/nginx/html

&lt;span class="c"&gt;# Number of days to keep&lt;/span&gt;
&lt;span class="nv"&gt;NUMDAYS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;60

&lt;span class="c"&gt;# Some linux command&lt;/span&gt;
&lt;span class="nv"&gt;FINDCMD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;find&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;TARCMD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;tar -zcf&amp;quot;&lt;/span&gt;

&lt;span class="c"&gt;# Backup date format,e.g 20150505_2010&lt;/span&gt;
&lt;span class="nv"&gt;BACKUPDATE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;date +%Y%m%d_%H%M&lt;span class="sb"&gt;`&lt;/span&gt;

&lt;span class="k"&gt;function&lt;/span&gt; USAGE&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
cat &lt;span class="s"&gt;&amp;lt;&amp;lt; EOF&lt;/span&gt;
&lt;span class="s"&gt;usage: $0 options&lt;/span&gt;

&lt;span class="s"&gt;This script backs up the blog programs(or other files you want).&lt;/span&gt;

&lt;span class="s"&gt;OPTIONS:&lt;/span&gt;
&lt;span class="s"&gt;  -h    Show this message&lt;/span&gt;
&lt;span class="s"&gt;  -a    Backup all files&lt;/span&gt;
&lt;span class="s"&gt;  -l    Databases to backup (space seperated)&lt;/span&gt;
&lt;span class="s"&gt;  -n    Number of days to keep backups&lt;/span&gt;
&lt;span class="s"&gt;EOF&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="nb"&gt;getopts&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;hal:n:&amp;quot;&lt;/span&gt; opt&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nv"&gt;$opt&lt;/span&gt; in
    a&lt;span class="o"&gt;)&lt;/span&gt;
      &lt;span class="nv"&gt;PRGNAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;
      &lt;span class="p"&gt;;;&lt;/span&gt;
    h&lt;span class="o"&gt;)&lt;/span&gt;
      USAGE
      &lt;span class="nb"&gt;exit &lt;/span&gt;1
      &lt;span class="p"&gt;;;&lt;/span&gt;
    l&lt;span class="o"&gt;)&lt;/span&gt;
      &lt;span class="nv"&gt;PRGNAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$OPTARG&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
      &lt;span class="p"&gt;;;&lt;/span&gt;
    n&lt;span class="o"&gt;)&lt;/span&gt;
      &lt;span class="nv"&gt;NUMDAYS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$OPTARG&lt;/span&gt;
      &lt;span class="p"&gt;;;&lt;/span&gt;
    &lt;span class="se"&gt;\?&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
      USAGE
      &lt;span class="nb"&gt;exit&lt;/span&gt;
      &lt;span class="p"&gt;;;&lt;/span&gt;
    :&lt;span class="o"&gt;)&lt;/span&gt;
      &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Option -&lt;/span&gt;&lt;span class="nv"&gt;$OPTARG&lt;/span&gt;&lt;span class="s2"&gt; requires an argument.&amp;quot;&lt;/span&gt; &amp;gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;2
      &lt;span class="nb"&gt;exit &lt;/span&gt;1
      &lt;span class="p"&gt;;;&lt;/span&gt;
  &lt;span class="k"&gt;esac&lt;/span&gt;
&lt;span class="k"&gt;done&lt;/span&gt;

&lt;span class="k"&gt;function&lt;/span&gt; ERROR&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;[error] &lt;/span&gt;&lt;span class="nv"&gt;$@&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
  &lt;span class="nb"&gt;exit &lt;/span&gt;1
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;function&lt;/span&gt; NOTICE&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;[notice] &lt;/span&gt;&lt;span class="nv"&gt;$@&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;function&lt;/span&gt; RUNCMD&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$@&lt;/span&gt;
  &lt;span class="nb"&gt;eval&lt;/span&gt; &lt;span class="nv"&gt;$@&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;# Sanity checks&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; ! -n &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$BACKUPDIR&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
  ERROR &lt;span class="s2"&gt;&amp;quot;Invalid backup directory&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;fi&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt; ! &lt;span class="nv"&gt;$NUMDAYS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;~ ^&lt;span class="o"&gt;[&lt;/span&gt;0-9&lt;span class="o"&gt;]&lt;/span&gt;+&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="o"&gt;]]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
  ERROR &lt;span class="s2"&gt;&amp;quot;Invalid number of days: &lt;/span&gt;&lt;span class="nv"&gt;$NUMDAYS&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$NUMDAYS&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; -eq &lt;span class="s2"&gt;&amp;quot;0&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
  ERROR &lt;span class="s2"&gt;&amp;quot;Number of days must be greater than zero&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;fi&lt;/span&gt;

&lt;span class="c"&gt;# Lock down permissions&lt;/span&gt;
&lt;span class="nb"&gt;umask &lt;/span&gt;077

&lt;span class="c"&gt;# Create directory if needed&lt;/span&gt;
RUNCMD mkdir -p -v &lt;span class="nv"&gt;$BACKUPDIR&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; ! -d &lt;span class="nv"&gt;$BACKUPDIR&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
  ERROR &lt;span class="s2"&gt;&amp;quot;Invalid directory: &lt;/span&gt;&lt;span class="nv"&gt;$BACKUPDIR&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;fi&lt;/span&gt;

&lt;span class="nv"&gt;RC&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;0

RUNCMD &lt;span class="s2"&gt;&amp;quot;cd &lt;/span&gt;&lt;span class="nv"&gt;$ORGDIR&lt;/span&gt;&lt;span class="s2"&gt; &amp;amp;&amp;amp; &lt;/span&gt;&lt;span class="nv"&gt;$TARCMD&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$BACKUPDATE&lt;/span&gt;&lt;span class="s2"&gt;.tar.gz ./ || mv &lt;/span&gt;&lt;span class="nv"&gt;$BACKUPDATE&lt;/span&gt;&lt;span class="s2"&gt;.tar.gz &lt;/span&gt;&lt;span class="nv"&gt;$BACKUPDIR&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;RC&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$?&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;$RC&lt;/span&gt; -gt &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
  ERROR &lt;span class="s2"&gt;&amp;quot;TypeCodesDump failed!&amp;quot;&lt;/span&gt;

&lt;span class="k"&gt;else&lt;/span&gt;
  NOTICE &lt;span class="s2"&gt;&amp;quot;Removing dumps older than &lt;/span&gt;&lt;span class="nv"&gt;$NUMDAYS&lt;/span&gt;&lt;span class="s2"&gt; days...&amp;quot;&lt;/span&gt;
  RUNCMD &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$FINDCMD&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$BACKUPDIR&lt;/span&gt;&lt;span class="s2"&gt; -name \&amp;quot;*.tar.gz\&amp;quot; -type f -mtime +&lt;/span&gt;&lt;span class="nv"&gt;$NUMDAYS&lt;/span&gt;&lt;span class="s2"&gt; -print0 | xargs -0 rm -fv&amp;quot;&lt;/span&gt;

  NOTICE &lt;span class="s2"&gt;&amp;quot;Listing backup directory contents...&amp;quot;&lt;/span&gt;
  RUNCMD ls -la &lt;span class="nv"&gt;$BACKUPDIR&lt;/span&gt;

  NOTICE &lt;span class="s2"&gt;&amp;quot;Dumping TypeCodes Programs is complete!&amp;quot;&lt;/span&gt;

&lt;span class="k"&gt;fi&lt;/span&gt;

&lt;span class="c"&gt;# exit 0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h5&gt;3 Shell Script工具集合&lt;/h5&gt;
&lt;p&gt;同&lt;a href="https://typecodes.com/linux/centos7mysqlregularbackup.html" title="《2015博客升级记(七)：CentOS7定时备份MySql的shell脚本》"&gt;前文&lt;/a&gt;的mysql备份脚本一样，这个博客程序备份脚本也托管在自己的Coding.net和GitHub上：&lt;/p&gt;
&lt;p&gt;Coding.net地址：&lt;a href="https://github.com/vfhky/shell-tools/" title="点击查看"&gt;https://github.com/vfhky/shell-tools/&lt;/a&gt;；&lt;/p&gt;
&lt;p&gt;GitHub地址：&lt;a href="https://coding.net/u/vfhky/p/shell-tools/git" title="点击查看"&gt;https://coding.net/u/vfhky/p/shell-tools/git&lt;/a&gt;。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Tue, 30 Jun 2015 22:24:00 +0800</pubDate><guid>tag:typecodes.com,2015-06-30:linux/centos7blogregularbackup.html</guid><category>博客成长录</category><category>shell</category></item><item><title>2015博客升级记(七)：CentOS7定时备份MySql的shell脚本</title><link>https://typecodes.com/linux/centos7mysqlregularbackup.html</link><description>&lt;p&gt;这是&lt;a href="https://typecodes.com/mix/2015updateblog.html" title="查看原文"&gt;《2015年博客升级记》&lt;/a&gt;系列文章的第七篇，主要记录在Linux系统中如何使用shell脚本备份服务器上的mysql数据库。&lt;/p&gt;
&lt;p&gt;&lt;img alt="CentOS7定时备份MySql的shell脚本" src="https://o3cex9zsl.qnssl.com/2015/06/centos_mysql_backup.png" title="CentOS7定时备份MySql的shell脚本" /&gt;&lt;/p&gt;


&lt;h5&gt;1 使用说明&lt;/h5&gt;
&lt;p&gt;下面是MySql数据库的shell备份脚本，其中参数&lt;code&gt;DBLIST&lt;/code&gt;表示要备份的mysql数据库名称、&lt;code&gt;NUMDAYS&lt;/code&gt;表示保留多少天以内的备份文件、&lt;code&gt;MyUSER&lt;/code&gt;和&lt;code&gt;MyPASS&lt;/code&gt;表示mysql数据库的用户名和密码。最终，每次执行这个脚本生成的备份文件名类似于&lt;code&gt;系统日期时间+.sql.gz&lt;/code&gt;，例如20150606.sql.gz。&lt;/p&gt;
&lt;p&gt;使用时通过&lt;code&gt;chmod +x mysql_backup.sh&lt;/code&gt;命令添加执行权限，然后可以利用Linux系统的crontab定时任务工具执行该脚本。例如下面这个配置就是每天凌晨1点的时候执行该shell脚本，生成mysql数据库的备份文件。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@typecodes bak_list]# crontab -e
0 1 * * * /mydata/backups/bak_list/mysql_backup.sh
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;2 脚本mysql_backup.sh的全部内容&lt;/h5&gt;
&lt;p&gt;以后的更新都会提交到本文小节3中的两个git仓库中。&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="c"&gt;# MySQL Backup Script v1.0.0&lt;/span&gt;
&lt;span class="c"&gt;# (c) 2015 vfhky https://typecodes.com/linux/centos7mysqlregularbackup.html&lt;/span&gt;
&lt;span class="c"&gt;# Reference: https://github.com/chekolyn/bash-scripts/blob/master/mysql-dbs-backup.sh&lt;/span&gt;
&lt;span class="c"&gt;# https://github.com/vfhky/shell-tools/blob/master/backup/mysql_backup.sh&lt;/span&gt;
&lt;span class="c"&gt;# https://coding.net/u/vfhky/p/shell-tools/git/blob/master/backup/mysql_backup.sh&lt;/span&gt;

&lt;span class="c"&gt;# Space separated list of databases&lt;/span&gt;
&lt;span class="nv"&gt;DBLIST&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;your mysql database name witch you want to backup&amp;quot;&lt;/span&gt;

&lt;span class="c"&gt;# Backup to this directory&lt;/span&gt;
&lt;span class="nv"&gt;BACKUPDIR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/mydata/backups/data/mysql

&lt;span class="c"&gt;# Number of days to keep&lt;/span&gt;
&lt;span class="nv"&gt;NUMDAYS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;60

&lt;span class="c"&gt;# Some linux command and your mysql configure&lt;/span&gt;
&lt;span class="nv"&gt;FINDCMD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;find&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;MYSQLCMD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;mysql&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;MyUSER&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;your mysql user name&amp;quot;&lt;/span&gt;                   &lt;span class="c"&gt;# USERNAME&lt;/span&gt;
&lt;span class="nv"&gt;MyPASS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;your mysql password&amp;quot;&lt;/span&gt;                   &lt;span class="c"&gt;# PASSWORD &lt;/span&gt;
&lt;span class="nv"&gt;MyHOST&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;localhost&amp;quot;&lt;/span&gt;          &lt;span class="c"&gt;# Hostname&lt;/span&gt;
&lt;span class="nv"&gt;DUMPCMD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;mysqldump -u&lt;/span&gt;&lt;span class="nv"&gt;$MyUSER&lt;/span&gt;&lt;span class="s2"&gt; -h &lt;/span&gt;&lt;span class="nv"&gt;$MyHOST&lt;/span&gt;&lt;span class="s2"&gt; -p&lt;/span&gt;&lt;span class="nv"&gt;$MyPASS&lt;/span&gt;&lt;span class="s2"&gt; --lock-tables --databases &amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;GZIPCMD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;gzip&amp;quot;&lt;/span&gt;

&lt;span class="c"&gt;# Backup date format,e.g 20150505_2010&lt;/span&gt;
&lt;span class="nv"&gt;BACKUPDATE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;date +%Y%m%d_%H%M&lt;span class="sb"&gt;`&lt;/span&gt;

&lt;span class="k"&gt;function&lt;/span&gt; USAGE&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
cat &lt;span class="s"&gt;&amp;lt;&amp;lt; EOF&lt;/span&gt;
&lt;span class="s"&gt;usage: $0 options&lt;/span&gt;

&lt;span class="s"&gt;This script backs up a list of MySQL databases.&lt;/span&gt;

&lt;span class="s"&gt;OPTIONS:&lt;/span&gt;
&lt;span class="s"&gt;  -h    Show this message&lt;/span&gt;
&lt;span class="s"&gt;  -a    Backup all databases&lt;/span&gt;
&lt;span class="s"&gt;  -l    Databases to backup (space seperated)&lt;/span&gt;
&lt;span class="s"&gt;  -n    Number of days to keep backups&lt;/span&gt;
&lt;span class="s"&gt;EOF&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="nb"&gt;getopts&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;hal:n:&amp;quot;&lt;/span&gt; opt&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nv"&gt;$opt&lt;/span&gt; in
    a&lt;span class="o"&gt;)&lt;/span&gt;
      &lt;span class="nv"&gt;DBLIST&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;
      &lt;span class="p"&gt;;;&lt;/span&gt;
    h&lt;span class="o"&gt;)&lt;/span&gt;
      USAGE
      &lt;span class="nb"&gt;exit &lt;/span&gt;1
      &lt;span class="p"&gt;;;&lt;/span&gt;
    l&lt;span class="o"&gt;)&lt;/span&gt;
      &lt;span class="nv"&gt;DBLIST&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$OPTARG&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
      &lt;span class="p"&gt;;;&lt;/span&gt;
    n&lt;span class="o"&gt;)&lt;/span&gt;
      &lt;span class="nv"&gt;NUMDAYS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$OPTARG&lt;/span&gt;
      &lt;span class="p"&gt;;;&lt;/span&gt;
    &lt;span class="se"&gt;\?&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
      USAGE
      &lt;span class="nb"&gt;exit&lt;/span&gt;
      &lt;span class="p"&gt;;;&lt;/span&gt;
    :&lt;span class="o"&gt;)&lt;/span&gt;
      &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Option -&lt;/span&gt;&lt;span class="nv"&gt;$OPTARG&lt;/span&gt;&lt;span class="s2"&gt; requires an argument.&amp;quot;&lt;/span&gt; &amp;gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;2
      &lt;span class="nb"&gt;exit &lt;/span&gt;1
      &lt;span class="p"&gt;;;&lt;/span&gt;
  &lt;span class="k"&gt;esac&lt;/span&gt;
&lt;span class="k"&gt;done&lt;/span&gt;

&lt;span class="k"&gt;function&lt;/span&gt; ERROR&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;[error] &lt;/span&gt;&lt;span class="nv"&gt;$@&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
  &lt;span class="nb"&gt;exit &lt;/span&gt;1
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;function&lt;/span&gt; NOTICE&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;[notice] &lt;/span&gt;&lt;span class="nv"&gt;$@&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;function&lt;/span&gt; RUNCMD&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$@&lt;/span&gt;
  &lt;span class="nb"&gt;eval&lt;/span&gt; &lt;span class="nv"&gt;$@&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;# Sanity checks&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; ! -n &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$DBLIST&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
  &lt;span class="nv"&gt;DBLIST&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;&lt;span class="nv"&gt;$MYSQLCMD&lt;/span&gt; -N -s -e &lt;span class="s2"&gt;&amp;quot;show databases&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; grep -viE &lt;span class="s1"&gt;&amp;#39;(information_schema|performance_schema|mysql|test)&amp;#39;&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; ! -n &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$DBLIST&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
    ERROR &lt;span class="s2"&gt;&amp;quot;Invalid database list&amp;quot;&lt;/span&gt;
  &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;span class="k"&gt;fi&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; ! -n &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$BACKUPDIR&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
  ERROR &lt;span class="s2"&gt;&amp;quot;Invalid backup directory&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;fi&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt; ! &lt;span class="nv"&gt;$NUMDAYS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;~ ^&lt;span class="o"&gt;[&lt;/span&gt;0-9&lt;span class="o"&gt;]&lt;/span&gt;+&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="o"&gt;]]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
  ERROR &lt;span class="s2"&gt;&amp;quot;Invalid number of days: &lt;/span&gt;&lt;span class="nv"&gt;$NUMDAYS&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$NUMDAYS&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; -eq &lt;span class="s2"&gt;&amp;quot;0&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
  ERROR &lt;span class="s2"&gt;&amp;quot;Number of days must be greater than zero&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;fi&lt;/span&gt;

&lt;span class="c"&gt;# Lock down permissions&lt;/span&gt;
&lt;span class="nb"&gt;umask &lt;/span&gt;077

&lt;span class="c"&gt;# Create directory if needed&lt;/span&gt;
RUNCMD mkdir -p -v &lt;span class="nv"&gt;$BACKUPDIR&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; ! -d &lt;span class="nv"&gt;$BACKUPDIR&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
  ERROR &lt;span class="s2"&gt;&amp;quot;Invalid directory: &lt;/span&gt;&lt;span class="nv"&gt;$BACKUPDIR&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;fi&lt;/span&gt;

NOTICE &lt;span class="s2"&gt;&amp;quot;Dumping MySQL databases...&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;RC&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;0

&lt;span class="k"&gt;for&lt;/span&gt; database in &lt;span class="nv"&gt;$DBLIST&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  NOTICE &lt;span class="s2"&gt;&amp;quot;Dumping &lt;/span&gt;&lt;span class="nv"&gt;$database&lt;/span&gt;&lt;span class="s2"&gt;...&amp;quot;&lt;/span&gt;
  RUNCMD &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$DUMPCMD&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$database&lt;/span&gt;&lt;span class="s2"&gt; | &lt;/span&gt;&lt;span class="nv"&gt;$GZIPCMD&lt;/span&gt;&lt;span class="s2"&gt; &amp;gt; &lt;/span&gt;&lt;span class="nv"&gt;$BACKUPDIR&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;$BACKUPDATE&lt;/span&gt;&lt;span class="s2"&gt;.sql.gz&amp;quot;&lt;/span&gt;

  &lt;span class="nv"&gt;RC&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$?&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;$RC&lt;/span&gt; -gt &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
    &lt;span class="k"&gt;continue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;span class="k"&gt;done&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;$RC&lt;/span&gt; -gt &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
  ERROR &lt;span class="s2"&gt;&amp;quot;MySQLDump failed!&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;
  NOTICE &lt;span class="s2"&gt;&amp;quot;Removing dumps older than &lt;/span&gt;&lt;span class="nv"&gt;$NUMDAYS&lt;/span&gt;&lt;span class="s2"&gt; days...&amp;quot;&lt;/span&gt;
  RUNCMD &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$FINDCMD&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$BACKUPDIR&lt;/span&gt;&lt;span class="s2"&gt; -name \&amp;quot;*.sql.gz\&amp;quot; -type f -mtime +&lt;/span&gt;&lt;span class="nv"&gt;$NUMDAYS&lt;/span&gt;&lt;span class="s2"&gt; -print0 | xargs -0 rm -fv&amp;quot;&lt;/span&gt;

  NOTICE &lt;span class="s2"&gt;&amp;quot;Listing backup directory contents...&amp;quot;&lt;/span&gt;
  RUNCMD ls -la &lt;span class="nv"&gt;$BACKUPDIR&lt;/span&gt;

  NOTICE &lt;span class="s2"&gt;&amp;quot;MySQLDump is complete!&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;fi&lt;/span&gt;

&lt;span class="c"&gt;# exit 0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h5&gt;3 Shell Script工具集合&lt;/h5&gt;
&lt;p&gt;目前把这个脚本托管在自己的Coding.net和GitHub的上一个shell script工具集合，地址如下：&lt;/p&gt;
&lt;p&gt;Coding.net地址：&lt;a href="https://coding.net/u/vfhky/p/shell-tools/git" title="点击查看"&gt;https://coding.net/u/vfhky/p/shell-tools/git&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;GitHub地址：&lt;a href="https://github.com/vfhky/shell-tools/" title="点击查看"&gt;https://github.com/vfhky/shell-tools/&lt;/a&gt;。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Mon, 29 Jun 2015 22:41:00 +0800</pubDate><guid>tag:typecodes.com,2015-06-29:linux/centos7mysqlregularbackup.html</guid><category>博客成长录</category><category>mysql</category><category>shell</category></item><item><title>Coding.net上git仓库ssh地址的"bug"</title><link>https://typecodes.com/mix/codinggitsshbug.html</link><description>&lt;p&gt;前段时间在用Coding.net同步git仓库时，能正常使用非https的ssh协议，但是这两天在自己的Windows机器上push内容时，报如下图中的错误&lt;code&gt;Permission denied (publickey).&lt;/code&gt;：&lt;/p&gt;
&lt;p&gt;&lt;img alt="Coding.net报错Permission denied (publickey)" src="https://o3cex9zsl.qnssl.com/2015/06/git_push_error.png" title="Coding.net报错Permission denied (publickey)" /&gt;&lt;/p&gt;


&lt;h5&gt;1 查找原因&lt;/h5&gt;
&lt;p&gt;查了下Coding.net上这个项目的ssh地址如图所示：&lt;/p&gt;
&lt;p&gt;&lt;img alt="Coding.net上这个项目的ssh地址" src="https://o3cex9zsl.qnssl.com/2015/06/coding_net_ssh_bug.png" title="Coding.net上这个项目的ssh地址" /&gt;&lt;/p&gt;
&lt;p&gt;它和我的Windows机器上该项目的&lt;code&gt;G:\php\htdocs\CodingNet\mylnmp\.git\config&lt;/code&gt;文件中的配置是一样的（&lt;code&gt;url = git@git.coding.net:vfhky/mylnmp.git&lt;/code&gt;），如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img alt="本地git项目的ssh地址" src="https://o3cex9zsl.qnssl.com/2015/06/git_client_config.png" title="本地git项目的ssh地址" /&gt;&lt;/p&gt;
&lt;p&gt;对于&lt;code&gt;Permission denied&lt;/code&gt;错误，按理说git项目地址没问题，那只能是ssh公私钥不对了。于是又用Git Bash重新生成了一对SSH公私钥，并把公钥放到Coding.net上。结果执行&lt;code&gt;git push origin master&lt;/code&gt;推送命令时，还是报一样的错误。&lt;/p&gt;
&lt;p&gt;在Google上找了好久都没找到原因所在，没办法就只能将仓库切换到https协议。这样每次push或者pull的时候，都需要输入用户名和密码，比较麻烦。&lt;/p&gt;
&lt;h5&gt;2 对比GitHub的ssh地址发现Coding.net的“bug”    【！！！经指正，其实是我自己弄错了！！！】&lt;/h5&gt;
&lt;p&gt;下午无意之间看到了自己GitHub上一个仓库的ssh命名&lt;code&gt;git@github.com:vfhky/mylnmp.git&lt;/code&gt;，它和上面Coding.net的ssh地址是有区别的。Github的ssh地址中是直接&lt;code&gt;@域名&lt;/code&gt;的，而Coding.net的ssh地址是&lt;code&gt;@git.域名&lt;/code&gt;。&lt;/p&gt;
&lt;h5&gt;3 解决方法 【！！！经指正，该方法是错误的！！！】&lt;/h5&gt;
&lt;p&gt;于是，立马尝试把本地Coding.net项目中的ssh地址改成类似于GitHub的ssh地址：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;######Coding.net上git仓库ssh地址的bug
url = git@git.coding.net:vfhky/mylnmp.git
改成正确的ssh地址
url = git@coding.net:vfhky/mylnmp.git
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;4 结束&lt;/h5&gt;
&lt;p&gt;改完之后，重新执行git push命令，就正常了。在遇到到如下错误时，基本可以从git地址和ssh公私钥是否都正确这两方面来解决。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;vfhky@VFHKY-PC /g/php/htdocs/CodingNet/mylnmp (master)
$ git push origin master
Permission denied (publickey).
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.

vfhky@VFHKY-PC /g/php/htdocs/CodingNet/mylnmp (master)
$
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;4 update 2015.07.01 15:12    【正确的解决方法】&lt;/h5&gt;
&lt;p&gt;经过 @yucong sun 的指正，之前是由于本地Win机上的~/.ssh/config文件配置的主机名是&lt;code&gt;Host coding.net&lt;/code&gt;而不是&lt;code&gt;Host git.coding.net&lt;/code&gt;，所以git项目中配置的&lt;code&gt;url = git@git.coding.net:vfhky/mylnmp.git&lt;/code&gt;，无法匹配到这个主机名Host。&lt;/p&gt;
&lt;p&gt;因此，只要把&lt;code&gt;~/.ssh/config&lt;/code&gt;的&lt;code&gt;Host coding.net&lt;/code&gt;改成&lt;code&gt;Host git.coding.net&lt;/code&gt;就行了，如下图所示。这里由于自己的考虑不周，误会“小猴子”了，抱歉抱歉！&lt;/p&gt;
&lt;p&gt;&lt;img alt="Win机上的~/.ssh/config文件配置" src="https://o3cex9zsl.qnssl.com/2015/06/coding_net_git_config.png" title="Win机上的~/.ssh/config文件配置" /&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Sun, 28 Jun 2015 19:34:00 +0800</pubDate><guid>tag:typecodes.com,2015-06-28:mix/codinggitsshbug.html</guid><category>git</category><category>coding</category></item><item><title>PHP7中php.ini、php-fpm和www.conf的配置</title><link>https://typecodes.com/web/php7configure.html</link><description>&lt;p&gt;根据前文&lt;a href="https://typecodes.com/web/centos7compilephp7.html" title="查看原文"&gt;《2015博客升级记(五)：CentOS 7.1编译安装PHP7》&lt;/a&gt;的&lt;code&gt;configure&lt;/code&gt;编译参数设定，安装后的PHP7配置文件所在路径是&lt;code&gt;/usr/local/php7/etc&lt;/code&gt;。该目录下会有两个配置文件：&lt;code&gt;php-fpm.conf&lt;/code&gt;和&lt;code&gt;php.ini&lt;/code&gt;，以及一个文件夹&lt;code&gt;php-fpm.d&lt;/code&gt;（包含&lt;code&gt;www.conf&lt;/code&gt;文件）。&lt;/p&gt;
&lt;p&gt;因此，这篇文章主要对这三个PHP配置文件的进行简单说明，具体的配置过程见本文末尾的&lt;code&gt;附录&lt;/code&gt;部分。&lt;/p&gt;


&lt;h5&gt;1 配置php.ini&lt;/h5&gt;
&lt;p&gt;php.ini是php运行核心配置文件：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;######避免PHP信息暴露在http头中
expose_php = Off

######避免暴露php调用mysql的错误信息
display_errors = Off

######在关闭display_errors后开启PHP错误日志（路径在php-fpm.conf中配置）
log_errors = On

######设置PHP的扩展库路径
extension_dir = &amp;quot;/usr/local/php7/lib/php/extensions/no-debug-non-zts-20141001/&amp;quot;

######设置PHP的opcache和mysql动态库
zend_extension=opcache.so
extension=mysqli.so
extension=pdo_mysql.so

######设置PHP的时区
date.timezone = PRC

######开启opcache
[opcache]
; Determines if Zend OPCache is enabled
opcache.enable=1

######设置PHP脚本允许访问的目录（需要根据实际情况配置）
;open_basedir = /usr/share/nginx/html;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;2 配置php-fpm.conf&lt;/h5&gt;
&lt;p&gt;php-fpm.conf是&lt;code&gt;php-fpm&lt;/code&gt;进程服务的配置文件：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;######设置错误日志的路径
error_log = /var/log/php-fpm/error.log
######引入www.conf文件中的配置
include=/usr/local/php7/etc/php-fpm.d/*.conf
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;3 配置www.conf（在php-fpm.d目录下）&lt;/h5&gt;
&lt;p&gt;www.conf这是&lt;code&gt;php-fpm&lt;/code&gt;进程服务的扩展配置文件：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="err"&gt;######设置用户和用户组&lt;/span&gt;
&lt;span class="nt"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nt"&gt;nginx&lt;/span&gt;
&lt;span class="nt"&gt;group&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nt"&gt;nginx&lt;/span&gt;

&lt;span class="err"&gt;######根据&lt;/span&gt;&lt;span class="nt"&gt;nginx&lt;/span&gt;&lt;span class="nc"&gt;.conf&lt;/span&gt;&lt;span class="err"&gt;中的配置&lt;/span&gt;&lt;span class="nt"&gt;fastcgi_pass&lt;/span&gt; &lt;span class="nt"&gt;unix&lt;/span&gt;&lt;span class="o"&gt;:/&lt;/span&gt;&lt;span class="nt"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;run&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;php-fpm&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;php-fpm&lt;/span&gt;&lt;span class="nc"&gt;.sock&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="err"&gt;设置&lt;/span&gt;&lt;span class="nt"&gt;PHP&lt;/span&gt;&lt;span class="err"&gt;监听&lt;/span&gt;
&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;listen&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nt"&gt;127&lt;/span&gt;&lt;span class="nc"&gt;.0.0.1&lt;/span&gt;&lt;span class="nd"&gt;:9000&lt;/span&gt;   &lt;span class="err"&gt;#####不建议使用&lt;/span&gt;
&lt;span class="nt"&gt;listen&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;run&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;php-fpm&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;php-fpm&lt;/span&gt;&lt;span class="nc"&gt;.sock&lt;/span&gt;

&lt;span class="err"&gt;######开启慢日志&lt;/span&gt;
&lt;span class="nt"&gt;slowlog&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;log&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;php-fpm&lt;/span&gt;&lt;span class="o"&gt;/$&lt;/span&gt;&lt;span class="nt"&gt;pool-slow&lt;/span&gt;&lt;span class="nc"&gt;.log&lt;/span&gt;
&lt;span class="nt"&gt;request_slowlog_timeout&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nt"&gt;10s&lt;/span&gt;

&lt;span class="err"&gt;######设置&lt;/span&gt;&lt;span class="nt"&gt;php&lt;/span&gt;&lt;span class="err"&gt;的&lt;/span&gt;&lt;span class="nt"&gt;session&lt;/span&gt;&lt;span class="err"&gt;目录（所属用户和用户组都是&lt;/span&gt;&lt;span class="nt"&gt;nginx&lt;/span&gt;&lt;span class="err"&gt;）&lt;/span&gt;
&lt;span class="nt"&gt;php_value&lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;session.save_handler&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nt"&gt;files&lt;/span&gt;
&lt;span class="nt"&gt;php_value&lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;session.save_path&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;php&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;session&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;4 附录&lt;/h5&gt;
&lt;p&gt;在前文&lt;a href="https://typecodes.com/web/centos7nginxhttpsspdy.html" title="查看原文"&gt;《2015博客升级记(六)：Nginx配置HTTPS和SPDY实战》&lt;/a&gt;和&lt;a href="https://typecodes.com/web/centosmysqlconfig.html" title="查看原文"&gt;《CentOS系统MySQL的配置文件my.cnf》&lt;/a&gt;已经说明了，目前已经把这个关于Nginx、MySQL和PHP配置的全部托管在GitHub和coding.net上，地址如下：&lt;/p&gt;
&lt;p&gt;GitHub地址：&lt;a href="https://github.com/vfhky/mylnmp" title="点击进入"&gt;https://github.com/vfhky/mylnmp&lt;/a&gt;；&lt;/p&gt;
&lt;p&gt;Coding地址：&lt;a href="https://coding.net/u/vfhky/p/mylnmp/git" title="点击进入"&gt;https://coding.net/u/vfhky/p/mylnmp/git&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;最后，附上工程的截图：&lt;/p&gt;
&lt;p&gt;&lt;img alt="GitHub上关于LNMP的常用配置" src="https://o3cex9zsl.qnssl.com/2015/06/github_vfhky_mylnp.png" title="GitHub上关于LNMP的常用配置" /&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Sat, 27 Jun 2015 19:05:00 +0800</pubDate><guid>tag:typecodes.com,2015-06-27:web/php7configure.html</guid><category>php7</category></item><item><title>2015博客升级记(五)：CentOS 7.1编译安装PHP7</title><link>https://typecodes.com/web/centos7compilephp7.html</link><description>&lt;p&gt;这是&lt;a href="https://typecodes.com/mix/2015updateblog.html" title="查看原文"&gt;《2015年博客升级记》&lt;/a&gt;系列文章的第五篇，主要记录在Linux系统中如何编译安装PHP7。&lt;/p&gt;
&lt;h5&gt;1 创建php用户和用户组，并在github下载php7源码&lt;/h5&gt;
&lt;p&gt;首先创建一个名为php且&lt;code&gt;没有登录权限&lt;/code&gt;的用户和一个名为php的用户组，然后去GitHub下载php7源码包。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;#######新建php用户和php组
[root@typecodes ~]# groupadd -r php &amp;amp;&amp;amp; useradd -r -g php -s /bin/false -d /usr/local/php7 -M php
######从GitHub下载php7安装包
[root@typecodes ~]# wget -c --no-check-certificate -O php7-src-master.zip https://github.com/php/php-src/archive/master.zip
######开始解压php7包
[root@typecodes ~]# unzip -q php7-src-master.zip &amp;amp;&amp;amp; cd php-src-master
#####安装编译php7时需要的依赖包
[root@typecodes php-src-master]# yum -y install libxml2 libxml2-devel openssl openssl-devel curl-devel libjpeg-devel libpng-devel freetype-devel libmcrypt-devel
&lt;/pre&gt;&lt;/div&gt;




&lt;h5&gt;2 PHP7编译参数的配置&lt;/h5&gt;
&lt;p&gt;准备工作做好后，就开始正式配置php7的安装明细了。注意，操作时一定要先把下面反斜杠“\”后面添加的注释文字去掉！！！&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;######开始生成配置文件
[root@typecodes php-src-master]# ./buildconf
buildconf: checking installation...
buildconf: autoconf version 2.69 (ok)
rebuilding aclocal.m4
rebuilding configure
rebuilding main/php_config.h.in
######开始配置
[root@typecodes php-src-master]# ./configure \
--prefix=/usr/local/php7 \                              [PHP7安装的根目录]
--exec-prefix=/usr/local/php7 \
--bindir=/usr/local/php7/bin \
--sbindir=/usr/local/php7/sbin \
--includedir=/usr/local/php7/include \
--libdir=/usr/local/php7/lib/php \
--mandir=/usr/local/php7/php/man \
--with-config-file-path=/usr/local/php7/etc \           [PHP7的配置目录]
--with-mysql-sock=/var/run/mysql/mysql.sock \           [PHP7的Unix socket通信文件]
--with-mcrypt=/usr/include \
--with-mhash \
--with-openssl \
--with-mysql=shared,mysqlnd \                           [PHP7依赖mysql库]              
--with-mysqli=shared,mysqlnd \                          [PHP7依赖mysql库]
--with-pdo-mysql=shared,mysqlnd \                       [PHP7依赖mysql库]
--with-gd \
--with-iconv \
--with-zlib \
--enable-zip \
--enable-inline-optimization \
--disable-debug \
--disable-rpath \
--enable-shared \
--enable-xml \
--enable-bcmath \
--enable-shmop \
--enable-sysvsem \
--enable-mbregex \
--enable-mbstring \
--enable-ftp \
--enable-gd-native-ttf \
--enable-pcntl \
--enable-sockets \
--with-xmlrpc \
--enable-soap \
--without-pear \
--with-gettext \
--enable-session \                                      [允许php会话session]
--with-curl \                                           [允许curl扩展]
--with-jpeg-dir \
--with-freetype-dir \
--enable-opcache \                                      [使用opcache缓存]
--enable-fpm \
--enable-fastcgi \
--with-fpm-user=nginx \                                 [php-fpm的用户]
--with-fpm-group=nginx \                                [php-fpm的用户组]
--without-gdbm \
--disable-fileinfo
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;执行上面的配置命令的结果如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img alt="PHP7编译参数的配置" src="https://o3cex9zsl.qnssl.com/2015/06/compile_php7_config.png" title="PHP7编译参数的配置" /&gt;&lt;/p&gt;
&lt;h5&gt;3 开始编译和安装PHP7&lt;/h5&gt;
&lt;p&gt;相对编译安装MySQL的大量CPU和内存消耗，PHP7的编译安装轻松多了，整个过程大约1个小时左右。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@typecodes php-src-master]# make clean &amp;amp;&amp;amp; make &amp;amp;&amp;amp; make install
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;看到下图就代表已经编译安装好了PHP7！&lt;/p&gt;
&lt;p&gt;&lt;img alt="安装php5.7.7rc的make install命令执行结果" src="https://o3cex9zsl.qnssl.com/2015/06/compile_php7_sucess.png" title="安装php5.7.7rc的make install命令执行结果" /&gt;&lt;/p&gt;
&lt;h5&gt;4 选做步骤：执行make test命令进行测试&lt;/h5&gt;
&lt;p&gt;这是一个非必需的操作步骤，执行&lt;code&gt;make test&lt;/code&gt;命令。&lt;/p&gt;
&lt;p&gt;&lt;img alt="开始执行make test命令进行测试" src="https://o3cex9zsl.qnssl.com/2015/06/php7_make_test.png" title="开始执行make test命令进行测试" /&gt;&lt;/p&gt;
&lt;p&gt;有趣的一件事就是：在test期间，会和一个IP地址72.52.91.14建立tcp连接，它对应着php官网http://www.php.net。&lt;/p&gt;
&lt;p&gt;&lt;img alt="和PHP官网交互" src="https://o3cex9zsl.qnssl.com/2015/06/php7_make_test_tcp.png" title="和PHP官网交互" /&gt;&lt;/p&gt;
&lt;p&gt;执行完&lt;code&gt;make test&lt;/code&gt;命令后，最终的结果如下：&lt;/p&gt;
&lt;p&gt;&lt;img alt="make test结果" src="https://o3cex9zsl.qnssl.com/2015/06/php7_make_test_result.png" title="make test结果" /&gt;&lt;/p&gt;
&lt;h5&gt;5  查看编译成功后的PHP7安装目录&lt;/h5&gt;
&lt;p&gt;由于需要和MySQL进行通信，所以需要特别查看PHP7安装后的lib扩展库目录（/usr/local/php7/lib/php/extensions/no-debug-non-zts-20141001/）。需要确保至少存在&lt;code&gt;mysqli.so&lt;/code&gt;、&lt;code&gt;pdo_mysql.so&lt;/code&gt;这两个动态库文件，如下图所示。&lt;/p&gt;
&lt;p&gt;&lt;img alt="PHP7的lib扩展库" src="https://o3cex9zsl.qnssl.com/2015/06/php7_mysql_lib.png" title="PHP7的lib扩展库" /&gt;&lt;/p&gt;
&lt;h5&gt;6 开始设置PHP7的配置文件php.ini、php-fpm.conf、www.conf和php-fpm脚本&lt;/h5&gt;
&lt;p&gt;可以用编译后的配置文件复制到PHP7的配置目录（/usr/local/php7/etc/），推荐使用&lt;a href="https://typecodes.com/web/php7configure.html" title="查看原文"&gt;《PHP7中php.ini、php-fpm和www.conf的配置》&lt;/a&gt;文中整理的3个PHP7配置文件和php-fpm服务控制脚本。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;#######方法一：直接使用编译后未经优化处理的配置
[root@typecodes php-src-master]# cp php.ini-production /usr/local/php7/etc/php.ini
[root@typecodes php-src-master]# cp /root/php-src-master/sapi/fpm/init.d.php-fpm /etc/init.d/php-fpm
[root@typecodes php-src-master]# cp /usr/local/php7/etc/php-fpm.conf.default /usr/local/php7/etc/php-fpm.conf
[root@typecodes php-src-master]# cp /usr/local/php7/etc/php-fpm.d/www.conf.default /usr/local/php7/etc/php-fpm.d/www.conf
#######方法二：使用https://typecodes.com/web/php7configure.html文中的配置 
[root@typecodes php-src-master]# mv ~/php.ini /usr/local/php7/etc/php.ini &amp;amp;&amp;amp; mv ~/php-fpm /etc/init.d/php-fpm
[root@typecodes php-src-master]# mv ~/php-fpm.conf /usr/local/php7/etc/php-fpm.conf &amp;amp;&amp;amp; mv ~/www.conf /usr/local/php7/etc/php-fpm.d/www.conf
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;7 添加php的环境变量&lt;/h5&gt;
&lt;p&gt;将php编译生成的bin目录添加到当前Linux系统的环境变量中&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="x"&gt;[root@typecodes ~]&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; echo -e &amp;#39;\nexport PATH=/usr/local/php7/bin:/usr/local/php7/sbin:&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;PATH&lt;/span&gt;&lt;span class="x"&gt;\n&amp;#39; &amp;gt;&amp;gt; /etc/profile &amp;amp;&amp;amp; source /etc/profile&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;8 设置PHP日志目录和php-fpm进程文件（php-fpm.sock）目录&lt;/h5&gt;
&lt;p&gt;其中，设置php-fpm进程目录的用户和用户组为&lt;code&gt;nginx&lt;/code&gt;，并创建php会话session目录。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;#######设置PHP日志目录和php-fpm的运行进程ID文件（php-fpm.sock）目录
[root@typecodes ~]# mkdir -p /var/log/php-fpm/ &amp;amp;&amp;amp; mkdir -p /var/run/php-fpm &amp;amp;&amp;amp; cd /var/run/ &amp;amp;&amp;amp; chown -R nginx:nginx php-fpm
#######修改session的目录配置
[root@typecodes etc]# mkdir -p /var/lib/php/session
[root@typecodes etc]# chown -R nginx:nginx /var/lib/php
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;9 设置PHP开机启动以及测试配置文件是否正确&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;######配置开机自启动，增加到主机sysV服务
[root@typecodes php-src-master]# chmod +x /etc/init.d/php-fpm
[root@typecodes php-src-master]# chkconfig --add php-fpm
[root@typecodes php-src-master]# chkconfig php-fpm on
######测试PHP的配置文件是否正确合法
[root@typecodes sbin]# php-fpm -t
[03-May-2015 17:50:04] NOTICE: configuration file /usr/local/php7/etc/php-fpm.conf test is successful
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;10 启动php服务&lt;/h5&gt;
&lt;p&gt;在完成上面的操作后，就可以正式使用php服务了。启动php进程服务的命令如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@typecodes sbin]# service php-fpm start
Starting php-fpm  done
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;然后可以通过命令&lt;code&gt;ps -aux|grep php&lt;/code&gt;查看是否成功（图中的php-fpm进程数和进程用户nginx都是由www.conf中pm.start_servers和user的值分别决定的）：&lt;/p&gt;
&lt;p&gt;&lt;img alt="查看php服务进程" src="https://o3cex9zsl.qnssl.com/2015/06/php_process.png" title="查看php服务进程" /&gt;&lt;/p&gt;
&lt;h5&gt;11 查看PHP7版本信息&lt;/h5&gt;
&lt;p&gt;最后，可以通过命令&lt;code&gt;php -v&lt;/code&gt;查看当前PHP版本信息，图中可以看到当前PHP7还使用了Zend OPcache缓存，是因为在php.ini文件中添加了&lt;code&gt;zend_extension=opcache.so&lt;/code&gt;配置。&lt;/p&gt;
&lt;p&gt;&lt;img alt="查看PHP7版本信息" src="https://o3cex9zsl.qnssl.com/2015/06/php7_version_info.png" title="查看PHP7版本信息" /&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Fri, 26 Jun 2015 19:16:00 +0800</pubDate><guid>tag:typecodes.com,2015-06-26:web/centos7compilephp7.html</guid><category>博客成长录</category><category>php7</category></item><item><title>阿里云CentOS 7.1使用yum安装MySql5.6.24</title><link>https://typecodes.com/web/centos7yuminstallmysql5.html</link><description>&lt;p&gt;在前面两篇文章&lt;a href="https://typecodes.com/web/centos7compilemysql.html" title="查看原文"&gt;《2015博客升级记(四)：CentOS 7.1编译安装MySQL5.7.7rc》&lt;/a&gt;和&lt;a href="https://typecodes.com/web/centos7compilemysql5.html" title="查看原文"&gt;《阿里云CentOS 7.1编译安装MySql5.6.24》&lt;/a&gt;中，都是采用编译MySQL源码的方式安装的，过程相对比较复杂。所以，这篇文章演示如何使用yum的方式安装MySql5.6.24。&lt;/p&gt;


&lt;h5&gt;1 常规错误的yum安装方法：&lt;/h5&gt;
&lt;p&gt;在&lt;a href="https://typecodes.com/web/aliyuncentos6creatlnmp.html" title="《阿里云CentOS 6.5搭建LNMP环境（非一键脚本）》"&gt;前文&lt;/a&gt;中记述了CentOS 6.5系统中通过yum方式快速地搭建了LNMP环境，那么是否也能在CentOS 7或CentOS 7.1系统中依葫芦画瓢安装MySql5.6.24呢？答案是否定的。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@typecodes ~]# yum -y install mysql mysql-server mysql-devel
.....................。
....省略部分安装过程....
.....................。

Installed:
  mariadb.x86_64 1:5.5.41-2.el7_0                                                 mariadb-devel.x86_64 1:5.5.41-2.el7_0

Dependency Installed:
  keyutils-libs-devel.x86_64 0:1.5.8-3.el7    krb5-devel.x86_64 0:1.12.2-14.el7      libcom_err-devel.x86_64 0:1.42.9-7.el7    libselinux-devel.x86_64 0:2.2.2-6.el7   
  libsepol-devel.x86_64 0:2.1.9-3.el7         libverto-devel.x86_64 0:0.2.5-4.el7    openssl-devel.x86_64 1:1.0.1e-42.el7.4    pcre-devel.x86_64 0:8.32-14.el7         
  zlib-devel.x86_64 0:1.2.7-13.el7

Complete!
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;从上面的安装结果可以看出，没有安装mysql数据库，而是安装了mariadb数据！因为在CentOS 7和CentOS 7.1系统中，默认安装的mysql是它的分支mariadb。这里引用下百度百科关于mariadb的描述：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;MariaDB数据库管理系统是MySQL的一个分支，主要由开源社区在维护，采用GPL授权许可 MariaDB的目的是完全兼容MySQL，包括API和命令行，使之能轻松成为MySQL的代替品。
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;因此，下面这些正常的MySQL操作都是无效的：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;#######无法把mysql服务加入系统启动
[root@typecodes ~]# chkconfig mysqld on
error reading information on service mysqld: No such file or directory
#######启动不了mysql
[root@typecodes ~]# service mysqld start
Redirecting to /bin/systemctl start  mysqld.service
Failed to issue method call: Unit mysqld.service failed to load: No such file or directory.
#######没有安装mysql相关包
[root@typecodes ~]# rpm -qa |grep mysql
php-mysql-5.4.16-23.el7_0.3.x86_64
[root@typecodes ~]#
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;2 正确的安装方法：&lt;/h5&gt;
&lt;p&gt;众所周知，Linux系统自带的repo是不会自动更新每个软件的最新版本（基本都是比较靠后的稳定版），所以无法通过yum方式安装MySQL的高级版本。所以我们需要先安装带有当前可用的mysql5系列社区版资源的rpm包。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;#######安装rpm包
[root@typecodes ~]# rpm -Uvh http://dev.mysql.com/get/mysql-community-release-el7-5.noarch.rpm
Retrieving http://dev.mysql.com/get/mysql-community-release-el7-5.noarch.rpm
Preparing...                          ################################# [100%]
Updating / installing...
   1:mysql-community-release-el7-5    ################################# [100%]
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这时查看当前可用的mysql安装资源：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@typecodes ~]# yum repolist enabled | grep &amp;quot;mysql.*-community.*&amp;quot;
mysql-connectors-community/x86_64 MySQL Connectors Community                 14
mysql-tools-community/x86_64      MySQL Tools Community                      17
mysql56-community/x86_64          MySQL 5.6 Community Server                139
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;从上面的列表可以看出，&lt;code&gt;mysql56-community/x86_64&lt;/code&gt;和&lt;code&gt;MySQL 5.6 Community Server&lt;/code&gt;可以使用。&lt;/p&gt;
&lt;p&gt;因此，我们就可以直接用yum方式安装了MySQL5.6版本了。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@typecodes ~]# yum -y install mysql-community-server
Loaded plugins: axelget, langpacks
No metadata available for base
No metadata available for epel
No metadata available for extras
(Failed to load module fastestmirror: No module named fastestmirror)
repomd.xml                                                                                                                                      | 2.5 kB  00:00:00     
update mysql-connectors-community metadata successfully
(Failed to load module fastestmirror: No module named fastestmirror)
repomd.xml                                                                                                                                      | 2.5 kB  00:00:00     
update mysql-tools-community metadata successfully
(Failed to load module fastestmirror: No module named fastestmirror)
repomd.xml                                                                                                                                      | 2.5 kB  00:00:00     
update mysql56-community metadata successfully
No metadata available for updates
mysql-connectors-community                                                                                                                      | 2.5 kB  00:00:00     
mysql-tools-community                                                                                                                           | 2.5 kB  00:00:00     
mysql56-community                                                                                                                               | 2.5 kB  00:00:00     
(1/3): mysql-connectors-community/x86_64/primary_db                                                                                             | 7.3 kB  00:00:00     
(2/3): mysql56-community/x86_64/primary_db                                                                                                      |  83 kB  00:00:01     
mysql-tools-community/x86_64/p FAILED                                          ==============================================        ]  19 kB/s |  92 kB  00:00:00 ETA 
http://repo.mysql.com/yum/mysql-tools-community/el/7/x86_64/repodata/3301d2eb425f300dec5a46c4201d08f2cf9232a6-primary.sqlite.bz2: [Errno 12] Timeout on http://repo.mysql.com/yum/mysql-tools-community/el/7/x86_64/repodata/3301d2eb425f300dec5a46c4201d08f2cf9232a6-primary.sqlite.bz2: (28, &amp;#39;Operation too slow. Less than 1000 bytes/sec transferred the last 3 seconds&amp;#39;)
Trying other mirror.
(3/3): mysql-tools-community/x86_64/primary_db                                                                                                  |  15 kB  00:00:00     
Resolving Dependencies
--&amp;gt; Running transaction check
---&amp;gt; Package mysql-community-server.x86_64 0:5.6.24-3.el7 will be installed
--&amp;gt; Processing Dependency: mysql-community-common(x86-64) = 5.6.24-3.el7 for package: mysql-community-server-5.6.24-3.el7.x86_64
--&amp;gt; Processing Dependency: mysql-community-client(x86-64) = 5.6.24-3.el7 for package: mysql-community-server-5.6.24-3.el7.x86_64
--&amp;gt; Processing Dependency: perl(DBI) for package: mysql-community-server-5.6.24-3.el7.x86_64
--&amp;gt; Running transaction check
---&amp;gt; Package mariadb.x86_64 1:5.5.41-2.el7_0 will be obsoleted
---&amp;gt; Package mysql-community-client.x86_64 0:5.6.24-3.el7 will be obsoleting
--&amp;gt; Processing Dependency: mysql-community-libs(x86-64) = 5.6.24-3.el7 for package: mysql-community-client-5.6.24-3.el7.x86_64
---&amp;gt; Package mysql-community-common.x86_64 0:5.6.24-3.el7 will be installed
---&amp;gt; Package perl-DBI.x86_64 0:1.627-4.el7 will be installed
--&amp;gt; Processing Dependency: perl(RPC::PlServer) &amp;gt;= 0.2001 for package: perl-DBI-1.627-4.el7.x86_64
--&amp;gt; Processing Dependency: perl(RPC::PlClient) &amp;gt;= 0.2000 for package: perl-DBI-1.627-4.el7.x86_64
--&amp;gt; Running transaction check
---&amp;gt; Package mariadb-libs.x86_64 1:5.5.41-2.el7_0 will be obsoleted
--&amp;gt; Processing Dependency: mariadb-libs(x86-64) = 1:5.5.41-2.el7_0 for package: 1:mariadb-devel-5.5.41-2.el7_0.x86_64
---&amp;gt; Package mysql-community-libs.x86_64 0:5.6.24-3.el7 will be obsoleting
---&amp;gt; Package perl-PlRPC.noarch 0:0.2020-14.el7 will be installed
--&amp;gt; Processing Dependency: perl(Net::Daemon) &amp;gt;= 0.13 for package: perl-PlRPC-0.2020-14.el7.noarch
--&amp;gt; Processing Dependency: perl(Net::Daemon::Test) for package: perl-PlRPC-0.2020-14.el7.noarch
--&amp;gt; Processing Dependency: perl(Net::Daemon::Log) for package: perl-PlRPC-0.2020-14.el7.noarch
--&amp;gt; Processing Dependency: perl(Compress::Zlib) for package: perl-PlRPC-0.2020-14.el7.noarch
--&amp;gt; Running transaction check
---&amp;gt; Package mariadb-devel.x86_64 1:5.5.41-2.el7_0 will be obsoleted
---&amp;gt; Package mysql-community-devel.x86_64 0:5.6.24-3.el7 will be obsoleting
---&amp;gt; Package perl-IO-Compress.noarch 0:2.061-2.el7 will be installed
--&amp;gt; Processing Dependency: perl(Compress::Raw::Zlib) &amp;gt;= 2.061 for package: perl-IO-Compress-2.061-2.el7.noarch
--&amp;gt; Processing Dependency: perl(Compress::Raw::Bzip2) &amp;gt;= 2.061 for package: perl-IO-Compress-2.061-2.el7.noarch
---&amp;gt; Package perl-Net-Daemon.noarch 0:0.48-5.el7 will be installed
--&amp;gt; Running transaction check
---&amp;gt; Package perl-Compress-Raw-Bzip2.x86_64 0:2.061-3.el7 will be installed
---&amp;gt; Package perl-Compress-Raw-Zlib.x86_64 1:2.061-4.el7 will be installed
--&amp;gt; Finished Dependency Resolution

Dependencies Resolved

=======================================================================================================================================================================
 Package                                         Arch                           Version                                Repository                                 Size
=======================================================================================================================================================================
Installing:
 mysql-community-client                          x86_64                         5.6.24-3.el7                           mysql56-community                          19 M
     replacing  mariadb.x86_64 1:5.5.41-2.el7_0
 mysql-community-devel                           x86_64                         5.6.24-3.el7                           mysql56-community                         3.4 M
     replacing  mariadb-devel.x86_64 1:5.5.41-2.el7_0
 mysql-community-libs                            x86_64                         5.6.24-3.el7                           mysql56-community                         2.0 M
     replacing  mariadb-libs.x86_64 1:5.5.41-2.el7_0
 mysql-community-server                          x86_64                         5.6.24-3.el7                           mysql56-community                          58 M
Installing for dependencies:
 mysql-community-common                          x86_64                         5.6.24-3.el7                           mysql56-community                         256 k
 perl-Compress-Raw-Bzip2                         x86_64                         2.061-3.el7                            base                                       32 k
 perl-Compress-Raw-Zlib                          x86_64                         1:2.061-4.el7                          base                                       57 k
 perl-DBI                                        x86_64                         1.627-4.el7                            base                                      802 k
 perl-IO-Compress                                noarch                         2.061-2.el7                            base                                      260 k
 perl-Net-Daemon                                 noarch                         0.48-5.el7                             base                                       51 k
 perl-PlRPC                                      noarch                         0.2020-14.el7                          base                                       36 k

Transaction Summary
=======================================================================================================================================================================
Install  4 Packages (+7 Dependent packages)

Total download size: 83 M
Downloading packages:
mysql-community-devel-5.6.24-3.el7.x86_64.rpm                                                                                                   | 3.4 MB  00:00:03     
mysql-community-client-5.6.24-3.el7.x86_64.rpm                                                                                                  |  19 MB  00:00:05     
mysql-community-server-5.6.24-3.el7.x86_64.rpm                                                                                                  |  58 MB  00:00:11     
mysql-community-libs-5.6.24-3.el7.x86_64.rpm                                                                                                    | 2.0 MB  00:00:02     
perl-DBI-1.627-4.el7.x86_64.rpm                                                                                                                 |    0 B  00:00:01 ... 
perl-DBI-1.627-4.el7.x86_64.rpm                                                                                                                 | 802 kB  00:00:00     
(1/6): perl-Compress-Raw-Zlib-2.061-4.el7.x86_64.rpm                                                                                            |  57 kB  00:00:00     
(2/6): perl-Net-Daemon-0.48-5.el7.noarch.rpm                                                                                                    |  51 kB  00:00:00     
(3/6): perl-PlRPC-0.2020-14.el7.noarch.rpm                                                                                                      |  36 kB  00:00:00     
(4/6): perl-Compress-Raw-Bzip2-2.061-3.el7.x86_64.rpm                                                                                           |  32 kB  00:00:00     
(5/6): perl-IO-Compress-2.061-2.el7.noarch.rpm                                                                                                  | 260 kB  00:00:00     
warning: /var/cache/yum/x86_64/7/mysql56-community/packages/mysql-community-common-5.6.24-3.el7.x86_64.rpm: V3 DSA/SHA1 Signature, key ID 5072e1f5: NOKEY 00:00:01 ETA 
Public key for mysql-community-common-5.6.24-3.el7.x86_64.rpm is not installed
(6/6): mysql-community-common-5.6.24-3.el7.x86_64.rpm                                                                                           | 256 kB  00:00:01     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Total                                                                                                                                  388 kB/s | 692 kB  00:00:01     
Retrieving key from file:/etc/pki/rpm-gpg/RPM-GPG-KEY-mysql
Importing GPG key 0x5072E1F5:
 Userid     : &amp;quot;MySQL Release Engineering &amp;lt;mysql-build@oss.oracle.com&amp;gt;&amp;quot;
 Fingerprint: a4a9 4068 76fc bd3c 4567 70c8 8c71 8d3b 5072 e1f5
 Package    : mysql-community-release-el7-5.noarch (installed)
 From       : file:/etc/pki/rpm-gpg/RPM-GPG-KEY-mysql
Running transaction check
Running transaction test
Transaction test succeeded
Running transaction
Warning: RPMDB altered outside of yum.
  Installing : mysql-community-common-5.6.24-3.el7.x86_64                                                                                                         1/14 
  Installing : mysql-community-libs-5.6.24-3.el7.x86_64                                                                                                           2/14 
  Installing : mysql-community-client-5.6.24-3.el7.x86_64                                                                                                         3/14 
  Installing : perl-Net-Daemon-0.48-5.el7.noarch                                                                                                                  4/14 
  Installing : 1:perl-Compress-Raw-Zlib-2.061-4.el7.x86_64                                                                                                        5/14 
  Installing : perl-Compress-Raw-Bzip2-2.061-3.el7.x86_64                                                                                                         6/14 
  Installing : perl-IO-Compress-2.061-2.el7.noarch                                                                                                                7/14 
  Installing : perl-PlRPC-0.2020-14.el7.noarch                                                                                                                    8/14 
  Installing : perl-DBI-1.627-4.el7.x86_64                                                                                                                        9/14 
  Installing : mysql-community-server-5.6.24-3.el7.x86_64                                                                                                        10/14 
  Installing : mysql-community-devel-5.6.24-3.el7.x86_64                                                                                                         11/14 
  Erasing    : 1:mariadb-devel-5.5.41-2.el7_0.x86_64                                                                                                             12/14 
  Erasing    : 1:mariadb-5.5.41-2.el7_0.x86_64                                                                                                                   13/14 
  Erasing    : 1:mariadb-libs-5.5.41-2.el7_0.x86_64                                                                                                              14/14 
  Verifying  : perl-Compress-Raw-Bzip2-2.061-3.el7.x86_64                                                                                                         1/14 
  Verifying  : mysql-community-common-5.6.24-3.el7.x86_64                                                                                                         2/14 
  Verifying  : mysql-community-devel-5.6.24-3.el7.x86_64                                                                                                          3/14 
  Verifying  : mysql-community-client-5.6.24-3.el7.x86_64                                                                                                         4/14 
  Verifying  : perl-PlRPC-0.2020-14.el7.noarch                                                                                                                    5/14 
  Verifying  : mysql-community-server-5.6.24-3.el7.x86_64                                                                                                         6/14 
  Verifying  : 1:perl-Compress-Raw-Zlib-2.061-4.el7.x86_64                                                                                                        7/14 
  Verifying  : mysql-community-libs-5.6.24-3.el7.x86_64                                                                                                           8/14 
  Verifying  : perl-Net-Daemon-0.48-5.el7.noarch                                                                                                                  9/14 
  Verifying  : perl-DBI-1.627-4.el7.x86_64                                                                                                                       10/14 
  Verifying  : perl-IO-Compress-2.061-2.el7.noarch                                                                                                               11/14 
  Verifying  : 1:mariadb-5.5.41-2.el7_0.x86_64                                                                                                                   12/14 
  Verifying  : 1:mariadb-devel-5.5.41-2.el7_0.x86_64                                                                                                             13/14 
  Verifying  : 1:mariadb-libs-5.5.41-2.el7_0.x86_64                                                                                                              14/14

Installed:
  mysql-community-client.x86_64 0:5.6.24-3.el7            mysql-community-devel.x86_64 0:5.6.24-3.el7            mysql-community-libs.x86_64 0:5.6.24-3.el7           
  mysql-community-server.x86_64 0:5.6.24-3.el7

Dependency Installed:
  mysql-community-common.x86_64 0:5.6.24-3.el7 perl-Compress-Raw-Bzip2.x86_64 0:2.061-3.el7 perl-Compress-Raw-Zlib.x86_64 1:2.061-4.el7 perl-DBI.x86_64 0:1.627-4.el7
  perl-IO-Compress.noarch 0:2.061-2.el7        perl-Net-Daemon.noarch 0:0.48-5.el7          perl-PlRPC.noarch 0:0.2020-14.el7

Replaced:
  mariadb.x86_64 1:5.5.41-2.el7_0                    mariadb-devel.x86_64 1:5.5.41-2.el7_0                    mariadb-libs.x86_64 1:5.5.41-2.el7_0

Complete!
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;3 MySQL安装完成后，进行相关配置&lt;/h5&gt;
&lt;p&gt;安装完MySQL后，需要进行一些基础配置工作：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="err"&gt;#######安装成功后，将其加入开机启动&lt;/span&gt;
&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;root&lt;/span&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nx"&gt;typecodes&lt;/span&gt; &lt;span class="err"&gt;~&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="nt"&gt;systemctl&lt;/span&gt; &lt;span class="nt"&gt;enable&lt;/span&gt; &lt;span class="nt"&gt;mysqld&lt;/span&gt;

&lt;span class="err"&gt;#######启动&lt;/span&gt;&lt;span class="nt"&gt;mysql&lt;/span&gt;&lt;span class="err"&gt;服务进程&lt;/span&gt;
&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;root&lt;/span&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nx"&gt;typecodes&lt;/span&gt; &lt;span class="err"&gt;~&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="nt"&gt;systemctl&lt;/span&gt; &lt;span class="nt"&gt;start&lt;/span&gt; &lt;span class="nt"&gt;mysqld&lt;/span&gt;

&lt;span class="err"&gt;#######配置&lt;/span&gt;&lt;span class="nt"&gt;mysql&lt;/span&gt;&lt;span class="err"&gt;（设置密码等）&lt;/span&gt;
&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;root&lt;/span&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nx"&gt;typecodes&lt;/span&gt; &lt;span class="err"&gt;~&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="nt"&gt;mysql_secure_installation&lt;/span&gt;

&lt;span class="nt"&gt;NOTE&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;RUNNING&lt;/span&gt; &lt;span class="nt"&gt;ALL&lt;/span&gt; &lt;span class="nt"&gt;PARTS&lt;/span&gt; &lt;span class="nt"&gt;OF&lt;/span&gt; &lt;span class="nt"&gt;THIS&lt;/span&gt; &lt;span class="nt"&gt;SCRIPT&lt;/span&gt; &lt;span class="nt"&gt;IS&lt;/span&gt; &lt;span class="nt"&gt;RECOMMENDED&lt;/span&gt; &lt;span class="nt"&gt;FOR&lt;/span&gt; &lt;span class="nt"&gt;ALL&lt;/span&gt; &lt;span class="nt"&gt;MySQL&lt;/span&gt;
      &lt;span class="nt"&gt;SERVERS&lt;/span&gt; &lt;span class="nt"&gt;IN&lt;/span&gt; &lt;span class="nt"&gt;PRODUCTION&lt;/span&gt; &lt;span class="nt"&gt;USE&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;  &lt;span class="nt"&gt;PLEASE&lt;/span&gt; &lt;span class="nt"&gt;READ&lt;/span&gt; &lt;span class="nt"&gt;EACH&lt;/span&gt; &lt;span class="nt"&gt;STEP&lt;/span&gt; &lt;span class="nt"&gt;CAREFULLY&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;

&lt;span class="nt"&gt;In&lt;/span&gt; &lt;span class="nt"&gt;order&lt;/span&gt; &lt;span class="nt"&gt;to&lt;/span&gt; &lt;span class="nt"&gt;log&lt;/span&gt; &lt;span class="nt"&gt;into&lt;/span&gt; &lt;span class="nt"&gt;MySQL&lt;/span&gt; &lt;span class="nt"&gt;to&lt;/span&gt; &lt;span class="nt"&gt;secure&lt;/span&gt; &lt;span class="nt"&gt;it&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;we&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ll need the current&lt;/span&gt;
&lt;span class="s1"&gt;password for the root user.  If you&amp;#39;&lt;/span&gt;&lt;span class="nt"&gt;ve&lt;/span&gt; &lt;span class="nt"&gt;just&lt;/span&gt; &lt;span class="nt"&gt;installed&lt;/span&gt; &lt;span class="nt"&gt;MySQL&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;and&lt;/span&gt;
&lt;span class="nt"&gt;you&lt;/span&gt; &lt;span class="nt"&gt;haven&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;t set the root password yet, the password will be blank,&lt;/span&gt;
&lt;span class="s1"&gt;so you should just press enter here.&lt;/span&gt;

&lt;span class="s1"&gt;Enter current password for root (enter for none): &lt;/span&gt;
&lt;span class="s1"&gt;OK, successfully used password, moving on...&lt;/span&gt;

&lt;span class="s1"&gt;Setting the root password ensures that nobody can log into the MySQL&lt;/span&gt;
&lt;span class="s1"&gt;root user without the proper authorisation.&lt;/span&gt;

&lt;span class="s1"&gt;Set root password? &lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;Y&lt;/span&gt;&lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="s1"&gt; y                  &lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="err"&gt;设置&lt;/span&gt;&lt;span class="nx"&gt;root&lt;/span&gt;&lt;span class="err"&gt;用户密码&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="s1"&gt;&lt;/span&gt;
&lt;span class="s1"&gt;New password: &lt;/span&gt;
&lt;span class="s1"&gt;Re-enter new password: &lt;/span&gt;
&lt;span class="s1"&gt;Password updated successfully!&lt;/span&gt;
&lt;span class="s1"&gt;Reloading privilege tables..&lt;/span&gt;
&lt;span class="s1"&gt; ... Success!&lt;/span&gt;


&lt;span class="s1"&gt;By default, a MySQL installation has an anonymous user, allowing anyone&lt;/span&gt;
&lt;span class="s1"&gt;to log into MySQL without having to have a user account created for&lt;/span&gt;
&lt;span class="s1"&gt;them.  This is intended only for testing, and to make the installation&lt;/span&gt;
&lt;span class="s1"&gt;go a bit smoother.  You should remove them before moving into a&lt;/span&gt;
&lt;span class="s1"&gt;production environment.&lt;/span&gt;

&lt;span class="s1"&gt;Remove anonymous users? &lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;Y&lt;/span&gt;&lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="s1"&gt; y                 &lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="err"&gt;删除匿名用户&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="s1"&gt;&lt;/span&gt;
&lt;span class="s1"&gt; ... Success!&lt;/span&gt;

&lt;span class="s1"&gt;Normally, root should only be allowed to connect from &amp;#39;&lt;/span&gt;&lt;span class="nt"&gt;localhost&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;.  This&lt;/span&gt;
&lt;span class="s1"&gt;ensures that someone cannot guess at the root password from the network.&lt;/span&gt;

&lt;span class="s1"&gt;Disallow root login remotely? &lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;Y&lt;/span&gt;&lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="s1"&gt; y       &lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="err"&gt;禁止&lt;/span&gt;&lt;span class="nx"&gt;root&lt;/span&gt;&lt;span class="err"&gt;远程登录&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="s1"&gt;&lt;/span&gt;
&lt;span class="s1"&gt; ... Success!&lt;/span&gt;

&lt;span class="s1"&gt;By default, MySQL comes with a database named &amp;#39;&lt;/span&gt;&lt;span class="nt"&gt;test&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39; that anyone can&lt;/span&gt;
&lt;span class="s1"&gt;access.  This is also intended only for testing, and should be removed&lt;/span&gt;
&lt;span class="s1"&gt;before moving into a production environment.&lt;/span&gt;

&lt;span class="s1"&gt;Remove test database and access to it? &lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;Y&lt;/span&gt;&lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="s1"&gt; y          &lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="err"&gt;删除&lt;/span&gt;&lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="err"&gt;数据库&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="s1"&gt;&lt;/span&gt;
&lt;span class="s1"&gt; - Dropping test database...&lt;/span&gt;
&lt;span class="s1"&gt;ERROR 1008 (HY000) at line 1: Can&amp;#39;&lt;/span&gt;&lt;span class="nt"&gt;t&lt;/span&gt; &lt;span class="nt"&gt;drop&lt;/span&gt; &lt;span class="nt"&gt;database&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;test&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;database&lt;/span&gt; &lt;span class="nt"&gt;doesn&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;t exist&lt;/span&gt;
&lt;span class="s1"&gt; ... Failed!  Not critical, keep moving...&lt;/span&gt;
&lt;span class="s1"&gt; - Removing privileges on test database...&lt;/span&gt;
&lt;span class="s1"&gt; ... Success!&lt;/span&gt;

&lt;span class="s1"&gt;Reloading the privilege tables will ensure that all changes made so far&lt;/span&gt;
&lt;span class="s1"&gt;will take effect immediately.&lt;/span&gt;

&lt;span class="s1"&gt;Reload privilege tables now? &lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;Y&lt;/span&gt;&lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="s1"&gt; y            &lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="err"&gt;刷新权限&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="s1"&gt;&lt;/span&gt;
&lt;span class="s1"&gt; ... Success!&lt;/span&gt;




&lt;span class="s1"&gt;All done!  If you&amp;#39;&lt;/span&gt;&lt;span class="nt"&gt;ve&lt;/span&gt; &lt;span class="nt"&gt;completed&lt;/span&gt; &lt;span class="nt"&gt;all&lt;/span&gt; &lt;span class="nt"&gt;of&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;above&lt;/span&gt; &lt;span class="nt"&gt;steps&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;your&lt;/span&gt; &lt;span class="nt"&gt;MySQL&lt;/span&gt;
&lt;span class="nt"&gt;installation&lt;/span&gt; &lt;span class="nt"&gt;should&lt;/span&gt; &lt;span class="nt"&gt;now&lt;/span&gt; &lt;span class="nt"&gt;be&lt;/span&gt; &lt;span class="nt"&gt;secure&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;

&lt;span class="nt"&gt;Thanks&lt;/span&gt; &lt;span class="nt"&gt;for&lt;/span&gt; &lt;span class="nt"&gt;using&lt;/span&gt; &lt;span class="nt"&gt;MySQL&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;


&lt;span class="nt"&gt;Cleaning&lt;/span&gt; &lt;span class="nt"&gt;up&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;4 其它说明&lt;/h5&gt;
&lt;p&gt;至于其它诸如使用root用户创建其它mysql用户或者导入sql文件到数据库中的操作，这里就不说了，可以参考前面的两篇文章。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Thu, 25 Jun 2015 09:43:00 +0800</pubDate><guid>tag:typecodes.com,2015-06-25:web/centos7yuminstallmysql5.html</guid><category>博客成长录</category><category>mysql</category></item><item><title>阿里云CentOS 7.1编译安装MySql5.6.24</title><link>https://typecodes.com/web/centos7compilemysql5.html</link><description>&lt;p&gt;继&lt;a href="https://typecodes.com/web/centos7compilemysql.html" title="《2015博客升级记(四)：CentOS 7.1编译安装MySQL5.7.7rc》"&gt;前文&lt;/a&gt;记述了如何在Linux系统中，通过源码编译安装MySQL5.7.7 Release Candidate版本的过程，这篇文章主要是记录源码编译安装MySql5.6.24的过程。&lt;/p&gt;
&lt;p&gt;鉴于官方MySql5.6.24相对是一个比较稳定的版本，所以博主之前也在自己的另一台CentOS7.1主机上安装了一遍。不过最后还是图新鲜，选择了MySQL5.7.7rc版本。下面是具体的安装过程，由于和MySQL5.7.7rc的编译安装过程很类似，所以这里尽可能精简文字：&lt;/p&gt;


&lt;h5&gt;1 创建mysql用户和用户组，并下载MySql5.6.24版本&lt;/h5&gt;
&lt;p&gt;首先创建一个名为mysql且&lt;code&gt;没有登录权限&lt;/code&gt;的用户和一个名为mysql的用户组，然后去mysql官网下载MySql5.6.24版本。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;#######新建mysql用户和mysql组
[root@typecodes ~]# groupadd -r mysql &amp;amp;&amp;amp; useradd -r -g mysql -s /bin/false -M mysql

######从官网或者博客备份地址下载MySql5.6.24版本
[root@typecodes ~]# wget -c http://cdn.mysql.com/Downloads/MySQL-5.6/mysql-5.6.24.tar.gz
[root@typecodes ~]# wget -c http://git.typecodes.com/libs/mysql/mysql-5.6.24.tar.gz

######开始解压MySql5.6.24
[root@typecodes ~]# tar -zxvf mysql-5.6.24.tar.gz &amp;amp;&amp;amp; cd mysql-5.6.24/
######下载gmock：google的c++mock框架，从mysql 5.6开始支持
[root@typecodes mysql-5.6.24]# wget -c https://googlemock.googlecode.com/files/gmock-1.6.0.zip
[root@typecodes mysql-5.6.24]# wget -c http://git.typecodes.com/libs/ccpp/gmock-1.6.0.zip
######将其解压到MySQL5.6.24的source_downloads目录下
[root@typecodes mysql-5.6.24]# unzip gmock-1.6.0.zip -d source_downloads
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;2 下载编译MySql5.6.24时需要的工具（安装过程同编译安装MySQL5.7.7rc完全一致）&lt;/h5&gt;
&lt;p&gt;和编译安装MySQL5.7.7rc版本一样，这里也需要安装CMake、Ncurses、bison和Boost库。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;#######CMake编译工具
[root@typecodes ~]# wget -c http://git.typecodes.com/libs/ccpp/cmake-3.2.1.tar.gz
[root@typecodes ~]# tar -zxf cmake-3.2.1.tar.gz &amp;amp;&amp;amp; cd cmake-3.2.1
[root@typecodes cmake-3.2.1]# ./configure 
[root@typecodes cmake-3.2.1]# make &amp;amp;&amp;amp; make install  [默认安装路径是/usr/local/bin]
[root@typecodes cmake-3.2.1]# cmake --version       [查看cmake版本]
cmake version 3.2.1

CMake suite maintained and supported by Kitware (kitware.com/cmake).
[root@typecodes cmake-3.2.1]# cd ~ &amp;amp;&amp;amp; rm -rf cmake-3.2.1*

#######Ncurses：提供功能键定义(快捷键),屏幕绘制以及基于文本终端的图形互动功能的动态库。
[root@typecodes ~]# yum -y install ncurses-devel

#######bison：GNU分析器生成器
[root@typecodes ~]# wget -c http://git.typecodes.com/libs/ccpp/bison-3.0.tar.gz
[root@typecodes ~]# tar -zxf bison-3.0.tar.gz &amp;amp;&amp;amp; cd bison-3.0/ &amp;amp;&amp;amp; ./configure
[root@typecodes bison-3.0]# make &amp;amp;&amp;amp; make install
[root@typecodes bison-3.0]# cd ~ &amp;amp;&amp;amp; rm -rf bison-3.0*

#######Boost库：一个开源可移植的C++库，是C++标准化进程的开发引擎之一
[root@typecodes ~]# wget -c http://git.typecodes.com/libs/ccpp/boost_1_57_0.tar.bz2
[root@typecodes ~]# tar -jxf boost_1_57_0.tar.bz2 &amp;amp;&amp;amp; cd boost_1_57_0/
[root@typecodes boost_1_57_0]# ./bootstrap.sh
[root@typecodes boost_1_57_0]# ./b2 stage threading=multi link=shared
[root@typecodes boost_1_57_0]# ./b2 install threading=multi link=shared
[root@typecodes boost_1_57_0]# cd ~ &amp;amp;&amp;amp; rm -rf boost_1_57_0*
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;3 解决MySQL5.6.24的bug&lt;/h5&gt;
&lt;p&gt;在MySQL5.6.24源码包中的&lt;code&gt;/cmd-line-utils/libedit/terminal.c&lt;/code&gt;文件有bug，会导致在安装完后，使用命令报&lt;code&gt;Segmentation fault&lt;/code&gt;的错误。&lt;/p&gt;
&lt;p&gt;&lt;img alt="MySQL5.6.24的bug" src="https://o3cex9zsl.qnssl.com/2015/06/mysql5.6.24_bug.png" title="MySQL5.6.24的bug" /&gt;&lt;/p&gt;
&lt;p&gt;谷歌到&lt;a href="https://bugs.launchpad.net/percona-server/+bug/1201123" title="《connect using mysql client gives a segmentation fault》"&gt;这篇文章&lt;/a&gt;解决：注销第869行的 &lt;code&gt;//char buf[TC_BUFSIZE];&lt;/code&gt;并将第879行的&lt;code&gt;area = buf;&lt;/code&gt;改成&lt;code&gt;area = NULL;&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img alt="MySQL5.6.24的bug" src="https://o3cex9zsl.qnssl.com/2015/06/solve_mysql5.6.24_bug.png" title="MySQL5.6.24的bug" /&gt;&lt;/p&gt;
&lt;h5&gt;4 开始进行MySql5.6.24编译前的配置&lt;/h5&gt;
&lt;p&gt;这里和编译安装MySQL5.7.7rc时的操作也完全相同：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;######使用cmake命令，开始编译MySql5.6.24
[root@typecodes mysql-5.6.24]# cmake \
-DCMAKE_INSTALL_PREFIX=/usr/local/mysql  \              [MySQL安装的根目录]
-DMYSQL_DATADIR=/mydata/mysql/data  \                   [MySQL数据库文件存放目录]
-DSYSCONFDIR=/etc \                                     [MySQL配置文件所在目录]
-DMYSQL_USER=mysql \                                    [MySQL用户名]      
-DWITH_MYISAM_STORAGE_ENGINE=1 \                        [MySQL的数据库引擎]
-DWITH_INNOBASE_STORAGE_ENGINE=1 \                      [MySQL的数据库引擎]
-DWITH_ARCHIVE_STORAGE_ENGINE=1 \                       [MySQL的数据库引擎]
-DWITH_MEMORY_STORAGE_ENGINE=1 \                        [MySQL的数据库引擎]
-DWITH_READLINE=1 \                                     [MySQL的readline library]
-DMYSQL_UNIX_ADDR=/var/run/mysql/mysql.sock \           [MySQL的通讯目录]
-DMYSQL_TCP_PORT=3306 \                                 [MySQL的监听端口]
-DENABLED_LOCAL_INFILE=1 \                              [启用加载本地数据]
-DENABLE_DOWNLOADS=1 \                                  [编译时允许自主下载相关文件]
-DWITH_PARTITION_STORAGE_ENGINE=1  \
-DEXTRA_CHARSETS=all \                                  [使MySQL支持所有的扩展字符]
-DDEFAULT_CHARSET=utf8 \                                [设置默认字符集为utf8]
-DDEFAULT_COLLATION=utf8_general_ci \                   [设置默认字符校对]
-DWITH_DEBUG=0 \                                        [禁用调试模式]
-DMYSQL_MAINTAINER_MODE=0 \
-DWITH_SSL:STRING=bundled \                             [通讯时支持ssl协议]
-DWITH_ZLIB:STRING=bundled                              [允许使用zlib library]
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;执行上面的配置命令的结果如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img alt="MySQL5.7.7rc编译前的配置" src="https://o3cex9zsl.qnssl.com/2015/06/compile_mysql5.6.24_config.png" title="MySQL5.7.7rc编译前的配置" /&gt;&lt;/p&gt;
&lt;h5&gt;5 开始编译和安装MySQL5.6.24&lt;/h5&gt;
&lt;p&gt;相对编译MySQL5.7.7rc来说，编译MySQL5.6.24对主机资源的消耗低很多，而且耗时也少（约1小时）。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@typecodes mysql-5.6.24]# make &amp;amp;&amp;amp; make install
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;下图展示的是&lt;code&gt;make&lt;/code&gt;命令执行完毕的情况：&lt;/p&gt;
&lt;p&gt;&lt;img alt="编译MySQL5.6.24的make命令执行结果" src="https://o3cex9zsl.qnssl.com/2015/06/make_mysql5.6.24_step1.png" title="编译MySQL5.6.24的make命令执行结果" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="编译MySQL5.6.24的make命令执行结果" src="https://o3cex9zsl.qnssl.com/2015/06/make_mysql5.6.24_step2.png" title="编译MySQL5.6.24的make命令执行结果" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;make&lt;/code&gt;命令执行完后，开始执行&lt;code&gt;make install&lt;/code&gt;命令：&lt;/p&gt;
&lt;p&gt;&lt;img alt="编译MySQL5.6.24的make命令执行结果" src="https://o3cex9zsl.qnssl.com/2015/06/make_mysql5.6.24_step3.png" title="编译MySQL5.6.24的make命令执行结果" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="编译MySQL5.6.24的make命令执行结果" src="https://o3cex9zsl.qnssl.com/2015/06/make_mysql5.6.24_step4.png" title="编译MySQL5.6.24的make命令执行结果" /&gt;&lt;/p&gt;
&lt;p&gt;最后，激动人心的时刻，看到下图就代表已经编译安装好了MySQL5.6.24！&lt;/p&gt;
&lt;p&gt;&lt;img alt="安装MySQL5.6.24的make install命令执行结果" src="https://o3cex9zsl.qnssl.com/2015/06/make_mysql5.6.24_step5.png" title="安装MySQL5.7.7rc的MySQL5.6.24命令执行结果" /&gt;&lt;/p&gt;
&lt;h5&gt;6 查看编译成功后的MySQL安装目录&lt;/h5&gt;
&lt;p&gt;同MySQL5.7.7rc一样，需要查看MySQL5.6.24的&lt;code&gt;/usr/local/mysql/lib/&lt;/code&gt;目录下是否存在下面的库文件。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@typecodes lib]# ls
libmysqlclient.a    libmysqlclient_r.so     libmysqlclient_r.so.18.1.0  libmysqlclient.so.18      libmysqld.a         plugin
libmysqlclient_r.a  libmysqlclient_r.so.18  libmysqlclient.so           libmysqlclient.so.18.1.0  libmysqlservices.a
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;7 开始设置MySQL的配置文件my.cnf&lt;/h5&gt;
&lt;p&gt;同MySQL5.7.7rc的配置文件my.cnf一样，直接把&lt;a href="https://typecodes.com/web/centosmysqlconfig.html" title="查看原文"&gt;《CentOS系统MySQL的配置文件my.cnf》&lt;/a&gt;文中整理的my.cnf文件覆盖服务器上的&lt;code&gt;/etc/my.cnf&lt;/code&gt;即可。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@typecodes mysql]# mv /etc/my.cnf /etc/my.cnfbak
[root@typecodes mysql]# mv  ~/my.cnf  /etc/my.cnf
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;8 添加mysql的环境变量&lt;/h5&gt;
&lt;p&gt;同MySQL5.7.7rc，添加MySQL的bin目录到Linux环境变量中：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="x"&gt;[root@typecodes mysql]&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; echo -e &amp;#39;\n\nexport PATH=/usr/local/mysql/bin:&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;PATH&lt;/span&gt;&lt;span class="x"&gt;\n&amp;#39; &amp;gt;&amp;gt; /etc/profile &amp;amp;&amp;amp; source /etc/profile&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;9 创建MySQL数据库文件的存放路径以及相关安全配置&lt;/h5&gt;
&lt;p&gt;同MySQL5.7.7rc，创建&lt;code&gt;/mydata/mysql/data&lt;/code&gt;作为MySQL的数据库目录。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@typecodes ~]# mkdir -p /mydata/mysql/data &amp;amp;&amp;amp; chown -R root:mysql /usr/local/mysql
[root@typecodes mysql]# chown -R mysql:mysql /mydata/mysql/data
[root@typecodes mysql]# chmod -R go-rwx /mydata/mysql/data
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;10 初始化MySQL自身的数据库&lt;/h5&gt;
&lt;p&gt;同MySQL5.7.7rc，初始化MySQL自身的数据库。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;######参数user表示用户，basedir表示mysql的安装路径，datadir表示数据库文件存放路径
[root@typecodes bin]# mysqld --initialize-insecure --user=mysql --basedir=/usr/local/mysql --datadir=/mydata/mysql/data
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;执行完后，可以通过&lt;code&gt;[root@typecodes mysql]# ls -lrt /mydata/mysql/data/&lt;/code&gt;命令查看是否生成了MySQL自身的数据库文件。&lt;/p&gt;
&lt;p&gt;&lt;img alt="初始化MySQL自身的数据库" src="https://o3cex9zsl.qnssl.com/2015/06/mysql_ini_dir.png" title="初始化MySQL自身的数据库" /&gt;&lt;/p&gt;
&lt;h5&gt;11 创建MySQL日志存放目录以及设置开机启动&lt;/h5&gt;
&lt;p&gt;同MySQL5.7.7rc，将启动MySQL服务进程的脚本添加到开机启动项中。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@typecodes ~]# mkdir -p /var/run/mysql &amp;amp;&amp;amp; mkdir -p /var/log/mysql
[root@typecodes ~]# chown -R mysql:mysql /var/log/mysql &amp;amp;&amp;amp; chown -R mysql:mysql /var/run/mysql
######配置开机自启动
[root@typecodes mysql]# cp /usr/local/mysql/support-files/mysql.server  /etc/init.d/mysqld
[root@typecodes mysql]# chmod +x /etc/init.d/mysqld     #增加可执行权限
[root@typecodes mysql]# chkconfig --add mysql       #添加到sysV服务
[root@typecodes mysql]# chkconfig mysqld on
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;12 启动MySQL服务&lt;/h5&gt;
&lt;p&gt;同MySQL5.7.7rc，启动MySQL服务进程：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@typecodes mysql]# mysqld_safe --user=mysql --datadir=/mydata/mysql/data --log-error=/var/log/mysql/error.log &amp;amp;
[1] 10274
[root@typecodes mysql]# 150513 21:28:16 mysqld_safe Logging to &amp;#39;/var/log/mysql/error.log&amp;#39;.
150513 21:28:16 mysqld_safe Starting mysqld daemon with databases from /mydata/mysql/data

[root@typecodes mysql]# service mysqld start
Starting MySQL.[  OK  ]                 [启动成功]
[root@typecodes mysql]#
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;然后使用下面这命令&lt;code&gt;ps -ef | grep mysql&lt;/code&gt;和&lt;code&gt;netstat -tunpl | grep 3306&lt;/code&gt;查看MySQL服务进程和端口监听情况：&lt;/p&gt;
&lt;p&gt;&lt;img alt="查看MySQL服务进程和端口监听情况" src="https://o3cex9zsl.qnssl.com/2015/06/mysql_process_litsen_port.png" title="查看MySQL服务进程和端口监听情况" /&gt;&lt;/p&gt;
&lt;h5&gt;13 初始化MySQL数据库的root用户密码&lt;/h5&gt;
&lt;p&gt;MySQL5.6.24和MySQL5.7.7rc的用户密码策略是不同的，MySQL5.6.24没有提示用户密码的强度等级，所以也就不会去校验。因此，我们只需要一路输入&lt;code&gt;y&lt;/code&gt;和自己喜欢的密码即可。&lt;/p&gt;
&lt;p&gt;&lt;img alt="MySQL5.6.24设置密码" src="https://o3cex9zsl.qnssl.com/2015/06/mysql_set_password.png" title="MySQL5.6.24设置密码" /&gt;&lt;/p&gt;
&lt;h5&gt;14 将MySQL数据库的动态链接库共享至系统链接库&lt;/h5&gt;
&lt;p&gt;同MySQL5.7.7rc，将MySQL5.6.24的lib库文件添加到当前Linux主机链接库&lt;code&gt;/etc/ld.so.conf.d/&lt;/code&gt;下，方便其它程序安装调用。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@typecodes lib]# echo &amp;quot;/usr/local/mysql/lib&amp;quot; &amp;gt; /etc/ld.so.conf.d/mysql.conf
[root@typecodes lib]# ldconfig          [使生效]
[root@typecodes lib]# ldconfig -v |grep mysql       [查看效果]
ldconfig: Can&amp;#39;t stat /libx32: No such file or directory
ldconfig: Path `/usr/lib&amp;#39; given more than once
ldconfig: Path `/usr/lib64&amp;#39; given more than once
ldconfig: Can&amp;#39;t stat /usr/libx32: No such file or directory
/usr/lib64/mysql:
    libmysqlclient.so.18 -&amp;gt; libmysqlclient.so.18.0.0
    libmysqlclient.so.18 -&amp;gt; libmysqlclient_r.so.18.1.0
/usr/local/mysql/lib:
    libmysqlclient.so.18 -&amp;gt; libmysqlclient_r.so.18.1.0
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;15 创建其它MySQL数据库用户&lt;/h5&gt;
&lt;p&gt;操作同MySQL5.7.7rc，这里就不再演示了。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Thu, 25 Jun 2015 09:42:00 +0800</pubDate><guid>tag:typecodes.com,2015-06-25:web/centos7compilemysql5.html</guid><category>博客成长录</category><category>mysql</category></item><item><title>MySQL编译安装时常见错误分析</title><link>https://typecodes.com/web/solvemysqlcompileerror.html</link><description>&lt;p&gt;这篇文章主要是关于MySQL在编译安装时，可能出现的错误的解决方法。MySQL正确的编译安装操作见前文&lt;a href="https://typecodes.com/web/centos7compilemysql.html" title="查看原文"&gt;《2015博客升级记(四)：CentOS 7.1编译安装MySQL5.7.7rc》&lt;/a&gt;。&lt;/p&gt;


&lt;h5&gt;1 没有安装MySQL所需要的boost库&lt;/h5&gt;
&lt;p&gt;测试发现编译MySQL5.7以及更高的版本时，都需要下载并引用或者直接安装boost库，否则在执行&lt;code&gt;cmake&lt;/code&gt;命令时会报如下错误：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;-- Running cmake version 3.2.1
-- Configuring with MAX_INDEXES = 64U
-- SIZEOF_VOIDP 8
-- MySQL 5.7.6-m16          [MySQL版本]
-- Packaging as: mysql-5.7.6-m16-Linux-x86_64
-- Looked for boost/version.hpp in  and 
-- BOOST_INCLUDE_DIR BOOST_INCLUDE_DIR-NOTFOUND
-- LOCAL_BOOST_DIR 
-- LOCAL_BOOST_ZIP 
-- Could not find (the correct version of) boost.       [关键错误信息]
-- MySQL currently requires boost_1_57_0                    [解决办法]

CMake Error at cmake/boost.cmake:76 (MESSAGE):          [具体错误和解决方法]
  You can download it with -DDOWNLOAD_BOOST=1 -DWITH_BOOST=&amp;lt;directory&amp;gt;

  This CMake script will look for boost in &amp;lt;directory&amp;gt;.  If it is not there,
  it will download and unpack it (in that directory) for you.

  If you are inside a firewall, you may need to use an http proxy:

  export http_proxy=http://example.com:80

Call Stack (most recent call first):
  cmake/boost.cmake:228 (COULD_NOT_FIND_BOOST)
  CMakeLists.txt:452 (INCLUDE)


-- Configuring incomplete, errors occurred!
See also &amp;quot;/mydata/mysql-5.7.6-m16/CMakeFiles/CMakeOutput.log&amp;quot;.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;解决方法：直接按照前文&lt;a href="https://typecodes.com/web/centos7compilemysql.html" title="查看原文"&gt;《2015博客升级记(四)：CentOS 7.1编译安装MySQL5.7.7rc》&lt;/a&gt;小节2中的方法安装Boost库即可。或者先下载Boost库，然后通过在cmake命令后面添加参数&lt;code&gt;-DDOWNLOAD_BOOST=1 -DWITH_BOOST=Boost库路径&lt;/code&gt;即可。&lt;/p&gt;
&lt;h5&gt;2 执行cmake时缺少Ncurses库的支持&lt;/h5&gt;
&lt;p&gt;Ncurses提供功能键定义(快捷键)，屏幕绘制以及基于文本终端的图形互动功能的动态库。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@typecodes ~]# yum -y install ncurses-devel

-- Could NOT find Curses (missing:  CURSES_LIBRARY CURSES_INCLUDE_PATH) 
CMake Error at cmake/readline.cmake:64 (MESSAGE):
  Curses library not found.  Please install appropriate package,

      remove CMakeCache.txt and rerun cmake.On Debian/Ubuntu, package name is libncurses5-dev, on Redhat and derivates it is ncurses-devel.
Call Stack (most recent call first):
  cmake/readline.cmake:107 (FIND_CURSES)
  cmake/readline.cmake:181 (MYSQL_USE_BUNDLED_EDITLINE)
  CMakeLists.txt:480 (MYSQL_CHECK_EDITLINE)


-- Configuring incomplete, errors occurred!
See also &amp;quot;/mydata/mysql-5.7.6-m16/CMakeFiles/CMakeOutput.log&amp;quot;.
See also &amp;quot;/mydata/mysql-5.7.6-m16/CMakeFiles/CMakeError.log&amp;quot;.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;解决方法：直接执行命令&lt;code&gt;yum -y install ncurses-devel&lt;/code&gt;安装Ncurses即可。&lt;/p&gt;
&lt;h5&gt;3 安装MySQL完后，无法正常启动服务&lt;/h5&gt;
&lt;p&gt;在安装完MySQL后，执行命令&lt;code&gt;service mysqld start&lt;/code&gt;失败，也即无法正常启动MySQL服务。&lt;/p&gt;
&lt;p&gt;&lt;img alt="无法正常启动MySQL服务" src="https://o3cex9zsl.qnssl.com/2015/06/mysql_start_error.png" title="无法正常启动MySQL服务" /&gt;&lt;/p&gt;
&lt;p&gt;解决方法：主要通过命令&lt;code&gt;systemctl status mysqld.service&lt;/code&gt;和MySQL的日志来分析。如上图所示，在日志文件&lt;code&gt;/var/log/mysql/error.log&lt;/code&gt;中可以看到具体的&lt;code&gt;ERROR&lt;/code&gt;信息：Could not create unix socket lock file /var/run/mysql/mysql.sock.lock。这种错误一般都是目录不存在或者权限不足，所以我们直接使用命令&lt;code&gt;mkdir -p /var/log/mysql/&lt;/code&gt;创建该目录即可，然后可以设置目录权限&lt;code&gt;chown -R mysql:mysql /var/log/mysql/&lt;/code&gt;。&lt;/p&gt;
&lt;h5&gt;4 操作MySQL时，报错You must SET PASSWORD before executing this statement&lt;/h5&gt;
&lt;p&gt;用MySQL的root用户登录数据库后，如果之前没有设置密码，那么执行任何操作命令时，会提示如下错误信息。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;mysql&amp;gt; CREATE DATABASE `testmysqldatabase` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci;
ERROR 1820 (HY000): You must SET PASSWORD before executing this statement
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;常规的使用MySQL安全模式的解决方法如下，但是在MySQL5.7以及更高版本下是行不通的。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@typecodes ~]# service mysqld stop
Shutting down MySQL..[  OK  ]
[root@typecodes ~]# /mydata/mysql/bin/mysqld_safe --user=mysql --skip-networking --skip-grant-tables &amp;amp;
[1] 3688
[root@typecodes ~]# 150409 23:02:02 mysqld_safe Logging to &amp;#39;/var/log/mysql/error.log&amp;#39;.
150409 23:02:02 mysqld_safe Starting mysqld daemon with databases from /mydata/mysql/data
######重新登录mysql后，设置root密码
mysql&amp;gt; set password=&amp;#39;this is a password sample&amp;#39;;
ERROR 1290 (HY000): The MySQL server is running with the --skip-grant-tables option so it cannot execute this statement
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;有效的解决方法：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;[root@typecodes ~]# mysql -u root -p            [使用root用户登录]&lt;/span&gt;
&lt;span class="err"&gt;Enter&lt;/span&gt; &lt;span class="err"&gt;password:&lt;/span&gt;                             &lt;span class="k"&gt;[无密码，直接回车]&lt;/span&gt;
&lt;span class="err"&gt;Welcome&lt;/span&gt; &lt;span class="err"&gt;to&lt;/span&gt; &lt;span class="err"&gt;the&lt;/span&gt; &lt;span class="err"&gt;MySQL&lt;/span&gt; &lt;span class="err"&gt;monitor.&lt;/span&gt;  &lt;span class="err"&gt;Commands&lt;/span&gt; &lt;span class="err"&gt;end&lt;/span&gt; &lt;span class="err"&gt;with&lt;/span&gt; &lt;span class="c1"&gt;; or \g.&lt;/span&gt;
&lt;span class="err"&gt;Your&lt;/span&gt; &lt;span class="err"&gt;MySQL&lt;/span&gt; &lt;span class="err"&gt;connection&lt;/span&gt; &lt;span class="err"&gt;id&lt;/span&gt; &lt;span class="err"&gt;is&lt;/span&gt; &lt;span class="err"&gt;3&lt;/span&gt;
&lt;span class="err"&gt;Server&lt;/span&gt; &lt;span class="err"&gt;version:&lt;/span&gt; &lt;span class="err"&gt;5.7.6-m16&lt;/span&gt;

&lt;span class="err"&gt;Copyright&lt;/span&gt; &lt;span class="err"&gt;(c)&lt;/span&gt; &lt;span class="err"&gt;2000,&lt;/span&gt; &lt;span class="err"&gt;2015,&lt;/span&gt; &lt;span class="err"&gt;Oracle&lt;/span&gt; &lt;span class="err"&gt;and/or&lt;/span&gt; &lt;span class="err"&gt;its&lt;/span&gt; &lt;span class="err"&gt;affiliates.&lt;/span&gt; &lt;span class="err"&gt;All&lt;/span&gt; &lt;span class="err"&gt;rights&lt;/span&gt; &lt;span class="err"&gt;reserved.&lt;/span&gt;

&lt;span class="err"&gt;Oracle&lt;/span&gt; &lt;span class="err"&gt;is&lt;/span&gt; &lt;span class="err"&gt;a&lt;/span&gt; &lt;span class="err"&gt;registered&lt;/span&gt; &lt;span class="err"&gt;trademark&lt;/span&gt; &lt;span class="err"&gt;of&lt;/span&gt; &lt;span class="err"&gt;Oracle&lt;/span&gt; &lt;span class="err"&gt;Corporation&lt;/span&gt; &lt;span class="err"&gt;and/or&lt;/span&gt; &lt;span class="err"&gt;its&lt;/span&gt;
&lt;span class="err"&gt;affiliates.&lt;/span&gt; &lt;span class="err"&gt;Other&lt;/span&gt; &lt;span class="err"&gt;names&lt;/span&gt; &lt;span class="err"&gt;may&lt;/span&gt; &lt;span class="err"&gt;be&lt;/span&gt; &lt;span class="err"&gt;trademarks&lt;/span&gt; &lt;span class="err"&gt;of&lt;/span&gt; &lt;span class="err"&gt;their&lt;/span&gt; &lt;span class="err"&gt;respective&lt;/span&gt;
&lt;span class="err"&gt;owners.&lt;/span&gt;

&lt;span class="err"&gt;Type&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;help&lt;/span&gt;&lt;span class="c1"&gt;;&amp;#39; or &amp;#39;\h&amp;#39; for help. Type &amp;#39;\c&amp;#39; to clear the current input statement.&lt;/span&gt;

&lt;span class="err"&gt;mysql&amp;gt;&lt;/span&gt; &lt;span class="err"&gt;select&lt;/span&gt; &lt;span class="err"&gt;*&lt;/span&gt; &lt;span class="err"&gt;from&lt;/span&gt; &lt;span class="err"&gt;mysql.user&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;span class="err"&gt;ERROR&lt;/span&gt; &lt;span class="err"&gt;1820&lt;/span&gt; &lt;span class="err"&gt;(HY000):&lt;/span&gt; &lt;span class="err"&gt;You&lt;/span&gt; &lt;span class="err"&gt;must&lt;/span&gt; &lt;span class="err"&gt;SET&lt;/span&gt; &lt;span class="err"&gt;PASSWORD&lt;/span&gt; &lt;span class="err"&gt;before&lt;/span&gt; &lt;span class="err"&gt;executing&lt;/span&gt; &lt;span class="err"&gt;this&lt;/span&gt; &lt;span class="err"&gt;statement&lt;/span&gt;
&lt;span class="na"&gt;mysql&amp;gt; set password&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;this is a password sample&amp;#39;;&lt;/span&gt;
&lt;span class="err"&gt;ERROR&lt;/span&gt; &lt;span class="err"&gt;1819&lt;/span&gt; &lt;span class="err"&gt;(HY000):&lt;/span&gt; &lt;span class="err"&gt;Your&lt;/span&gt; &lt;span class="err"&gt;password&lt;/span&gt; &lt;span class="err"&gt;does&lt;/span&gt; &lt;span class="err"&gt;not&lt;/span&gt; &lt;span class="err"&gt;satisfy&lt;/span&gt; &lt;span class="err"&gt;the&lt;/span&gt; &lt;span class="err"&gt;current&lt;/span&gt; &lt;span class="err"&gt;policy&lt;/span&gt; &lt;span class="err"&gt;requirements&lt;/span&gt;
&lt;span class="c1"&gt;######设置当前root用户密码&lt;/span&gt;
&lt;span class="na"&gt;mysql&amp;gt; set password&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;your password&amp;#39;;&lt;/span&gt;
&lt;span class="err"&gt;Query&lt;/span&gt; &lt;span class="err"&gt;OK,&lt;/span&gt; &lt;span class="err"&gt;0&lt;/span&gt; &lt;span class="err"&gt;rows&lt;/span&gt; &lt;span class="err"&gt;affected&lt;/span&gt; &lt;span class="err"&gt;(0.00&lt;/span&gt; &lt;span class="err"&gt;sec)&lt;/span&gt;

&lt;span class="err"&gt;mysql&amp;gt;&lt;/span&gt; &lt;span class="err"&gt;flush&lt;/span&gt; &lt;span class="err"&gt;privileges&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;span class="err"&gt;Query&lt;/span&gt; &lt;span class="err"&gt;OK,&lt;/span&gt; &lt;span class="err"&gt;0&lt;/span&gt; &lt;span class="err"&gt;rows&lt;/span&gt; &lt;span class="err"&gt;affected&lt;/span&gt; &lt;span class="err"&gt;(0.00&lt;/span&gt; &lt;span class="err"&gt;sec)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;需要说明的是，修改用户密码的SQL语句在不同的MySQL版本中是不同的。下面这3种是MySQL5.5以下的版本的修改方法，但是不适用于MySQL5.7以及更高版本。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;mysql&amp;gt; update mysql.user set PASSWORD=&amp;#39;your password&amp;#39; where User=&amp;#39;root&amp;#39;;

mysql&amp;gt; SET PASSWORD for root@&amp;#39;localhost&amp;#39; = PASSWORD(&amp;#39;your password&amp;#39;);

mysql&amp;gt; SET PASSWORD = PASSWORD(&amp;#39;your password&amp;#39;);
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Tue, 23 Jun 2015 19:20:00 +0800</pubDate><guid>tag:typecodes.com,2015-06-23:web/solvemysqlcompileerror.html</guid><category>mysql</category></item><item><title>CentOS系统MySQL的配置文件my.cnf</title><link>https://typecodes.com/web/centosmysqlconfig.html</link><description>&lt;p&gt;这篇文章主要内容是前文&lt;a href="https://typecodes.com/web/centos7compilemysql.html" title="查看原文"&gt;《2015博客升级记(四)：CentOS 7.1编译安装MySQL5.7.7rc》&lt;/a&gt;提到的MySQL的配置文件my.cnf。&lt;/p&gt;
&lt;p&gt;需要注意的是my.cnf中的一些配置需要和MySQL5.7.7rc编译安装时的一些配置保持一致。例如，MySQL的socket文件&lt;code&gt;/var/run/mysql/mysql.sock&lt;/code&gt;路径在MySQL5.7.7rc编译安装时，需要创建&lt;code&gt;/var/run/mysql/&lt;/code&gt;文件路径。也就是my.cnf的配置是由编译MySQL时配置的内容决定的。&lt;/p&gt;
&lt;p&gt;由于MySQL的配置明细不多，所以这里就直接将my.cnf的全部内容贴出来了。&lt;/p&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;# For advice on how to change settings please see
# http://dev.mysql.com/doc/refman/5.7/en/server-configuration-defaults.html
# *** DO NOT EDIT THIS FILE. It&amp;#39;s a template which will be copied to the
# *** default location during install, and will be replaced if you
# *** upgrade to a newer version of MySQL.

[client]
port=3306
socket=/var/run/mysql/mysql.sock

[mysqld]

# Remove leading # and set to the amount of RAM for the most important data
# cache in MySQL. Start at 70% of total RAM for dedicated server, else 10%.
# innodb_buffer_pool_size = 128M

# Remove leading # to turn on a very important data integrity option: logging
# changes to the binary log between backups.
# log_bin

# These are commonly set, remove the # and set as required.
user = mysql
basedir = /usr/local/mysql
datadir = /mydata/mysql/data
port=3306
server-id = 1
socket=/var/run/mysql/mysql.sock

character-set-server = utf8
log-error = /var/log/mysql/error.log
pid-file = /var/log/mysql/mysql.pid
general_log = 1
skip-name-resolve
#skip-networking
back_log = 300

max_connections = 1000
max_connect_errors = 6000
open_files_limit = 65535
table_open_cache = 128 
max_allowed_packet = 4M
binlog_cache_size = 1M
max_heap_table_size = 8M
tmp_table_size = 16M

read_buffer_size = 2M
read_rnd_buffer_size = 8M
sort_buffer_size = 8M
join_buffer_size = 28M
key_buffer_size = 4M

thread_cache_size = 8

query_cache_type = 1
query_cache_size = 8M
query_cache_limit = 2M

ft_min_word_len = 4

log_bin = mysql-bin
binlog_format = mixed
expire_logs_days = 30


performance_schema = 0
explicit_defaults_for_timestamp

#lower_case_table_names = 1



myisam_sort_buffer_size = 8M
myisam_repair_threads = 1

interactive_timeout = 28800
wait_timeout = 28800


# Remove leading # to set options mainly useful for reporting servers.
# The server defaults are faster for transactions and fast SELECTs.
# Adjust sizes as needed, experiment to find the optimal values.
# join_buffer_size = 128M
# sort_buffer_size = 2M
# read_rnd_buffer_size = 2M

# Disabling symbolic-links is recommended to prevent assorted security risks
symbolic-links=0

# Recommended in standard MySQL setup
sql_mode=NO_ENGINE_SUBSTITUTION,NO_AUTO_CREATE_USER,STRICT_TRANS_TABLES

[mysqldump]
quick
max_allowed_packet = 16M

[myisamchk]
key_buffer_size = 8M
sort_buffer_size = 8M
read_buffer = 4M
write_buffer = 4M
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;和前文&lt;a href="https://typecodes.com/web/centos7nginxhttpsspdy.html" title="查看原文"&gt;《2015博客升级记(六)：Nginx配置HTTPS和SPDY实战》&lt;/a&gt;的Nginx配置文件&lt;code&gt;nginx.conf&lt;/code&gt;一样，这个MySQL的配置文件&lt;code&gt;my.cnf&lt;/code&gt;也托管在下面这两个&lt;code&gt;LNMP配置工程&lt;/code&gt;上，以后有任何的修改都会更新到这上面。&lt;/p&gt;
&lt;p&gt;GitHub地址：&lt;a href="https://github.com/vfhky/mylnmp" title="点击进入"&gt;https://github.com/vfhky/mylnmp&lt;/a&gt; ；&lt;/p&gt;
&lt;p&gt;Coding地址：&lt;a href="https://coding.net/u/vfhky/p/mylnmp/git" title="点击进入"&gt;https://coding.net/u/vfhky/p/mylnmp/git&lt;/a&gt; 。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Tue, 23 Jun 2015 19:11:00 +0800</pubDate><guid>tag:typecodes.com,2015-06-23:web/centosmysqlconfig.html</guid><category>mysql</category></item><item><title>Nginx编译安装时常见错误分析</title><link>https://typecodes.com/web/solvenginxcompileerror.html</link><description>&lt;p&gt;这篇文章主要是关于Nginx在编译安装时，可能出现的错误的解决方法。Nginx正确的编译安装操作见前文&lt;a href="https://typecodes.com/web/centos7compilenginx.html" title="查看原文"&gt;《2015博客升级记(三)：CentOS 7.1编译安装Nginx1.9.0》&lt;/a&gt;。&lt;/p&gt;
&lt;h5&gt;1 Nginx启动脚本错误：env: /etc/init.d/nginx: No such file or directory&lt;/h5&gt;
&lt;p&gt;明明上传了Nginx服务控制脚本&lt;code&gt;nginx&lt;/code&gt;，但是在执行&lt;code&gt;service nginx start&lt;/code&gt;命令时，却会报上面的错误。&lt;/p&gt;
&lt;p&gt;解决方法：启动脚本的格式有问题，例如该脚本是dos格式，在Linux系统是中无法识别的。可以通过vim打开该文件，如果可以看到出现&lt;code&gt;^M&lt;/code&gt;的字符，就可以确定是DOS格式的了。那么可以在vim中执行命令&lt;code&gt;:%s/\r\+$//e&lt;/code&gt;，将其转换成Unix格式即可。&lt;/p&gt;


&lt;h5&gt;2 启动Nginx服务失败&lt;/h5&gt;
&lt;p&gt;安装完Nginx后，执行命令&lt;code&gt;service nginx start&lt;/code&gt;失败，即无法正常启动Nginx服务。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@typecodes init.d]# service nginx start
Starting nginx (via systemctl):  Warning: Unit file of nginx.service changed on disk, &amp;#39;systemctl daemon-reload&amp;#39; recommended.
Job for nginx.service failed. See &amp;#39;systemctl status nginx.service&amp;#39; and &amp;#39;journalctl -xn&amp;#39; for details.
[FAILED]
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;解决方法：主要通过命令&lt;code&gt;systemctl status nginx.service&lt;/code&gt;来分析，如下图所示。&lt;/p&gt;
&lt;p&gt;&lt;img alt="Nginx编译安装时常见错误分析" src="https://o3cex9zsl.qnssl.com/2015/06/nginx_start_error.png" title="Nginx编译安装时常见错误分析" /&gt;&lt;/p&gt;
&lt;p&gt;很明显是由于下面这个错误，导致Nginx服务启动失败。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Apr 11 21:43:07 typecodes nginx[4026]: Starting nginx: nginx: [emerg] mkdir() &amp;quot;/var/tmp/nginx/client/&amp;quot; failed (2: No such file or directory)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这种错误一般都是目录不存在或者权限不足，所以直接执行下面两条命令即可。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@typecodes ~]# cd /var/tmp/
[root@typecodes ~]# mkdir -p /var/tmp/nginx/{client,proxy,fastcgi,uwsgi,scgi}
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;3 启动Nginx服务时，界面卡住&lt;/h5&gt;
&lt;p&gt;在敲入命令&lt;code&gt;service nginx restart&lt;/code&gt;后，终端界面能卡住，也就是Nginx服务控制脚本&lt;code&gt;nginx&lt;/code&gt;没有正常执行完毕。在停止Nginx服务后，发现Nginx进程还存在。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;#######启动Nginx服务出现警告
[root@typecodes init.d]# service nginx restart 
Restarting nginx (via systemctl):  Warning: Unit file of nginx.service changed on disk, &amp;#39;systemctl daemon-reload&amp;#39; recommended.
Restarting nginx (via systemctl):  Warning: Unit file of nginx.service changed on disk, &amp;#39;systemctl daemon-reload&amp;#39; recommended.
^C     ######终端界面卡住，使用ctrl+c命令强制结束

#######停掉Nginx服务
[root@typecodes init.d]# service nginx stop
Stopping nginx (via systemctl):  [  OK  ]

#######查看Nginx进程是否已被停止（可以看到未停止）
[root@typecodes init.d]# ps -aux|grep nginx 
root      7796  0.0  0.2  84184  2044 ?        Ss   21:14   0:00 nginx: master process /usr/sbin/nginx -c /etc/nginx/nginx.conf
nginx     7798  0.0  0.3  86656  3380 ?        S    21:14   0:00 nginx: worker process
root      7981  0.0  0.0 112644   964 pts/0    S+   21:19   0:00 grep --color=auto nginx
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;解决方法：可能是Nginx服务控制脚本（/etc/init.d/nginx）代码不正确，推荐使用文章&lt;a href="https://typecodes.com/web/nginxserviceoptshell.html" title="查看原文"&gt;《Nginx服务启动、停止和重启等操作的SHELL脚本》&lt;/a&gt;中的shell脚本。最后再重新执行下面的脚本即可。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@typecodes init.d]# chkconfig --add nginx
[root@typecodes init.d]# chkconfig nginx on
[root@typecodes init.d]# service nginx restart
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;还有一种在启动Nginx服务时，终端界面会卡住的情况：那就是Nginx的配置文件&lt;code&gt;/etc/nginx/nginx.conf&lt;/code&gt;不正确，但是使用&lt;code&gt;nginx -t&lt;/code&gt;命令显示正常。这种情况只能对nginx.conf文件中的每一个配置进行检查了。&lt;/p&gt;
&lt;h5&gt;4 Compilation failed in require或者perl_parse() failed&lt;/h5&gt;
&lt;p&gt;在使用命令&lt;code&gt;service nginx start&lt;/code&gt;启动Nginx服务时报错，于是通过&lt;code&gt;systemctl status nginx.service&lt;/code&gt;查看具体的错误信息。   &lt;/p&gt;
&lt;p&gt;&lt;img alt="查看Nginx1.9.0的详细信息" src="https://o3cex9zsl.qnssl.com/2015/05/compilationfailedinrequire.png" title="查看Nginx1.9.0的详细信息" /&gt;&lt;/p&gt;
&lt;p&gt;然后使用命令&lt;code&gt;nginx -t&lt;/code&gt;查看配置是否正常，如下图所示，同样报错。 &lt;/p&gt;
&lt;p&gt;&lt;img alt="nginx -t查看错误信息" src="https://o3cex9zsl.qnssl.com/2015/05/nginx-t-error.png" title="nginx -t查看错误信息" /&gt;&lt;/p&gt;
&lt;p&gt;解决方法：从图中可以看出由于&lt;code&gt;Can't load '/usr/local/lib64/perl5/auto/nginx/nginx.so' for module nginx: /usr/local/lib64/perl5/au...m line 68.&lt;/code&gt;的错误，导致了Nginx在调用函数时失败：&lt;code&gt;perl_parse() failed&lt;/code&gt;。也就是证明是之前没有安装perl依赖包，于是通过执行命令&lt;code&gt;yum -y install perl-devel perl-ExtUtils-Embed&lt;/code&gt;后，再次编译安装Nginx解决。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Mon, 22 Jun 2015 17:02:00 +0800</pubDate><guid>tag:typecodes.com,2015-06-22:web/solvenginxcompileerror.html</guid><category>nginx</category></item><item><title>2015博客升级记(六)：Nginx配置HTTPS和SPDY实战</title><link>https://typecodes.com/web/centos7nginxhttpsspdy.html</link><description>&lt;p&gt;这是&lt;a href="https://typecodes.com/mix/2015updateblog.html" title="查看原文"&gt;《2015年博客升级记》&lt;/a&gt;系列文章的第六篇，主要记录如何在CentOS 7.1中Nginx如何配置HTTPS和SPDY。关于具体如何编译安装Nginx，可以查看文章&lt;a href="https://typecodes.com/web/centos7compilenginx.html" title="查看原文"&gt;《2015博客升级记(三)：CentOS 7.1编译安装Nginx1.9.0》&lt;/a&gt;。&lt;/p&gt;


&lt;h5&gt;1 重点：Nginx配置文件nginx.conf的具体内容&lt;/h5&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
200
201
202
203
204
205
206
207
208
209
210
211
212
213
214
215
216
217&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;######
###  Description: The config file of Nginx with ssl, spdy, no-www redircting, gzip functions
###  Author:  vfhky  2015.05.05  https://typecodes.com/web/centos7nginxhttpsspdy.html
######
user  nginx nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

pid        /var/run/nginx/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  &amp;#39;$remote_addr - $remote_user [$time_local] &amp;quot;$request&amp;quot; &amp;#39;
                      &amp;#39;$status $body_bytes_sent &amp;quot;$http_referer&amp;quot; &amp;#39;
                      &amp;#39;&amp;quot;$http_user_agent&amp;quot; &amp;quot;$http_x_forwarded_for&amp;quot;&amp;#39;;

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #隐藏Nginx版本信息，禁止网站目录浏览
    server_tokens off;
    autoindex off;
    #当FastCGI后端服务器处理请求给出http响应码为4xx和5xx时，就转发给nginx
    fastcgi_intercept_errors on;

    #关于fastcgi的配置
    fastcgi_connect_timeout 300;    
    fastcgi_send_timeout 300;    
    fastcgi_read_timeout 300;    
    fastcgi_buffer_size 64k;    
    fastcgi_buffers 4 64k;    
    fastcgi_busy_buffers_size 128k;    
    fastcgi_temp_file_write_size 128k;

    #支持gzip压缩
    gzip on;
    gzip_min_length 1k;
    gzip_buffers 16 64k;
    gzip_http_version 1.1;
    gzip_comp_level 6;
    gzip_types text/plain application/x-javascript text/css application/javascript text/javascript image/jpeg image/gif image/png application/xml application/json;
    gzip_vary on;
    gzip_disable &amp;quot;MSIE [1-6].(?!.*SV1)&amp;quot;;

    #
    # 重定向所有带www请求到非www的请求
    #
    server {
        listen               *:80;
        listen               *:443 ssl spdy;
        server_name www.typecodes.com;
        # ssl证书配置见文章 https://typecodes.com/web/lnmppositivessl.html
        ssl_certificate /etc/nginx/ssl/typecodes.crt;
        # ssl密钥文件见文章 https://typecodes.com/web/lnmppositivessl.html
        ssl_certificate_key /etc/nginx/ssl/typecodes.key;
        # 不产生日志
        access_log off;

        # 访问favicon.ico和robots.txt不跳转（把这两个文件存放在上级目录html中）
        location ~* ^/(favicon.ico|robots.txt)$ {
            root html;
            expires max;
            log_not_found off;
            break;
        }

        location / {
            return 301 https://typecodes.com$request_uri;
        }
    }

    #
    # 将所有http请求重定向到https
    #
    server {
        listen               *:80;
        server_name          typecodes.com;
        # 不产生日志
        access_log off;

        # 访问favicon.ico和robots.txt不跳转（把这两个文件存放在上级目录html中）
        location ~* ^/(favicon.ico|robots.txt)$ {
            root html;
            expires max;
            log_not_found off;
            break;
        }

        location / {
            return 301 https://typecodes.com$request_uri;
        }
    }

    #
    # HTTPS server
    #
    server {
        listen               *:443 ssl spdy;
        server_name typecodes.com;

        # ssl证书配置见文章 https://typecodes.com/web/lnmppositivessl.html
        ssl_certificate /etc/nginx/ssl/typecodes.crt;
        # ssl密钥文件见文章 https://typecodes.com/web/lnmppositivessl.html
        ssl_certificate_key /etc/nginx/ssl/typecodes.key;
        ssl_session_cache shared:SSL:20m;
        ssl_session_timeout 10m;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA:!CAMELLIA;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2; #enables TLSv1, but not SSLv2, SSLv3 which is weak and should no longer be used.
        ssl_prefer_server_ciphers on;
        # 开启spdy功能
        add_header Alternate-Protocol 443:npn-spdy/3.1;
        # 严格的https访问
        add_header Strict-Transport-Security &amp;quot;max-age=31536000; includeSubdomains;&amp;quot;;

        #设置网站根目录
        root   /usr/share/nginx/html/typecodes;
        index  index.php index.html;

        charset utf-8;

        #access_log  /var/log/nginx/log/host.access.log  main;

        #设置css/javascript/图片等静态资源的缓存时间
        location ~ .*\.(css|js|ico|png|gif|jpg|json|mp3|mp4|flv|swf)(.*) {
            expires 60d;
        }

        # include /etc/nginx/default.d/*.conf;
        # 设置typecho博客的config文章不被访问，保证安全
        location = /config.inc.php{
            deny  all;
        }

        # keep the uploads directory safe by excluding php, php5, html file accessing. Applying to wordpress and typecho.
        # location ~ .*/uploads/.*\.(php|php5|html)$ {
        #   deny  all;
        # }

        # 设置wordpress和typecho博客中，插件目录无法直接访问php或者html文件
        location ~ .*/plugins/.*\.(php|php5|html)$ {
            deny  all;
        }

        #Rewrite的伪静态(针对wordpress/typecho)，url地址去掉index.php
        location / {
            if (-f $request_filename/index.html){
                rewrite (.*) $1/index.html break;
            }
            if (-f $request_filename/index.php){
                rewrite (.*) $1/index.php;
            }
        if (!-f $request_filename){
                rewrite (.*) /index.php;
            }
        }

        #访问favicon.ico时不产生日志
        location = /favicon.ico {
            access_log off;
        }

        #设置40系列错误的应答文件为40x.html
        error_page  400 401 402 403 404  /40x.html;
        location = /40x.html {
                root   html;
                index  index.html index.htm;
        }

        #设置50系列错误的应答文件为50x.html
        #
        error_page   500 501 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
            index  index.html index.htm;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # 设置Nginx和php通信机制为tcp的socket模式，而不是直接监听9000端口
        location  ~ .*\.php(\/.*)*$ {
             fastcgi_split_path_info ^(.+\.php)(/.+)$;
             #fastcgi_pass   127.0.0.1:9000;
             # the better form of fastcgi_pass than before
             fastcgi_pass   unix:/var/run/php-fpm/php-fpm.sock;
             fastcgi_index  index.php;
             fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
             include        fastcgi_params;
        }

        # deny access to .htaccess files, if Apache&amp;#39;s document root
        # concurs with nginx&amp;#39;s one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h5&gt;2 Nginx开启spdy功能&lt;/h5&gt;
&lt;p&gt;如下图所示，在chrome浏览器的地址栏中输入&lt;code&gt;chrome://net-internals/#spdy&lt;/code&gt;抓取访问事件，然后新建一个页面打开自己的博客，这样就会被第一个页面抓取到了。&lt;/p&gt;
&lt;p&gt;&lt;img alt="Nginx开启Google Chrome的SPDY功能" src="https://o3cex9zsl.qnssl.com/2015/06/google_chrome_spdy.png" title="Nginx开启Google Chrome的SPDY功能" /&gt;&lt;/p&gt;
&lt;h5&gt;3 Nginx中url地址中，将带www的二级域名跳转到不带www顶级域名&lt;/h5&gt;
&lt;p&gt;博客目前将http访问全部定向到https，同时将https://www.typecodes.com重定向到https://typecodes.com上。前文&lt;a href="https://typecodes.com/web/lnmppositivessl.html" title="查看原文"&gt;《阿里云CentOS 6.5系统LNMP环境安装SSL证书》&lt;/a&gt;中，只做了http跳转到https。需要注意的是，在Nginx配置中最好不要包含过多的&lt;code&gt;if&lt;/code&gt;判断语句；另外，处理不同的server_name时，官方建议&lt;code&gt;写在多个server块&lt;/code&gt;中，就像小节1中的那样。&lt;/p&gt;
&lt;h5&gt;4 其他说明&lt;/h5&gt;
&lt;p&gt;由于LNMP配置比较繁琐，所以我建了一个关于Nginx、MySQL和PHP配置的git工程，方便查询。目前这个工程托管在GitHub和coding.net上，地址如下：&lt;/p&gt;
&lt;p&gt;GitHub地址：&lt;a href="https://github.com/vfhky/mylnmp" title="点击进入"&gt;https://github.com/vfhky/mylnmp&lt;/a&gt; ；&lt;/p&gt;
&lt;p&gt;Coding地址：&lt;a href="https://coding.net/u/vfhky/p/mylnmp/git" title="点击进入"&gt;https://coding.net/u/vfhky/p/mylnmp/git&lt;/a&gt; 。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Sun, 21 Jun 2015 22:39:00 +0800</pubDate><guid>tag:typecodes.com,2015-06-21:web/centos7nginxhttpsspdy.html</guid><category>博客成长录</category><category>nginx</category></item><item><title>2015博客升级记(四)：CentOS 7.1编译安装MySQL5.7.7rc</title><link>https://typecodes.com/web/centos7compilemysql.html</link><description>&lt;p&gt;这是&lt;a href="https://typecodes.com/mix/2015updateblog.html" title="查看原文"&gt;《2015年博客升级记》&lt;/a&gt;系列文章的第四篇，主要记录在Linux系统中如何编译安装MySql数据库。&lt;/p&gt;
&lt;h5&gt;1 创建mysql用户和用户组，并下载MySQL5.7.7 Release Candidate版本&lt;/h5&gt;
&lt;p&gt;首先创建一个名为mysql且&lt;code&gt;没有登录权限&lt;/code&gt;的用户和一个名为mysql的用户组，然后去mysql官网下载MySQL5.7.7rc版本。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;#######新建mysql用户和mysql组
[root@typecodes ~]# groupadd -r mysql &amp;amp;&amp;amp; useradd -r -g mysql -s /bin/false -M mysql

######从官网或者博客备份地址下载MySQL5.7.7 Release Candidate版本
[root@typecodes ~]# wget -c http://cdn.mysql.com/Downloads/MySQL-5.7/mysql-5.7.7-rc.tar.gz
[root@typecodes ~]# wget -c http://git.typecodes.com/libs/mysql/mysql-5.7.7-rc.tar.gz
[root@typecodes ~]# md5sum mysql-5.7.7-rc.tar.gz        [MD5校验]
36a96021a93ca236e76f5c90ae19cd44  mysql-5.7.7-rc.tar.gz
######开始解压MySQL5.7.7
[root@typecodes ~]# tar -zxf mysql-5.7.7-rc.tar.gz &amp;amp;&amp;amp; cd mysql-5.7.7-rc
######下载gmock：google的c++mock框架，从mysql 5.6开始支持
[root@typecodes mysql-5.7.7-rc]# wget -c http://git.typecodes.com/libs/ccpp/gmock-1.6.0.zip
######将其解压到MySQL5.7.7的source_downloads目录下
[root@typecodes mysql-5.7.7-rc]# unzip gmock-1.6.0.zip -d source_downloads
&lt;/pre&gt;&lt;/div&gt;




&lt;h5&gt;2 下载编译MySQL5.7.7rc时需要的工具&lt;/h5&gt;
&lt;p&gt;由于从MySQL5.5版本开始弃用了常规的configure编译方法，所以需要下载CMake编译器、Boost库、ncurses库和GNU分析器生成器bison这4种工具。经过自己的测试发现，MySQL5.7.7rc编译时所需要的Boost库只能是&lt;code&gt;boost 1.57.0版本&lt;/code&gt;，低于或者高于这个版本的都会编译失败！&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;#######CMake编译工具
[root@typecodes ~]# wget -c http://git.typecodes.com/libs/ccpp/cmake-3.2.1.tar.gz
[root@typecodes ~]# tar -zxf cmake-3.2.1.tar.gz &amp;amp;&amp;amp; cd cmake-3.2.1
[root@typecodes cmake-3.2.1]# ./configure 
[root@typecodes cmake-3.2.1]# make &amp;amp;&amp;amp; make install  [默认安装路径是/usr/local/bin]
[root@typecodes cmake-3.2.1]# cmake --version       [查看cmake版本]
cmake version 3.2.1

CMake suite maintained and supported by Kitware (kitware.com/cmake).
[root@typecodes cmake-3.2.1]# cd ~ &amp;amp;&amp;amp; rm -rf cmake-3.2.1*
######也可以直接yum安装CMake2.8.11版本
[root@typecodes ~]# yum -y install cmake

#######Ncurses：提供功能键定义(快捷键),屏幕绘制以及基于文本终端的图形互动功能的动态库。
[root@typecodes ~]# yum -y install ncurses-devel

#######bison：GNU分析器生成器
[root@typecodes ~]# wget -c http://git.typecodes.com/libs/ccpp/bison-3.0.tar.gz
[root@typecodes ~]# tar -zxf bison-3.0.tar.gz &amp;amp;&amp;amp; cd bison-3.0/ &amp;amp;&amp;amp; ./configure
[root@typecodes bison-3.0]# make &amp;amp;&amp;amp; make install
[root@typecodes bison-3.0]# cd ~ &amp;amp;&amp;amp; rm -rf bison-3.0*

#######Boost库：一个开源可移植的C++库，是C++标准化进程的开发引擎之一
[root@typecodes ~]# wget -c http://git.typecodes.com/libs/ccpp/boost_1_57_0.tar.bz2
[root@typecodes ~]# tar -jxf boost_1_57_0.tar.bz2 &amp;amp;&amp;amp; cd boost_1_57_0/
[root@typecodes boost_1_57_0]# ./bootstrap.sh
[root@typecodes boost_1_57_0]# ./b2 stage threading=multi link=shared
[root@typecodes boost_1_57_0]# ./b2 install threading=multi link=shared
[root@typecodes boost_1_57_0]# cd ~ &amp;amp;&amp;amp; rm -rf boost_1_57_0*
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;3 开始进行MySQL5.7.7rc编译前的配置&lt;/h5&gt;
&lt;p&gt;准备工作做好后，就开始正式配置MySQL5.7.7rc的安装明细了。注意，操作时一定要先把下面反斜杠“\”后面添加的注释文字去掉！！！&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;######使用cmake命令，开始编译MySQL5.7.7rc
[root@typecodes mysql-5.7.7-rc]# cmake \
-DCMAKE_INSTALL_PREFIX=/usr/local/mysql  \              [MySQL安装的根目录]
-DMYSQL_DATADIR=/mydata/mysql/data  \                   [MySQL数据库文件存放目录]
-DSYSCONFDIR=/etc \                                     [MySQL配置文件所在目录]
-DMYSQL_USER=mysql \                                    [MySQL用户名]      
-DWITH_MYISAM_STORAGE_ENGINE=1 \                        [MySQL的数据库引擎]
-DWITH_INNOBASE_STORAGE_ENGINE=1 \                      [MySQL的数据库引擎]
-DWITH_ARCHIVE_STORAGE_ENGINE=1 \                       [MySQL的数据库引擎]
-DWITH_MEMORY_STORAGE_ENGINE=1 \                        [MySQL的数据库引擎]
-DWITH_READLINE=1 \                                     [MySQL的readline library]
-DMYSQL_UNIX_ADDR=/var/run/mysql/mysql.sock \           [MySQL的通讯目录]
-DMYSQL_TCP_PORT=3306 \                                 [MySQL的监听端口]
-DENABLED_LOCAL_INFILE=1 \                              [启用加载本地数据]
-DENABLE_DOWNLOADS=1 \                                  [编译时允许自主下载相关文件]
-DWITH_PARTITION_STORAGE_ENGINE=1  \
-DEXTRA_CHARSETS=all \                                  [使MySQL支持所有的扩展字符]
-DDEFAULT_CHARSET=utf8 \                                [设置默认字符集为utf8]
-DDEFAULT_COLLATION=utf8_general_ci \                   [设置默认字符校对]
-DWITH_DEBUG=0 \                                        [禁用调试模式]
-DMYSQL_MAINTAINER_MODE=0 \
-DWITH_SSL:STRING=bundled \                             [通讯时支持ssl协议]
-DWITH_ZLIB:STRING=bundled                              [允许使用zlib library]
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;执行上面的配置命令的结果如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img alt="MySQL5.7.7rc编译前的配置" src="https://o3cex9zsl.qnssl.com/2015/06/mysql_cmake.png" title="MySQL5.7.7rc编译前的配置" /&gt;&lt;/p&gt;
&lt;h5&gt;4 开始编译和安装MySQL5.7.7rc&lt;/h5&gt;
&lt;p&gt;使用make命令编译时，会比较吃CPU。博主当时购买的阿里主机是单核1G内存，编译到55%左右时直接卡住，同时无法新建一个终端连接，内存或者CPU已经严重耗尽。在重新购买了一个物理数据盘并划分出一个swap交换空间后，最终还是编译成功了，耗时约4个小时。所以，如果主机内存在1G一下并且没有设置Linux交换空间的，&lt;code&gt;不建议&lt;/code&gt;直接编译MySQL5.7.7rc！&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@typecodes mysql-5.7.7-rc]# make &amp;amp;&amp;amp; make install
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;下图展示的是&lt;code&gt;make&lt;/code&gt;命令执行完毕的情况：&lt;/p&gt;
&lt;p&gt;&lt;img alt="编译MySQL5.7.7rc的make命令执行结果" src="https://o3cex9zsl.qnssl.com/2015/06/mysql_make.png" title="编译MySQL5.7.7rc的make命令执行结果" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="编译MySQL5.7.7rc的make命令执行结果" src="https://o3cex9zsl.qnssl.com/2015/06/mysql_make_process.png" title="编译MySQL5.7.7rc的make命令执行结果" /&gt;&lt;/p&gt;
&lt;p&gt;编译MySQL5.7.7rc对CPU和内存消耗比较大，这里截取了两张使用top命令的图片：&lt;/p&gt;
&lt;p&gt;&lt;img alt="编译MySQL5.7.7rc的make命令执行结果" src="https://o3cex9zsl.qnssl.com/2015/06/compile_mysql_require_memory.png" title="编译MySQL5.7.7rc的make命令执行结果" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="编译MySQL5.7.7rc的make命令执行结果" src="https://o3cex9zsl.qnssl.com/2015/06/compile_mysql_require_cpu.png" title="编译MySQL5.7.7rc的make命令执行结果" /&gt;&lt;/p&gt;
&lt;p&gt;最后，激动人心的时刻，看到下图就代表已经编译安装好了MySQL5.7.7rc！&lt;/p&gt;
&lt;p&gt;&lt;img alt="安装MySQL5.7.7rc的make install命令执行结果" src="https://o3cex9zsl.qnssl.com/2015/06/mysql_make_install.png" title="安装MySQL5.7.7rc的make install命令执行结果" /&gt;&lt;/p&gt;
&lt;h5&gt;5 查看编译成功后的MySQL安装目录&lt;/h5&gt;
&lt;p&gt;使用命令查看MySQL的安装目录&lt;code&gt;/usr/local/mysql/&lt;/code&gt;下面是否生成了相关目录文件（最重要的当然是bin、sbin和lib目录）。如果lib目录下面没有生成如图所示的.so动态库文件和.a静态库文件，那么说明安装不成功（即使成功了也可能会导致php进程无法找到mysql的相关库文件）。&lt;/p&gt;
&lt;p&gt;&lt;img alt="初始化MySQL自身的数据库" src="https://o3cex9zsl.qnssl.com/2015/06/mysql_success_path.png" title="初始化MySQL自身的数据库" /&gt;&lt;/p&gt;
&lt;h5&gt;6 开始设置MySQL的配置文件my.cnf&lt;/h5&gt;
&lt;p&gt;先把编译生成的my.cnf文件备份，然后把&lt;a href="https://typecodes.com/web/centosmysqlconfig.html" title="查看原文"&gt;《CentOS系统MySQL的配置文件my.cnf》&lt;/a&gt;文中整理的MySQL的配置文件my.cnf上传到服务器的&lt;code&gt;/etc/&lt;/code&gt;目录下即可。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@typecodes mysql]# mv /etc/my.cnf /etc/my.cnfbak
[root@typecodes mysql]# mv  ~/my.cnf  /etc/my.cnf
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;7 添加mysql的环境变量&lt;/h5&gt;
&lt;p&gt;将MySQL编译生成的bin目录添加到当前Linux系统的环境变量中&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="x"&gt;[root@typecodes mysql]&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; echo -e &amp;#39;\n\nexport PATH=/usr/local/mysql/bin:&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;PATH&lt;/span&gt;&lt;span class="x"&gt;\n&amp;#39; &amp;gt;&amp;gt; /etc/profile &amp;amp;&amp;amp; source /etc/profile&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;8 创建MySQL数据库文件的存放路径以及相关安全配置&lt;/h5&gt;
&lt;p&gt;在Linux主机上创建一个目录&lt;code&gt;/mydata/mysql/data&lt;/code&gt;，用于存放MySQL的数据库文件。同时设置其用户和用户组为之前创建的&lt;code&gt;mysql&lt;/code&gt;，权限为777。这样其它用户是无法进行读写的，尽量保证数据库的安全。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@typecodes ~]# mkdir -p /mydata/mysql/data &amp;amp;&amp;amp; chown -R root:mysql /usr/local/mysql
[root@typecodes mysql]# chown -R mysql:mysql /mydata/mysql/data
[root@typecodes mysql]# chmod -R go-rwx /mydata/mysql/data
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;9 初始化MySQL自身的数据库&lt;/h5&gt;
&lt;p&gt;在MySQL安装目录的&lt;code&gt;\bin\&lt;/code&gt;路径下，执行mysqld命令，初始化MySQL自身的数据库。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;######参数user表示用户，basedir表示mysql的安装路径，datadir表示数据库文件存放路径
[root@typecodes bin]# mysqld --initialize-insecure --user=mysql --basedir=/usr/local/mysql --datadir=/mydata/mysql/data
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;执行完后，可以通过&lt;code&gt;[root@typecodes mysql]# ls -lrt /mydata/mysql/data/&lt;/code&gt;命令查看是否生成了MySQL自身的数据库文件。&lt;/p&gt;
&lt;p&gt;&lt;img alt="初始化MySQL自身的数据库" src="https://o3cex9zsl.qnssl.com/2015/06/mysql_ini_dir.png" title="初始化MySQL自身的数据库" /&gt;&lt;/p&gt;
&lt;h5&gt;10 创建MySQL日志存放目录以及设置开机启动&lt;/h5&gt;
&lt;p&gt;下面配置的MySQL日志存放目录以及权限都是根据前面my.cnf文件写的，也就是两者需要保持一致。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@typecodes ~]# mkdir -p /var/run/mysql &amp;amp;&amp;amp; mkdir -p /var/log/mysql
[root@typecodes ~]# chown -R mysql:mysql /var/log/mysql &amp;amp;&amp;amp; chown -R mysql:mysql /var/run/mysql
######配置开机自启动
[root@typecodes mysql]# cp /usr/local/mysql/support-files/mysql.server  /etc/init.d/mysqld
[root@typecodes mysql]# chmod +x /etc/init.d/mysqld     #增加可执行权限
[root@typecodes mysql]# chkconfig --add mysqld      #添加到sysV服务
[root@typecodes mysql]# chkconfig mysqld on
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;11 启动MySQL服务&lt;/h5&gt;
&lt;p&gt;在完成上面的操作后，就可以正式使用MySQL服务了。启动MySQL进程服务的命令如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;[root@typecodes mysql]# mysqld_safe --user=mysql --datadir=/mydata/mysql/data --log-error=/var/log/mysql/error.log &amp;amp;        [直接回车]&lt;/span&gt;
&lt;span class="err"&gt;[1]&lt;/span&gt; &lt;span class="err"&gt;10274&lt;/span&gt;
&lt;span class="err"&gt;150513&lt;/span&gt; &lt;span class="err"&gt;21:28:16&lt;/span&gt; &lt;span class="err"&gt;mysqld_safe&lt;/span&gt; &lt;span class="err"&gt;Logging&lt;/span&gt; &lt;span class="err"&gt;to&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;/var/log/mysql/error.log&amp;#39;.&lt;/span&gt;
&lt;span class="err"&gt;150513&lt;/span&gt; &lt;span class="err"&gt;21:28:16&lt;/span&gt; &lt;span class="err"&gt;mysqld_safe&lt;/span&gt; &lt;span class="err"&gt;Starting&lt;/span&gt; &lt;span class="err"&gt;mysqld&lt;/span&gt; &lt;span class="err"&gt;daemon&lt;/span&gt; &lt;span class="err"&gt;with&lt;/span&gt; &lt;span class="err"&gt;databases&lt;/span&gt; &lt;span class="err"&gt;from&lt;/span&gt; &lt;span class="err"&gt;/mydata/mysql/data&lt;/span&gt;

&lt;span class="c1"&gt;######上面这条命令会在后台继续执行，所以直接回车并执行下面这条命令&lt;/span&gt;
&lt;span class="err"&gt;[root@typecodes&lt;/span&gt; &lt;span class="err"&gt;mysql]&lt;/span&gt;&lt;span class="c1"&gt;# service mysqld start&lt;/span&gt;
&lt;span class="err"&gt;Starting&lt;/span&gt; &lt;span class="err"&gt;MySQL.&lt;/span&gt;&lt;span class="k"&gt;[  OK  ]                 [启动成功]&lt;/span&gt;
&lt;span class="err"&gt;[root@typecodes&lt;/span&gt; &lt;span class="err"&gt;mysql]&lt;/span&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;然后使用下面这命令&lt;code&gt;ps -ef | grep mysql&lt;/code&gt;和&lt;code&gt;netstat -tunpl | grep 3306&lt;/code&gt;查看MySQL服务进程和端口监听情况：&lt;/p&gt;
&lt;p&gt;&lt;img alt="查看MySQL服务进程和端口监听情况" src="https://o3cex9zsl.qnssl.com/2015/06/mysql_process_litsen_port.png" title="查看MySQL服务进程和端口监听情况" /&gt;&lt;/p&gt;
&lt;h5&gt;12 初始化MySQL数据库的root用户密码&lt;/h5&gt;
&lt;p&gt;和Oracle数据库一样，MySQL数据库也默认自带了一个&lt;code&gt;root&lt;/code&gt;用户（这个和当前Linux主机上的root用户是完全不搭边的），我们在设置好MySQL数据库的安全配置后初始化root用户的密码。配置过程中，一路输入&lt;code&gt;y&lt;/code&gt;就行了。这里只说明下MySQL5.7.7rc版本中，用户密码策略分成低级&lt;code&gt;LOW&lt;/code&gt;、中等&lt;code&gt;MEDIUM&lt;/code&gt;和超强&lt;code&gt;STRONG&lt;/code&gt;三种，推荐使用中等&lt;code&gt;MEDIUM&lt;/code&gt;级别！&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@typecodes mysql]# mysql_secure_installation
............省略前面的过程............
Press y|Y for Yes, any other key for No: y   【需要修改密码，所以输入y】

There are three levels of password validation policy:

LOW    Length &amp;gt;= 8     【只需要长度大于或等于8】
MEDIUM Length &amp;gt;= 8, numeric, mixed case, and special characters   【还需要包含数字、大小写和类似于@#%等特殊字符】
STRONG Length &amp;gt;= 8, numeric, mixed case, special characters and dictionary                  file    【还需要包含字典文件】
............省略剩下的过程............
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;13 将MySQL数据库的动态链接库共享至系统链接库&lt;/h5&gt;
&lt;p&gt;一般MySQL数据库还会被类似于PHP等服务调用，所以我们需要将MySQL编译后的lib库文件添加至当前Linux主机链接库&lt;code&gt;/etc/ld.so.conf.d/&lt;/code&gt;下，这样MySQL服务就可以被其它服务调用了。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@typecodes lib]# echo &amp;quot;/usr/local/mysql/lib&amp;quot; &amp;gt; /etc/ld.so.conf.d/mysql.conf
[root@typecodes lib]# ldconfig          [使生效]
[root@typecodes lib]# ldconfig -v |grep mysql       [查看效果]
ldconfig: Can&amp;#39;t stat /libx32: No such file or directory
ldconfig: Path `/usr/lib&amp;#39; given more than once
ldconfig: Path `/usr/lib64&amp;#39; given more than once
ldconfig: Can&amp;#39;t stat /usr/libx32: No such file or directory
/usr/lib64/mysql:
        libmysqlclient.so.18 -&amp;gt; libmysqlclient.so.18.0.0
/usr/local/mysql/lib:
        libmysqlclient.so.20 -&amp;gt; libmysqlclient_r.so.20.0.0
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;14 创建其它MySQL数据库用户&lt;/h5&gt;
&lt;p&gt;使用MySQL数据库root管理员用户登录MySQL数据库后，可以管理数据库和其他用户了。这里演示创建一个名为typecodes的MySQL用户（密码为@typecodes2014.com）和一个名为typecodes的数据库。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@typecodes mysql]# mysql -uroot -p密码

######登录成功后，创建typecodes数据库，并设置字符集和字符校
mysql&amp;gt; CREATE DATABASE `typecodes` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci;
Query OK, 1 row affected (0.00 sec)

######创建名为typecodes用户，并让它拥有typecodes数据库所有的权限
mysql&amp;gt; grant all privileges on typecodes.* to typecodes@localhost identified by &amp;#39;@typecodes2014.com&amp;#39;;
Query OK, 0 rows affected, 1 warning (0.01 sec)

mysql&amp;gt; flush privileges;
Query OK, 0 rows affected (0.00 sec)

mysql&amp;gt; exit;            [创建完毕，root用户退出]
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;15 错误分析&lt;/h5&gt;
&lt;p&gt;这里特意分析了一些MySQL安装过程中可能出现的错误情况，详见文章&lt;a href="https://typecodes.com/web/solvemysqlcompileerror.html" title="查看原文"&gt;《MySQL编译安装时常见错误分析》&lt;/a&gt;。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Sun, 21 Jun 2015 00:53:00 +0800</pubDate><guid>tag:typecodes.com,2015-06-21:web/centos7compilemysql.html</guid><category>博客成长录</category><category>mysql</category></item><item><title>CentOS开启coredump转储并生成core文件的配置</title><link>https://typecodes.com/linux/centoscoredumpcfgshell.html</link><description>&lt;p&gt;在CentOS或者suse等Linux系统中默认是关闭coredump核心转储的，也就不会产生core文件。由于在C/C++开发中会用到gdb调试，所以需要开启coredump功能。下面是具体的配置命令，可以保存为一个简单的shell脚本执行。&lt;/p&gt;


&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/bin/bash&lt;/span&gt;

&lt;span class="c"&gt;### Filename: coredumpshell.sh&lt;/span&gt;
&lt;span class="c"&gt;### Description: enable coredump and format the name of core file on centos system&lt;/span&gt;

&lt;span class="c"&gt;# enable coredump whith unlimited file-size for all users&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;\n# enable coredump whith unlimited file-size for all users\n* soft core unlimited&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; /etc/security/limits.conf

&lt;span class="c"&gt;# set the path of core file with permission 777 &lt;/span&gt;
&lt;span class="nb"&gt;cd&lt;/span&gt; /mydata &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; mkdir corefile &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; chmod &lt;span class="m"&gt;777&lt;/span&gt; corefile

&lt;span class="c"&gt;# format the name of core file.   &lt;/span&gt;
&lt;span class="c"&gt;# %% – 符号%&lt;/span&gt;
&lt;span class="c"&gt;# %p – 进程号&lt;/span&gt;
&lt;span class="c"&gt;# %u – 进程用户id&lt;/span&gt;
&lt;span class="c"&gt;# %g – 进程用户组id&lt;/span&gt;
&lt;span class="c"&gt;# %s – 生成core文件时收到的信号&lt;/span&gt;
&lt;span class="c"&gt;# %t – 生成core文件的时间戳(seconds since 0:00h, 1 Jan 1970)&lt;/span&gt;
&lt;span class="c"&gt;# %h – 主机名&lt;/span&gt;
&lt;span class="c"&gt;# %e – 程序文件名&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;/mydata/corefile/core-%e-%s-%u-%g-%p-%t&amp;quot;&lt;/span&gt; &amp;gt; /proc/sys/kernel/core_pattern

&lt;span class="c"&gt;# suffix of the core file name&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt; &amp;gt; /proc/sys/kernel/core_uses_pid
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;在Linux终端上执行完上面的脚本后，退出并重新登录即可生效。可以通过&lt;code&gt;[root@typecodes ~]# ulimit -a&lt;/code&gt;命令查看效果，如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img alt="CentOS7.1开启coredump核心转储功能" src="https://o3cex9zsl.qnssl.com/2015/06/ulimit_a.png" title="CentOS7.1开启coredump核心转储功能" /&gt; &lt;/p&gt;
&lt;p&gt;最后，写了一个简单C程序测试CentOS是否生成了相应的core文件。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;typecodes&lt;/span&gt; &lt;span class="n"&gt;test&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="n"&gt;vim&lt;/span&gt; &lt;span class="n"&gt;test&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt; 
&lt;span class="cp"&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;argc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="n"&gt;scanf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;%s&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;使用命令&lt;code&gt;gcc test.c -o test&lt;/code&gt;编译后执行，然后故意输入错误的数据，让进程报错。这时，在&lt;code&gt;/mydata/corefile/&lt;/code&gt;目录就生成了相应的core文件&lt;code&gt;core-test-11-0-0-27124-1434029850&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img alt="core文件生成目录" src="https://o3cex9zsl.qnssl.com/2015/06/gdb_test_corefile.png" title="core文件生成目录" /&gt; &lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Thu, 11 Jun 2015 21:47:00 +0800</pubDate><guid>tag:typecodes.com,2015-06-11:linux/centoscoredumpcfgshell.html</guid><category>coredump</category><category>gdb</category></item><item><title>Typecho评论邮件通知插件中使用腾讯企业邮箱SSL功能</title><link>https://typecodes.com/mix/typechoexmailconfig.html</link><description>&lt;p&gt;前段时间，在查看博客绑定的腾讯企业邮箱时，发现POP3/SMTP协议支持SSL。由于正好使用了Typecho版的CommentToMail评论邮件通知插件，就顺便也升级成SSL协议。&lt;/p&gt;
&lt;p&gt;&lt;img alt="腾讯企业邮箱SSL配置" src="https://o3cex9zsl.qnssl.com/2015/06/exmailsslconfig.png" title="腾讯企业邮箱SSL配置" /&gt;&lt;/p&gt;


&lt;p&gt;整个配置过程很简单，SMTP填写腾讯企业邮箱的发送服务器地址：&lt;code&gt;smtp.exmail.qq.com&lt;/code&gt;，同时把之前是25的SMTP端口改成腾讯企业邮箱支持SSL协议的&lt;code&gt;465&lt;/code&gt;端口，最后勾选上&lt;code&gt;ssl加密&lt;/code&gt;选项即可，附图如下：&lt;/p&gt;
&lt;p&gt;&lt;img alt="Typecho评论邮件通知插件的SSL配置" src="https://o3cex9zsl.qnssl.com/2015/06/typechoexmailsslconfig.png" title="Typecho评论邮件通知插件的SSL配置" /&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Sat, 06 Jun 2015 19:45:00 +0800</pubDate><guid>tag:typecodes.com,2015-06-06:mix/typechoexmailconfig.html</guid><category>typecho</category><category>typecho评论邮件通知</category></item><item><title>Nginx服务启动、停止和重启等操作的SHELL脚本</title><link>https://typecodes.com/web/nginxserviceoptshell.html</link><description>&lt;p&gt;由于使用源码编译安装Nginx，不会像yum install那样自动生成Nginx服务控制脚本，所以需要自己添加一个操作脚本。谷歌上搜了一下，shell脚本的代码基本类似，因此自己稍微整理改动了下。&lt;/p&gt;
&lt;p&gt;下面的shell脚本内容，需要根据Nginx实际编译安装的配置，修改&lt;code&gt;NGINX_CONF_FILE="/etc/nginx/nginx.conf"&lt;/code&gt;和&lt;code&gt;lockfile=/var/lock/nginx.lock&lt;/code&gt;这两个参数（即前文&lt;a href="https://typecodes.com/web/centos7compilenginx.html" title="查看原文"&gt;《2015博客升级记(三)：CentOS 7.1编译安装Nginx1.9.0》&lt;/a&gt;中的configure配置）。&lt;/p&gt;


&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#! /bin/bash&lt;/span&gt;
&lt;span class="c"&gt;#&lt;/span&gt;
&lt;span class="c"&gt;# nginx - this script starts and stops the nginx daemon&lt;/span&gt;
&lt;span class="c"&gt;#&lt;/span&gt;
&lt;span class="c"&gt;# chkconfig:   - 85 15&lt;/span&gt;
&lt;span class="c"&gt;# description:  Nginx is an HTTP(S) server, HTTP(S) reverse \&lt;/span&gt;
&lt;span class="c"&gt;#               proxy and IMAP/POP3 proxy server&lt;/span&gt;
&lt;span class="c"&gt;#&lt;/span&gt;
&lt;span class="c"&gt;# processname: nginx&lt;/span&gt;
&lt;span class="c"&gt;# config:      /etc/nginx/nginx.conf&lt;/span&gt;
&lt;span class="c"&gt;# pidfile:     /var/run/nginx/nginx.pid&lt;/span&gt;

&lt;span class="c"&gt;# Source function library.&lt;/span&gt;
. /etc/rc.d/init.d/functions

&lt;span class="c"&gt;# Source networking configuration.&lt;/span&gt;
. /etc/sysconfig/network

&lt;span class="c"&gt;# Check that networking is up.&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$NETWORKING&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;no&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;exit &lt;/span&gt;0

&lt;span class="nv"&gt;nginx&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/usr/sbin/nginx&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;prog&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;basename &lt;span class="nv"&gt;$nginx&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;

&lt;span class="nv"&gt;NGINX_CONF_FILE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/etc/nginx/nginx.conf&amp;quot;&lt;/span&gt;

&lt;span class="o"&gt;[&lt;/span&gt; -f /etc/sysconfig/nginx &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; . /etc/sysconfig/nginx

&lt;span class="nv"&gt;lockfile&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/var/lock/nginx.lock

start&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="o"&gt;[&lt;/span&gt; -x &lt;span class="nv"&gt;$nginx&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nb"&gt;exit &lt;/span&gt;5
    &lt;span class="o"&gt;[&lt;/span&gt; -f &lt;span class="nv"&gt;$NGINX_CONF_FILE&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nb"&gt;exit &lt;/span&gt;6
    &lt;span class="nb"&gt;echo&lt;/span&gt; -n &lt;span class="nv"&gt;$&amp;quot;&lt;/span&gt;Starting &lt;span class="nv"&gt;$prog&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="s2"&gt;    daemon &lt;/span&gt;&lt;span class="nv"&gt;$nginx&lt;/span&gt;&lt;span class="s2"&gt; -c &lt;/span&gt;&lt;span class="nv"&gt;$NGINX_CONF_FILE&lt;/span&gt;&lt;span class="s2"&gt;&lt;/span&gt;
&lt;span class="s2"&gt;    retval=&lt;/span&gt;&lt;span class="nv"&gt;$?&lt;/span&gt;&lt;span class="s2"&gt;&lt;/span&gt;
&lt;span class="s2"&gt;    echo&lt;/span&gt;
&lt;span class="s2"&gt;    [ &lt;/span&gt;&lt;span class="nv"&gt;$retval&lt;/span&gt;&lt;span class="s2"&gt; -eq 0 ] &amp;amp;&amp;amp; touch &lt;/span&gt;&lt;span class="nv"&gt;$lockfile&lt;/span&gt;&lt;span class="s2"&gt;&lt;/span&gt;
&lt;span class="s2"&gt;    return &lt;/span&gt;&lt;span class="nv"&gt;$retval&lt;/span&gt;&lt;span class="s2"&gt;&lt;/span&gt;
&lt;span class="s2"&gt;}&lt;/span&gt;

&lt;span class="s2"&gt;stop() {&lt;/span&gt;
&lt;span class="s2"&gt;    echo -n &lt;/span&gt;&lt;span class="nv"&gt;$&amp;quot;&lt;/span&gt;&lt;span class="s2"&gt;Stopping &lt;/span&gt;&lt;span class="nv"&gt;$prog&lt;/span&gt;&lt;span class="s2"&gt;: &amp;quot;&lt;/span&gt;
    killproc &lt;span class="nv"&gt;$prog&lt;/span&gt; -QUIT
    &lt;span class="nv"&gt;retval&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$?&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt;
    &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;$retval&lt;/span&gt; -eq &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; rm -f &lt;span class="nv"&gt;$lockfile&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$retval&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

restart&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    configtest &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$?&lt;/span&gt;
    stop
    sleep 1
    start
&lt;span class="o"&gt;}&lt;/span&gt;

reload&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    configtest &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$?&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; -n &lt;span class="nv"&gt;$&amp;quot;&lt;/span&gt;Reloading &lt;span class="nv"&gt;$prog&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="s2"&gt;    killproc &lt;/span&gt;&lt;span class="nv"&gt;$nginx&lt;/span&gt;&lt;span class="s2"&gt; -HUP&lt;/span&gt;
&lt;span class="s2"&gt;    RETVAL=&lt;/span&gt;&lt;span class="nv"&gt;$?&lt;/span&gt;&lt;span class="s2"&gt;&lt;/span&gt;
&lt;span class="s2"&gt;    echo&lt;/span&gt;
&lt;span class="s2"&gt;}&lt;/span&gt;

&lt;span class="s2"&gt;force_reload() {&lt;/span&gt;
&lt;span class="s2"&gt;    restart&lt;/span&gt;
&lt;span class="s2"&gt;}&lt;/span&gt;

&lt;span class="s2"&gt;configtest() {&lt;/span&gt;
&lt;span class="s2"&gt;  &lt;/span&gt;&lt;span class="nv"&gt;$nginx&lt;/span&gt;&lt;span class="s2"&gt; -t -c &lt;/span&gt;&lt;span class="nv"&gt;$NGINX_CONF_FILE&lt;/span&gt;&lt;span class="s2"&gt;&lt;/span&gt;
&lt;span class="s2"&gt;}&lt;/span&gt;

&lt;span class="s2"&gt;rh_status() {&lt;/span&gt;
&lt;span class="s2"&gt;    status &lt;/span&gt;&lt;span class="nv"&gt;$prog&lt;/span&gt;&lt;span class="s2"&gt;&lt;/span&gt;
&lt;span class="s2"&gt;}&lt;/span&gt;

&lt;span class="s2"&gt;rh_status_q() {&lt;/span&gt;
&lt;span class="s2"&gt;    rh_status &amp;gt;/dev/null 2&amp;gt;&amp;amp;1&lt;/span&gt;
&lt;span class="s2"&gt;}&lt;/span&gt;

&lt;span class="s2"&gt;case &amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot; in&lt;/span&gt;
&lt;span class="s2"&gt;    start)&lt;/span&gt;
&lt;span class="s2"&gt;        rh_status_q &amp;amp;&amp;amp; exit 0&lt;/span&gt;
&lt;span class="s2"&gt;        &lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;&lt;/span&gt;
&lt;span class="s2"&gt;        ;;&lt;/span&gt;
&lt;span class="s2"&gt;    stop)&lt;/span&gt;
&lt;span class="s2"&gt;        rh_status_q || exit 0&lt;/span&gt;
&lt;span class="s2"&gt;        &lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;&lt;/span&gt;
&lt;span class="s2"&gt;        ;;&lt;/span&gt;
&lt;span class="s2"&gt;    restart|configtest)&lt;/span&gt;
&lt;span class="s2"&gt;        &lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;&lt;/span&gt;
&lt;span class="s2"&gt;        ;;&lt;/span&gt;
&lt;span class="s2"&gt;    reload)&lt;/span&gt;
&lt;span class="s2"&gt;        rh_status_q || exit 7&lt;/span&gt;
&lt;span class="s2"&gt;        &lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;&lt;/span&gt;
&lt;span class="s2"&gt;        ;;&lt;/span&gt;
&lt;span class="s2"&gt;    force-reload)&lt;/span&gt;
&lt;span class="s2"&gt;        force_reload&lt;/span&gt;
&lt;span class="s2"&gt;        ;;&lt;/span&gt;
&lt;span class="s2"&gt;    status)&lt;/span&gt;
&lt;span class="s2"&gt;        rh_status&lt;/span&gt;
&lt;span class="s2"&gt;        ;;&lt;/span&gt;
&lt;span class="s2"&gt;    condrestart|try-restart)&lt;/span&gt;
&lt;span class="s2"&gt;        rh_status_q || exit 0&lt;/span&gt;
&lt;span class="s2"&gt;            ;;&lt;/span&gt;
&lt;span class="s2"&gt;    *)&lt;/span&gt;
&lt;span class="s2"&gt;        echo &lt;/span&gt;&lt;span class="nv"&gt;$&amp;quot;&lt;/span&gt;&lt;span class="s2"&gt;Usage: &lt;/span&gt;&lt;span class="nv"&gt;$0&lt;/span&gt;&lt;span class="s2"&gt; {start|stop|status|restart|condrestart|try-restart|reload|force-reload|configtest}&amp;quot;&lt;/span&gt;
        &lt;span class="nb"&gt;exit &lt;/span&gt;2
&lt;span class="k"&gt;esac&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;将上面的shell脚本内容以&lt;code&gt;Unix格式&lt;/code&gt;(不能用dos哦)保存并命名为&lt;code&gt;nginx&lt;/code&gt;，然后上传到centos系统的&lt;code&gt;/etc/init.d/&lt;/code&gt;目录，接着添加可执行权限，最后执行添加到开机启动的命令：&lt;code&gt;chkconfig --add nginx&lt;/code&gt;、&lt;code&gt;chkconfig nginx on&lt;/code&gt;即可。&lt;/p&gt;
&lt;p&gt;最后，我们可以使用如下命令对Nginx服务进行操作：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;######启动Nginx服务
[root@typecodes ~]# service nginx start
######停止Nginx服务
[root@typecodes ~]# service nginx stop
######重启Nginx服务
[root@typecodes ~]# service nginx restart
######Nginx服务的状态
[root@typecodes ~]# service nginx status
######在Nginx服务启动的状态下，重新加载nginx.conf这个配置文件
[root@typecodes ~]# service nginx reload
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Sat, 06 Jun 2015 13:42:00 +0800</pubDate><guid>tag:typecodes.com,2015-06-06:web/nginxserviceoptshell.html</guid><category>nginx shell脚本</category><category>nginx</category></item><item><title>2015博客升级记(三)：CentOS 7.1编译安装Nginx1.9.0</title><link>https://typecodes.com/web/centos7compilenginx.html</link><description>&lt;p&gt;这是&lt;a href="https://typecodes.com/mix/2015updateblog.html" title="查看原文"&gt;《2015年博客升级记》&lt;/a&gt;系列文章的第三篇，主要记录如何在CentOS 7.1中编译安装Nginx官方最新的1.9.0版本。由于像Nginx、Mysql和PHP7的的源码都是用C/C++写的，所以自己的CentOS 7.1服务器上必须要安装gcc和g++软件（CentOS 7系列会自带这两个编译软件）。&lt;/p&gt;
&lt;p&gt;&lt;img alt="CentOS 7.1编译安装Nginx1.9.0" src="https://o3cex9zsl.qnssl.com/2015/05/nginxlogo.png" title="CentOS 7.1编译安装Nginx1.9.0" /&gt;&lt;/p&gt;


&lt;h5&gt;1 依赖库配置，编译和安装Nginx1.9.0&lt;/h5&gt;
&lt;p&gt;先创建一个名为nginx且&lt;code&gt;没有登录权限&lt;/code&gt;的用户和一个名为nginx的用户组，然后安装nginx所需的依赖库和依赖包，最后通过&lt;code&gt;.configure&lt;/code&gt;进行安装的详细配置。另外，补录一个pcre的tar包备份地址：https://o3cex9zsl.qnssl.com/libs/nginx/pcre-8.36.tar.gz，以及一个zlib的tar包备份地址：https://o3cex9zsl.qnssl.com/libs/nginx/zlib-1.2.8.tar.gz。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;#######新建nginx用户和nginx组
[root@typecodes ~]# groupadd -r nginx &amp;amp;&amp;amp; useradd -r -g nginx -s /bin/false -M nginx
#######yum安装nginx必须的依赖库
[root@typecodes ~]# yum -y install openssl openssl-devel libxml2-devel libxslt-devel perl-devel perl-ExtUtils-Embed

#######官网下载Nginx1.9.0的tar包，然后解压到服务器上
[root@typecodes ~]# wget -c http://nginx.org/download/nginx-1.9.0.tar.gz
[root@typecodes ~]# tar -zxf nginx-1.9.0.tar.gz &amp;amp;&amp;amp; cd nginx-1.9.0

#######下载pcre的tar包并解压，以便支持Nginx的Rewrite功能
[root@typecodes nginx-1.9.0]# wget -c http://git.typecodes.com/libs/php/pcre-8.36.tar.gz &amp;amp;&amp;amp; tar -zxf pcre-8.36.tar.gz
#######下载zlib的tar包并解压，以便支持Nginx的Gzip压缩功能
[root@typecodes nginx-1.9.0]# wget -c http://git.typecodes.com/libs/nginx/zlib-1.2.8.tar.gz
[root@typecodes nginx-1.9.0]# tar -zxf zlib-1.2.8.tar.gz

#######新建Nginx1.9.0安装时所需要的目录
[root@typecodes nginx-1.9.0]# cd /var/tmp/ &amp;amp;&amp;amp; mkdir -p /var/tmp/nginx/{client,proxy,fastcgi,uwsgi,scgi}
[root@typecodes tmp]# mkdir -p /var/run/nginx &amp;amp;&amp;amp; cd ~/nginx-1.9.0
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;准备工作做好后，就开始正式配置Nginx-1.9.0的安装明细了。注意，在使用下面这条&lt;code&gt;configure&lt;/code&gt;参数配置时，一定要先把反斜杠“\”后面添加的注释文字去掉！！！&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@typecodes nginx-1.9.0]# ./configure \
--prefix=/usr/share/nginx \                     [Nginx安装目录]
--sbin-path=/usr/sbin/nginx \                   [Nginx的sbin目录]
--conf-path=/etc/nginx/nginx.conf \             [Nginx的配置文件]
--error-log-path=/var/log/nginx/error.log \     [Nginx的错误日志]
--http-log-path=/var/log/nginx/access.log \     [Nginx的访问日志]
--pid-path=/var/run/nginx/nginx.pid  \          [Nginx的进程ID]
--lock-path=/var/lock/nginx.lock \
--user=nginx \                          [Nginx所属用户]
--group=nginx \                         [Nginx所属用户组]
--with-http_ssl_module \                    [Nginx的ssl模块]
--with-http_spdy_module \               [Nginx的Google spdy模块]
--with-http_dav_module \
--with-http_flv_module \
--with-http_realip_module \
--with-http_addition_module \
--with-http_xslt_module \
--with-http_stub_status_module \
--with-http_sub_module \
--with-http_random_index_module \
--with-http_degradation_module \
--with-http_secure_link_module \
--with-http_gzip_static_module \            [Nginx的gzip压缩模块]
--with-http_perl_module \
--with-pcre=pcre-8.36 \                 [pcre的安装目录]
--with-zlib=zlib-1.2.8 \                    [pcre的安装目录]
--with-debug \                          [允许DEBUG]
--with-file-aio \
--with-mail \
--with-mail_ssl_module \
--http-client-body-temp-path=/var/tmp/nginx/client_body \
--http-proxy-temp-path=/var/tmp/nginx/proxy \
--http-fastcgi-temp-path=/var/tmp/nginx/fastcgi \
--http-uwsgi-temp-path=/var/tmp/nginx/uwsgi \
--http-scgi-temp-path=/var/tmp/nginx/scgi \
--with-stream \                         [Nginx1.9.0特有的stream模块]
--with-ld-opt=&amp;quot;-Wl,-E&amp;quot;                  [gcc的编译优化]
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;配置过程大概需要5分钟左右，部分截图如下：&lt;/p&gt;
&lt;p&gt;&lt;img alt="nginx的configure过程" src="https://o3cex9zsl.qnssl.com/2015/05/nginxconfigureresult.png" title="nginx的configure过程" /&gt;&lt;/p&gt;
&lt;h5&gt;2 配置完后，就可以直接编译和安装了&lt;/h5&gt;
&lt;p&gt;最后，直接使用执行这条命令&lt;code&gt;[root@typecodes nginx-1.9.0]# make &amp;amp;&amp;amp; make install&lt;/code&gt;进行安装即可。其中，make命令和make install命令的执行结果附图如下：&lt;/p&gt;
&lt;p&gt;&lt;img alt="Nginx编译时make执行结果" src="https://o3cex9zsl.qnssl.com/2015/05/nginxinstallresult1.png" title="Nginx编译时make执行结果" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Nginx编译时make install执行结果" src="https://o3cex9zsl.qnssl.com/2015/05/nginxinstallresult2.png" title="Nginx编译时make install执行结果" /&gt;&lt;/p&gt;
&lt;h5&gt;3 配置Nginx1.9.0，使之正常工作&lt;/h5&gt;
&lt;p&gt;成功安装Nginx1.9.0后，我们需要进行一些配置，包括开机启动、SSL/HTTPS服务等。其中，Nginx服务控制脚本&lt;code&gt;nginx&lt;/code&gt;见文章&lt;a href="https://typecodes.com/web/nginxserviceoptshell.html" title="查看原文"&gt;《Nginx服务启动、停止和重启等操作的SHELL脚本》&lt;/a&gt;。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;#######上传Nginx服务控制脚本nginx，并赋予执行权限，删除安装包，添加Nginx服务到开机启动
[root@typecodes ~]# mv ~/nginx /etc/init.d/nginx &amp;amp;&amp;amp; chmod +x /etc/init.d/nginx
[root@typecodes ~]# rm -rf nginx-1.9.0*
[root@typecodes ~]# chkconfig --add nginx
[root@typecodes ~]# chkconfig nginx on
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;由于博客准备全站启用https服务，所以直接将前文&lt;a href="https://typecodes.com/web/lnmppositivessl.html" title="查看原文"&gt;《阿里云CentOS 6.5系统LNMP环境安装SSL证书》&lt;/a&gt;中产生的私钥typecodes.key和证书文件typecodes_last.crt打包的ssl.tar.gz上传到服务器使用。而Nginx配置文件nginx.conf见文章&lt;a href="https://typecodes.com/web/centos7nginxhttpsspdy.html" title="查看原文"&gt;《2015博客升级记(六)：Nginx配置HTTPS和SPDY实战》&lt;/a&gt;。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;#######上传ssl文件和Nginx配置文件nginx.conf
[root@typecodes ~]# mkdir -p /etc/nginx/ssl &amp;amp;&amp;amp; tar -zxf ~/ssl.tar.gz -C /etc/nginx/ssl
[root@typecodes ~]# cd /etc/nginx/ &amp;amp;&amp;amp; tar -zcf etc.nginx.tar.gz ./
[root@typecodes ~]# rm -rf ~/ssl.tar.gz 
[root@typecodes ~]# mv ~/nginx.conf /etc/nginx
mv: overwrite ‘/etc/nginx/nginx.conf’? y

#######测试配置是否正常
root@typecodes ~]# nginx -t
nginx: the configuration file /etc/nginx/nginx.conf syntax is ok
nginx: configuration file /etc/nginx/nginx.conf test is successful

#######新建Nginx进程日志nginx.pid目录，并启动服务
[root@typecodes ~]# mkdir -p /var/run/nginx/
[root@typecodes ~]# service nginx start
Restarting nginx (via systemctl):  [  OK  ]
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;最后使用命令&lt;code&gt;[root@typecodes nginx]# nginx -V&lt;/code&gt;查看Nginx1.9.0的详细信息。&lt;/p&gt;
&lt;p&gt;&lt;img alt="查看Nginx1.9.0的详细信息" src="https://o3cex9zsl.qnssl.com/2015/05/nginxversioninfo.png" title="查看Nginx1.9.0的详细信息" /&gt;&lt;/p&gt;
&lt;h5&gt;4 错误分析&lt;/h5&gt;
&lt;p&gt;这里特意分析了一些Nginx安装过程中可能出现的错误情况，详见文章&lt;a href="https://typecodes.com/web/solvenginxcompileerror.html" title="查看原文"&gt;《Nginx编译安装时常见错误分析》&lt;/a&gt;。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Wed, 03 Jun 2015 16:06:00 +0800</pubDate><guid>tag:typecodes.com,2015-06-03:web/centos7compilenginx.html</guid><category>博客成长录</category><category>nginx</category></item><item><title>Typecho评论中开启和使用Markdown的方法</title><link>https://typecodes.com/mix/typechocommentmarkdown.html</link><description>&lt;p&gt;轻量级的博客程序Typecho，还有一个很舒适的体验，那就是支持Markdown语法，不论是在文章或是评论中。这篇文章主要是说明如何在博客中使用Markdown写作以及如何在评论中使用Markdown语法。&lt;/p&gt;
&lt;p&gt;&lt;img alt="Typecho评论中开启和使用Markdown的方法" src="https://o3cex9zsl.qnssl.com/2015/05/typechomarkdown.png" title="Typecho评论中开启和使用Markdown的方法" /&gt;&lt;/p&gt;


&lt;h5&gt;1 Typecho博客评论中开启Markdown功能&lt;/h5&gt;
&lt;p&gt;在Typecho中，如何在写评论的时候也能像写文章那样，使用Markdown语法？我们只需要在Typecho的后台分两个步骤即可开启这个功能。&lt;/p&gt;
&lt;p&gt;首先进入Typecho博客的后台管理界面，然后鼠标滑到左上角菜单栏上的&lt;code&gt;设置&lt;/code&gt;，接着点击&lt;code&gt;评论&lt;/code&gt;进入到评论设置界面。如下图所示，需要勾选上&lt;code&gt;在评论中使用 Markdown 语法&lt;/code&gt;。同时，我们还需要在&lt;code&gt;允许使用的HTML标签和属性&lt;/code&gt;栏目中填写上Typecho将Markdown转换后的HTML标签。&lt;/p&gt;
&lt;p&gt;博客目前使用的是如图所示的下面这个配置，大家可以根据需要进行加减。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&amp;lt;blockquote&amp;gt;&amp;lt;pre&amp;gt;&amp;lt;code&amp;gt;&amp;lt;strong&amp;gt;&amp;lt;em&amp;gt;&amp;lt;h5&amp;gt;&amp;lt;h6&amp;gt;&amp;lt;a href title&amp;gt;&amp;lt;table&amp;gt;&amp;lt;thead&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;th&amp;gt;&amp;lt;tbody&amp;gt;&amp;lt;td&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;其中，&lt;code&gt;code&lt;/code&gt;标签作用是高亮某个单词或词组；&lt;code&gt;&amp;lt;a href&amp;gt;&lt;/code&gt;标签作用是允许评论文字附带超链接，而如果这个链接上还要有文字提示信息，那么就需要改成&lt;code&gt;&amp;lt;a href title&amp;gt;&lt;/code&gt;标签；剩余的&lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt;标签作用是允许表格。&lt;/p&gt;
&lt;p&gt;&lt;img alt="Typecho博客评论中开启Markdown功能" src="https://o3cex9zsl.qnssl.com/2015/05/typechostartmarkdown.png" title="Typecho博客评论中开启Markdown功能" /&gt;&lt;/p&gt;
&lt;h5&gt;2 如何在评论中使用Markdown语法&lt;/h5&gt;
&lt;p&gt;由于Typecho程序使用的是PHP Markdown Lib库，自然也遵循Markdown基本语法。所以，在写评论的时候，直接使用Markdown的基本语法即可。下面是在写文章或者评论时，一些经常会用到的Markdown演示。&lt;/p&gt;
&lt;h6&gt;2.1 高亮某个词组&lt;/h6&gt;
&lt;p&gt;使用两个反引号把要高亮的词组包含起来，例如&lt;code&gt;`echo "Hello"`&lt;/code&gt;即可，结果如图所示。&lt;/p&gt;
&lt;p&gt;&lt;img alt="typecho中使用Markdown高亮某个词组" src="https://o3cex9zsl.qnssl.com/2015/05/commentlightwords.png" title="typecho中使用Markdown高亮某个词组" /&gt;&lt;/p&gt;
&lt;h6&gt;2.2 插入代码&lt;/h6&gt;
&lt;p&gt;在评论中插入代码，只需要在代码中的每一行的开头增加4个空格即可，效果如下图所示。&lt;/p&gt;
&lt;p&gt;&lt;img alt="typecho中使用Markdown插入代码" src="https://o3cex9zsl.qnssl.com/2015/05/commentinsertcodes.png" title="typecho中使用Markdown插入代码" /&gt;&lt;/p&gt;
&lt;h6&gt;2.3 将文字加上超链接&lt;/h6&gt;
&lt;p&gt;这个功能不是用来发广告链接的哟！开个玩笑，我们只需要使用Markdown的超链接标签即可。例如，&lt;code&gt;[欢迎来到我的博客](https://typecodes.com "TypeCodes")&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img alt="typecho中将文字加上超链接" src="https://o3cex9zsl.qnssl.com/2015/05/commenttexturllinker.png" title="typecho中将文字加上超链接" /&gt;&lt;/p&gt;
&lt;h6&gt;2.4 插入表格&lt;/h6&gt;
&lt;p&gt;在评论中插入表格，当然这个功能基本不会用到吧。在文章中使用Markdown语法展示表格的效果如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img alt="typecho中使用Markdown插入表格" src="https://o3cex9zsl.qnssl.com/2015/05/typechomarkdowntable.png" title="typecho中使用Markdown插入表格" /&gt;&lt;/p&gt;
&lt;p&gt;那么在评论中要用Markdown展示表格的话，方法也是一样的。例如使用下面这段格式，就可以用表格的形式展示出来了。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Lang| Start | IDE| Inheritance
----|------|----
Java | 1995  | Eclipse | Yes
C | 1972  | CodeBlocks | No
C++ | 1983 | Visual Studio | Yes
Python | 1989 | Eclipse | Yes
C#| 2000 | Visual Studio | Yes
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;3 总结&lt;/h5&gt;
&lt;p&gt;小节2中只是展示了Markdown的部分基本语法如何在Typecho写文章或者评论中应用，更多的语法可以参考&lt;a href="http://wowubuntu.com/markdown/" title="《Markdown 语法说明 (简体中文版)》"&gt;这篇文章&lt;/a&gt;。最后需要说明的是：Typecho将Markdown转换成普通html标签后，我们可以修改对应的CSS样式，大家可以尽情发挥。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Sun, 31 May 2015 18:20:00 +0800</pubDate><guid>tag:typecodes.com,2015-05-31:mix/typechocommentmarkdown.html</guid><category>typecho markdown</category><category>markdown</category></item><item><title>视角：C语言将十六进制字符串转成十进制整数</title><link>https://typecodes.com/cseries/simplifychexstrtoint.html</link><description>&lt;p&gt;在前文&lt;a href="https://typecodes.com/cseries/againchexstrtointeger.html/comment-page-1#comment-1665" title="查看原文评论"&gt;《再议C语言将十六进制字符串转成十进制整数》&lt;/a&gt;中 &lt;a href="http://pewae.com/"&gt;@大致&lt;/a&gt; 童鞋帮忙提了一个思路：直接将指针&lt;code&gt;p&lt;/code&gt;读取的十六进制字符串中的单个字符转换后的结果保存在&lt;code&gt;iResult&lt;/code&gt;中，而不是保存在指针p指向的内存中。这样思路更为简洁，下面是具体的两个实现程序。&lt;/p&gt;


&lt;h5&gt;1 从高位到低位单个字符转换&lt;/h5&gt;
&lt;p&gt;正向转换时，提前判断出字符串中部分非法字符，然后根据&lt;code&gt;+&lt;/code&gt;、&lt;code&gt;-&lt;/code&gt;、&lt;code&gt;0x&lt;/code&gt;、&lt;code&gt;0X&lt;/code&gt;这四个特殊字符(串)对指针变量p进行特殊处理。&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;string.h&amp;gt;&lt;/span&gt;

&lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt; * @FileName  HexStr2Integer.c&lt;/span&gt;
&lt;span class="cm"&gt; * @author    vfhky 2015.05.30 https://typecodes.com/cseries/simplifychexstrtoint.html&lt;/span&gt;
&lt;span class="cm"&gt; * @param     [in]HexStr 十六进制字符串（例如&amp;quot;eE2&amp;quot;、&amp;quot;Fa1&amp;quot;、&amp;quot;2011&amp;quot;、&amp;quot;-eE2&amp;quot;、&amp;quot;+eE2&amp;quot;等） &lt;/span&gt;
&lt;span class="cm"&gt; * @return    -1:字符串为空; -2:字符串中包含非十六进制的字符; 其它:转换后的十进制整数&lt;/span&gt;
&lt;span class="cm"&gt; */&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;HexStr2Integer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;HexStr&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;iResult&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;iFlag&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;//判断字符串是否合法&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;HexStr&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;HexStr&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;+&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HexStr&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;\0&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;HexStr&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;-&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HexStr&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;\0&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; 
        &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;HexStr&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mh"&gt;0x30&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HexStr&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mh"&gt;0x58&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HexStr&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;\0&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;HexStr&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mh"&gt;0x30&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HexStr&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mh"&gt;0x78&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HexStr&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;\0&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;//指针变量p指向字符串的首位&lt;/span&gt;
    &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;HexStr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;//对以&amp;quot;+&amp;quot;、&amp;quot;-&amp;quot;号开头的十六进制字符串的处理&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;-&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;+&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;-&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;iFlag&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="c1"&gt;//对&amp;quot;0x&amp;quot;或者&amp;quot;0X&amp;quot;开头的十六进制字符的处理&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mh"&gt;0x30&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mh"&gt;0x58&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mh"&gt;0x30&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mh"&gt;0x78&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;\0&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;48&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;57&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;iResult&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;48&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;iResult&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;65&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;70&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;iResult&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;65&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;iResult&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;97&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;102&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;iResult&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;97&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;iResult&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;iFlag&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;iResult&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;argc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;cHexString&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;memset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;cHexString&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cHexString&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Please input a HexString with length less than 200:&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;scanf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;%s&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cHexString&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;----&amp;gt;[%d]&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;HexStr2Integer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cHexString&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;同样使用GCC编译命令&lt;code&gt;gcc HexStr2Integer.c -o HexStr2Integer&lt;/code&gt;，然后输入测试用的十六进制的字符串"eE2"、"Fa1"、"2011"、"-eE2"、"+eE2"分别转换成了对应的十进制整数：3810、4001、8209、-3810、3810。&lt;/p&gt;
&lt;p&gt;&lt;img alt="十六进制字符串转成十进制整数" src="https://o3cex9zsl.qnssl.com/2015/05/simplifychexstrtoint.png" title="十六进制字符串转成十进制整数" /&gt;&lt;/p&gt;
&lt;h5&gt;2 从低位到高位单个字符转换&lt;/h5&gt;
&lt;p&gt;逆向转换时，需要注意&lt;code&gt;while&lt;/code&gt;循环中通过对&lt;code&gt;+&lt;/code&gt;、&lt;code&gt;-&lt;/code&gt;、&lt;code&gt;0x&lt;/code&gt;、&lt;code&gt;0X&lt;/code&gt;这四个特殊字符(串)的判断出非法字符。&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;string.h&amp;gt;&lt;/span&gt;

&lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt; * @FileName  HexStr2Integer2.c&lt;/span&gt;
&lt;span class="cm"&gt; * @author    vfhky 2015.05.30 https://typecodes.com/cseries/simplifychexstrtoint.html&lt;/span&gt;
&lt;span class="cm"&gt; * @param     [in]HexStr 十六进制字符串（例如&amp;quot;eE2&amp;quot;、&amp;quot;Fa1&amp;quot;、&amp;quot;2011&amp;quot;、&amp;quot;-eE2&amp;quot;、&amp;quot;+eE2&amp;quot;等） &lt;/span&gt;
&lt;span class="cm"&gt; * @return    -1:字符串为空; -2:字符串中包含非十六进制的字符; 其它:转换后的十进制整数&lt;/span&gt;
&lt;span class="cm"&gt; */&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;HexStr2Integer2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;HexStr&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;iResult&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;iCycle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;iFlag&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;//判断字符串是否合法&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;strlen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;HexStr&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;//指针变量p指向字符串的末尾&lt;/span&gt;
    &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;HexStr&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;strlen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;HexStr&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="n"&gt;HexStr&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;0&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;9&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;iResult&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;0&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;iCycle&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;A&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;F&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;iResult&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;A&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;iCycle&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;a&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;f&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;iResult&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;a&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;iCycle&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;+&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;HexStr&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;x&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;0&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;HexStr&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; 
            &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;X&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;0&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;HexStr&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;-&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;HexStr&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;iFlag&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="n"&gt;iCycle&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;iFlag&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;iResult&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;argc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;cHexString&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;memset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;cHexString&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cHexString&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Please input a HexString with length less than 200:&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;scanf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;%s&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cHexString&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;----&amp;gt;[%d]&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;HexStr2Integer2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cHexString&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;同样，使用GCC编译后，输入十六进制字符串数据进行测试，结果如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img alt="十六进制字符串转成十进制整数" src="https://o3cex9zsl.qnssl.com/2015/05/simplifychexstrtoint2.png" title="十六进制字符串转成十进制整数" /&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Sat, 30 May 2015 07:58:00 +0800</pubDate><guid>tag:typecodes.com,2015-05-30:cseries/simplifychexstrtoint.html</guid><category>十六进制字符串</category><category>十六进制转十进制</category><category>字符串转换</category></item><item><title>2015博客升级记(二)：Linux系统磁盘分区挂载和交换空间</title><link>https://typecodes.com/linux/centos7fdiskmountswap.html</link><description>&lt;p&gt;这是&lt;a href="https://typecodes.com/mix/2015updateblog.html" title="查看原文"&gt;《2015年博客升级记》&lt;/a&gt;系列文章的第二篇，主要记录在Linux系统中如何将磁盘进行分区和挂载。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;------------操作说明------------               
Linux系统：       阿里云CentOS 7.1（20G）
操作工具：        SecureCRT 7.0
待挂载的数据盘：   24G
分区目标：        先分4G作为CentOS7.1系统的交换空间，剩余20G作为普通物理空间
&lt;/pre&gt;&lt;/div&gt;




&lt;h5&gt;1 查看当前Linux系统分区信息&lt;/h5&gt;
&lt;p&gt;由于阿里云主机默认系统盘大小为20G，通过命令&lt;code&gt;df -h&lt;/code&gt;可以看到分区&lt;code&gt;/dev/xvda1&lt;/code&gt;挂载在当前CentOS7.1系统的根目录&lt;code&gt;/&lt;/code&gt;下面，系统本身占用了2.1G空间。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@typecodes ~]# df -h
Filesystem      Size  Used Avail Use% Mounted on
/dev/xvda1       20G  2.1G   17G   12% /
devtmpfs        489M     0  489M   0% /dev
tmpfs           497M     0  497M   0% /dev/shm
tmpfs           497M  6.5M  490M   2% /run
tmpfs           497M     0  497M   0% /sys/fs/cgroup
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;2 列出所有安装的磁盘及分区信息&lt;/h5&gt;
&lt;p&gt;那么，如果主机上还存在额外的未挂载的磁盘，我们可以通过&lt;code&gt;fdisk -l&lt;/code&gt;查看这些磁盘的信息。如下所示，磁盘&lt;code&gt;/dev/xvda&lt;/code&gt;是阿里云主机自带的，然后被划分成了分区&lt;code&gt;/dev/xvda1&lt;/code&gt;；而磁盘&lt;code&gt;/dev/xvdb&lt;/code&gt;就是24G大小（实际为25.8G）的阿里云数据盘（还未进行分区）。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@typecodes ~]# fdisk -l

Disk /dev/xvda: 21.5 GB, 21474836480 bytes, 41943040 sectors
Units = sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disk label type: dos
Disk identifier: 0x0009e68a

    Device Boot      Start         End      Blocks   Id  System
/dev/xvda1   *        2048    41943039    20970496   83  Linux

Disk /dev/xvdb: 25.8 GB, 25769803776 bytes, 50331648 sectors
Units = sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;3 开始将磁盘进行分区&lt;/h5&gt;
&lt;p&gt;按照先前设定的目标，将磁盘&lt;code&gt;/dev/xvdb&lt;/code&gt;划分成两个区：一区用于CentOS7.1系统的交换空间，二区就是普通的Linux物理空间，用作仓库存放备份的数据库文件、程序等等。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@typecodes ~]# fdisk /dev/xvdb
Welcome to fdisk (util-linux 2.23.2).

Changes will remain in memory only, until you decide to write them.
Be careful before using the write command.

Device does not contain a recognized partition table
Building a new DOS disklabel with disk identifier 0x6c0e75aa.

################开始分区1##################
Command (m for help): n     [第1步：输入n，代表新建分区]
Partition type:
   p   primary (0 primary, 0 extended, 4 free)
   e   extended
Select (default p): p       [第2步：输入p或直接回车]
Partition number (1-4, default 1): 1            [第3步：输入区号1]
First sector (2048-50331647, default 2048):    [第4步：直接回车]
Using default value 2048
Last sector, +sectors or +size{K,M,G} (2048-50331647, default 50331647): +4G        [第5步：划分4G空间]
Partition 1 of type Linux and of size 4 GiB is set
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;同样，使用&lt;code&gt;fdisk /dev/xvdb&lt;/code&gt;命令划分区域2。需要说明的是，因为需要将剩余的20G空间全部划分到区域2，所以在第5步&lt;code&gt;Last sector, +sectors or +size{K,M,G} (8390656-50331647, default 50331647)&lt;/code&gt;一栏中直接回车即可。这里省略具体执行过程，附图如下：&lt;/p&gt;
&lt;p&gt;&lt;img alt="开始对磁盘/dev/xvdb进行分区" src="https://o3cex9zsl.qnssl.com/2015/05/beginfdiskxvdb.png" title="开始对磁盘/dev/xvdb进行分区" /&gt;&lt;/p&gt;
&lt;h5&gt;4 开始格式化刚划分的第1和第2分区&lt;/h5&gt;
&lt;p&gt;开始分别将分区&lt;code&gt;/dev/xvdb1&lt;/code&gt;和&lt;code&gt;/dev/xvdb2&lt;/code&gt;格式化为ext4文件系统：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@typecodes /]# mkfs.ext4 /dev/xvdb1
mke2fs 1.42.9 (28-Dec-2013)
Filesystem label=
OS type: Linux
Block size=4096 (log=2)
Fragment size=4096 (log=2)
Stride=0 blocks, Stripe width=0 blocks
262144 inodes, 1048576 blocks
52428 blocks (5.00%) reserved for the super user
First data block=0
Maximum filesystem blocks=1073741824
32 block groups
32768 blocks per group, 32768 fragments per group
8192 inodes per group
Superblock backups stored on blocks: 
        32768, 98304, 163840, 229376, 294912, 819200, 884736

Allocating group tables: done                            
Writing inode tables: done                            
Creating journal (32768 blocks): done
Writing superblocks and filesystem accounting information: done
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;同样使用命令&lt;code&gt;mkfs.ext4 /dev/xvdb2&lt;/code&gt;格式化分区/dev/xvdb2为ext4文件系统，这里省略具体执行过程，附图如下：&lt;/p&gt;
&lt;p&gt;&lt;img alt="格式化分区/dev/xvdb2为ext4文件系统" src="https://o3cex9zsl.qnssl.com/2015/05/mkfs.ext4xvdb2.png" title="格式化分区/dev/xvdb2为ext4文件系统" /&gt;&lt;/p&gt;
&lt;h5&gt;5 指定第1分区类型为linux Swap分区&lt;/h5&gt;
&lt;p&gt;将第1分区&lt;code&gt;/dev/xvdb1&lt;/code&gt;指定为当前CentOS7.1系统的交换空间，这对Linux系统来说是很重要的一部分。Linux系统可用的虚拟内存的总量等于物理内存（硬件的内存）和交换空间的总和。设置交换空间Swap的好处在于：当系统的物理内存耗尽时，系统调度将那些长时间没有什么操作的程序所占用的物理内存中的一部分空间释放出来，并临时保存到Swap交换空间中。等到那些程序要运行时，再将保存的数据从Swap中恢复到内存中。&lt;/p&gt;
&lt;p&gt;这里将分区1&lt;code&gt;/dev/xvdb1&lt;/code&gt;改成Swap分区类型，最终操作如下图所示，其中&lt;code&gt;82&lt;/code&gt;表示Linux系统Swap交换空间的文件类型。&lt;/p&gt;
&lt;p&gt;&lt;img alt="将分区/dev/xvdb1改成Swap分区类型" src="https://o3cex9zsl.qnssl.com/2015/05/linuxswap.png" title="将分区/dev/xvdb1改成Swap分区类型" /&gt;&lt;/p&gt;
&lt;h5&gt;6 使用mkswap命令设置交换分区&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@typecodes /]# mkswap /dev/xvdb1
mkswap: /dev/xvdb1: warning: wiping old ext4 signature.
Setting up swapspace version 1, size = 2097148 KiB
no label, UUID=4c90adae-7459-4a99-8999-fef130ff3da1

###############激活swap分区###############
[root@typecodes /]# swapon -a /dev/xvdb1

###############查看swap分区###############
[root@typecodes /]# swapon -s       [或 free 或 cat /proc/swaps]
Filename        Type        Size        Used    Priority
/dev/xvdb1      partition   2097148     0       -1
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;7 将分区2挂载到CentOS系统目录&lt;/h5&gt;
&lt;p&gt;根据目标设定，这里将分区2&lt;code&gt;/dev/xvdb2&lt;/code&gt;挂载到我的CentOS7.1系统的&lt;code&gt;mydata&lt;/code&gt;目录下面，用于存储仓库。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;######在系统根目录新建mydata目录，并将分区2挂载到这个目录
[root@typecodes /]# mkdir /mydata
[root@typecodes /]# mount /dev/xvdb2 /mydata
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;8 将分区1和分区2的信息分别追加到系统/etc/fstab文件中&lt;/h5&gt;
&lt;p&gt;Linux系统&lt;code&gt;/etc/fstab&lt;/code&gt;文件中包含了当前主机磁盘分区以及存储设备如何挂载的信息，所以我们需要将分区1、2的信息分别写入到这个文件中。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@typecodes /]# echo &amp;#39;/dev/xvdb1              swap               swap   defaults        0 0&amp;#39; &amp;gt;&amp;gt; /etc/fstab
[root@typecodes /]# echo &amp;#39;/dev/xvdb2              /mydata            ext4   defaults        0 0&amp;#39; &amp;gt;&amp;gt; /etc/fstab
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;9 最后查看效果&lt;/h5&gt;
&lt;p&gt;最后，通过命令&lt;code&gt;df -h&lt;/code&gt;和&lt;code&gt;fdisk -l&lt;/code&gt;查看分区挂载效果如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img alt="开始对磁盘/dev/xvdb进行分区" src="https://o3cex9zsl.qnssl.com/2015/05/fdiskresult.png" title="开始对磁盘/dev/xvdb进行分区" /&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Wed, 27 May 2015 19:31:00 +0800</pubDate><guid>tag:typecodes.com,2015-05-27:linux/centos7fdiskmountswap.html</guid><category>博客成长录</category><category>linux挂载</category><category>分区挂载</category></item><item><title>2015博客升级记(一)：安装CentOS7后需要的操作</title><link>https://typecodes.com/linux/centos7afteroperate.html</link><description>&lt;p&gt;这是&lt;a href="https://typecodes.com/mix/2015updateblog.html" title="查看原文"&gt;《2015年博客升级记》&lt;/a&gt;系列文章的第一篇，主要记录安装完CentOS7后的一些优化操作，包括更换yum源并升级系统到CentOS7.1、使用sshd登录、修改机器名、vi映射为vim、vimrc的配置。&lt;/p&gt;
&lt;p&gt;&lt;img alt="安装CentOS7后需要的操作" src="https://o3cex9zsl.qnssl.com/2015/05/centos7update.png" title="安装CentOS7后需要的操作" /&gt;&lt;/p&gt;


&lt;h5&gt;1 安装EPEL源&lt;/h5&gt;
&lt;p&gt;EPEL即Extra Packages for Enterprise Linux，是基于Fedora的一个项目，为&lt;code&gt;红帽系&lt;/code&gt;的操作系统提供额外的软件包，适用于RHEL、CentOS和Scientific Linux。EPEL为CentOS提供了&lt;code&gt;额外的&lt;/code&gt;10000多个软件包，而且都不会更新或者替换系统本身组件。执行下面这条安装命令后，会在&lt;code&gt;/etc/yum.repos.d&lt;/code&gt;目录下生成一个epel.repo文件。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@typecodes ~]# yum -y install epel-release
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;2 安装yum-axelget插件&lt;/h5&gt;
&lt;p&gt;yum-axelget是EPEL提供的一个yum插件。默认的yum是单线程下载的，使用该插件后用yum安装软件时可以并行下载。yum-axelget插件原理是调用系统中的axel下载软件，然后根据软件包的大小自动设定线程数。在多线程操作时，还能避免因为线程数过多而导致服务器拒绝下载的问题，大大提高了软件的下载速度，减少了下载的等待时间。注意：通过下面这条安装命令，会同时安装axel下载软件。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@typecodes ~]# yum -y install yum-axelget
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;3 更新CentOS源&lt;/h5&gt;
&lt;p&gt;在安装完EPEL源和yum-axelget插件后，我们就可以利用它们升级当前的CentOS7到CentOS7.1了（耗时大概10分钟）。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@typecodes ~]# yum clean all &amp;amp;&amp;amp; yum makecache &amp;amp;&amp;amp; yum -y update
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;然后可以使用下面两条命令查看当前CentOS的内核版本和发行版本信息。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;##########内核版本
root@typecodes ~]# cat /proc/version
Linux version 3.10.0-123.9.3.el7.x86_64 (builder@kbuilder.dev.centos.org) (gcc version 4.8.2 20140120 (Red Hat 4.8.2-16) (GCC) ) #1 SMP Thu Nov 6 15:06:03 UTC 2014
##########发行版本
[root@typecodes ~]# lsb_release -a
LSB Version:    :core-4.1-amd64:core-4.1-noarch
Distributor ID: CentOS
Description:    CentOS Linux release 7.1.1503 (Core) 
Release:        7.1.1503
Codename:       Core
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;4 使用sshd登录&lt;/h5&gt;
&lt;p&gt;在前文&lt;a href="https://typecodes.com/web/aliyuncentoslnmphostssh.html" title="查看原文"&gt;《阿里云CentOS主机 LNMP 环境之主机安全篇一》&lt;/a&gt;中，已经讲述了禁止任何用户使用密码登录，而只允许root用户使用sshd方式登录的方法。其中的公、私密钥是通过SecureCRT生成的，这里我们直接使用Linux命令生成公私钥，方法更为简单快捷。将生成的私钥vfhky20150505保存到本地供SecureCRT等工具使用即可（记得删除服务器上的私钥哦）。&lt;/p&gt;
&lt;h6&gt;4.1 使用Linux命令生成公私钥文件&lt;/h6&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;#######创建公钥存放目录：~/.ssh
[root@typecodes ~]# mkdir .ssh &amp;amp;&amp;amp; cd .ssh
#######生成1024字节的rsa加密的公私钥
[root@typecodes .ssh]# ssh-keygen -b 1024 -t rsa -f vfhky20150505
Generating public/private rsa key pair.
Enter passphrase (empty for no passphrase): 
Enter same passphrase again: 
Passphrases do not match.  Try again.
Enter passphrase (empty for no passphrase): 
Enter same passphrase again: 
Your identification has been saved in vfhky20150505.        [私钥]
Your public key has been saved in vfhky20150505.pub.        [公钥]
The key fingerprint is:
59:54:31:5f:37:d5:9a:c3:32:65:7d:fd:05:f3:20:38 root@typecodes
The key&amp;#39;s randomart image is:
+--[ RSA 1024]----+
|          .o=.++B|
|         .E  +o=O|
|          .. +.o=|
|         o  o = .|
|        S    o . |
|                 |
|                 |
|                 |
|                 |
+-----------------+
[root@typecodes .ssh]# ls
vfhky20150505  vfhky20150505.pub
#######将公钥文件重命名为authorized_keys文件
[root@typecodes .ssh]# mv ~/vfhky20150505.pub authorized_keys
#######将私钥文件下载到Windows主机后，马上删除避免被恶意使用
[root@typecodes .ssh]# rm -rf vfhky20150505
&lt;/pre&gt;&lt;/div&gt;


&lt;h6&gt;4.2 重启sshd服务，使之生效&lt;/h6&gt;
&lt;p&gt;新建一个shell文件&lt;code&gt;sshdconfig.sh&lt;/code&gt;，并执行&lt;code&gt;chmod +x sshdconfig.sh&lt;/code&gt;赋予执行权限，然后复制以下内容到文件中，最后执行命令&lt;code&gt;./sshdconfig.sh&lt;/code&gt;即可使sshd服务生效。&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="c"&gt;# sshd service configure script&lt;/span&gt;
&lt;span class="c"&gt;# @author vfhky 2015.05.05 https://typecodes.com/linux/centos7afteroperate.html&lt;/span&gt;

&lt;span class="c"&gt;# set the sshd login port you want which should be more than 1024 &lt;/span&gt;
sed -i -e &lt;span class="s2"&gt;&amp;quot;s@^#Port 22@Port 8866@g&amp;quot;&lt;/span&gt;  -e &lt;span class="s2"&gt;&amp;quot;s@^#Protocol 2@Protocol 2@g&amp;quot;&lt;/span&gt; /etc/ssh/sshd_config

&lt;span class="c"&gt;# set the secret key bits&lt;/span&gt;
sed -i -e &lt;span class="s2"&gt;&amp;quot;s@^#ServerKeyBits 1024@ServerKeyBits 1024@g&amp;quot;&lt;/span&gt;  -e &lt;span class="s2"&gt;&amp;quot;s@^#RSAAuthentication yes@RSAAuthentication yes@g&amp;quot;&lt;/span&gt; /etc/ssh/sshd_config

&lt;span class="c"&gt;# limit the login-way of user within Authentication-key&lt;/span&gt;
sed -i -e &lt;span class="s2"&gt;&amp;quot;s@^#PubkeyAuthentication yes@PubkeyAuthentication yes@g&amp;quot;&lt;/span&gt;  -e &lt;span class="s2"&gt;&amp;quot;s@^#PermitEmptyPasswords no@PermitEmptyPasswords no@g&amp;quot;&lt;/span&gt; /etc/ssh/sshd_config

sed -i -e &lt;span class="s2"&gt;&amp;quot;s@^GSSAPIAuthentication yes@#GSSAPIAuthentication yes@g&amp;quot;&lt;/span&gt;  -e &lt;span class="s2"&gt;&amp;quot;s@^GSSAPICleanupCredentials yes@#GSSAPICleanupCredentials yes@g&amp;quot;&lt;/span&gt; /etc/ssh/sshd_config

&lt;span class="c"&gt;# forbid login with password&lt;/span&gt;
sed -i -e &lt;span class="s2"&gt;&amp;quot;s@^PasswordAuthentication yes@PasswordAuthentication no@g&amp;quot;&lt;/span&gt;  -e &lt;span class="s2"&gt;&amp;quot;s@^PermitRootLogin yes@PermitRootLogin without-password@g&amp;quot;&lt;/span&gt; /etc/ssh/sshd_config

&lt;span class="c"&gt;# start the sshd service&lt;/span&gt;
systemctl restart sshd.service
service sshd start
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h5&gt;6 修改主机名&lt;/h5&gt;
&lt;p&gt;在前文&lt;a href="https://typecodes.com/linux/centos7chghostname.html" title="查看原文"&gt;《CentOS7系统如何修改主机名》&lt;/a&gt;中已经提到了修改CentOS7系统的主机名方法，这里再重复下。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@typecodes ~]# hostnamectl set-hostname typecodes
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;7 将vi映射为vim命令、高亮grep词语&lt;/h5&gt;
&lt;p&gt;如何在编辑文件时，直接使用vi命令达到vim命令的效果，设置grep词语高亮&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@typecodes ~]# echo -e &amp;quot;\nalias vi=vim\nalias grep=&amp;#39;grep --color&amp;#39;\n&amp;quot; &amp;gt;&amp;gt;~/.bashrc &amp;amp;&amp;amp; source ~/.bashrc
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;8 配置vimrc文件&lt;/h5&gt;
&lt;p&gt;下面这条vim配置命令是我经常使用的，包括行号、自动缩进、高亮、文件编码和粘贴时不变形的快捷键F9等等，直接使用root用户执行即可。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@typecodes ~]# echo -e &amp;quot;\n\nset nobomb
set number
set showmode
set autoindent
set smartindent
set showmatch
set tabstop=4
set softtabstop=4
set shiftwidth=4
set encoding=utf-8
set fileencodings=cp936,gb18030,gbk,gb2312,utf-8,ucs-bom,latin-1
set hlsearch
set noignorecase
set fileformats=unix
set pastetoggle=&amp;lt;F9&amp;gt;\n&amp;quot; &amp;gt;&amp;gt; /etc/vimrc
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Mon, 25 May 2015 16:27:00 +0800</pubDate><guid>tag:typecodes.com,2015-05-25:linux/centos7afteroperate.html</guid><category>博客成长录</category><category>centos7</category></item><item><title>2015年博客升级记</title><link>https://typecodes.com/mix/2015updateblog.html</link><description>&lt;p&gt;这段时间对博客进行了一次升级，主要是从博客程序所在的系统服务器（CentOS）和WEB环境（LNMP）入手。目前自己的Linux服务器已经升级到CentOS7.1，同时LNMP环境也升级到了最新的版本。下面是整个升级过程的详细整理，记录一下方便以后查看。&lt;/p&gt;
&lt;p&gt;&lt;img alt="2015博客升级记" src="https://o3cex9zsl.qnssl.com/2015/05/updatemyblog.png" title="2015博客升级记" /&gt;&lt;/p&gt;


&lt;h5&gt;1、升级系统服务器（CentOS）&lt;/h5&gt;
&lt;p&gt;2012年的时候，博客当时使用的域名是huangkeye.com，托管在一朋友&lt;a href="http://www.baijianyu.com/"&gt;@包子&lt;/a&gt;的国外虚拟空间上。后来在2013年的时候，由于新网域名续费太贵，所以弃用并重新申请了huangkeye.cn的域名，并将博客备案托管到了国内的虚拟主机上。虚拟主机都有两个弊端：首先是一台主机对应一个IP地址，然后两三百个域名都会解析到这台服务器上；其次，虚拟主机的性能、带宽、安全等都会受到这台主机上其它&lt;code&gt;邻居&lt;/code&gt;（即虚拟主机）的影响。于是在2013年7月份，我又重新购买了现在用的这个域名——typecodes.com，并将huangkeye.cn做301跳转到这个域名上来。同时将博客托管在阿里云服务器上。&lt;/p&gt;
&lt;h6&gt;1.1 升级系统内存&lt;/h6&gt;
&lt;p&gt;之前买的阿里云主机是单核、512M内存，现在阿里云深圳地域的主机正在做“限时优惠15%”的活动。看了下配置和相应的价格，于是将内存升级到了1G（单核升级到双核的价格太贵了，所以忽略）。&lt;/p&gt;
&lt;h6&gt;1.2 升级CentOS系统&lt;/h6&gt;
&lt;p&gt;放弃CentOS6.5系统，并将之前使用的阿里云主机CentOS7.0升级为CentOS7.1。&lt;/p&gt;
&lt;p&gt;详细操作见文章：&lt;a href="https://typecodes.com/linux/centos7afteroperate.html" title="查看原文"&gt;《2015博客升级记(一)：安装CentOS7后需要的操作》&lt;/a&gt;。&lt;/p&gt;
&lt;h6&gt;1.3 购买数据盘并划分交换空间&lt;/h6&gt;
&lt;p&gt;这次升级还买了一块24G大小的数据盘，划分了4G大小作为系统的交换空间，剩余的20G作为备份仓库用于数据库、程序等。&lt;/p&gt;
&lt;p&gt;详见文章：&lt;a href="https://typecodes.com/linux/centos7fdiskmountswap.html" title="查看原文"&gt;《2015博客升级记(二)：Linux系统磁盘分区挂载和交换空间》&lt;/a&gt;。&lt;/p&gt;
&lt;h5&gt;2、升级WEB环境（LNMP）&lt;/h5&gt;
&lt;p&gt;在升级完CentOS7.1系统后，就开始升级LNMP环境了。之前博客采用的是&lt;a href="https://typecodes.com/web/aliyuncentos6creatlnmp.html" title="查看原文"&gt;《阿里云CentOS 6.5搭建LNMP环境（非一键脚本）》&lt;/a&gt;文中提到的yum方法安装Nginx、Mysql和PHP。鉴于这种方法安装的版本都比较低，不是自己想要的版本，所以这次升级采用了源码编译的方式重新搭建LNMP环境（Nginx1.9.0、MySql5.7.7rc和PHP7）。&lt;/p&gt;
&lt;p&gt;&lt;img alt="升级LNMP环境" src="https://o3cex9zsl.qnssl.com/2015/05/blogupdatelnmp.png" title="升级LNMP环境" /&gt;&lt;/p&gt;
&lt;h6&gt;2.1 将Nginx1.6升级到最新的Nginx1.9.0版本&lt;/h6&gt;
&lt;p&gt;采用Nginx1.9.0版本，开启&lt;code&gt;stream module&lt;/code&gt;模块用于TCP代理和负载均衡。&lt;/p&gt;
&lt;p&gt;详见文章：&lt;a href="https://typecodes.com/web/centos7compilenginx.html" title="查看原文"&gt;《2015博客升级记(三)：CentOS 7.1编译安装Nginx1.9.0》&lt;/a&gt;。&lt;/p&gt;
&lt;h6&gt;2.2 将MySql5.1升级到最新的MySql5.7.7rc版本&lt;/h6&gt;
&lt;p&gt;升级到MySQL官方最新的milestone版本，提升数据库性能。&lt;/p&gt;
&lt;p&gt;详见文章：&lt;a href="https://typecodes.com/web/centos7compilemysql.html" title="查看原文"&gt;《2015博客升级记(四)：CentOS 7.1编译安装MySQL5.7.7rc》&lt;/a&gt;。&lt;/p&gt;
&lt;h6&gt;2.3 将PHP5.3升级到最新的PHP7版本&lt;/h6&gt;
&lt;p&gt;“亚一程”鸟哥&lt;a href="http://weibo.com/laruence"&gt;@Laruence&lt;/a&gt;的作品，值得推荐使用！&lt;/p&gt;
&lt;p&gt;详见文章：&lt;a href="https://typecodes.com/web/centos7compilephp7.html" title="查看原文"&gt;《2015博客升级记(五)：CentOS 7.1编译安装PHP7》&lt;/a&gt;。&lt;/p&gt;
&lt;h6&gt;2.4 配置SSL和SPDY，全站使用https协议访问&lt;/h6&gt;
&lt;p&gt;博客之前采用http协议访问，中间一段时间&lt;a href="https://typecodes.com/web/lnmppositivessl.html" title="《阿里云CentOS 6.5系统LNMP环境安装SSL证书》"&gt;换成了https&lt;/a&gt;，后来由于博客的图片等资源无法使用https访问，所以又&lt;a href="https://typecodes.com/web/shutdownblogssl.html" title="《决定关闭博客使用SSL证书访问》"&gt;关闭&lt;/a&gt;了。这次升级还是决定将全站采用https协议访问，同时将Nginx和PHP的TCP通信改用Google开发的SPDY技术（虽然Google很可能使用新一代的http2技术取代）。&lt;/p&gt;
&lt;p&gt;详见文章：&lt;a href="https://typecodes.com/web/centos7nginxhttpsspdy.html" title="查看原文"&gt;《2015博客升级记(六)：Nginx配置HTTPS和SPDY实战》&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img alt="配置SSL和SPDY" src="https://o3cex9zsl.qnssl.com/2015/05/blogupdatehttpscfg.png" title="配置SSL和SPDY" /&gt;&lt;/p&gt;
&lt;h6&gt;2.5 MySql的shell定时备份脚本&lt;/h6&gt;
&lt;p&gt;有了20G的数据盘仓库，就可以将博客的MySql数据库定时备份下来。&lt;/p&gt;
&lt;p&gt;详见文章：&lt;a href="https://typecodes.com/linux/centos7mysqlregularbackup.html" title="查看原文"&gt;《2015博客升级记(七)：CentOS7定时备份MySql的shell脚本》&lt;/a&gt;。&lt;/p&gt;
&lt;h6&gt;2.6 博客程序的shell定时备份脚本&lt;/h6&gt;
&lt;p&gt;有了20G的数据盘仓库，就可以将Typecho博客的程序定时备份下来。&lt;/p&gt;
&lt;p&gt;详见文章：&lt;a href="https://typecodes.com/linux/centos7blogregularbackup.html" title="查看原文"&gt;《2015博客升级记(八)：CentOS7定时备份博客程序的shell脚本》&lt;/a&gt;。&lt;/p&gt;
&lt;h5&gt;3、其它&lt;/h5&gt;
&lt;p&gt;在编译安装MySql5.7.7rc之前，还折腾过MySql其它版本，在这里一并记录分享下。&lt;/p&gt;
&lt;p&gt;&lt;img alt="升级MySql5.7" src="https://o3cex9zsl.qnssl.com/2015/05/blogupdatemysql.png" title="升级MySql5.7" /&gt;&lt;/p&gt;
&lt;h6&gt;3.1 CentOS7编译安装MySql5.6.24&lt;/h6&gt;
&lt;p&gt;作为MySql官方Generally Available (GA) Releases版本——MySql5.6.24在tar包源码编译安装后，只要root用户使用命令&lt;code&gt;mysql -uroot -p&lt;/code&gt;登陆，就会出现&lt;code&gt;Segmentation fault&lt;/code&gt;的BUG。&lt;/p&gt;
&lt;p&gt;具体解决方法，详见文章：&lt;a href="https://typecodes.com/web/centos7compilemysql5.html" title="查看原文"&gt;《阿里云CentOS 7.1编译安装MySql5.6.24》&lt;/a&gt;。&lt;/p&gt;
&lt;h6&gt;3.2 CentOS7采用yum方法安装MySql5.6.24&lt;/h6&gt;
&lt;p&gt;到Mysql官方下载社区版Mysql的rpm包，然后使用yum方法安装。&lt;/p&gt;
&lt;p&gt;详细操作，见文章：&lt;a href="https://typecodes.com/web/centos7yuminstallmysql5.html" title="查看原文"&gt;《阿里云CentOS 7.1使用yum安装MySql5.6.24》&lt;/a&gt;。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Sat, 23 May 2015 17:25:00 +0800</pubDate><guid>tag:typecodes.com,2015-05-23:mix/2015updateblog.html</guid><category>博客成长录</category></item><item><title>再议C语言将十六进制字符串转成十进制整数</title><link>https://typecodes.com/cseries/againchexstrtointeger.html</link><description>&lt;p&gt;前文&lt;a href="https://typecodes.com/cseries/clanghexstrtointeger.html" title="查看原文"&gt;《C语言将十六进制字符串转成十进制整数》&lt;/a&gt;讲述了将十六进制字符串中单个字符分别从高位到低位正序和从低位到高位逆序转换成对应的十进制数，今天在看原文的程序发现一个不好的地方：由于使用了&lt;code&gt;char * p = HexStr;&lt;/code&gt;，也就是直接使用指针p将这个十六进制字符串进行了读取和&lt;code&gt;改写&lt;/code&gt;。这样会造成在调用了&lt;code&gt;HexStr2Integer&lt;/code&gt;转换函数后，就不能再次使用这个十六进制字符串了。&lt;/p&gt;
&lt;p&gt;因此，在转换过程中，可以考虑将原来的这个十六进制字符串在内存中复制一份，然后再对这个复制的&lt;code&gt;副本&lt;/code&gt;进行读写，这样就产生副作用了。下面是根据原来的两个程序改进的的代码，主要通过&lt;code&gt;malloc&lt;/code&gt;函数开辟一个内存空间，然后复制十六进制字符串中的数据到这个内存空间中，最后对它进行“读写”。&lt;/p&gt;
&lt;p&gt;在下面这两个改进的代码中，还考虑到了这个十六进制字符串以&lt;code&gt;0x&lt;/code&gt;开头的形式出现，所以增加了这种情况的处理。&lt;/p&gt;


&lt;h5&gt;1 从高位到低位单个字符转换&lt;/h5&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;string.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;malloc.h&amp;gt;&lt;/span&gt;

&lt;span class="cm"&gt;/** &lt;/span&gt;
&lt;span class="cm"&gt; * @FileName  HexStr2Integer.c&lt;/span&gt;
&lt;span class="cm"&gt; * @author    vfhky 2015.05.14 https://typecodes.com/cseries/againchexstrtointeger.html&lt;/span&gt;
&lt;span class="cm"&gt; * @param     [in]HexStr 十六进制字符串（例如&amp;quot;eE2&amp;quot;、&amp;quot;Fa1&amp;quot;、&amp;quot;2011&amp;quot;、&amp;quot;-eE2&amp;quot;、&amp;quot;+eE2&amp;quot;等） &lt;/span&gt;
&lt;span class="cm"&gt; * @return    -1:字符串为空; -2:分配内存出错; -3:字符串中包含非十六进制的字符; 其它:转换后的十进制整数&lt;/span&gt;
&lt;span class="cm"&gt; */&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;HexStr2Integer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;HexStr&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;iResult&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;iCycle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;iHexStrLen&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;iResult&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;iCycle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;iHexStrLen&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="c1"&gt;//正负数的标识，1正 -1负&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;iFlag&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;//获取十六进制字符串的长度&lt;/span&gt;
    &lt;span class="n"&gt;iHexStrLen&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;strlen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;HexStr&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="c1"&gt;//判断字符串是否合法&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;iHexStrLen&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;HexStr&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;+&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;iHexStrLen&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;HexStr&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;-&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;iHexStrLen&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; 
        &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;HexStr&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mh"&gt;0x30&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HexStr&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mh"&gt;0x78&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;iHexStrLen&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;//复制一份十六进制字符串HexStr到内存空间&lt;/span&gt;
    &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;cHexStrPt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;cHexStrPt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;malloc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;iHexStrLen&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;memset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;cHexStrPt&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;iHexStrLen&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;memcpy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;cHexStrPt&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;HexStr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;iHexStrLen&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="c1"&gt;//设置临时指针p&lt;/span&gt;
    &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cHexStrPt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;//长度去掉正负号，并设置字符数的标识&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;+&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;-&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;iHexStrLen&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;-&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;iFlag&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="c1"&gt;//长度去掉&amp;quot;0x&amp;quot;开头的十六进制标识符&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mh"&gt;0x30&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mh"&gt;0x78&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;iHexStrLen&lt;/span&gt; &lt;span class="o"&gt;-=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;//循环将每个十六进制的字符转换成对应的十进制整数，出现非法字符则直接返回&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;iCycle&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;iHexStrLen&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;48&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;57&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;-=&lt;/span&gt; &lt;span class="mi"&gt;48&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;65&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;70&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;-=&lt;/span&gt; &lt;span class="mi"&gt;65&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;97&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;102&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;-=&lt;/span&gt; &lt;span class="mi"&gt;97&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;free&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;cHexStrPt&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;cHexStrPt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="c1"&gt;//iResult = *p + iResult*16; 经过 @大致 的提醒，使用移位运算&lt;/span&gt;
        &lt;span class="n"&gt;iResult&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;iResult&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="n"&gt;iCycle&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;//释放内存&lt;/span&gt;
    &lt;span class="n"&gt;free&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;cHexStrPt&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;cHexStrPt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;//返回转换后的整数&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;iFlag&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;iResult&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;argc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;cHexString&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;memset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;cHexString&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cHexString&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Please input a HexString with length less than 200:&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;scanf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;%s&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cHexString&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;----&amp;gt;[%d]&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;HexStr2Integer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cHexString&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;如下图所示，用GCC编译(&lt;code&gt;gcc HexStr2Integer.c -o HexStr2Integer&lt;/code&gt;)测试程序并执行，结果将三个测试用的十六进制的字符串"eE2"、"Fa1"、"2011"、"-eE2"、"+eE2"分别转换成了对应的十进制整数：3810、4001、8209、-3810、3810。&lt;/p&gt;
&lt;p&gt;&lt;img alt="十六进制字符串转成十进制整数" src="https://o3cex9zsl.qnssl.com/2015/05/clanghexstrtointeger.png" title="十六进制字符串转成十进制整数" /&gt;&lt;/p&gt;
&lt;h5&gt;2 从低位到高位单个字符转换&lt;/h5&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;string.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;malloc.h&amp;gt;&lt;/span&gt;

&lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt; * @FileName  HexStr2Integer2.c&lt;/span&gt;
&lt;span class="cm"&gt; * @author    vfhky 2015.05.14 https://typecodes.com/cseries/againchexstrtointeger.html&lt;/span&gt;
&lt;span class="cm"&gt; * @param     [in]    HexStr 十六进制字符串（例如&amp;quot;eE2&amp;quot;、&amp;quot;Fa1&amp;quot;、&amp;quot;2011&amp;quot;、&amp;quot;-eE2&amp;quot;、&amp;quot;+eE2&amp;quot;等）&lt;/span&gt;
&lt;span class="cm"&gt; * @return    -1:字符串为空; -2:分配内存出错; -3:字符串中包含非十六进制的字符; 其它:转换后的十进制整数&lt;/span&gt;
&lt;span class="cm"&gt; */&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;HexStr2Integer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;HexStr&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;iResult&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;iCycle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;iHexStrLen&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;iResult&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;iCycle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;iHexStrLen&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="c1"&gt;//正负数的标识，1正 -1负&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;iFlag&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;//获取十六进制字符串的长度&lt;/span&gt;
    &lt;span class="n"&gt;iHexStrLen&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;strlen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;HexStr&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="c1"&gt;//判断字符串是否合法&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;iHexStrLen&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;HexStr&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;+&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;iHexStrLen&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;HexStr&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;-&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;iHexStrLen&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; 
        &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;HexStr&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mh"&gt;0x30&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HexStr&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mh"&gt;0x78&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;iHexStrLen&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;//复制一份十六进制字符串HexStr到内存空间&lt;/span&gt;
    &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;cHexStrPt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;cHexStrPt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;malloc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;iHexStrLen&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;memset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;cHexStrPt&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;iHexStrLen&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;memcpy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;cHexStrPt&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;HexStr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;iHexStrLen&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="c1"&gt;//设置临时指针p&lt;/span&gt;
    &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cHexStrPt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;//将指向这块内存空间的末尾&lt;/span&gt;
    &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;iHexStrLen&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;//长度去掉正负号，并设置字符数的标识&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;HexStr&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;+&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;HexStr&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;-&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;iHexStrLen&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;HexStr&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;-&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;iFlag&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="c1"&gt;//长度去掉&amp;quot;0x&amp;quot;开头的十六进制标识符&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;HexStr&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mh"&gt;0x30&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HexStr&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mh"&gt;0x78&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;iHexStrLen&lt;/span&gt; &lt;span class="o"&gt;-=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;//循环将每个十六进制的字符转换成对应的十进制整数&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;iHexStrLen&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;48&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;57&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;-=&lt;/span&gt; &lt;span class="mi"&gt;48&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;65&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;70&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;-=&lt;/span&gt; &lt;span class="mi"&gt;65&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;97&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;102&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;-=&lt;/span&gt; &lt;span class="mi"&gt;97&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;free&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;cHexStrPt&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;cHexStrPt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="n"&gt;iResult&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;iCycle&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;iCycle&lt;/span&gt; &lt;span class="o"&gt;*=&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;iHexStrLen&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;//释放内存&lt;/span&gt;
    &lt;span class="n"&gt;free&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;cHexStrPt&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;cHexStrPt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;//返回转换后的整数&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;iFlag&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;iResult&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;argc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;cHexString&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;memset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;cHexString&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cHexString&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Please input a HexString with length less than 200:&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;scanf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;%s&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cHexString&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;----&amp;gt;[%d]&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;HexStr2Integer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cHexString&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;同样使用GCC编译后，输入十六进制字符串数据进行测试，结果如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img alt="十六进制字符串转成十进制整数" src="https://o3cex9zsl.qnssl.com/2015/05/clanghexstrtointeger2.png" title="十六进制字符串转成十进制整数" /&gt;&lt;/p&gt;
&lt;p&gt;最后，需要注意的是：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;1、使用`malloc`函数开辟内存时，需要判断当前操作系统是否能够分配多余的空间；
2、在`malloc`函数开辟内存使用完后，使用`free`释放掉这块内存的控制权。
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Thu, 14 May 2015 19:55:00 +0800</pubDate><guid>tag:typecodes.com,2015-05-14:cseries/againchexstrtointeger.html</guid><category>十六进制字符串</category><category>十六进制转十进制</category><category>字符串转换</category></item><item><title>CentOS7系统如何修改主机名</title><link>https://typecodes.com/linux/centos7chghostname.html</link><description>&lt;p&gt;前段时间博客一直处于关闭状态，主要是做了一些升级。之前博主用的是CentOS6.5系统，然后升级到了如今的CentOS7版本。另外Nginx、Mysql和PHP都做了相应的版本升级，后续文章会给大家分享下。这篇文章主要讲讲CentOS7系统如何修改主机名。&lt;/p&gt;
&lt;p&gt;&lt;img alt="CentOS7系统如何修改主机名" src="https://o3cex9zsl.qnssl.com/2015/04/centos7chghostname.png" title="CentOS7系统如何修改主机名" /&gt;&lt;/p&gt;


&lt;h5&gt;1 CentOS7以下的版本修改主机名的方法&lt;/h5&gt;
&lt;p&gt;CentOS7以下的系统（包括CentOS6~CentOS6.5），我们通过修改HOSTNAME的方式即可得到想要的效果。如下所示，&lt;code&gt;AY140418191438674cce&lt;/code&gt;是博主的阿里云主机实例名（也即主机名），将其修改成了&lt;code&gt;typecodes&lt;/code&gt;。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@AY140418191438674cce ~]# vim /etc/sysconfig/network
  1 # Created by anaconda
  2 NETWORKING_IPV6=no
  3 PEERNTP=no
  4 GATEWAY=115.29.207.247
  5 HOSTNAME=typecodes
[root@AY140418191438674cce ~]# hostname typecodes 
[root@typecodes ~]#
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;2 CentOS7以及CentOS7.1版本修改主机名的方法&lt;/h5&gt;
&lt;p&gt;目前CentOS的最高版本是CentOS7.1，有较多CentOS6系列能使用的命令都不能使用或者做了有些改动。例如，在CentOS7或者CentOS7.1系统中，直接使用上面的方法修改主机名，最后都是没有效果的。它已经被简化为下面这条命令：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@AY140418191438674cce ~]# hostnamectl set-hostname typecodes
[root@typecodes ~]#
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Mon, 20 Apr 2015 23:00:00 +0800</pubDate><guid>tag:typecodes.com,2015-04-20:linux/centos7chghostname.html</guid><category>centos7</category><category>centos主机名</category></item><item><title>在UEStudio/UltraEdit中打造C/C#/JAVA等语言的编译器</title><link>https://typecodes.com/mix/uestudioidecompiler.html</link><description>&lt;p&gt;像Emacs、Vim、UEStudio/UltraEdit、Sublime text等非IDE类的文本编辑器，都不会自带某种语言的编译功能，这对于不想开IDE的程序狗来说很是蛋疼。尤其是需要切换到不同语言做开发时，非常不方便，总不能这边开一个VS，那边开一个Eclipse吧。于是自己折腾了一番，通过配置可以在UEStudio或者UltraEdit中直接将写好的C/C++/C#/JAVA等代码编译并运行输出结果。&lt;/p&gt;
&lt;p&gt;&lt;img alt="在UEStudio/UltraEdit中打造C/C#/JAVA等语言的编译器" src="https://o3cex9zsl.qnssl.com/2015/02/uestudioidecompiler.png" title="在UEStudio/UltraEdit中打造C/C#/JAVA等语言的编译器" /&gt;&lt;/p&gt;


&lt;h5&gt;1 实现思路&lt;/h5&gt;
&lt;p&gt;要实现直接在UEStudio或者UltraEdit中编译和执行的功能，原理很简单：利用本机已经安装并配置好的环境变量然后在UEStudio或者UltraEdit中简单配置即可。因此，首先需要在自己的Windows环境中安装这种语言所对应的编译器。例如，要编译C或者C++程序，那么可以选择MinGw GCC或者Cygwin GCC编译器，然后利用gcc和g++编译和执行功能；又例如，要编译Java程序，那么的先安装好JDK编译器。注意，安装后一定要设置好环境变量！下图是我的环境变量配置情况（红色划线1,2,3分别是C/C++、Java和C#的环境变量配置）：&lt;/p&gt;
&lt;p&gt;&lt;img alt="对应语言的环境变量的配置" src="https://o3cex9zsl.qnssl.com/2015/02/environmentvariable.png" title="对应语言的环境变量的配置" /&gt;&lt;/p&gt;
&lt;h5&gt;2 具体配置&lt;/h5&gt;
&lt;p&gt;下面以配置C/C++、C#、Java这三种开发语言的编译器为例，大家可以举一反三。&lt;/p&gt;
&lt;h6&gt;2.1 配置C/C++编译器&lt;/h6&gt;
&lt;p&gt;从上图的环境变量配置可知，博主安装的C/C++编译器是MinGw GCC。首先打开UEStudio或者UltraEdit编辑器，在顶部菜单栏依次点击“高级”--“工具栏配置”--“插入”。配置C/C++编译器如下图的界面所示，只要在这里按照规则配置好C/C++的编译命令即可。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;C/C++的编译命令配置
1 菜单项目名称：  Ccomp   [可以任意]
2 命令       ：  g++ -Wall %n%e -o %n   或者   gcc -Wall %n%e -o %n
3 工作目录    ：  %p    [%p是当前C/C++程序文件的路径]
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="配置C/C++编译器" src="https://o3cex9zsl.qnssl.com/2015/02/configccompile.png" title="配置C/C++编译器" /&gt;&lt;/p&gt;
&lt;h6&gt;2.2 配置C#编译器&lt;/h6&gt;
&lt;p&gt;配置C#编译器如下图的界面所示，只要在这里按照规则配置好C#的编译命令即可。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;C#的编译命令配置
1 菜单项目名称：  C#comp   [可以任意]
2 命令       ：  csc/out:%n.exe %n%e    [%n是当前C#程序文件名 %e是文件后缀名]
3 工作目录    ：  %p    [%p是当前C#程序文件的路径]
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="配置C#编译器" src="https://o3cex9zsl.qnssl.com/2015/02/configcsharpcompile.png" title="配置C#编译器" /&gt;&lt;/p&gt;
&lt;h6&gt;2.3 配置C/C++和C#的运行命令&lt;/h6&gt;
&lt;p&gt;由于C/C++和C#经过上面的编译命令后，生成的是可执行的二进制exe文件，所以它们的执行命令都是相同的。因此，可以配置一个公共的“Run”栏目：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;C/C++/C#的运行命令配置
1 菜单项目名称：  Run   [可以任意]
2 命令       ：  %n.exe    [%n是可执行文件名]
3 工作目录    ：  C:\Users\vfhky\Desktop  [可执行文件的路径]
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="配置C/C++和C#的运行命令" src="https://o3cex9zsl.qnssl.com/2015/02/configrun.png" title="配置C/C++和C#的运行命令" /&gt;&lt;/p&gt;
&lt;h6&gt;2.4 配置Java编译器&lt;/h6&gt;
&lt;p&gt;配置Java编译器如下图的界面所示，只要在这里按照规则配置好Java的编译命令即可。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;JAVA的编译命令配置
1 菜单项目名称：  Jcomp   [可以任意]
2 命令       ：  javac %n%e    [%n是当前java程序文件名 %e是文件后缀名]
3 工作目录    ：  %p    [%p是当前JAVA程序文件的路径]
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="配置Java编译器" src="https://o3cex9zsl.qnssl.com/2015/02/configjavacompile.png" title="配置Java编译器" /&gt;&lt;/p&gt;
&lt;h6&gt;2.5 配置Java的执行命令&lt;/h6&gt;
&lt;p&gt;由于Java程序文件经过上面的&lt;code&gt;Jcomp&lt;/code&gt;编译命令后，生成的是&lt;code&gt;.class&lt;/code&gt;文件，不可以直接运行。还需要将这个&lt;code&gt;.class&lt;/code&gt;文件通过命令在JVM虚拟机下运行。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;JAVA的运行命令配置
1 菜单项目名称：  Jrun   [可以任意]
2 命令       ：  java %n    [%n是当前JAVA程序文件名]
3 工作目录    ：  %p    [%p是当前JAVA程序class文件的路径]
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="配置Java的执行命令" src="https://o3cex9zsl.qnssl.com/2015/02/configjavarun.png" title="配置Java的执行命令" /&gt;&lt;/p&gt;
&lt;h5&gt;3 通过程序测试是否生效&lt;/h5&gt;
&lt;p&gt;配置完后，点击“高级”栏目，会显示如下图所示。最后写如下3个C、C#和Java的测试程序，然后分别点击对应的上面配置好的“编译”命令，再点击“执行”命令即可查看输出结果。&lt;/p&gt;
&lt;h6&gt;3.1 测试C/C++程序&lt;/h6&gt;
&lt;p&gt;依次点击“高级”--“Ccomp”--“Run”命令，最后结果如下所示：&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt; * @Functions:  在UEStudio/UltraEdit中编译C/C++程序并输出结果&lt;/span&gt;
&lt;span class="cm"&gt; * @Author   :  vfhky  https://typecodes.com  2015.02.01&lt;/span&gt;
&lt;span class="cm"&gt; * @FileName :  UEStudioCCompiler.c&lt;/span&gt;
&lt;span class="cm"&gt; */&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;argc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Tutorial to useing UEStudio compiling C/C++ program!&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h6&gt;3.2 测试C#程序&lt;/h6&gt;
&lt;p&gt;依次点击“高级”--“C#comp”--“Run”命令，最后结果如下所示：&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt; * @Functions:  在UEStudio/UltraEdit中编译C#程序并输出结果&lt;/span&gt;
&lt;span class="cm"&gt; * @Author   :  vfhky  https://typecodes.com  2015.02.01&lt;/span&gt;
&lt;span class="cm"&gt; * @FileName :  UEStudioCSharpCompiler.cs&lt;/span&gt;
&lt;span class="cm"&gt; */&lt;/span&gt;
&lt;span class="n"&gt;using&lt;/span&gt; &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;using&lt;/span&gt; &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="n"&gt;public&lt;/span&gt; &lt;span class="n"&gt;class&lt;/span&gt; &lt;span class="n"&gt;UEStudioCSharpCompiler&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;       
    &lt;span class="n"&gt;public&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="n"&gt;Main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Tutorial to useing UEStudio compiling C# program!&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h6&gt;3.3 测试Java程序&lt;/h6&gt;
&lt;p&gt;依次点击“高级”--“Jcomp”--“Jrun”命令，最后结果如下所示：&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt; * @Functions:  在UEStudio/UltraEdit中编译JAVA程序并输出结果&lt;/span&gt;
&lt;span class="cm"&gt; * @Author   :  vfhky  https://typecodes.com  2015.02.01&lt;/span&gt;
&lt;span class="cm"&gt; * @FileName :  UEStudioJavaCompiler.java&lt;/span&gt;
&lt;span class="cm"&gt; */&lt;/span&gt;
&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;UEStudioJavaCompiler&lt;/span&gt;
&lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;[])&lt;/span&gt;
    &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Tutorial to useing UEStudio compiling Java program!&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h6&gt;3.4 上面C、C#和Java程序执行结果&lt;/h6&gt;
&lt;p&gt;&lt;img alt="上面C、C#和Java程序执行结果" src="https://o3cex9zsl.qnssl.com/2015/02/runresults.png" title="上面C、C#和Java程序执行结果" /&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Sun, 01 Feb 2015 01:19:00 +0800</pubDate><guid>tag:typecodes.com,2015-02-01:mix/uestudioidecompiler.html</guid><category>UEStudio</category><category>UltraEdit</category></item><item><title>初始化Oracle数据库的bat批处理脚本和shell脚本</title><link>https://typecodes.com/database/initoraclebatandshell.html</link><description>&lt;p&gt;在使用Oracle数据库的时候，经常会用到表结构、存储过程、视图以及表数据等等元素的导入和导出。如果在Windows的cmd窗口中使用sqlplus的命令登录Oracle后，直接使用&lt;code&gt;@ sql导入文件路径&lt;/code&gt;或者&lt;code&gt;start sql导入文件路径&lt;/code&gt;，就有一个缺陷：不会产生跟踪日志文件，这样就没法了解哪些sql语句执行成功了，哪些sql语句执行失败从而导致整个数据库初始化失败了等情况。另外，无论是在Windows系统还是Linux系统，手输命令很麻烦也很容易出错，所以自己整理了一份适用于Windows的bat批处理脚本和一份适用于Linux系统的shell脚本。&lt;/p&gt;
&lt;p&gt;这两份脚本代码比较简单，主要是利用了sqlplus命令将包含多条sql语句用于初始化Oracle数据库的sql文件执行。其中，&lt;code&gt;suntsm/suntsm@127.0.0.1/orcl&lt;/code&gt;是&lt;code&gt;数据库用户名/用户密码@数据库IP：1521/实例名&lt;/code&gt;的组合，当然Oracle默认的端口&lt;code&gt;1521&lt;/code&gt;可以省略。另外，&lt;code&gt;tsmstuct.sql&lt;/code&gt;和&lt;code&gt;tsmdata.sql&lt;/code&gt;文件分别用于初始化表结构等数据和表数据。大家可以根据实际情况修改。&lt;/p&gt;


&lt;h5&gt;1 初始化Oracle数据库的bat批处理脚本&lt;/h5&gt;
&lt;p&gt;直接贴上初始化Oracle数据库的bat批处理脚本的代码，比较简单。使用时，将这个IniOracle.bat文件、tsmstuct.sql和tsmdata.sql文件放在一起后，然后直接点击这个.bat文件即可。&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;:: 初始化Oracle数据库的bat批处理脚本（适用于Windows系统）&lt;/span&gt;
&lt;span class="c"&gt;:: @FileName:  IniOracle.bat&lt;/span&gt;
&lt;span class="c"&gt;:: @Author  :  vfhky  2014.12.20  https://typecodes.com&lt;/span&gt;
&lt;span class="c"&gt;:: @param   :  tsmstuct.sql     包含表结构等数据的文件&lt;/span&gt;
&lt;span class="c"&gt;:: @param   :  tsmdata.sql    包含表数据的文件&lt;/span&gt;

&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="k"&gt;off&lt;/span&gt;
&lt;span class="k"&gt;cls&lt;/span&gt;
title Init Oracle database
&lt;span class="k"&gt;echo&lt;/span&gt; ---------------------------------Start Excute--------------------------------
&lt;span class="k"&gt;echo&lt;/span&gt; ^|                                                                           ^&lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="n"&gt;echo&lt;/span&gt; ^|    ---&lt;span class="m"&gt;-1&lt;/span&gt; Start Excute----                                                 ^&lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="n"&gt;echo&lt;/span&gt; ^&lt;span class="p"&gt;|&lt;/span&gt;      &lt;span class="n"&gt;suntsm/suntsm@127.0.0.1/orcl&lt;/span&gt; @tsmstuct.sql ^&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;:\tsmstuct.log          ^&lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="n"&gt;sqlplus&lt;/span&gt; suntsm&lt;span class="n"&gt;/suntsm@127.0.0.1/orcl&lt;/span&gt; @tsmstuct.sql &lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;:\tsmstuct.log
&lt;span class="k"&gt;echo&lt;/span&gt; ^|    ----End----                                                            ^&lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="n"&gt;echo&lt;/span&gt; ^|                                                                           ^&lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="n"&gt;echo&lt;/span&gt; ^|    ---&lt;span class="m"&gt;-2&lt;/span&gt; Start Excute----                                                 ^&lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="n"&gt;echo&lt;/span&gt; ^&lt;span class="p"&gt;|&lt;/span&gt;      &lt;span class="n"&gt;sqlplus&lt;/span&gt; suntsm&lt;span class="n"&gt;/suntsm@127.0.0.1/orcl&lt;/span&gt; @tsmdata.sql ^&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;:\tsmdata.log    ^&lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="n"&gt;sqlplus&lt;/span&gt; suntsm&lt;span class="n"&gt;/suntsm@127.0.0.1/orcl&lt;/span&gt; @tsmdata.sql &lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;:\tsmdata.log
&lt;span class="k"&gt;echo&lt;/span&gt; ^|    ----End----                                                            ^&lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="n"&gt;echo&lt;/span&gt; ^|                                                                           ^&lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="n"&gt;echo&lt;/span&gt; ---------------------------------End Excute----------------------------------
&lt;span class="k"&gt;pause&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h5&gt;1.1 初始化Oracle数据库的bat批处理脚本的执行过程演示&lt;/h5&gt;
&lt;p&gt;1、点击IniOracle.bat文件后，先执行&lt;code&gt;sqlplus suntsm/suntsm@127.0.0.1/orcl @tsmstuct.sql &amp;gt;d:\tsmstuct.log&lt;/code&gt;命令，生成的追踪日志文件是D盘下的tsmstuct.log。&lt;/p&gt;
&lt;p&gt;&lt;img alt="Windows中开始初始化Oracle表结构等" src="https://o3cex9zsl.qnssl.com/2015/01/initoraclestructbat.png" title="Windows中开始初始化Oracle表结构等" /&gt;&lt;/p&gt;
&lt;p&gt;2、执行成功后继续执行第二条命令：&lt;code&gt;sqlplus suntsm/suntsm@127.0.0.1/orcl @tsmdata.sql &amp;gt;d:\tsmdata.log&lt;/code&gt;命令，生成的追踪日志文件是D盘下的tsmdata.log。&lt;/p&gt;
&lt;p&gt;&lt;img alt="Windows中开始初始化Oracle表数据" src="https://o3cex9zsl.qnssl.com/2015/01/initoracledatabat.png" title="Windows中开始初始化Oracle表数据" /&gt;&lt;/p&gt;
&lt;p&gt;3、初始化Oracl数据库完成，可以通过tsmstuct.log和tsmdata.log文件查看执行情况。&lt;/p&gt;
&lt;p&gt;&lt;img alt="Windows中整个初始化过程完成" src="https://o3cex9zsl.qnssl.com/2015/01/initoraclebatover.png" title="Windows中整个初始化过程完成" /&gt;&lt;/p&gt;
&lt;h5&gt;2 初始化Oracle数据库的Shell批处理脚本&lt;/h5&gt;
&lt;p&gt;和bat批处理脚本一样，这里的shell脚本也是利用了sqlplus命令。唯一不同的是，由于Linux权限的问题，这个IniOracle.sh脚本代码会先判断是否已经存在了&lt;code&gt;tsmstuct.log&lt;/code&gt;和&lt;code&gt;tsmdata.log&lt;/code&gt;文件，并为它们赋予666可读、写的权限。&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/bin/sh&lt;/span&gt;

&lt;span class="c"&gt;# -----------------------------------------&lt;/span&gt;
&lt;span class="c"&gt;# 初始化Oracle数据库的shell批处理脚本（适用于类Unix系统）&lt;/span&gt;
&lt;span class="c"&gt;# @FileName:  IniOracle.sh&lt;/span&gt;
&lt;span class="c"&gt;# @Author  :  vfhky  2014.12.20  https://typecodes.com&lt;/span&gt;
&lt;span class="c"&gt;# @param   :  tsmstuct.sql     包含表结构等数据的文件&lt;/span&gt;
&lt;span class="c"&gt;# @param   :  tsmdata.sql    包含表数据的文件&lt;/span&gt;
&lt;span class="c"&gt;# 执行方法：./IniOracle.sh&lt;/span&gt;
&lt;span class="c"&gt;# -----------------------------------------&lt;/span&gt;

&lt;span class="c"&gt;# 为避免中文乱码，需要设置客户端字符集，使之与服务端字符集保持一致&lt;/span&gt;
&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;NLS_LANG&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;AMERICAN_AMERICA.ZHS32GB18030&amp;#39;&lt;/span&gt;
&lt;span class="c"&gt;# 加载Oracle用户变量&lt;/span&gt;
&lt;span class="nb"&gt;source&lt;/span&gt; ~/.bashrc


&lt;span class="c"&gt;# 判断日志文件是否存在，如不存在则新建一个空的日志文件&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; ! -f &lt;span class="s2"&gt;&amp;quot;tsmstuct.log&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
touch tsmstuct.log
&lt;span class="k"&gt;fi&lt;/span&gt;

&lt;span class="c"&gt;# 判断日志文件是否存在，如不存在则新建一个空的日志文件&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; ! -f &lt;span class="s2"&gt;&amp;quot;tsmdata.log&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
touch tsmdata.log
&lt;span class="k"&gt;fi&lt;/span&gt;

&lt;span class="c"&gt;# 日志文件赋权限&lt;/span&gt;
chmod &lt;span class="m"&gt;666&lt;/span&gt; tsmstuct.log

&lt;span class="c"&gt;# 日志文件赋权限&lt;/span&gt;
chmod &lt;span class="m"&gt;666&lt;/span&gt; tsmdata.log


&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;数据初始化开始...&amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;---------------------------------Start Excute--------------------------------&amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;|                                                                           |&amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;|    ----1 Start Excute----                                                 |&amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;|      sqlplus suntsm/suntsm@suncard @tsmstuct.sql &amp;gt;tsmstuct.log            |&amp;quot;&lt;/span&gt;
sqlplus suntsm/suntsm@orcl @tsmstuct.sql &amp;gt;tsmstuct.log
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;|    ----End----                                                            |&amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;|                                                                           |&amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;|    ----2 Start Excute----                                                 |&amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;|      sqlplus suntsm/suntsm@suncard @tsmdata.sql &amp;gt;tsmdata.log              |&amp;quot;&lt;/span&gt;
sqlplus suntsm/suntsm@orcl @tsmdata.sql &amp;gt;tsmdata.log
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;|    ----End----                                                            |&amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;|                                                                           |&amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;--------------------------------End Excute-----------------------------------&amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;数据初始话结束！详情请查看日志文件：tsmstuct.log和tsmdata.log&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h5&gt;2.1 初始化Oracle数据库的bat批处理脚本的执行过程演示&lt;/h5&gt;
&lt;p&gt;1、用Oracle身份登录Linux，然后通过命令&lt;code&gt;./IniOracle&lt;/code&gt;开始执行脚本中的代码。&lt;/p&gt;
&lt;p&gt;&lt;img alt="Linux中开始初始化Oracle表结构等" src="https://o3cex9zsl.qnssl.com/2015/01/initoraclestructshell.png" title="Linux中开始初始化Oracle表结构等" /&gt;&lt;/p&gt;
&lt;p&gt;2、执行成功后继续执行第二条命令，生成的追踪日志文件是当前目录下的tsmdata.log。&lt;/p&gt;
&lt;p&gt;&lt;img alt="Linux中开始初始化Oracle表数据" src="https://o3cex9zsl.qnssl.com/2015/01/initoracledatashell.png" title="Linux中开始初始化Oracle表数据" /&gt;&lt;/p&gt;
&lt;p&gt;3、初始化Oracl数据库完成，可以通过tsmstuct.log和tsmdata.log文件查看执行情况。&lt;/p&gt;
&lt;p&gt;&lt;img alt="Linux中整个初始化过程完成" src="https://o3cex9zsl.qnssl.com/2015/01/initoracleshellover.png" title="Linux中整个初始化过程完成" /&gt;&lt;/p&gt;
&lt;p&gt;4、查看生成的&lt;code&gt;tsmstuct.log&lt;/code&gt;和&lt;code&gt;tsmdata.log&lt;/code&gt;日志文件。&lt;/p&gt;
&lt;p&gt;&lt;img alt="初始化完成后查看生成的log日志" src="https://o3cex9zsl.qnssl.com/2015/01/initoracleshellresult.png" title="初始化完成后查看生成的log日志" /&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Sat, 10 Jan 2015 14:44:00 +0800</pubDate><guid>tag:typecodes.com,2015-01-10:database/initoraclebatandshell.html</guid><category>oracle</category><category>oracle初始化</category><category>oracle脚本</category></item><item><title>图解如何在PLSQL中调试PACKAGE包中的FUNCTION函数</title><link>https://typecodes.com/database/plsqldebugpackagefunction.html</link><description>&lt;p&gt;Oracle中的packages包是一组包含procedures存储过程、functions函数和游标等元素的组合。相比Sybase数据库的SQL Advantage工具，Oracle数据库的管理工具——PLSQL在调试存储过程还是方便。&lt;/p&gt;
&lt;p&gt;&lt;img alt="PLSQL Developer调试packages包" src="https://o3cex9zsl.qnssl.com/2014/12/plsqldeveloper.png" title="PLSQL Developer调试packages包" /&gt;&lt;/p&gt;


&lt;h5&gt;1 Oracle数据库中的packages包、functions函数和procedures存储过程的关系&lt;/h5&gt;
&lt;p&gt;Oracle数据库中的packages包类似于Java中的packages的概念，在一个packages包中不允许定义多个相同的functions函数或者procedures存储过程，但允许重载functions方法和procedures过程。packages包是可以被引用的，例如在C程序中调用packages包中的functions方法：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sprintf( SqlStr, &amp;quot;select pkg_Name.Func_Name(&amp;#39;%s&amp;#39;, &amp;#39;%s&amp;#39;, &amp;#39;%d&amp;#39;) as RESULT from dual &amp;quot;, sPara1, sPara2, sPara3 );
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;2 在PLSQL中调试packages包中functions函数&lt;/h5&gt;
&lt;p&gt;下面是自己在PL/SQL Developer Version 8.0中调试一个packages包中functions函数的演示过程：&lt;/p&gt;
&lt;h5&gt;2.1 在PLSQL中找到需要调试的packages包&lt;/h5&gt;
&lt;p&gt;如下图所示，展开PLSQL左侧菜单栏的&lt;code&gt;Packages&lt;/code&gt;收缩项，可以看到下面的Packages包名，这里只有一个名为&lt;code&gt;PKG_COMM&lt;/code&gt;的包（包括包头和包体Package bodies）。&lt;/p&gt;
&lt;p&gt;&lt;img alt="在PLSQL中找到需要调试的packages包" src="https://o3cex9zsl.qnssl.com/2014/12/getplsqlpackages.png" title="在PLSQL中找到需要调试的packages包" /&gt;&lt;/p&gt;
&lt;h5&gt;2.2 切换到“调试”模式&lt;/h5&gt;
&lt;p&gt;在Packages包名上，右键选择&lt;code&gt;添加调试信息&lt;/code&gt;，如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img alt="在PLSQL中找到需要调试的packages包" src="https://o3cex9zsl.qnssl.com/2014/12/adddebuginfo.png" title="在PLSQL中找到需要调试的packages包" /&gt;&lt;/p&gt;
&lt;h5&gt;2.3 双击需要调试的Packages包&lt;/h5&gt;
&lt;p&gt;查看packages包中具体的内容：鼠标双击PLSQL左侧的packages包名（PKG_COMM），可以看到它包含的Functions函数&lt;code&gt;Get_counter&lt;/code&gt;和函数的3个形参变量（Pi_cnttype、Pi_Cntobj和Pi_Nowdate）。&lt;/p&gt;
&lt;p&gt;&lt;img alt="双击需要调试的存储过程" src="https://o3cex9zsl.qnssl.com/2014/12/clickplsqlpackages.png" title="双击需要调试的存储过程" /&gt;&lt;/p&gt;
&lt;h5&gt;2.4 添加测试断点（BreakPoint）&lt;/h5&gt;
&lt;p&gt;鼠标双击这个函数名&lt;code&gt;Get_counter&lt;/code&gt;后，会在右侧显示该函数的具体实现代码。接着在需要添加断点的地方，用鼠标点击代码左侧的行号位置就行了。如下图所示，红色的小圆圈就是添加BreakPoint。&lt;/p&gt;
&lt;p&gt;&lt;img alt="双击需要调试的存储过程" src="https://o3cex9zsl.qnssl.com/2014/12/addbreakpoint.png" title="双击需要调试的存储过程" /&gt;&lt;/p&gt;
&lt;h5&gt;2.5 在functions函数上右键选择测试按钮&lt;/h5&gt;
&lt;p&gt;完成上面的工作后，就可以正式进入Debug模式了。在函数名&lt;code&gt;Get_counter&lt;/code&gt;选项上鼠标右键选择&lt;code&gt;测试&lt;/code&gt;菜单，进入Package调试模式。&lt;/p&gt;
&lt;p&gt;&lt;img alt="在functions函数上右键选择测试按钮" src="https://o3cex9zsl.qnssl.com/2014/12/clickpackagesfunctions.png" title="在functions函数上右键选择测试按钮" /&gt;&lt;/p&gt;
&lt;h5&gt;2.6 把实参变量的值传给functions函数的形参变量&lt;/h5&gt;
&lt;p&gt;在2.5步骤中，会打开如下图的初始调试界面。这时，我们看到的是包头的实现代码（&lt;code&gt;每个Package包都是从包头声明开始的&lt;/code&gt;）。可以先给函数&lt;code&gt;Get_counter&lt;/code&gt;的3个形参变量赋值，这点和C/C#/JAVA等高级语言的调试是一样的。&lt;/p&gt;
&lt;p&gt;&lt;img alt="把实参变量的值传给functions函数的形参变量" src="https://o3cex9zsl.qnssl.com/2014/12/passvaluetopara.png" title="把实参变量的值传给functions函数的形参变量" /&gt;&lt;/p&gt;
&lt;h5&gt;2.7 调试工具栏的使用&lt;/h5&gt;
&lt;p&gt;如下图所示，PLSQL的&lt;code&gt;调试工具栏&lt;/code&gt;上的按钮依次是：&lt;code&gt;开始调试器(F9)&lt;/code&gt;，&lt;code&gt;运行（Ctrl+R）&lt;/code&gt;，&lt;code&gt;单步进入（Ctrl+N）&lt;/code&gt;，&lt;code&gt;单步跳过（Ctrl+O）&lt;/code&gt;，&lt;code&gt;单步退出（Ctrl+T）&lt;/code&gt;，&lt;code&gt;运行到下一个异常&lt;/code&gt;。它们的功能和visual studio、eclipse等开发语言的IDE工具类似。在点击测试工具栏上的第一个按钮&lt;code&gt;开始调试器(F9)&lt;/code&gt;，就开始Debug了。&lt;/p&gt;
&lt;p&gt;&lt;img alt="开启Debug调试" src="https://o3cex9zsl.qnssl.com/2014/12/begindebug.png" title="开启Debug调试" /&gt;&lt;/p&gt;
&lt;h5&gt;2.8 添加监控变量&lt;/h5&gt;
&lt;p&gt;在packages包函数的调试过程中，我们可以像visual studio、eclipse等IDE那样，手动添加一些我们需要的监控变量。同时，在调试过程中我们还可以继续用2.4步骤中的方法添加调试断点。&lt;/p&gt;
&lt;p&gt;&lt;img alt="添加监控变量" src="https://o3cex9zsl.qnssl.com/2014/12/addmonitoringvar.png" title="添加监控变量" /&gt;&lt;/p&gt;
&lt;h5&gt;2.9 调试完毕，得到结果&lt;/h5&gt;
&lt;p&gt;多次点击&lt;code&gt;单步进入（Ctrl+N）&lt;/code&gt;，直到该functions函数运行到结束，最后会在界面自动输出该函数的返回值。&lt;/p&gt;
&lt;p&gt;&lt;img alt="调试完毕，得到结果" src="https://o3cex9zsl.qnssl.com/2014/12/debugover.png" title="调试完毕，得到结果" /&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Wed, 31 Dec 2014 21:00:00 +0800</pubDate><guid>tag:typecodes.com,2014-12-31:database/plsqldebugpackagefunction.html</guid><category>plsql</category><category>plsql调试</category><category>plsql packages包</category></item><item><title>C#实现十六进制字符串异或（二）</title><link>https://typecodes.com/csharp/hexstringxor2.html</link><description>&lt;p&gt;&lt;a href="https://typecodes.com/csharp/hexstringxor1.html" title="《C#实现十六进制字符串异或（一）》"&gt;上一篇文章&lt;/a&gt;主要利用C#自带的&lt;code&gt;Convert.ToInt32(HexString, 16)&lt;/code&gt;方法实现了两个十六进制字符串异或的操作。这篇文章主要利用C#字节数组来实现这个功能。&lt;/p&gt;
&lt;h5&gt;1 实现思路&lt;/h5&gt;
&lt;p&gt;现将这两个十六进制字符串都转换成对应的字节数组，然后通过数组中每个元素进行异或得到一个0~15范围内的整数，最后将这个整数转换成对应的十六进制字符即可。这个思路和前文&lt;a href="https://typecodes.com/cseries/hexstrxor.html" title="查看原文"&gt;《C语言实现十六进制字符串异或》&lt;/a&gt;是类似的。&lt;/p&gt;
&lt;p&gt;需要注意的是：在调用&lt;code&gt;HexStrToBytes( String HexStr )&lt;/code&gt;方法将将16进制字符串转换成字节数组时，需要捕获异常，避免这个十六进制字符串包含不是十六进制的字符。&lt;/p&gt;


&lt;h5&gt;2 实现代码&lt;/h5&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt;* C#实现两个十六进制字符串异或实例2&lt;/span&gt;
&lt;span class="cm"&gt;* @FileName:  cHexStrXor.cs&lt;/span&gt;
&lt;span class="cm"&gt;*/&lt;/span&gt;
&lt;span class="n"&gt;using&lt;/span&gt; &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;using&lt;/span&gt; &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="n"&gt;public&lt;/span&gt; &lt;span class="n"&gt;class&lt;/span&gt; &lt;span class="n"&gt;cHexStrXor&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt;     * C#实现两个十六进制字符串异或的方法2（允许这两个字符串长度不等以及包含大小写）&lt;/span&gt;
&lt;span class="cm"&gt;     * @Function:  HexStrXor&lt;/span&gt;
&lt;span class="cm"&gt;     * @Author  :  vfhky  2014.11.20  https://typecodes.com&lt;/span&gt;
&lt;span class="cm"&gt;     * @param   :  HexStr1     第一个十六进制的字符串&lt;/span&gt;
&lt;span class="cm"&gt;     * @param   :  HexStr2     第二个十六进制的字符串&lt;/span&gt;
&lt;span class="cm"&gt;     * @return  :  异或结果（一个十六进制的字符串）&lt;/span&gt;
&lt;span class="cm"&gt;     */&lt;/span&gt;
    &lt;span class="n"&gt;public&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;HexStrXor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;HexStr1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;HexStr2&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;//两个十六进制字符串的长度和长度差的绝对值以及异或结果&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;iHexStr1Len&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;HexStr1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;iHexStr2Len&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;HexStr2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;iGap&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;iHexStrLenLow&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Empty&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="c1"&gt;//获取这两个十六进制字符串长度的差值&lt;/span&gt;
        &lt;span class="n"&gt;iGap&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;iHexStr1Len&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;iHexStr2Len&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="c1"&gt;//获取这两个十六进制字符串长度最小的那一个&lt;/span&gt;
        &lt;span class="n"&gt;iHexStrLenLow&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;iHexStr1Len&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;iHexStr2Len&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="nl"&gt;iHexStr1Len&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;iHexStr2Len&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="c1"&gt;//将这两个字符串转换成字节数组&lt;/span&gt;
        &lt;span class="n"&gt;byte&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;bHexStr1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;HexStrToBytes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;HexStr1&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;byte&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;bHexStr2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;HexStrToBytes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;HexStr2&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt;         * 把这两个十六进制字符串输出到控制台&lt;/span&gt;
&lt;span class="cm"&gt;         * Console.WriteLine(&amp;quot;HexStr1=[{0}]&amp;quot;, HexStr1);&lt;/span&gt;
&lt;span class="cm"&gt;         * Console.WriteLine(&amp;quot;HexStr2=[{0}]&amp;quot;, HexStr2);&lt;/span&gt;
&lt;span class="cm"&gt;         */&lt;/span&gt;

        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="c1"&gt;//先把每个字节异或后得到一个0~15范围内的整数，再转换成十六进制字符&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;iHexStrLenLow&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;bHexStr1&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;^&lt;/span&gt; &lt;span class="n"&gt;bHexStr2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;ToString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;X&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;iGap&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="n"&gt;HexStr1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Substring&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;iGap&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;HexStr2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Substring&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;iGap&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;//将16进制字符串转换成字节数组&lt;/span&gt;
    &lt;span class="n"&gt;public&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="n"&gt;byte&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;HexStrToBytes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;HexStr&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;byte&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;Bytes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;byte&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;HexStr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Length&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
        &lt;span class="n"&gt;try&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;Bytes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="c1"&gt;//将每个16进制字符转换成对应的1个字节&lt;/span&gt;
                &lt;span class="n"&gt;Bytes&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Convert&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ToByte&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;HexStr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Substring&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="n"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Exception&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;throw&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Exception&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Message&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt;             * 把错误信息输出到控制台&lt;/span&gt;
&lt;span class="cm"&gt;             * Console.WriteLine(&amp;quot;Exception {0} thrown.&amp;quot;, e.GetType().FullName);&lt;/span&gt;
&lt;span class="cm"&gt;             * Console.WriteLine(&amp;quot;Message:{0}&amp;quot;, e.Message);&lt;/span&gt;
&lt;span class="cm"&gt;             */&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Bytes&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="n"&gt;public&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="n"&gt;Main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;true&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="c1"&gt;//获取用户输入的两个十六进制字符串&lt;/span&gt;
            &lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Please input the first Sting:&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;HexStr1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ReadLine&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Please input the second Sting:&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;HexStr2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ReadLine&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

            &lt;span class="c1"&gt;//调用异或方法并打印输出结果&lt;/span&gt;
            &lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;The xor result=[{0}]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;HexStrXor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;HexStr1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;HexStr2&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;---------------------------------------&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h5&gt;3 用C#编译命令csc编译执行&lt;/h5&gt;
&lt;p&gt;用C#编译命令csc命令编译&lt;code&gt;csc/out:c:\users\vfhky\desktop\cHexStrXor.exe  c:\users\vfhky\desktop\cHexStrXor.cs&lt;/code&gt;后，用管理员身份打开&lt;code&gt;cHexStrXor.exe&lt;/code&gt;文件。对两个十六进制的字符串按照“长度相等”、“存在小写”和“长度不等”的情况，分别输入如下3组测试数据：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;【C#实现两个十六进制字符串异或测试结果：】
[1] 两个长度相等的字符串异或
Please input the first Sting:
F1A37CD826BE0A38
Please input the second Sting:
4FBC926A2EED4F0A
The xor result=[BE1FEEB208534532]
---------------------------------------

[2] 字符串大小写不影响异或结果
Please input the first Sting:
f1a37cd826be0a38
Please input the second Sting:
4FBC926A2EED4F0A
The xor result=[BE1FEEB208534532]
---------------------------------------

[3] 两个长度不同的字符串异或
Please input the first Sting:
4FBC926A2EED40
Please input the second Sting:
F1A37CD826BE0A38
The xor result=[BE1FEEB208534A38]
---------------------------------------
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;即如图所示：&lt;/p&gt;
&lt;p&gt;&lt;img alt="C#实现十六进制字符串异或" src="https://o3cex9zsl.qnssl.com/2014/12/csharphexstrxor.png" title="C#实现十六进制字符串异或" /&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Wed, 31 Dec 2014 11:45:00 +0800</pubDate><guid>tag:typecodes.com,2014-12-31:csharp/hexstringxor2.html</guid><category>十六进制字符串</category><category>字符串异或</category><category>c#字符串异或</category></item><item><title>C#实现十六进制字符串异或（一）</title><link>https://typecodes.com/csharp/hexstringxor1.html</link><description>&lt;p&gt;前面用C/C++实现了两个十六进制的字符串进行异或（&lt;a href="https://typecodes.com/cseries/hexstrxor.html" title="《C语言实现十六进制字符串异或》"&gt;查看该文&lt;/a&gt;），这篇文章利用C#来实现这个功能。由于C#命名空间里已经封装好了很多类和方法，不用像之前用C实现十六进制字符串异或那样，需要自己写相关的函数，所以能够利用C#很快完成这个字符串异或功能。&lt;/p&gt;
&lt;p&gt;用C#实现两个十六进制的字符串进行异或和用C/C++实现两个十六进制的字符串进行异或的思路是一样的，对比着之前用C实现的那篇文章，可以很好理解。&lt;/p&gt;


&lt;h5&gt;关键点一&lt;/h5&gt;
&lt;p&gt;弄清十六进制字符串异或的思路：之前是自己写了一个C函数&lt;code&gt;int char2int( char input )&lt;/code&gt;，把每个字符串中的单个字符转换成对应的十进制数（范围是0~15），而在C#中直接利用&lt;code&gt;Convert.ToInt32()&lt;/code&gt;方法就可以实现了；同样在异或完后，自己用&lt;code&gt;int int2char( char input )&lt;/code&gt;函数，根据ASCII码表将范围是0~15的&lt;code&gt;字符&lt;/code&gt;转换成对应的占用1字节的字符串中的字符，而在C#中直接利用&lt;code&gt;Int.ToString("X")&lt;/code&gt;方法就可以实现整数转换成对应的十六进制字符了。&lt;/p&gt;
&lt;h5&gt;关键点二&lt;/h5&gt;
&lt;p&gt;由于这两个十六进制的字符串的长度可能不相等，所以在异或的时候，对于不等长的这两个十六进制的字符串需要先把这两个字符串等长的部分异或完毕。然后再把长度较长的那个字符串未异或的部分&lt;code&gt;copy&lt;/code&gt;至异或结果的后面（因为0与任何字符异或得到的结果都是这个字符本身），这个是通过&lt;code&gt;String.Substring(iStartPosition, iLength)&lt;/code&gt;实现的。&lt;/p&gt;
&lt;h5&gt;关键点三&lt;/h5&gt;
&lt;p&gt;由于&lt;code&gt;Convert.ToInt32(单个字符)&lt;/code&gt;方法不会区分这个单个字符是大写还是小写，所以在异或的时候，不用像C那样先把这两个十六进制的字符串全部转成大写。&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt;* C#实现两个十六进制字符串异或实例1&lt;/span&gt;
&lt;span class="cm"&gt;* @FileName:  cHexStrXor.cs&lt;/span&gt;
&lt;span class="cm"&gt;*/&lt;/span&gt;
&lt;span class="n"&gt;using&lt;/span&gt; &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;using&lt;/span&gt; &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="n"&gt;public&lt;/span&gt; &lt;span class="n"&gt;class&lt;/span&gt; &lt;span class="n"&gt;cHexStrXor&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt;     * C#实现两个十六进制字符串异或的方法1（允许这两个字符串长度不等以及包含大小写）&lt;/span&gt;
&lt;span class="cm"&gt;     * @Function:  HexStrXor&lt;/span&gt;
&lt;span class="cm"&gt;     * @Author  :  vfhky  2014.11.20  https://typecodes.com&lt;/span&gt;
&lt;span class="cm"&gt;     * @param   :  HexStr1     第一个十六进制的字符串&lt;/span&gt;
&lt;span class="cm"&gt;     * @param   :  HexStr2     第二个十六进制的字符串&lt;/span&gt;
&lt;span class="cm"&gt;     * @return  :  异或结果（一个十六进制的字符串）&lt;/span&gt;
&lt;span class="cm"&gt;     */&lt;/span&gt;
    &lt;span class="n"&gt;public&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;HexStrXor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;HexStr1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;HexStr2&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;//两个十六进制字符串的长度和长度差的绝对值以及异或结果&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;iHexStr1Len&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;HexStr1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;iHexStr2Len&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;HexStr2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;iGap&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;iHexStrLenLow&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Empty&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="c1"&gt;//获取这两个十六进制字符串长度的差值&lt;/span&gt;
        &lt;span class="n"&gt;iGap&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;iHexStr1Len&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;iHexStr2Len&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="c1"&gt;//获取这两个十六进制字符串长度最小的那一个&lt;/span&gt;
        &lt;span class="n"&gt;iHexStrLenLow&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;iHexStr1Len&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;iHexStr2Len&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="nl"&gt;iHexStr1Len&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;iHexStr2Len&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt;         * 把这两个十六进制字符串输出到控制台&lt;/span&gt;
&lt;span class="cm"&gt;         * Console.WriteLine(&amp;quot;HexStr1=[{0}]&amp;quot;, HexStr1);&lt;/span&gt;
&lt;span class="cm"&gt;         * Console.WriteLine(&amp;quot;HexStr2=[{0}]&amp;quot;, HexStr2);&lt;/span&gt;
&lt;span class="cm"&gt;         */&lt;/span&gt;

        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;try&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="c1"&gt;//先把每个十六进制字符转换成整数(0~15)，异或后再转换成十六进制字符&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;iHexStrLenLow&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Convert&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ToInt32&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HexStr1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Substring&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;^&lt;/span&gt; &lt;span class="n"&gt;Convert&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ToInt32&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HexStr2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Substring&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="n"&gt;ToString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;X&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="n"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Exception&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;throw&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Exception&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Message&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt;             * 把错误信息输出到控制台&lt;/span&gt;
&lt;span class="cm"&gt;             * Console.WriteLine(&amp;quot;Exception {0} thrown.&amp;quot;, e.GetType().FullName);&lt;/span&gt;
&lt;span class="cm"&gt;             * Console.WriteLine(&amp;quot;Message:{0}&amp;quot;, e.Message);&lt;/span&gt;
&lt;span class="cm"&gt;             */&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;iGap&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="n"&gt;HexStr1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Substring&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;iGap&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;HexStr2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Substring&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;iGap&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="n"&gt;public&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="n"&gt;Main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="c1"&gt;//获取用户输入的两个十六进制字符串&lt;/span&gt;
            &lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Please input the first Sting:&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;HexStr1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ReadLine&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Please input the second Sting:&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;HexStr2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ReadLine&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

            &lt;span class="c1"&gt;//调用异或方法并打印输出结果&lt;/span&gt;
            &lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;The xor result=[{0}]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;HexStrXor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;HexStr1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;HexStr2&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;---------------------------------------&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h5&gt;用C#编译命令csc编译执行&lt;/h5&gt;
&lt;p&gt;用C#编译命令csc命令编译&lt;code&gt;csc/out:c:\users\vfhky\desktop\cHexStrXor.exe  c:\users\vfhky\desktop\cHexStrXor.cs&lt;/code&gt;后，用管理员身份打开&lt;code&gt;cHexStrXor.exe&lt;/code&gt;文件。对两个十六进制的字符串按照“长度相等”、“存在小写”和“长度不等”的情况，分别输入如下3组测试数据：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;【C#实现两个十六进制字符串异或测试结果：】
[1] 两个长度相等的字符串异或
Please input the first Sting:
F1A37CD826BE0A38
Please input the second Sting:
4FBC926A2EED4F0A
The xor result=[BE1FEEB208534532]
---------------------------------------

[2] 字符串大小写不影响异或结果
Please input the first Sting:
f1a37cd826be0a38
Please input the second Sting:
4FBC926A2EED4F0A
The xor result=[BE1FEEB208534532]
---------------------------------------

[3] 两个长度不同的字符串异或
Please input the first Sting:
4FBC926A2EED40
Please input the second Sting:
F1A37CD826BE0A38
The xor result=[BE1FEEB208534A38]
---------------------------------------
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;即如图所示：&lt;/p&gt;
&lt;p&gt;&lt;img alt="C#实现十六进制字符串异或" src="https://o3cex9zsl.qnssl.com/2014/12/csharphexstrxor.png" title="C#实现十六进制字符串异或" /&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Mon, 29 Dec 2014 21:52:00 +0800</pubDate><guid>tag:typecodes.com,2014-12-29:csharp/hexstringxor1.html</guid><category>十六进制字符串</category><category>字符串异或</category><category>c#字符串异或</category></item><item><title>指针数组和指针的指针（间级指针）实例分析</title><link>https://typecodes.com/cseries/doubledimensionalarray.html</link><description>&lt;p&gt;网上看到一个关于指向指针的指针变量（间级指针）和指针数组的分析题，感觉比较有代表性，所以摘录了下来自己分析了一番。&lt;/p&gt;


&lt;h5&gt;1 程序代码：&lt;/h5&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt; * 指针数组和指针的指针（间级指针）实例分析&lt;/span&gt;
&lt;span class="cm"&gt; * @Filename: doubledimensionalarray.c&lt;/span&gt;
&lt;span class="cm"&gt; * @Source  : 改动自网络&lt;/span&gt;
&lt;span class="cm"&gt; */&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;argc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;//指针数组&lt;/span&gt;
    &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;welcome&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;to&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;fortemedia&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Nanjing&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;

    &lt;span class="c1"&gt;//sizeof查看指针数组str占用内存大小，输出sizeof(str)=[16]，因为指针数组str里面存放的是4个指针，所以共4*4Bytes=16Bytes&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;sizeof(str)=[%d]&lt;/span&gt;&lt;span class="se"&gt;\n\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="c1"&gt;//打印指针数组的内容&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;str[%d]=[%s]&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="c1"&gt;//初始化指针的指针p，指向&amp;amp;str[1]，即指针元素str[1]所在的地址，而指针元素str[1]又指向字符串&amp;quot;to&amp;quot;，即其值是字符串&amp;quot;to&amp;quot;的地址&lt;/span&gt;
    &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;//sizeof查看指向指针的指针变量p、指针变量*p和**p对应的字符所占用的内存大小&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;sizeof(p)=[%d]&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;        &lt;span class="c1"&gt;//输出:sizeof(p)=[4]      因为p仍然只是一个指针变量(等价于&amp;amp;str[1])&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;sizeof(*p)=[%d]&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;      &lt;span class="c1"&gt;//输出:sizeof(*p)=[4]     因为*p同样只是一个指针变量(等价于str[1])&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;sizeof(**p)=[%d]&lt;/span&gt;&lt;span class="se"&gt;\n\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;  &lt;span class="c1"&gt;//输出:sizeof(**p)=[1]    **p等价于*str[1]，即值是字符&amp;#39;t&amp;#39;&lt;/span&gt;

    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;*p=[%s]&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;              &lt;span class="c1"&gt;//输出:  *p=[to]&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;(**p)+1=[%c]&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;    &lt;span class="c1"&gt;//输出:  (**p)+1=[u]&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;str[1]=[%s]&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;      &lt;span class="c1"&gt;//输出:  str[1]=[to]&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;*str[1]=[%c]&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;    &lt;span class="c1"&gt;//输出:  *str[1]=[t]&lt;/span&gt;

    &lt;span class="c1"&gt;//开始通过指针的指针变量p改变指针数组str中的内容&lt;/span&gt;
    &lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;                    &lt;span class="c1"&gt;//(*p++)即前面的*p=[to]，所以(*p++)+2指向字符串&amp;quot;to&amp;quot;后面的字符串；执行完后，p=&amp;amp;str[2]，即字符串&amp;quot;fortemedia&amp;quot;地址的地址&lt;/span&gt;
    &lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;                        &lt;span class="c1"&gt;//*(p+1)等价于str[3]，也就是此时str[1]指向了字符串&amp;quot;Nanjing&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;                      &lt;span class="c1"&gt;//p[1]相当于*(p+1)，指向字符串&amp;quot;Nanjing&amp;quot;，所以右边相当于str[3]+3，也即str[2]指向了字符串&amp;quot;jing&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;      &lt;span class="c1"&gt;//p[0]相当于*p也即str[2]，所以右边相当于*p+3也即str[2]+3，也就是字符串&amp;quot;jing&amp;quot;中从字符&amp;#39;g&amp;#39;开始的字符串&lt;/span&gt;

    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="c1"&gt;//打印指针数组的内容&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;str[%d]=[%s]&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;&lt;img alt="指针数组和指针的指针（间级指针）实例分析" src="https://o3cex9zsl.qnssl.com/2014/11/doubledimensionalarray.png" title="指针数组和指针的指针（间级指针）实例分析" /&gt;&lt;/p&gt;
&lt;h5&gt;2 分析总结&lt;/h5&gt;
&lt;p&gt;由于在上面的程序中，已经对重要内容都做了分析注释，所以这里再做一些其它的分析总结。&lt;/p&gt;
&lt;h6&gt;2.1 指针数组初始化的过程&lt;/h6&gt;
&lt;p&gt;程序通过&lt;code&gt;char *str[] = { "welcome", "to", "fortemedia", "Nanjing" };&lt;/code&gt;初始化指针数组str时，实质是初始化了4个字符指针指向一个连续的内存块。而这个连续的内存块中，依次存储的内容是&lt;code&gt;"welcome", "to", "fortemedia", "Nanjing"&lt;/code&gt;这4个字符串。&lt;/p&gt;
&lt;p&gt;可以通过CodeBlocks调试，在watch窗口视图和memory窗口视图中查看内存状况。PS：这个连续的内存块（0x405064~0x40507a+8）存放这个4个字符串时，还包括了字符串结束标志符号'\0'，即十六进制的0x00。&lt;/p&gt;
&lt;p&gt;&lt;img alt="CodeBlocks调试watch窗口" src="https://o3cex9zsl.qnssl.com/2014/11/doubledimensionalarraywatchmemory.png" title="CodeBlocks调试watch窗口" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="CodeBlocks调试memory窗口" src="https://o3cex9zsl.qnssl.com/2014/11/doubledimensionalarraymemory.png" title="CodeBlocks调试memory窗口" /&gt;&lt;/p&gt;
&lt;h6&gt;2.2 sizeof指针数组，查看占用内存大小&lt;/h6&gt;
&lt;p&gt;在程序中的第16行，由于指针数组里面实质存放的是指针，所以&lt;code&gt;sizeof(指针数组)&lt;/code&gt;时，跟它的指针个数有关，即一个指针数组占用的内存大小是&lt;code&gt;指针个数*4&lt;/code&gt;字节。这点跟二维数组不同，因为&lt;code&gt;sizeof(二维数组)&lt;/code&gt;所占内存是&lt;code&gt;元素类型*元素个数&lt;/code&gt;字节。&lt;/p&gt;
&lt;p&gt;例如一个字符型二维数组char a[3][4]的大小为：1*12 = 12 字节；而一个整型二维数组int a[3][4]的大小为：4*12=48 字节。&lt;/p&gt;
&lt;h6&gt;2.3 sizeof多重指针，查看占用内存大小&lt;/h6&gt;
&lt;p&gt;在程序中的第28~30行，通过sizeof可以看到不管是指向指针的指针还是纯粹的单级指针，它始终只占用4字节内存大小。&lt;/p&gt;
&lt;h6&gt;2.4 间级指针（多重指针）和指针数组的关系&lt;/h6&gt;
&lt;p&gt;程序中第25行中，通过&lt;code&gt;char **p = str+1;&lt;/code&gt;初始化指针的指针p，即&lt;code&gt;p=&amp;amp;str[1]&lt;/code&gt;，也即指针元素str[1]所在的地址。而指针元素str[1]又指向字符串"to"，即其值是字符串"to"的地址0x40506c。&lt;/p&gt;
&lt;p&gt;理解这点是关键，指针变量p初始化时，是把指针数组str中第二个指针的地址赋给p，而不是直接把字符串"to"的地址赋给p！其实，指针数组也是一个间级指针（二重指针）。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Mon, 17 Nov 2014 22:09:00 +0800</pubDate><guid>tag:typecodes.com,2014-11-17:cseries/doubledimensionalarray.html</guid><category>指针数组</category><category>二维指针</category><category>指针的指针</category></item><item><title>去掉最高分和最低分求平均分数的问题</title><link>https://typecodes.com/cseries/calculateaveragescore.html</link><description>&lt;p&gt;在百度知道看到个问题，原地址不记得了。题目大致是5位选手参加某歌唱比赛，然后6个评委依次为每位选手打分，最终要求出每位选手在去掉一个最高分和最低分后，自己的平均成绩是多少。然后有人给出了一个比较巧妙的答案，遍历二维数组中的每个元素的时候，“找出”最大值和最小值，然后就去掉这个最大值和最小值求出平均值了。&lt;/p&gt;


&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt; * 歌唱比赛评委评分，去掉最高分和最低分后求出平均分&lt;/span&gt;
&lt;span class="cm"&gt; * @Filename:  singerscore2.c&lt;/span&gt;
&lt;span class="cm"&gt; * @Source  :  百度知道&lt;/span&gt;
&lt;span class="cm"&gt; */&lt;/span&gt;

&lt;span class="cp"&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;argc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;//所有选手的评分&lt;/span&gt;
    &lt;span class="kt"&gt;float&lt;/span&gt; &lt;span class="n"&gt;SoreData&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mf"&gt;9.31&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;9.20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;9.00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;9.40&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;9.35&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;9.20&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mf"&gt;9.71&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;9.52&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;9.50&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;9.66&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;9.49&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;9.57&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mf"&gt;8.89&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;8.80&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;9.10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;9.25&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;8.90&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;9.00&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mf"&gt;9.38&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;9.50&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;9.40&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;9.20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;9.90&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;8.90&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mf"&gt;9.30&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;8.84&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;9.40&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;9.45&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;9.10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;8.89&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;

    &lt;span class="kt"&gt;float&lt;/span&gt; &lt;span class="n"&gt;max&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;min&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;average&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SoreData&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SoreData&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;//初始化每个选手的总分数, 最低分, 最高分&lt;/span&gt;
        &lt;span class="n"&gt;sum&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;min&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;max&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;SoreData&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;max&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;max&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;SoreData&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;SoreData&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;min&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;min&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;SoreData&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
            &lt;span class="n"&gt;sum&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;SoreData&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="n"&gt;average&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sum&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;min&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;max&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="c1"&gt;//打印出结果&lt;/span&gt;
        &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;No.[%d] total scores are:[%f], average scores are:[%.2f]&lt;/span&gt;&lt;span class="se"&gt;\n\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sum&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;min&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;max&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sum&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;min&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;max&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;测试结果：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;No.[1] total scores are:[37.060003], average scores are:[9.27]

No.[2] total scores are:[38.249997], average scores are:[9.56]

No.[3] total scores are:[35.890002], average scores are:[8.97]

No.[4] total scores are:[37.480000], average scores are:[9.37]

No.[5] total scores are:[36.689996], average scores are:[9.17]
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="去掉最高分和最低分后求出平均分" src="https://o3cex9zsl.qnssl.com/2014/11/singerscore2.png" title="去掉最高分和最低分后求出平均分" /&gt;&lt;/p&gt;
&lt;p&gt;自己想了想，还可以用冒泡排序法：先将二维数组中的每一行（即“一维数组”）用冒泡排序法排序，然后每一行中的起始元素和最后一个元素都不用管（分别是最小值、最大值），直接求平均值就行了。实现代码如下：&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt; * 歌唱比赛评委评分，去掉最高分和最低分后求出平均分&lt;/span&gt;
&lt;span class="cm"&gt; * @Filename:  singerscore.c&lt;/span&gt;
&lt;span class="cm"&gt; * @author  :  vfhky 2014.11.10 https://typecodes.com&lt;/span&gt;
&lt;span class="cm"&gt; */&lt;/span&gt;

&lt;span class="cp"&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;

&lt;span class="c1"&gt;//一维字符数组的冒泡排序&lt;/span&gt;
&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;BubbleSort&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;float&lt;/span&gt; &lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;[],&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
    &lt;span class="kt"&gt;float&lt;/span&gt; &lt;span class="n"&gt;temp&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;flag&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;flag&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;temp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
                &lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
                &lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;temp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="n"&gt;flag&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;flag&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;argc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;//所有选手的评分&lt;/span&gt;
    &lt;span class="kt"&gt;float&lt;/span&gt; &lt;span class="n"&gt;doubleSoreData&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mf"&gt;9.31&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;9.20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;9.00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;9.40&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;9.35&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;9.20&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mf"&gt;9.71&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;9.52&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;9.50&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;9.66&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;9.49&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;9.57&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mf"&gt;8.89&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;8.80&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;9.10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;9.25&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;8.90&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;9.00&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mf"&gt;9.38&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;9.50&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;9.40&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;9.20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;9.90&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;8.90&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mf"&gt;9.30&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;8.84&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;9.40&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;9.45&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;9.10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;8.89&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;

    &lt;span class="c1"&gt;//二维数组冒泡排序&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;BubbleSort&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;doubleSoreData&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;//初始化一个数组指针&lt;/span&gt;
    &lt;span class="kt"&gt;float&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;doubleSoreData&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;//声明每个选手的平均分&lt;/span&gt;
    &lt;span class="kt"&gt;float&lt;/span&gt; &lt;span class="n"&gt;averagescore&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;//循环读取数据&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;//初始化每一个选手的平均分&lt;/span&gt;
        &lt;span class="n"&gt;averagescore&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="c1"&gt;//除去最高/低位的数据&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt;             * 利用数组读出数据&lt;/span&gt;
&lt;span class="cm"&gt;             * printf( &amp;quot;doubleSoreData[%d][%d]=[%f]\n&amp;quot;, i, j, doubleSoreData[i][j] );&lt;/span&gt;
&lt;span class="cm"&gt;             * averagescore += doubleSoreData[i][j];&lt;/span&gt;
&lt;span class="cm"&gt;             */&lt;/span&gt;

            &lt;span class="c1"&gt;//利用数组指针读出数据&lt;/span&gt;
            &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;*((p+%d)[%d])=[%.2f]  &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;))[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;averagescore&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;))[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="c1"&gt;//打印出结果&lt;/span&gt;
        &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;No.[%d] total scores are:[%f], average scores are:[%.2f]&lt;/span&gt;&lt;span class="se"&gt;\n\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;averagescore&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;averagescore&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;测试结果：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;*((p+0)[1])=[9.20]  *((p+0)[2])=[9.20]  *((p+0)[3])=[9.31]  *((p+0)[4])=[9.35]  
No.[1] total scores are:[37.059998], average scores are:[9.26]

*((p+1)[1])=[9.50]  *((p+1)[2])=[9.52]  *((p+1)[3])=[9.57]  *((p+1)[4])=[9.66]  
No.[2] total scores are:[38.250000], average scores are:[9.56]

*((p+2)[1])=[8.89]  *((p+2)[2])=[8.90]  *((p+2)[3])=[9.00]  *((p+2)[4])=[9.10]  
No.[3] total scores are:[35.889999], average scores are:[8.97]

*((p+3)[1])=[9.20]  *((p+3)[2])=[9.38]  *((p+3)[3])=[9.40]  *((p+3)[4])=[9.50]  
No.[4] total scores are:[37.480000], average scores are:[9.37]

*((p+4)[1])=[8.89]  *((p+4)[2])=[9.10]  *((p+4)[3])=[9.30]  *((p+4)[4])=[9.40]  
No.[5] total scores are:[36.690002], average scores are:[9.17]
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="二维数组冒泡排序" src="https://o3cex9zsl.qnssl.com/2014/11/singerscore.png" title="二维数组冒泡排序" /&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Sun, 16 Nov 2014 14:50:00 +0800</pubDate><guid>tag:typecodes.com,2014-11-16:cseries/calculateaveragescore.html</guid><category>二维数组</category><category>冒泡排序</category><category>数组指针</category></item><item><title>MFC回车键不关闭对话框以及变成TAB键效果</title><link>https://typecodes.com/cseries/mfcreturnkeyshutdialog.html</link><description>&lt;p&gt;之前在弄完这个十六进制字符串异或的工具后，发现直接按回车键就直接关闭了工具。网上搜了下解决方案，然后自己的总结如下4种方法：&lt;/p&gt;
&lt;h5&gt;1 设置一个默认按钮（不推荐）&lt;/h5&gt;
&lt;p&gt;如&lt;a href="https://typecodes.com/cseries/studymfchexstrxortool1.html" title="《图文实例说MFC制作工具的心得（一）》"&gt;前文&lt;/a&gt;小节5中所述，只要将“进行异或”这个按钮属性中的Default Button设置为"TRUE"就行了。但是这样就直接触发这个按钮对应的事件OnBnClickedButton1，而不是对输入的数据进行合法性检查。&lt;/p&gt;
&lt;h5&gt;2 比较推荐的是重载OnOK()函数或者PreTranslateMessage()函数&lt;/h5&gt;
&lt;p&gt;首先我们需要找到这两个函数的位置，方法有两种，效果都是殊途同归：&lt;/p&gt;


&lt;p&gt;在类视图中点击对话框类（CHexStrXorDlg），然后在“属性”中点击菜单栏上的“重写”按钮，可以选择需要重写的函数。&lt;/p&gt;
&lt;p&gt;&lt;img alt="mfc类视图中重载函数" src="https://o3cex9zsl.qnssl.com/2014/11/mfcclassviewoverload.png" title="mfc类视图中重载函数" /&gt;&lt;/p&gt;
&lt;p&gt;或者直接点击“项目”——“类向导”，“类名”选择对话框类（CHexStrXorDlg），点击“虚函数”就可以看到可以被重载的函数了，右侧是已经被重载了的函数。&lt;/p&gt;
&lt;p&gt;&lt;img alt="mfc类向导中重载函数" src="https://o3cex9zsl.qnssl.com/2014/11/mfcprjviewoverload.png" title="mfc类向导中重载函数" /&gt;&lt;/p&gt;
&lt;h5&gt;3 取消回车的效果&lt;/h5&gt;
&lt;p&gt;通过重载OnOK()函数，然后函数体内不做任何处理，这样就可以直接屏蔽回车键的效果了。&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="n"&gt;CHexStrXorDlg&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;OnOK&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;//CDialog::OnOK();&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h5&gt;4 获取焦点位置，根据是否在Button按钮资源上做相应处理&lt;/h5&gt;
&lt;p&gt;通过重载PreTranslateMessage()消息函数，可以改变MFC的消息控制流程，能自主处理键盘和鼠标消息。于是，先捕捉到回车键所在的控件焦点，然后判断是否是Button按钮。如果焦点在Button按钮上，则给资源ID为i的Button按钮发送点击消息，否则设置下一个控件得到输入焦点。&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;BOOL&lt;/span&gt; &lt;span class="n"&gt;CHexStrXorDlg&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;PreTranslateMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;MSG&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;pMsg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// TODO:  在此添加专用代码和/或调用基类&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;pMsg&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;WM_KEYDOWN&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;pMsg&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;wParam&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;VK_RETURN&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;CWnd&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;wind&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;GetFocus&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;wind&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="c1"&gt;//判断焦点是否在Button按钮上&lt;/span&gt;
            &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
            &lt;span class="n"&gt;CString&lt;/span&gt; &lt;span class="n"&gt;ClassName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;_T&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Button&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;GetClassName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;wind&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;m_hWnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ClassName&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;UINT&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;wind&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;GetDlgCtrlID&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
                &lt;span class="n"&gt;SendMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;WM_COMMAND&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LPARAM&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;wind&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;m_hWnd&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;TRUE&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="c1"&gt;//获取当前焦点所在控件的下一个控件的句柄&lt;/span&gt;
        &lt;span class="n"&gt;wind&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;GetNextDlgTabItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;GetFocus&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;wind&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="c1"&gt;//设置下一个控件得到输入焦点&lt;/span&gt;
            &lt;span class="n"&gt;wind&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;SetFocus&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;TRUE&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;CDialogEx&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;PreTranslateMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pMsg&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h5&gt;5 直接把回车键的效果替换成TAB键的效果&lt;/h5&gt;
&lt;p&gt;同小节4中一样，先要获取焦点位置信息，但是直接将回车的效果替换成TAB键的效果。&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;BOOL&lt;/span&gt; &lt;span class="n"&gt;CHexStrXorDlg&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;PreTranslateMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;MSG&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;pMsg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;pMsg&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;WM_KEYDOWN&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;pMsg&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;wParam&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;VK_RETURN&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;//把回车效果替换成TAB键的切换效果&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;GetFocus&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;GetDlgCtrlID&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="n"&gt;IDOK&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;pMsg&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;wParam&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;VK_TAB&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;CDialogEx&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;PreTranslateMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pMsg&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Sun, 16 Nov 2014 00:05:00 +0800</pubDate><guid>tag:typecodes.com,2014-11-16:cseries/mfcreturnkeyshutdialog.html</guid><category>mfc</category></item><item><title>图文实例说MFC制作工具的心得（二）</title><link>https://typecodes.com/cseries/studymfchexstrxortool2.html</link><description>&lt;p&gt;继前文&lt;a href="https://typecodes.com/cseries/studymfchexstrxortool1.html" title="点击查看"&gt;《图文实例说MFC制作工具的心得（一）》&lt;/a&gt;，这篇文章继续写几点心得。&lt;/p&gt;
&lt;h5&gt;1 如何将CString转换成char *指针&lt;/h5&gt;
&lt;p&gt;由于异或的时候可以直接调用&lt;a href="https://typecodes.com/cseries/hexstrxor.html" title="《十六进制字符串异或》"&gt;《十六进制字符串异或》&lt;/a&gt;一文中的十六进制字符串异或方法&lt;code&gt;void hexstrxor(char * HexStr1, char * HexStr2, char * HexStr)&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;但是&lt;code&gt;Edit Control&lt;/code&gt;控件添加变量&lt;code&gt;HexStr1&lt;/code&gt;、&lt;code&gt;HexStr2&lt;/code&gt;都是CString类型，所以需要转换。由于项目的字符集是&lt;code&gt;使用多字节字符集&lt;/code&gt;，所以可以通过&lt;code&gt;(LPSTR)(LPCTSTR)CString&lt;/code&gt;方法强制将CString数据转换成char *指针类型，这样就可以直接调用了&lt;code&gt;hexstrxor((LPSTR)(LPCTSTR)HexStr1, (LPSTR)(LPCTSTR)HexStr2, HexStrXorResult);&lt;/code&gt;。&lt;/p&gt;


&lt;p&gt;下面是当用户点击“进行异或”按钮这个控件所触发事件的处理代码，也就是异或的主要过程。异或后会同时更新所有&lt;code&gt;Edit Control&lt;/code&gt;控件对应的字节数，同时释放保存异或结果时所开辟的内存：&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="n"&gt;CHexStrXorDlg&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;OnBnClickedButton1&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// TODO:  在此添加控件通知处理程序代码&lt;/span&gt;
    &lt;span class="n"&gt;UpdateData&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TRUE&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="c1"&gt;//定义长度&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;iHexStr1Len&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;iHexStr2Len&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;iHexStrLenHigh&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;//大写转换并求长度&lt;/span&gt;
    &lt;span class="n"&gt;HexStr1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MakeUpper&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="n"&gt;HexStr2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MakeUpper&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="n"&gt;iHexStr1Len&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;HexStr1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GetLength&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="n"&gt;iHexStr2Len&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;HexStr2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GetLength&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="c1"&gt;//获取最大长度&lt;/span&gt;
    &lt;span class="n"&gt;iHexStrLenHigh&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;iHexStr1Len&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;iHexStr2Len&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="nl"&gt;iHexStr1Len&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;iHexStr2Len&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;//为异或结果开辟内存&lt;/span&gt;
    &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;HexStrXorResult&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;malloc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;iHexStrLenHigh&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="c1"&gt;//调用异或方法&lt;/span&gt;
    &lt;span class="n"&gt;hexstrxor&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;LPSTR&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="n"&gt;LPCTSTR&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;HexStr1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LPSTR&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="n"&gt;LPCTSTR&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;HexStr2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;HexStrXorResult&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="c1"&gt;//显示异或结果&lt;/span&gt;
    &lt;span class="n"&gt;HexStr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;HexStrXorResult&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;//更新静态控件1的长度&lt;/span&gt;
    &lt;span class="n"&gt;CString&lt;/span&gt; &lt;span class="n"&gt;UpdateHexStrLen&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;UpdateHexStrLen&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%s%d%s&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;字节=[&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;HexStr1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GetLength&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="c1"&gt;//SetDlgItemText(IDC_STATIC_STR1, UpdateHexStr1Len );&lt;/span&gt;
    &lt;span class="n"&gt;GetDlgItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;IDC_STATIC_STR1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;SetWindowTextA&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;UpdateHexStrLen&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="c1"&gt;//更新静态控件2的长度&lt;/span&gt;
    &lt;span class="n"&gt;UpdateHexStrLen&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%s%d%s&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;字节=[&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;HexStr2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GetLength&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="c1"&gt;//SetDlgItemText(IDC_STATIC_STR2, UpdateHexStr2Len );&lt;/span&gt;
    &lt;span class="n"&gt;GetDlgItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;IDC_STATIC_STR2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;SetWindowTextA&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;UpdateHexStrLen&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="c1"&gt;//更新静态控件3的长度&lt;/span&gt;
    &lt;span class="n"&gt;UpdateHexStrLen&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%s%d%s&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;字节=[&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;iHexStrLenHigh&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="c1"&gt;//SetDlgItemText(IDC_STATIC_STR, UpdateHexStrLen );&lt;/span&gt;
    &lt;span class="n"&gt;GetDlgItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;IDC_STATIC_STR3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;SetWindowTextA&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;UpdateHexStrLen&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="c1"&gt;//更新所有控件数据&lt;/span&gt;
    &lt;span class="n"&gt;UpdateData&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;FALSE&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="c1"&gt;//释放内存&lt;/span&gt;
    &lt;span class="n"&gt;free&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HexStrXorResult&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;HexStrXorResult&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h5&gt;2 使用“Release”生成可执行文件后，无法在其它电脑上运行&lt;/h5&gt;
&lt;p&gt;在vs2013中调试完程序后，依次点击“配置管理器”--“Release”，然后重新生成整个项目。接着将Release文件夹下面的HexStrXor.exe文件放到其它电脑上，结果一运行时出现“无法启动该程序，因为计算机丢失mfc120.dll。”的情况。&lt;/p&gt;
&lt;p&gt;&lt;img alt="计算机丢失mfc120.dll" src="https://o3cex9zsl.qnssl.com/2014/11/mfclostmfc120dll.png" title="计算机丢失mfc120.dll" /&gt;&lt;/p&gt;
&lt;p&gt;这是由于该电脑没有VC运行库，所以在项目属性中需要设置&lt;code&gt;MFC的使用&lt;/code&gt;为&lt;code&gt;在静态库中使用MFC&lt;/code&gt;，这样就能在其它win系统上运行了。&lt;/p&gt;
&lt;p&gt;&lt;img alt="在静态库中使用MFC" src="https://o3cex9zsl.qnssl.com/2014/11/understaticusemfc.png" title="在静态库中使用MFC" /&gt;&lt;/p&gt;
&lt;h5&gt;3 鼠标显示生成的可执行exe文件的相关信息&lt;/h5&gt;
&lt;p&gt;把使用“Release”生成的可执行文件HexStrXor.exe放到桌面上，然后鼠标移至该文件上，会发现如下图所示的信息说明：&lt;/p&gt;
&lt;p&gt;&lt;img alt="mfc鼠标显示可执行exe文件的相关信息" src="https://o3cex9zsl.qnssl.com/2014/11/mfchexstrxorinfo.png" title="mfc鼠标显示可执行exe文件的相关信息" /&gt;&lt;/p&gt;
&lt;p&gt;这个主要是通过“资源视图”——“Version”——“VS-VERSION-INFO”实现的：&lt;/p&gt;
&lt;p&gt;&lt;img alt="mfc设置鼠标显示可执行exe文件的相关信息" src="https://o3cex9zsl.qnssl.com/2014/11/mfcsethexstrxorinfo.png" title="mfc设置鼠标显示可执行exe文件的相关信息" /&gt;&lt;/p&gt;
&lt;h5&gt;4 修改可执行文件默认的MFC图标&lt;/h5&gt;
&lt;p&gt;在当前VS2013的解决方案下的工程目录下面，可以看到一个&lt;code&gt;res&lt;/code&gt;文件夹，里面就有一个MFC默认的ico图标。把自己制作的喜欢的ico图标替换，然后重新生成解决方案，这样就将生成的可执行文件HexStrXor.exe图标改成自己的了。我用的是自己博客的ico图标，绿色的&lt;code&gt;TC&lt;/code&gt;两个字母，TypeCodes的含义，哈哈！&lt;/p&gt;
&lt;h5&gt;5 结语&lt;/h5&gt;
&lt;p&gt;还是那句话：整个项目已经托管在&lt;a href="https://github.com/vfhky/HexStrXor" title="MFC制作十六进制字符串异或工具"&gt;Github&lt;/a&gt;和&lt;a href="https://coding.net/u/vfhky/p/HexStrXor/" title="MFC制作十六进制字符串异或工具"&gt;Coding&lt;/a&gt;上了，也可直接&lt;a href="https://o3cex9zsl.qnssl.com/cseries/HexStrXor.exe" title="工具下载"&gt;点击这里&lt;/a&gt;下载这个工具，最后欢迎大家拍砖！&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Fri, 14 Nov 2014 23:58:00 +0800</pubDate><guid>tag:typecodes.com,2014-11-14:cseries/studymfchexstrxortool2.html</guid><category>十六进制字符串</category><category>字符串异或</category><category>mfc</category></item><item><title>图文实例说MFC制作工具的心得（一）</title><link>https://typecodes.com/cseries/studymfchexstrxortool1.html</link><description>&lt;p&gt;&lt;a href="https://typecodes.com/cseries/mfchexstrxortool.html" title="《MFC写了一个十六进制异或的工具》"&gt;上篇文章&lt;/a&gt;说了用MFC制作一个十六进制字符串异或的工具，这篇文章就以这个工具为演示总结一下自己的学习心得。&lt;/p&gt;
&lt;p&gt;&lt;img alt="MFC十六进制异或工具" src="https://o3cex9zsl.qnssl.com/2014/11/mfchexstrxortool.png" title="MFC十六进制异或工具" /&gt;&lt;/p&gt;


&lt;h5&gt;1 控制用户输入数据的长度&lt;/h5&gt;
&lt;p&gt;在给用于用户输入十六进制字符串数据的&lt;code&gt;Edit Control&lt;/code&gt;控件添加变量时，可以在“最大字符数”这个选项中填入一个整数，例如这个工具最大字节就限制在500内。这样就会生成如下代码，作用是在数据交互时自动截取前面500个字符。&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="n"&gt;CHexStrXorDlg&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;DoDataExchange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;CDataExchange&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;pDX&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;CDialogEx&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;DoDataExchange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pDX&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="c1"&gt;//用于控件1和第一个十六进制字符串变量交互&lt;/span&gt;
    &lt;span class="n"&gt;DDX_Text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pDX&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;IDC_EDIT1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;HexStr1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;DDV_MaxChars&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pDX&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;HexStr1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="c1"&gt;//用于控件2和第二个十六进制字符串变量交互&lt;/span&gt;
    &lt;span class="n"&gt;DDX_Text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pDX&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;IDC_EDIT2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;HexStr2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;DDV_MaxChars&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pDX&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;HexStr2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="c1"&gt;//用于控件3和异或结果变量交互&lt;/span&gt;
    &lt;span class="n"&gt;DDX_Text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pDX&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;IDC_EDIT3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;HexStr&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;DDV_MaxChars&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pDX&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;HexStr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;但是，这样只是截取用户输入的字符串前面的500字节，而不是提示用户输入的数据不合法。&lt;/p&gt;
&lt;p&gt;所以，改进的方法就是为控件1和控件2添加对应的&lt;code&gt;EN_KILLFOCUS&lt;/code&gt;控件事件（OnEnKillfocusEdit1、OnEnKillfocusEdit2）。然后自己写了一个验证方法&lt;code&gt;CheckInputHex&lt;/code&gt;，用于检查长度和字符串中是否都是十六进制字符，完整的实现代码如下：&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;//检查输入的十六进制字符串是否合法&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;CheckInputHex&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;CEdit&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;pEdit&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;CString&lt;/span&gt; &lt;span class="n"&gt;HexInput&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;//获取字符串的长度&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;HexInputLen&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;HexInputLen&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;HexInput&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GetLength&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="c1"&gt;//检查长度是否合适&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HexInputLen&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;//弹出一个错误框，提示用户输入的数据不合法&lt;/span&gt;
        &lt;span class="n"&gt;AfxMessageBox&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_T&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;长度不能大于500!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
        &lt;span class="c1"&gt;//重新将焦点聚集在这个数据不合法的控件框内&lt;/span&gt;
        &lt;span class="n"&gt;pEdit&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;SetFocus&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="n"&gt;pEdit&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;SetSel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;HexInputLen&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;//检查是否是十六进制字符&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;HexInputLen&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HexInput&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mh"&gt;0x30&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HexInput&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mh"&gt;0x39&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;HexInput&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mh"&gt;0x41&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HexInput&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mh"&gt;0x46&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;HexInput&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mh"&gt;0x61&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;HexInput&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mh"&gt;0x66&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;AfxMessageBox&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_T&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;请输入正确的十六进制字符串!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
            &lt;span class="n"&gt;pEdit&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;SetFocus&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="n"&gt;pEdit&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;SetSel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;HexInputLen&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="n"&gt;CHexStrXorDlg&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;OnEnKillfocusEdit1&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// TODO:  在此添加控件通知处理程序代码&lt;/span&gt;
    &lt;span class="n"&gt;CEdit&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;pEdit&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;//获得第一个字符串控件 &lt;/span&gt;
    &lt;span class="n"&gt;pEdit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;CEdit&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;GetDlgItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;IDC_EDIT1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="c1"&gt;//获取Edit Control内的内容，即第一个十六进制字符串  &lt;/span&gt;
    &lt;span class="n"&gt;pEdit&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;GetWindowText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HexStr1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="c1"&gt;//检查合法性&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;iCheckData&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;iCheckData&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;CheckInputHex&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pEdit&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;HexStr1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="c1"&gt;//出错则直接返回&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;iCheckData&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h5&gt;2 检测用户输入数据是否合法&lt;/h5&gt;
&lt;p&gt;因为用户输入的数据并不一定是你设想的，可能还是&lt;code&gt;有害&lt;/code&gt;的，所以在使用前必须予以检查。由于我的这个工具要求用户输入的必须是十六进制字符串，所以必须要检查每个字符是否合法。检查方法已经包含在上面&lt;code&gt;CheckInputHex&lt;/code&gt;方法了，如果用户输入了非法字符，例如'G'、'h'等非十六进制字符，那么就会弹出错误框如下&lt;/p&gt;
&lt;p&gt;&lt;img alt="检测用户输入数据是否合法的十六进制字符串" src="https://o3cex9zsl.qnssl.com/2014/11/mfchexstrxorerrornotify.png" title="检测用户输入数据是否合法的十六进制字符串" /&gt;&lt;/p&gt;
&lt;h5&gt;3 统计用户输入字符串的长度&lt;/h5&gt;
&lt;p&gt;如果用户输入了一个合法的字符串，然后离开了输入框，这时应该自动在输入框的右侧统计出用户输入的字符串的长度。方法依然是在控件对应的&lt;code&gt;EN_KILLFOCUS&lt;/code&gt;事件处理方法&lt;code&gt;OnEnKillfocusEdit1&lt;/code&gt;中实现：&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="n"&gt;CHexStrXorDlg&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;OnEnKillfocusEdit1&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="o"&gt;/**&lt;/span&gt;
     &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="err"&gt;省略小节&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="err"&gt;中的&lt;/span&gt;&lt;span class="n"&gt;OnEnKillfocusEdit1&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="err"&gt;已有的代码&lt;/span&gt;
     &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;

    &lt;span class="c1"&gt;//更新长度&lt;/span&gt;
    &lt;span class="n"&gt;CString&lt;/span&gt; &lt;span class="n"&gt;UpdateHexStr1Len&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;UpdateHexStr1Len&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%s%d%s&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;字节=[&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;HexStr1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GetLength&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="c1"&gt;//SetDlgItemText(IDC_STATIC_STR1, UpdateHexStr1Len );&lt;/span&gt;
    &lt;span class="n"&gt;GetDlgItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;IDC_STATIC_STR1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;SetWindowTextA&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;UpdateHexStr1Len&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h5&gt;4 设置TAB键切换连续输入&lt;/h5&gt;
&lt;p&gt;如何让用户在输入完第一个字符串后，按TAB键直接跳到第二个十六进制字符串输入框中？这个就涉及到对话框中所有空间的排序了。在visual studio 2013中按“Ctrl+D”就会显示对话框所有空间的序号了，分别点击两个不同的控件，就能交换二者的序号。&lt;/p&gt;
&lt;p&gt;如图所示，只要将第一个字符串输入框控件和第二个字符串输入框控件的序号设置为1、2这两个连续的序号即可实现TAB键连续输入，而不用使用鼠标了。&lt;/p&gt;
&lt;p&gt;&lt;img alt="mfc设置控件序号实现TAB键切换连续输入" src="https://o3cex9zsl.qnssl.com/2014/11/mfchexstrxordesign.png" title="mfc设置控件序号实现TAB键切换连续输入" /&gt;&lt;/p&gt;
&lt;h5&gt;5 避免回车键直接关闭工具（对话框）&lt;/h5&gt;
&lt;p&gt;直接将“进行异或”这个按钮属性中的&lt;code&gt;Default Button&lt;/code&gt;设置为"TRUE"，这样如果用户直接回车就不会关闭工具（对话框）了。&lt;/p&gt;
&lt;p&gt;同时，用户的回车会直接触发这个按钮对应的事件&lt;code&gt;OnBnClickedButton1&lt;/code&gt;，也就相当于用户点击了这个按钮，直接对这两个字符串进行异或处理。&lt;/p&gt;
&lt;p&gt;&lt;img alt="设置按钮属性中的Default Button为TRUE" src="https://o3cex9zsl.qnssl.com/2014/11/mfchexstrxordefaultbutton.png" title="设置按钮属性中的Default Button为TRUE" /&gt;&lt;/p&gt;
&lt;h5&gt;6 结语&lt;/h5&gt;
&lt;p&gt;由于篇幅较长，所以把剩余内容放在了&lt;a href="https://typecodes.com/cseries/studymfchexstrxortool2.html" title="《图文实例说MFC制作工具的心得（二）》"&gt;第二部分&lt;/a&gt;。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Thu, 13 Nov 2014 22:06:00 +0800</pubDate><guid>tag:typecodes.com,2014-11-13:cseries/studymfchexstrxortool1.html</guid><category>十六进制字符串</category><category>字符串异或</category><category>mfc</category></item><item><title>MFC写了一个十六进制字符串异或的工具</title><link>https://typecodes.com/cseries/mfchexstrxortool.html</link><description>&lt;p&gt;在写完上一篇文章&lt;a href="https://typecodes.com/cseries/hexstrxor.html" title="查看详情"&gt;《十六进制字符串异或》&lt;/a&gt;后，网上查了下貌似没有十六进制字符串异或的工具，于是想自己用C++写一个。由于之前没弄过MFC，所以周末花了两天时间边学边做，最后效果如下：&lt;/p&gt;
&lt;p&gt;&lt;img alt="MFC十六进制异或的工具初始界面" src="https://o3cex9zsl.qnssl.com/2014/11/mfchexstrtoolini.png" title="MFC十六进制异或的工具初始界面" /&gt;&lt;/p&gt;


&lt;p&gt;图一：工具的初始界面&lt;/p&gt;
&lt;p&gt;&lt;img alt="十六进制字符串异或效果" src="https://o3cex9zsl.qnssl.com/2014/11/mfchexstrxortool.png" title="十六进制字符串异或效果" /&gt;&lt;/p&gt;
&lt;p&gt;图二：十六进制字符串异或效果&lt;/p&gt;
&lt;p&gt;&lt;img alt="鼠标移至工具的顶部再右键的效果" src="https://o3cex9zsl.qnssl.com/2014/11/mfchexstrxortoolbar.png" title="鼠标移至工具的顶部再右键的效果" /&gt;&lt;/p&gt;
&lt;p&gt;图三：鼠标移至工具的顶部再右键的效果&lt;/p&gt;
&lt;p&gt;&lt;img alt="点击“关于 HexStrXor(A)”效果" src="https://o3cex9zsl.qnssl.com/2014/11/mfchexstrxortoolabout.png" title="&amp;quot;点击“关于 HexStrXor(A" /&gt;”效果" )&lt;/p&gt;
&lt;p&gt;图四：点击“关于 HexStrXor(A)”效果&lt;/p&gt;
&lt;p&gt;这个工具原理也比较简单，利用了MFC模态对话框（IDE用的visual studio 2013），然后将前文中的C代码嵌入到框架内，再利用MFC的控件在界面与用户交互即可。全部代码已经提交至&lt;a href="https://github.com/vfhky/HexStrXor" title="MFC制作十六进制字符串异或工具"&gt;Github&lt;/a&gt;了，欢迎MFC过来人指点。另外期待大伙测试一下这个工具（&lt;a href="https://o3cex9zsl.qnssl.com/cseries/HexStrXor.exe" title="十六进制字符串异或工具"&gt;点我下载&lt;/a&gt;），多谢啦！&lt;/p&gt;
&lt;p&gt;最后，推荐国内一个新生的可以免费创建Git私有代码托管服务的云端开发平台：【&lt;a href="https://coding.net/" title="Coding云端开发平台"&gt;coding.net&lt;/a&gt;】。当然我也把这个项目提交到了这个平台上，欢迎大家star。附&lt;a href="https://coding.net/u/vfhky/p/HexStrXor/" title="点击查看"&gt;Coding平台项目地址&lt;/a&gt;。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Wed, 12 Nov 2014 23:57:00 +0800</pubDate><guid>tag:typecodes.com,2014-11-12:cseries/mfchexstrxortool.html</guid><category>十六进制字符串</category><category>字符串异或</category><category>mfc</category></item><item><title>十六进制字符串异或</title><link>https://typecodes.com/cseries/hexstrxor.html</link><description>&lt;p&gt;十六进制字符串异或是C/C++工作中经常遇到的情况，因此自己写了一个异或方法。程序中关键的三点：&lt;/p&gt;
&lt;h5&gt;1 关键点一&lt;/h5&gt;
&lt;p&gt;弄清十六进制字符串异或的思路：一个十六进制字符其实表示的是一个字节的低4位，但是在ASCII码表中，它是作为一个字符，即占用了1个字节。所以需要先把这个字符转换成对应的十进制数（范围是0~15），这个就是&lt;code&gt;int char2int( char input )&lt;/code&gt;函数所做的工作；同理在异或完后，需要根据ASCII码表将范围是0~15的&lt;code&gt;字符&lt;/code&gt;转换成对应的占用1字节的字符串中的字符，这个就是&lt;code&gt;int int2char( char input )&lt;/code&gt;函数所做的工作。&lt;/p&gt;
&lt;p&gt;PS：这其实就是前面这两篇文章的提炼——
&lt;a href="https://typecodes.com/cseries/clangintegerstrtointeger.html" title="《C语言将十进制字符串转成十进制整数》"&gt;《C语言将十进制字符串转成十进制整数》&lt;/a&gt;、&lt;a href="https://typecodes.com/cseries/clanghexstrtointeger.html" title="《C语言将十六进制字符串转成十进制整数》"&gt;《C语言将十六进制字符串转成十进制整数》&lt;/a&gt;。&lt;/p&gt;


&lt;h5&gt;2 关键点二&lt;/h5&gt;
&lt;p&gt;由于这两个十六进制的字符串的长度可能不相等，所以在异或的时候，对于不等长的这两个十六进制的字符串需要先把这两个字符串等长的部分异或完毕。然后再把长度较长的那个字符串未异或的部分&lt;code&gt;copy&lt;/code&gt;至异或结果的后面（因为0与任何字符异或得到的结果都是这个字符本身）。&lt;/p&gt;
&lt;h5&gt;3 关键点三&lt;/h5&gt;
&lt;p&gt;由于这两个十六进制的字符串的中可能包含小写的字符，所以在异或的时候，先将这两个十六进制的字符串全部转成大写。&lt;/p&gt;
&lt;p&gt;基于上面的3点考虑，写出如下代码：&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt; * C/C++两个十六进制字符串异或&lt;/span&gt;
&lt;span class="cm"&gt; * @Filename:  hexstrxor.c&lt;/span&gt;
&lt;span class="cm"&gt; * @author  :  vfhky  2014.11.09  https://typecodes.com/cseries/hexstrxor.html&lt;/span&gt;
&lt;span class="cm"&gt; */&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;string.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;math.h&amp;gt;&lt;/span&gt;

&lt;span class="c1"&gt;//ASCII码中将字符转换成对应的十进制数&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;char2int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;input&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;64&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;55&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;48&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;//ASCII码中将十进制数转换成对应的字符&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;int2char&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;input&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;55&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;48&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;//将十六进制字符串HexStr1和HexStr2异或得到HexStr&lt;/span&gt;
&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;hexstrxor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;HexStr1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;HexStr2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;HexStr&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;iHexStr1Len&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;iHexStr2Len&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;iHexStrLenLow&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;iHexStrLenGap&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;//转换成大写并求长度&lt;/span&gt;
    &lt;span class="n"&gt;strupr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;HexStr1&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;strupr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;HexStr2&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;iHexStr1Len&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;strlen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;HexStr1&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;iHexStr2Len&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;strlen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;HexStr2&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="c1"&gt;//获取最小的长度&lt;/span&gt;
    &lt;span class="n"&gt;iHexStrLenLow&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;iHexStr1Len&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;iHexStr2Len&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="nl"&gt;iHexStr1Len&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;iHexStr2Len&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;//获取长度差值&lt;/span&gt;
    &lt;span class="n"&gt;iHexStrLenGap&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;iHexStr1Len&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;iHexStr2Len&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="c1"&gt;//两个十六进制的字符串进行异或&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;iHexStrLenLow&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HexStr&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;char2int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;HexStr1&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;^&lt;/span&gt; &lt;span class="n"&gt;char2int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;HexStr2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HexStr&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;int2char&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HexStr&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;iHexStr1Len&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;iHexStr2Len&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;memcpy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;HexStr&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;HexStr1&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;iHexStrLenGap&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;iHexStr1Len&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;iHexStr2Len&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;memcpy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;HexStr&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;HexStr2&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;iHexStrLenGap&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;HexStr&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;iHexStrLenLow&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;iHexStrLenGap&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;argc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;//两个十六进制的字符串以及异或的结果result&lt;/span&gt;
    &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;HexStr1&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;F1A37CD826BE0A38&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;HexStr2&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;4FBC926A2EED4F0A&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;17&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;

    &lt;span class="c1"&gt;//调用异或方法&lt;/span&gt;
    &lt;span class="n"&gt;hexstrxor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;HexStr1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;HexStr2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="c1"&gt;//打印异或结果&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;result=[%s]&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h5&gt;4 GCC编译执行&lt;/h5&gt;
&lt;p&gt;用gcc命令编译&lt;code&gt;gcc hexstrxor.c -o hexstrxor&lt;/code&gt;后执行，得到如图结果：&lt;/p&gt;
&lt;p&gt;&lt;img alt="十六进制字符串异或" src="https://o3cex9zsl.qnssl.com/2014/11/clanghexstrxor.png" title="十六进制字符串异或" /&gt;&lt;/p&gt;
&lt;h5&gt;5 用MFC写了一个异或工具&lt;/h5&gt;
&lt;p&gt;为了更方便的得到两个十六进制字符串异或的结果，我用MFC写了一个小工具，详见文章&lt;a href="https://typecodes.com/cseries/mfchexstrxortool.html" title="查看原文"&gt;《MFC写了一个十六进制字符串异或的工具》&lt;/a&gt;。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Mon, 10 Nov 2014 22:20:00 +0800</pubDate><guid>tag:typecodes.com,2014-11-10:cseries/hexstrxor.html</guid><category>十六进制字符串</category><category>字符串异或</category></item><item><title>由学生按某规则依次报数的游戏引发的问题</title><link>https://typecodes.com/cseries/studentssoundoffgame.html</link><description>&lt;p&gt;前段时间Q群里有提问如下，编写程序解决一个学生按规则依次报数的体育游戏问题。编程语言不限，Java, C#, Ruby, C++, Js, Python, Scala, objective-C统统可以，小语种也没问题。&lt;/p&gt;
&lt;p&gt;&lt;img alt="学生按某规则依次报数的游戏" src="https://o3cex9zsl.qnssl.com/2014/11/sportsgamepushpop.png" title="学生按某规则依次报数的游戏" /&gt;&lt;/p&gt;
&lt;h5&gt;1 问题描述：&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;你是一名体育老师，在某次课距离下课还有五分钟时，你决定搞一个游戏。此时有100名学生在上课。游戏的规则是：
1. 你首先说出三个不同的特殊数，要求必须是个位数，比如3、5、7。
2. 让所有学生拍成一队，然后按顺序报数。
3. 学生报数时，如果所报数字是第一个特殊数（3）的倍数，那么不能说该数字，而要说Fizz；如果所报数字是第二个特殊数（5）的倍数，那么要说Buzz；如果所报数字是第三个特殊数（7）的倍数，那么要说Whizz。
4. 学生报数时，如果所报数字同时是两个特殊数的倍数情况下，也要特殊处理，比如第一个特殊数和第二个特殊数的倍数，那么不能说该数字，而是要说FizzBuzz, 以此类推。如果同时是三个特殊数的倍数，那么要说FizzBuzzWhizz。
5. 学生报数时，如果所报数字包含了第一个特殊数，那么也不能说该数字，而是要说相应的单词，比如本例中第一个特殊数是3，那么要报13的同学应该说Fizz。如果数字中包含了第一个特殊数，那么忽略规则3和规则4，比如要报35的同学只报Fizz，不报BuzzWhizz。

现在，我们需要你完成一个程序来模拟这个游戏，它首先接受3个特殊数，然后输出100名学生应该报数的数或单词。比如，

输入
3,5,7
输出（片段）

1
2
Fizz
4
Buzz
Fizz
Whizz
8
Fizz
Buzz
11
Fizz
Fizz
Whizz
FizzBuzz
16
17
Fizz
19
Buzz
…
一直到100
&lt;/pre&gt;&lt;/div&gt;




&lt;h5&gt;2 解决方法：&lt;/h5&gt;
&lt;p&gt;这个问题主要是要理解提到的游戏规则，然后为每个学生对应的序号匹配出对应的rule模式，这样问题就解决了。下面是自己用C写的解决方法：&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt; * 游戏体育老师写3个个位数，100名同学按一定规则报数的问题&lt;/span&gt;
&lt;span class="cm"&gt; * @filename： game.c&lt;/span&gt;
&lt;span class="cm"&gt; * @author  ： vfhky  2014.10.25  https://typecodes.com&lt;/span&gt;
&lt;span class="cm"&gt; */&lt;/span&gt;

&lt;span class="cp"&gt;#include &amp;quot;stdio.h&amp;quot;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;quot;string.h&amp;quot;&lt;/span&gt;
&lt;span class="cp"&gt;#define TotalNum 100&lt;/span&gt;

&lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt; * 获取一个1000范围内的整形数据的各个位&lt;/span&gt;
&lt;span class="cm"&gt; * @param [in]  number  学生序号&lt;/span&gt;
&lt;span class="cm"&gt; * @param [in/out]  highnum 将每个位依次保存到数组&lt;/span&gt;
&lt;span class="cm"&gt; * return 0: 成功; -1:整数超出范围&lt;/span&gt;
&lt;span class="cm"&gt; */&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;gethighnum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;number&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;highnum&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;number&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;highnum&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;number&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;48&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;number&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;highnum&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;number&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;48&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;highnum&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;number&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;48&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;number&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;highnum&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;number&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;48&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;highnum&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;number&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;number&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;48&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;highnum&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;number&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;48&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt; * 将学生序号按照规则3/4/5处理: 最后匹配出对应的字符串&lt;/span&gt;
&lt;span class="cm"&gt; * @param [in]  inputa  老师输入的第一个数字&lt;/span&gt;
&lt;span class="cm"&gt; * @param [in]  inputb  老师输入的第二个数字&lt;/span&gt;
&lt;span class="cm"&gt; * @param [in]  inputc  老师输入的第三个数字&lt;/span&gt;
&lt;span class="cm"&gt; * @param [in]  number  学生序号&lt;/span&gt;
&lt;span class="cm"&gt; * @param [in/out]  matchstr    匹配的字符串&lt;/span&gt;
&lt;span class="cm"&gt; * @param [in/out]  flag        是否包含了匹配数字, 0:未包含   1: 包含&lt;/span&gt;
&lt;span class="cm"&gt; * return -1: 该学生序号不合法;  0:未包含第一个数字;  1:包含第一个数字;&lt;/span&gt;
&lt;span class="cm"&gt; */&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;rules&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;inputa&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;inputb&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;inputc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;number&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;matchstr&lt;/span&gt;&lt;span class="p"&gt;[],&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;flag&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;highnum&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;    &lt;span class="c1"&gt;//整数的各个位&lt;/span&gt;
    &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;flag&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;gethighnum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;number&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;highnum&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;     &lt;span class="c1"&gt;//获取该整数的所有高位字符highnum&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="cm"&gt;/* 检测是否包含第一个特殊数字 */&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;strlen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;highnum&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;inputa&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;highnum&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;48&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="n"&gt;memset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;matchstr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x30&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;number&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;inputa&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;matchstr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mh"&gt;0x31&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;flag&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;number&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;inputb&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;matchstr&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mh"&gt;0x32&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;flag&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;number&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;inputc&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;matchstr&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mh"&gt;0x33&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;flag&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;argc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;stuinx&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;     &lt;span class="c1"&gt;//学生序号, 从1开始报数&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;        &lt;span class="c1"&gt;//老师输入的三个整型数据&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;         &lt;span class="c1"&gt;//临时数据&lt;/span&gt;

    &lt;span class="cm"&gt;/* 初始化对应的三个字符串数据 */&lt;/span&gt;
    &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;arr1&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Fizz&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;arr2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Buzz&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;arr3&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Whizz&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

    &lt;span class="cm"&gt;/* 老师输入3个整形数据 */&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Please input three integer number:&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt; eg. 3, 5, 7&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;scanf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;%d, %d, %d&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mh"&gt;0xa&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mh"&gt;0xa&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mh"&gt;0xa&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;You should inpute three integer number!&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;You have inputed three integer number:[%d], [%d], [%d]&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;flag&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;flag&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;matchstr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;

    &lt;span class="cm"&gt;/* 学生开始依次报数 */&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;stuinx&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;TotalNum&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;stuinx&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="cm"&gt;/* 每次循环重新初始化数据 */&lt;/span&gt;
        &lt;span class="n"&gt;flag&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;memset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;memset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;matchstr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x30&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;matchstr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="cm"&gt;/* 根据规则获取匹配字符串matchnum以及是否包含匹配字符的标志*p */&lt;/span&gt;
        &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;rules&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;stuinx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;matchstr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;The total number of students can not be more than 1000!&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;strcpy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;arr1&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;No.[%d] says [%s]&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;stuinx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;arr&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;continue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="cm"&gt;/* 如果包含了非第一个特殊数字 */&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;strlen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;matchstr&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;matchstr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mh"&gt;0x31&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="n"&gt;strcat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;arr1&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;matchstr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mh"&gt;0x32&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="n"&gt;strcat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;arr2&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;matchstr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mh"&gt;0x33&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="n"&gt;strcat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;arr3&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;No.[%d] says [%s]&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;stuinx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;arr&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;
            &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;No.[%d] says [%d]&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;stuinx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;stuinx&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h5&gt;3 测试结果&lt;/h5&gt;
&lt;p&gt;GCC编译后执行，结果如下图所示。但发现没有任何一位学生在报数时，需要报包含&lt;code&gt;Fizz&lt;/code&gt;、&lt;code&gt;Buzz&lt;/code&gt;、&lt;code&gt;Whizz&lt;/code&gt;全部这三个单词的组合，例如不会出现题目规则4中所述的&lt;code&gt;FizzBuzzWhizz&lt;/code&gt;。原因可以直接从前面的几条规则中推导出来。&lt;/p&gt;
&lt;p&gt;&lt;img alt="测试结果" src="https://o3cex9zsl.qnssl.com/2014/11/clangsportsgame.png" title="测试结果" /&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Sat, 08 Nov 2014 19:02:00 +0800</pubDate><guid>tag:typecodes.com,2014-11-08:cseries/studentssoundoffgame.html</guid><category>学生报数</category></item><item><title>理解有符号和无符号的字符数和整数的转换</title><link>https://typecodes.com/cseries/signedunsignedcharconvint.html</link><description>&lt;p&gt;网上关于有符号、无符号字符转换成有符号、无符号整形数据的问题，自己写了一个测试程序，分析了下，挺有意思的。&lt;/p&gt;
&lt;h5&gt;1 测试说明&lt;/h5&gt;
&lt;p&gt;用的是自己的win7 64位系统，处理器当然是Intel的，因此是前文提到的&lt;code&gt;小端模式&lt;/code&gt;。默认按32位（总线）处理，即一个整型4个字节，长度共 2^32 = 4294967296 字节；有符号字符char类型数据的范围是 -128~127 （对应二进制 11111111~01111111），无符号字符 unsinged char 类型数据范围是 0~255（对应二进制 00000000~11111111）。&lt;/p&gt;
&lt;p&gt;&lt;img alt="C语言有符号和无符号数" src="https://o3cex9zsl.qnssl.com/2014/11/clangsignedandunsigned.png" title="C语言有符号和无符号数" /&gt;&lt;/p&gt;


&lt;h5&gt;2 测试程序&lt;/h5&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt; * @FileName :  signedandunsigned.c&lt;/span&gt;
&lt;span class="cm"&gt; * @Author   :  vfhky 2014.10.21 https://typecodes.com/cseries/signedunsignedcharconvint.html&lt;/span&gt;
&lt;span class="cm"&gt; * @Function :  对有符号和无符号数的测试&lt;/span&gt;
&lt;span class="cm"&gt; */&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;argc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;//情形1，b的值在有符号字符型数据范围内&lt;/span&gt;
    &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;*a=[%d]&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;      &lt;span class="c1"&gt;//输出 *a=[-2]&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;*a=[%u]&lt;/span&gt;&lt;span class="se"&gt;\n\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;    &lt;span class="c1"&gt;//输出 *a=[4294967294]&lt;/span&gt;

    &lt;span class="c1"&gt;//情形2，b的值不在无符号字符型数据范围内&lt;/span&gt;
    &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;254&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;*a=[%d]&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;      &lt;span class="c1"&gt;//输出 *a=[-2]&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;*a=[%u]&lt;/span&gt;&lt;span class="se"&gt;\n\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;    &lt;span class="c1"&gt;//输出 *a=[4294967294]&lt;/span&gt;

    &lt;span class="c1"&gt;//情形3，b的值在无符号字符型数据范围内&lt;/span&gt;
    &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;129&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;*a=[%d]&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;      &lt;span class="c1"&gt;//输出 *a=[-127]&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;*a=[%u]&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;      &lt;span class="c1"&gt;//输出 *a=[4294967169]&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;&lt;img alt="对有符号signed和无符号unsigned数的测试" src="https://o3cex9zsl.qnssl.com/2014/11/signedandunsigned.png" title="对有符号signed和无符号unsigned数的测试" /&gt;&lt;/p&gt;
&lt;h5&gt;3 三种情形所得结果的分析&lt;/h5&gt;
&lt;h6&gt;3.1 情形1：b = -2&lt;/h6&gt;
&lt;p&gt;执行&lt;code&gt;b = -2;&lt;/code&gt;后，整型变量b的值 -2 在内存单元中的形式是&lt;code&gt;1111 1111 1111 1111 1111 1111 1111 1110&lt;/code&gt;（共4字节，十六进制&lt;code&gt;0xfffffffe&lt;/code&gt;）。而当执行&lt;code&gt;a = (char *)&amp;amp;b;&lt;/code&gt;后，由于CPU是&lt;code&gt;小端模式&lt;/code&gt;，所以指针变量a指向b的首地址（低地址/低字节1111 1110所在的地址）。由于有符号字符型数据占一个字节(范围&lt;code&gt;-128~127&lt;/code&gt;)，所以刚好是变量b的第一个字节&lt;code&gt;1111 1110（十六进制的fe）&lt;/code&gt;。它对应有符号字符型数据&lt;code&gt;-2&lt;/code&gt;，即&lt;code&gt;*a&lt;/code&gt;的值为&lt;code&gt;-2&lt;/code&gt;。然后在打印&lt;code&gt;printf( "*a=[%d]\n", *a );&lt;/code&gt;时，也就是将有符号整型-2以有符号整型数据输出，也就是&lt;code&gt;-2&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;而打印&lt;code&gt;printf( "*a=[%u]\n", *a );&lt;/code&gt;时，是将有符号整型-2以无符号整型数据输出，即求-2的补码形式：已知-2在内存单元中的形式是&lt;code&gt;1111 1111 1111 1111 1111 1111 11111110&lt;/code&gt;（共4字节），由于此时是无符号整数，即最高位1不是符号位，所以值是&lt;code&gt;(2^32 - 1) - 1 = 4294967296 - 2 = 4294967294&lt;/code&gt;。&lt;/p&gt;
&lt;h6&gt;3.2 情形2：b = 254&lt;/h6&gt;
&lt;p&gt;执行&lt;code&gt;b = 254;&lt;/code&gt;后，整型变量b的值 254 在内存单元中的形式是&lt;code&gt;0000 0000 0000 0000 0000 0000 1111 1110&lt;/code&gt;（共4字节，十六进制&lt;code&gt;0x000000fe&lt;/code&gt;）。此时指针变量a仍旧指向b的首地址（低地址/低字节1111 1110，即十六进制的fe）。由于有符号字符型数据占一个字节(范围&lt;code&gt;-128~127&lt;/code&gt;)，所以刚好是变量b的第一个字节&lt;code&gt;1111 1110（十六进制的fe）&lt;/code&gt;。它对应有符号字符型数据&lt;code&gt;-2&lt;/code&gt;，所以&lt;code&gt;*a&lt;/code&gt;的值为&lt;code&gt;-2&lt;/code&gt;。然后在打印&lt;code&gt;printf( "*a=[%d]\n", *a );&lt;/code&gt;时，也就是将有符号整型-2以有符号整型数据输出，也就是&lt;code&gt;-2&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;同情形1，&lt;code&gt;printf( "*a=[%u]\n", *a );&lt;/code&gt;输出的内容也是&lt;code&gt;4294967294&lt;/code&gt;。&lt;/p&gt;
&lt;h6&gt;3.3 情形3：b = 129&lt;/h6&gt;
&lt;p&gt;执行&lt;code&gt;b = 129;&lt;/code&gt;后，整型变量 b 的值 129 在内存中的形式是&lt;code&gt;0000 0000 0000 0000 0000 0000 1000 0001&lt;/code&gt;（共4字节，十六进制&lt;code&gt;0x00000081&lt;/code&gt;）。此时指针变量a仍旧指向b的首地址（低地址/低字节1000 0001所在的地址）。由于有符号字符型数据占一个字节(范围&lt;code&gt;-128~127&lt;/code&gt;)，所以刚好是变量b的第一个字节&lt;code&gt;1000 0001（十六进制的a1）&lt;/code&gt;。它对应有符号字符型数据&lt;code&gt;-0x7f（即十进制的-127）&lt;/code&gt;，所以&lt;code&gt;*a&lt;/code&gt;的值为&lt;code&gt;-127&lt;/code&gt;。然后在打印&lt;code&gt;printf( "*a=[%d]\n", *a );&lt;/code&gt;时，也就是将有符号整型-127以有符号整型数据输出，也就是&lt;code&gt;-127&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;而打印&lt;code&gt;printf( "*a=[%u]\n", *a );&lt;/code&gt;时，是将有符号整型-127以无符号整型数据输出，即求-127的补码形式：-127的绝对值127的内存单元为&lt;code&gt;0000 0000 0000 0000 0000 0000 0111 1111&lt;/code&gt;（4字节），然后取反得到&lt;code&gt;1111 1111 1111 1111 1111 1111 1000 0000&lt;/code&gt;（共4字节），然后加1得到&lt;code&gt;1111 1111 1111 1111 1111 1111 1000 0001&lt;/code&gt;（共4字节），由于此时是无符号，即最高位1不是符号位，所以共 (2^32 - 1) - （255 - 128 - 1） = 4294967296 -1 - 126 = 4294967169。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Fri, 07 Nov 2014 21:52:00 +0800</pubDate><guid>tag:typecodes.com,2014-11-07:cseries/signedunsignedcharconvint.html</guid><category>有符号字符signed</category><category>无符号字符unsigned</category></item><item><title>C语言字节序的大小端模式</title><link>https://typecodes.com/cseries/sizeofbyteorder.html</link><description>&lt;p&gt;关于字节序的大小端模式，个人认为CSDN上Hackbuteer1作者的这篇文章&lt;a href="http://blog.csdn.net/hackbuteer1/article/details/7722667" title="大端模式和小端模式"&gt;《大端模式和小端模式》&lt;/a&gt;讲解的很清晰。这里MARK一下自己的学习心得：&lt;/p&gt;
&lt;p&gt;&lt;img alt="C程序内存映射模式" src="https://o3cex9zsl.qnssl.com/2014/11/memorymapping.png" title="C程序内存映射模式" /&gt;&lt;/p&gt;
&lt;h5&gt;1 原文精华&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;小端模式[Little-Endian]：内存块低地址存放元素的低位(字节)，内存块高地址存放元素的高位(字节)；
大端模式[Big-Endian]：内存块低地址存放元素的高位(字节)，内存块高地址存放元素的低位(字节)。
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;采用小端模式的处理器包括：&lt;code&gt;PDP-11、VAX、Intel系列微处理器和一些网络通信设备&lt;/code&gt;；
采用大端模式的处理器包括：&lt;code&gt;IBM3700系列、PDP-10、Mortolora微处理器系列和绝大多数的RISC处理器&lt;/code&gt;。&lt;/p&gt;


&lt;h5&gt;2 关于主机序(小端模式)和网络字节序(大端模式)&lt;/h5&gt;
&lt;p&gt;两台主机之间通过TCP/IP协议进行通信的时候，在向对方发送报文前，都需要调用相应的函数把自己的主机序（Little-Endian）模式的报文转换成网络序（Big-Endian）模式；同样，在接收到对方的报文信息后，都需要将报文（网络序）转换成主机序（Little-Endian）。&lt;/p&gt;
&lt;h5&gt;3 通过共用体、十六进制整数、字符数组判断CPU的大小端模式&lt;/h5&gt;
&lt;p&gt;下面通过三种途径来判断自己的系统的CPU处理器的模式，部分代码改自原文《大端模式和小端模式》。&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;

&lt;span class="c1"&gt;//通过共用体检测CPU的大小端模式&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;checkCPU&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;  
    &lt;span class="kt"&gt;short&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;test&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mh"&gt;0x1234&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;test&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mh"&gt;0x12&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;     &lt;span class="c1"&gt;//低地址存放高字节, 则是大端模式&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
    &lt;span class="k"&gt;else&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;argc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="cm"&gt;/* 1 通过共用体判断大小端模式 */&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;checkCPU&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Big endian.&lt;/span&gt;&lt;span class="se"&gt;\n\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
        &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Little endian.&lt;/span&gt;&lt;span class="se"&gt;\n\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="cm"&gt;/* 2 用十六进制整型数据判断大小端模式 */&lt;/span&gt;
    &lt;span class="kt"&gt;short&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mh"&gt;0x1234&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;x0&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="n"&gt;x0&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="n"&gt;x1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;x0=[%c], x1=[%c]&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x1&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;x0&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mh"&gt;0x34&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;x1&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mh"&gt;0x12&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Little endian.&lt;/span&gt;&lt;span class="se"&gt;\n\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
        &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Big endian.&lt;/span&gt;&lt;span class="se"&gt;\n\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="cm"&gt;/* 3 用字符数组判断大小端模式 */&lt;/span&gt;
    &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;abc&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;x0&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="n"&gt;x1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="n"&gt;x2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;x0=[%c], x1=[%c], x2=[%c]&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x2&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;x0&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;a&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;x1&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;b&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;x2&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;c&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Little endian.&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
        &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Big endian.&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;由于自己用的是win7系统，处理器当然是Intel的CPU，所以作为小端模式输出结果如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img alt="C语言win7系统CPU大小端模式" src="https://o3cex9zsl.qnssl.com/2014/11/clangjudgecpumodel.png" title="C语言win7系统CPU大小端模式" /&gt;&lt;/p&gt;
&lt;h5&gt;4 通过上面代码总结分析大、小端模式&lt;/h5&gt;
&lt;h6&gt;4.1 关于栈“先进后出，后进先出”的原理：&lt;/h6&gt;
&lt;p&gt;C/C++程序在内存中的映射，&lt;code&gt;栈是向下增长的&lt;/code&gt;，即栈底在上（高地址），栈顶在下（低地址）；而堆是向上增长的。&lt;code&gt;“入栈”&lt;/code&gt;时：元素从栈顶压入，压入后，该元素变成高字节（高位），然后栈顶向低地址下降（即向下增长），然后继续从栈顶压入第二个元素，同时第一个压入的元素变成&lt;code&gt;栈底&lt;/code&gt;依次重复；&lt;code&gt;“出栈”&lt;/code&gt;时：元素从栈顶弹出，弹出后，栈顶的地址也随之改变，指向下一个元素的位置，依次重复，直到到达&lt;code&gt;栈底&lt;/code&gt;。&lt;/p&gt;
&lt;h6&gt;4.2 分析代码中用整型数据判断大小端模式：&lt;/h6&gt;
&lt;p&gt;短整型数据&lt;code&gt;a = 0x1234;&lt;/code&gt;，它的高字节（高位）是&lt;code&gt;0x12&lt;/code&gt;，低字节（低位）是&lt;code&gt;0x34&lt;/code&gt;。因为栈是从高地址向低地址增长的，即栈底对应于高地址，栈顶对应于低地址，对应x[0]是低地址，x[1]是高地址。所以如果是小端模式，即低地址放低字节（低位），高地址放高字节（高位），那么低地址x[0]应该等于 0x34（为ASCII中字符'4'），高地址x[1]等于0x12（为ASCII中不可打印的字符&lt;code&gt;DC2&lt;/code&gt;）。&lt;/p&gt;
&lt;h6&gt;4.3 分析代码中用字符数组判断大小端模式：&lt;/h6&gt;
&lt;p&gt;对于字符串常量&lt;code&gt;abc&lt;/code&gt;，其字节（位）从左往右按顺序由低到高，即字符'a'是低字节（位），字符'c'是高字节（位），&lt;code&gt;这点和前面的短整型高低位从左到右是依次降低的不同&lt;/code&gt;。因此，对于小端模式，入栈的时候，字符'c'先入栈，然后是字符'b'，最后是字符'a'。这样字符'c'位置成为&lt;code&gt;栈底&lt;/code&gt;，字符'a'的位置成为&lt;code&gt;栈顶&lt;/code&gt;。即x[0]存放低字节（位）'a'，低地址x[1]存放低字节（位）'b'，高地址x[2]存放高字节（位）'c'。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Wed, 05 Nov 2014 23:33:00 +0800</pubDate><guid>tag:typecodes.com,2014-11-05:cseries/sizeofbyteorder.html</guid><category>字节序</category><category>大小端模式</category><category>数组元素存放顺序</category></item><item><title>C语言将十进制字符串转成十进制整数</title><link>https://typecodes.com/cseries/clangintegerstrtointeger.html</link><description>&lt;p&gt;通过&lt;a href="https://typecodes.com/cseries/clanghexstrtointeger.html" title="《C语言将十六进制字符串转成十进制整数》"&gt;上一篇文章&lt;/a&gt;完成了十六进制字符串转成十进制整数，同理也很容易写出十进制字符串转成十进制整数的函数。考虑到十进制的字符串中可能会出现正负号，即转换后可能出现负整数，同样也增加了对这种情况的处理。例如将十进制的字符串"0621"、"+621"、"6210"、"-1234"转换十进制的整数，即621、621、6210、-1234。下面同样是正向和逆向两种方法的具体代码：&lt;/p&gt;


&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cm"&gt;/** &lt;/span&gt;
&lt;span class="cm"&gt; * 将十进制字符串转十进制数函数[从低位到高位单个字符转换]&lt;/span&gt;
&lt;span class="cm"&gt; * @author  vfhky 2014.10.24 https://typecodes.com&lt;/span&gt;
&lt;span class="cm"&gt; * @param   [in]    HexStr 十进制字符串（例如&amp;quot;0621&amp;quot;、&amp;quot;+621&amp;quot;、&amp;quot;6210&amp;quot;、&amp;quot;-1234&amp;quot;等） &lt;/span&gt;
&lt;span class="cm"&gt; * @return  -1:字符串为空; -2:字符串中包含非十进制的字符; 其它:对应的十进制整数  &lt;/span&gt;
&lt;span class="cm"&gt; */&lt;/span&gt;  
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;IntegerStr2Integer1&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;HexStr&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;iResult&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;iCycle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;iHexStrLen&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;iResult&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;iCycle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;iHexStrLen&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="c1"&gt;//正负数的标识，1正 -1负&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;iFlag&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;//初始化指针变量p（指向十进制字符串的首地址）&lt;/span&gt;
    &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;HexStr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;//获取十进制字符串的长度&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mh"&gt;0x00&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;iHexStrLen&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;HexStr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;//判断字符串是否合法&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;iHexStrLen&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;HexStr&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;+&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;iHexStrLen&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;HexStr&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;-&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;iHexStrLen&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;//长度去掉正负号，并设置字符数的标识&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;HexStr&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;+&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;HexStr&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;-&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;iHexStrLen&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;HexStr&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;HexStr&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;-&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;iFlag&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;HexStr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;//循环将每个十进制的字符转换成对应的十进制整数&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;iCycle&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;iHexStrLen&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;48&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;57&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
           &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;-=&lt;/span&gt; &lt;span class="mi"&gt;48&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
       &lt;span class="n"&gt;iResult&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;iResult&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
       &lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="n"&gt;iCycle&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
       &lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;//返回转换后的整数&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;iFlag&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;iResult&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;如下图所示，用GCC编译(&lt;code&gt;gcc integerstrtointeger.c -o integerstrtointeger&lt;/code&gt;)测试程序并执行，结果将三个测试用的十进制的字符串"0621"、"+621"、"6210"、"-1234"分别转换成了对应的十进制整数：621、621、6210、-1234。用下面第二种方法结果也是一样的。&lt;/p&gt;
&lt;p&gt;&lt;img alt="十进制字符串转成十进制整数" src="https://o3cex9zsl.qnssl.com/2014/11/clangintegerstrtointeger.png" title="十进制字符串转成十进制整数" /&gt;&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cm"&gt;/** &lt;/span&gt;
&lt;span class="cm"&gt; * 将十进制字符串转十进制数函数[从高位到低位单个字符转换]&lt;/span&gt;
&lt;span class="cm"&gt; * @author  vfhky 2014.10.24 https://typecodes.com&lt;/span&gt;
&lt;span class="cm"&gt; * @param   [in]    HexStr 十进制字符串（例如&amp;quot;0621&amp;quot;、&amp;quot;+621&amp;quot;、&amp;quot;6210&amp;quot;、&amp;quot;-1234&amp;quot;等） &lt;/span&gt;
&lt;span class="cm"&gt; * @return  -1:字符串为空; -2:字符串中包含非十进制的字符; 其它:对应的十进制整数  &lt;/span&gt;
&lt;span class="cm"&gt; */&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;IntegerStr2Integer2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;HexStr&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;iResult&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;iCycle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;iHexStrLen&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;iResult&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;iCycle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;iHexStrLen&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="c1"&gt;//正负数的标识，1正 -1负&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;iFlag&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;//初始化指针变量p（指向十进制字符串的首地址）&lt;/span&gt;
    &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;HexStr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;//获取十进制字符串的长度&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mh"&gt;0x00&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;iHexStrLen&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;HexStr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;//判断字符串是否合法&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;iHexStrLen&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;HexStr&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;+&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;iHexStrLen&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;HexStr&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;-&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;iHexStrLen&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;//长度去掉正负号，并设置字符数的标识&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;HexStr&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;+&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;HexStr&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;-&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;iHexStrLen&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;HexStr&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;-&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;iFlag&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;//循环将每个十进制的字符转换成对应的十进制整数&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;iHexStrLen&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;48&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;57&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
           &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;-=&lt;/span&gt; &lt;span class="mi"&gt;48&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
       &lt;span class="n"&gt;iResult&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;iCycle&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
       &lt;span class="n"&gt;iCycle&lt;/span&gt; &lt;span class="o"&gt;*=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
       &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;iHexStrLen&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;//返回转换后的整数&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;iFlag&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;iResult&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;不过，C/C++的lib库中已经提供了将字符串转换成短整型、浮点型的函数（声明在stdlib.h头文件中），即ASCII to integer(atoi)、ASCII to float(atof)。测试如下：&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cm"&gt;/** &lt;/span&gt;
&lt;span class="cm"&gt; * C/C++的lib库中atoi、atof字符串转换短整型、浮点型的测试&lt;/span&gt;
&lt;span class="cm"&gt; * @author  vfhky 2014.10.24 https://typecodes.com&lt;/span&gt;
&lt;span class="cm"&gt; */&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;quot;stdio.h&amp;quot;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;quot;stdlib.h&amp;quot;&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;1234&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;1234.56&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;-1234&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;0621&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kt"&gt;float&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;//atoi函数转换成整数（正）: a=[1234], i=[1234]&lt;/span&gt;
    &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;atoi&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;a=[%s], i=[%d]&lt;/span&gt;&lt;span class="se"&gt;\n\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="c1"&gt;//atoi函数转换成整数（负）: c=[-1234], j=[-1234]&lt;/span&gt;
    &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;atoi&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;c=[%s], j=[%d]&lt;/span&gt;&lt;span class="se"&gt;\n\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="c1"&gt;//atof函数转换成浮点型: b=[1234.56], k=[1234.560059]&lt;/span&gt;
    &lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;atof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;b=[%s], k=[%f]&lt;/span&gt;&lt;span class="se"&gt;\n\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="c1"&gt;//atoi函数转换成整数（正）: b=[1234.56], i=[1234]&lt;/span&gt;
    &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;atoi&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;b=[%s], i=[%d]&lt;/span&gt;&lt;span class="se"&gt;\n\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="c1"&gt;//atoi函数转换成整数（正）: d=[0621], i=[621]&lt;/span&gt;
    &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;atoi&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;d=[%s], i=[%d]&lt;/span&gt;&lt;span class="se"&gt;\n\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;   
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;&lt;img alt="C/C++的lib库中atoi、atof字符串转换短整型、浮点型的测试" src="https://o3cex9zsl.qnssl.com/2014/11/clibatoiatof.png" title="C/C++的lib库中atoi、atof字符串转换短整型、浮点型的测试" /&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Wed, 05 Nov 2014 22:05:00 +0800</pubDate><guid>tag:typecodes.com,2014-11-05:cseries/clangintegerstrtointeger.html</guid><category>字符串转换</category><category>atoi</category><category>atof</category><category>十进制字符串转换</category></item><item><title>C语言将十六进制字符串转成十进制整数</title><link>https://typecodes.com/cseries/clanghexstrtointeger.html</link><description>&lt;p&gt;C/C++处理十六进制文件中的报文内容时，经常会遇到先读取报文头中的长度（例如"E2"、"1F"、"-eE2"等等），再读取报文体中的内容的情况。那么就需要把报文头中表示长度的十六进制字符串转换成十进制的整形数据。&lt;/p&gt;
&lt;p&gt;转换方法有两种，一种是正向从字符串低位到高位依次转换，另一种是逆向从字符串高位到低位依次转换。原理都是利用指针变量依次指向十六进制字符串中的单个字符，然后通过ASCII码表转换成对应的整数。考虑到十进制的字符串中可能会出现正负号，即转换后可能出现负整数，所以增加了对这种情况的处理。下面是两种方法的具体代码：&lt;/p&gt;


&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cm"&gt;/** &lt;/span&gt;
&lt;span class="cm"&gt; * 将十六进制字符串转十进制数函数[从低位到高位单个字符转换]&lt;/span&gt;
&lt;span class="cm"&gt; * @author  vfhky 2014.10.24 https://typecodes.com&lt;/span&gt;
&lt;span class="cm"&gt; * @param   [in]    HexStr 十六进制字符串（例如&amp;quot;eE2&amp;quot;、&amp;quot;Fa1&amp;quot;、&amp;quot;2011&amp;quot;、&amp;quot;-eE2&amp;quot;、&amp;quot;+eE2&amp;quot;等） &lt;/span&gt;
&lt;span class="cm"&gt; * @return  -1:字符串为空; -2:字符串中包含非十六进制的字符; 其它:对应的十进制整数  &lt;/span&gt;
&lt;span class="cm"&gt; */&lt;/span&gt;  
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;HexStr2Integer1&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;HexStr&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;iResult&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;iCycle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;iHexStrLen&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;iResult&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;iCycle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;iHexStrLen&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="c1"&gt;//正负数的标识，1正 -1负&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;iFlag&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;//初始化指针变量p（指向十六进制字符串的首地址）&lt;/span&gt;
    &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;HexStr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;//获取十六进制字符串的长度&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mh"&gt;0x00&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;iHexStrLen&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;HexStr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;//判断字符串是否合法&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;iHexStrLen&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;HexStr&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;+&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;iHexStrLen&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;HexStr&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;-&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;iHexStrLen&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;//长度去掉正负号，并设置字符数的标识&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;HexStr&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;+&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;HexStr&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;-&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;iHexStrLen&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;HexStr&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;HexStr&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;-&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;iFlag&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;HexStr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;//循环将每个十六进制的字符转换成对应的十进制整数&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;iCycle&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;iHexStrLen&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;48&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;57&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
           &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;-=&lt;/span&gt; &lt;span class="mi"&gt;48&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;65&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;70&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
           &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;-=&lt;/span&gt; &lt;span class="mi"&gt;65&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;97&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;102&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
           &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;-=&lt;/span&gt; &lt;span class="mi"&gt;97&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
       &lt;span class="n"&gt;iResult&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;iResult&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
       &lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="n"&gt;iCycle&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
       &lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;//返回转换后的整数&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;iFlag&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;iResult&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;如下图所示，用GCC编译(&lt;code&gt;gcc hextointeger.c -o hextointeger&lt;/code&gt;)测试程序并执行，结果将三个测试用的十六进制的字符串"eE2"、"Fa1"、"2011"、"-eE2"、"+eE2"分别转换成了对应的十进制整数：3810、4001、8209、-3810、3810。&lt;/p&gt;
&lt;p&gt;&lt;img alt="十六进制字符串转成十进制整数" src="https://o3cex9zsl.qnssl.com/2014/11/clanghexstrtointeger.png" title="十六进制字符串转成十进制整数" /&gt;&lt;/p&gt;
&lt;p&gt;用下面逆向从字符串高位到低位依次转换的方法结果也是一样的：&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cm"&gt;/** &lt;/span&gt;
&lt;span class="cm"&gt; * 将十六进制字符串转十进制数函数[从高位到低位单个字符转换]&lt;/span&gt;
&lt;span class="cm"&gt; * @author  vfhky 2014.10.24 https://typecodes.com&lt;/span&gt;
&lt;span class="cm"&gt; * @param   [in]    HexStr 十六进制字符串（例如&amp;quot;eE2&amp;quot;、&amp;quot;Fa1&amp;quot;、&amp;quot;2011&amp;quot;、&amp;quot;-eE2&amp;quot;、&amp;quot;+eE2&amp;quot;等） &lt;/span&gt;
&lt;span class="cm"&gt; * @return  -1:字符串为空; -2:字符串中包含非十六进制的字符; 其它:对应的十进制整数  &lt;/span&gt;
&lt;span class="cm"&gt; */&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;HexStr2Integer2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;HexStr&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;iResult&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;iCycle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;iHexStrLen&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;iResult&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;iCycle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;iHexStrLen&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="c1"&gt;//正负数的标识，1正 -1负&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;iFlag&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;//初始化指针变量p（指向十六进制字符串的首地址）&lt;/span&gt;
    &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;HexStr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;//获取十六进制字符串的长度&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mh"&gt;0x00&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;iHexStrLen&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;HexStr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;//判断字符串是否合法&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;iHexStrLen&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;HexStr&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;+&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;iHexStrLen&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;HexStr&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;-&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;iHexStrLen&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;//长度去掉正负号，并设置字符数的标识&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;HexStr&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;+&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;HexStr&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;-&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;iHexStrLen&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;HexStr&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;-&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;iFlag&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;//循环将每个十六进制的字符转换成对应的十进制整数&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;iHexStrLen&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;48&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;57&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
           &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;-=&lt;/span&gt; &lt;span class="mi"&gt;48&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;65&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;70&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
           &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;-=&lt;/span&gt; &lt;span class="mi"&gt;65&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;97&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;102&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
           &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;-=&lt;/span&gt; &lt;span class="mi"&gt;97&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
       &lt;span class="n"&gt;iResult&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;iCycle&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
       &lt;span class="n"&gt;iCycle&lt;/span&gt; &lt;span class="o"&gt;*=&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
       &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;iHexStrLen&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;//返回转换后的整数&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;iFlag&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;iResult&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Tue, 04 Nov 2014 22:22:00 +0800</pubDate><guid>tag:typecodes.com,2014-11-04:cseries/clanghexstrtointeger.html</guid><category>十六进制字符串</category><category>十六进制转十进制</category><category>字符串转换</category></item><item><title>决定关闭博客使用SSL证书访问</title><link>https://typecodes.com/web/shutdownblogssl.html</link><description>&lt;p&gt;前几天博客使用了NameCheap的证书，将原来的http访问改成了https访问（详戳&lt;a href="https://typecodes.com/web/lnmppositivessl.html" title="阿里云CentOS 6.5系统LNMP环境安装SSL证书"&gt;这里&lt;/a&gt;）。由于下面的原因，现决定不再使用SSL证书，恢复http访问。&lt;/p&gt;
&lt;p&gt;&lt;img alt="使用SSL证书访问博客" src="https://o3cex9zsl.qnssl.com/2014/10/blogbeginusessl.png" title="使用SSL证书访问博客" /&gt;&lt;/p&gt;
&lt;h5&gt;1 无法通过https加载站外静态资源文件&lt;/h5&gt;
&lt;p&gt;主要是因为目前博客所有的静态资源文件，如css样式文件、js脚本文件、图片文件等，都使用了新浪SCS云存储。最初，博客程序中还存在类似于&lt;code&gt;https://o3cex9zsl.qnssl.com/libs/img/typecodes.png&lt;/code&gt;这种http请求，所以浏览器地址栏会出现黄色警告图标。后来将所有的http请求全部改成https，结果浏览器地址栏图标变成正常的绿色图标了。&lt;/p&gt;


&lt;p&gt;但是如果在博客typecho程序中引入&lt;code&gt;https://o3cex9zsl.qnssl.com/libs/css/style.css&lt;/code&gt;等静态资源文件时，这些文件都不能正常加载。于是就出现了页面变形、图片无法显示等问题。&lt;/p&gt;
&lt;p&gt;&lt;img alt="博客https静态资源无法加载" src="https://o3cex9zsl.qnssl.com/2014/10/blogsslunload.png" title="博客https静态资源无法加载" /&gt;&lt;/p&gt;
&lt;h5&gt;2 关于SSL证书问题的猜想&lt;/h5&gt;
&lt;p&gt;虽然新浪SCS也支持https访问，但一直认为是因为新浪SCS域名&lt;code&gt;sinastorage.cn&lt;/code&gt;证书有问题（目前已正常），所以在浏览器客户端访问博客时，会被拒绝而无法正常加载。&lt;/p&gt;
&lt;p&gt;&lt;img alt="&amp;quot;新浪SCS域名sinastorage.cn证书问题&amp;quot;" src="https://o3cex9zsl.qnssl.com/2014/10/sinastoragesslerror.jpg" title="新浪SCS域名sinastorage.cn证书问题" /&gt;&lt;/p&gt;
&lt;p&gt;后来试着换用阿里的oss存储，结果也是无法正常加载。想到可能因为博客的服务器没有新浪SCS和阿里OSS证书的缘故，在访问博客时，会拒绝新浪SCS和阿里OSS等站外资源的请求，从而博客页面无法正常显示。&lt;/p&gt;
&lt;h5&gt;3 无奈放弃&lt;/h5&gt;
&lt;p&gt;因此，只能决定放弃从github pack获得的免费一年的SSL证书了。So，再见了&lt;code&gt;https://typecodes.com&lt;/code&gt;！&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Fri, 17 Oct 2014 23:37:00 +0800</pubDate><guid>tag:typecodes.com,2014-10-17:web/shutdownblogssl.html</guid><category>ssl证书</category><category>github pack</category><category>positivessl</category></item><item><title>阿里云CentOS 6.5系统LNMP环境安装SSL证书</title><link>https://typecodes.com/web/lnmppositivessl.html</link><description>&lt;p&gt;近期参加了github的一项&lt;a href="https://education.github.com/pack" title="GitHub Education Student pack"&gt;优惠活动&lt;/a&gt;，获得了一年免费的SSL证书。下面是具体的安装过程，当然SSL证书的安装跟博客程序（不管是wordpress或者typecho等等）无关，只是跟服务器的类型（比如Nginx、Apache或者IIS等）有关。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;----------操作说明----------               
系统：            阿里云CentOS 6.5
环境：            LNMP（只需配置Nginx服务器就行）
操作工具：        SecureCRT 7.0
博客程序：        Typecho 14.10
SSL证书提供商：    PositiveSSL from Namecheap
&lt;/pre&gt;&lt;/div&gt;




&lt;h5&gt;一、在web服务器上生成私钥、CSR签名请求文件&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;###### 1 生成2048bit的RSA私钥文件typecodes.key&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="n"&gt;typecodes&lt;/span&gt; &lt;span class="n"&gt;ssl&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="n"&gt;openssl&lt;/span&gt; &lt;span class="n"&gt;genrsa&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;des3&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;out&lt;/span&gt; &lt;span class="n"&gt;typecodes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="mi"&gt;2048&lt;/span&gt;
&lt;span class="n"&gt;Generating&lt;/span&gt; &lt;span class="n"&gt;RSA&lt;/span&gt; &lt;span class="n"&gt;private&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2048&lt;/span&gt; &lt;span class="n"&gt;bit&lt;/span&gt; &lt;span class="kt"&gt;long&lt;/span&gt; &lt;span class="n"&gt;modulus&lt;/span&gt;
&lt;span class="p"&gt;.......................&lt;/span&gt;&lt;span class="o"&gt;+++&lt;/span&gt;
&lt;span class="p"&gt;...............&lt;/span&gt;&lt;span class="o"&gt;+++&lt;/span&gt;
&lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="mi"&gt;65537&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mh"&gt;0x10001&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Enter&lt;/span&gt; &lt;span class="n"&gt;pass&lt;/span&gt; &lt;span class="n"&gt;phrase&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;typecodes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nl"&gt;key&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="n"&gt;Verifying&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Enter&lt;/span&gt; &lt;span class="n"&gt;pass&lt;/span&gt; &lt;span class="n"&gt;phrase&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;typecodes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nl"&gt;key&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;输入两次相同的密码&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="cp"&gt;###### 2 生成CSR证书签名请求文件typecodes.csr &lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="n"&gt;typecodes&lt;/span&gt; &lt;span class="n"&gt;ssl&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="n"&gt;openssl&lt;/span&gt; &lt;span class="n"&gt;req&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="n"&gt;typecodes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;out&lt;/span&gt; &lt;span class="n"&gt;typecodes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;csr&lt;/span&gt;
&lt;span class="n"&gt;Enter&lt;/span&gt; &lt;span class="n"&gt;pass&lt;/span&gt; &lt;span class="n"&gt;phrase&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;typecodes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nl"&gt;key&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;输入之前的密码&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;You&lt;/span&gt; &lt;span class="n"&gt;are&lt;/span&gt; &lt;span class="n"&gt;about&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;asked&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;enter&lt;/span&gt; &lt;span class="n"&gt;information&lt;/span&gt; &lt;span class="n"&gt;that&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;incorporated&lt;/span&gt;
&lt;span class="n"&gt;into&lt;/span&gt; &lt;span class="n"&gt;your&lt;/span&gt; &lt;span class="n"&gt;certificate&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;What&lt;/span&gt; &lt;span class="n"&gt;you&lt;/span&gt; &lt;span class="n"&gt;are&lt;/span&gt; &lt;span class="n"&gt;about&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;enter&lt;/span&gt; &lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="n"&gt;what&lt;/span&gt; &lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="n"&gt;called&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;Distinguished&lt;/span&gt; &lt;span class="n"&gt;Name&lt;/span&gt; &lt;span class="n"&gt;or&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;DN&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;There&lt;/span&gt; &lt;span class="n"&gt;are&lt;/span&gt; &lt;span class="n"&gt;quite&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;few&lt;/span&gt; &lt;span class="n"&gt;fields&lt;/span&gt; &lt;span class="n"&gt;but&lt;/span&gt; &lt;span class="n"&gt;you&lt;/span&gt; &lt;span class="n"&gt;can&lt;/span&gt; &lt;span class="n"&gt;leave&lt;/span&gt; &lt;span class="n"&gt;some&lt;/span&gt; &lt;span class="n"&gt;blank&lt;/span&gt;
&lt;span class="n"&gt;For&lt;/span&gt; &lt;span class="n"&gt;some&lt;/span&gt; &lt;span class="n"&gt;fields&lt;/span&gt; &lt;span class="n"&gt;there&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="n"&gt;If&lt;/span&gt; &lt;span class="n"&gt;you&lt;/span&gt; &lt;span class="n"&gt;enter&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;field&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;left&lt;/span&gt; &lt;span class="n"&gt;blank&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="o"&gt;-----&lt;/span&gt;
&lt;span class="n"&gt;Country&lt;/span&gt; &lt;span class="n"&gt;Name&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="n"&gt;letter&lt;/span&gt; &lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;XX&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;CN&lt;/span&gt;    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;国籍&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;State&lt;/span&gt; &lt;span class="n"&gt;or&lt;/span&gt; &lt;span class="n"&gt;Province&lt;/span&gt; &lt;span class="n"&gt;Name&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;full&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;GuangDong&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;省份&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;Locality&lt;/span&gt; &lt;span class="n"&gt;Name&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;eg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;city&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Default&lt;/span&gt; &lt;span class="n"&gt;City&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;ShenZhen&lt;/span&gt;    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;城市&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;Organization&lt;/span&gt; &lt;span class="n"&gt;Name&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;eg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;company&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Default&lt;/span&gt; &lt;span class="n"&gt;Company&lt;/span&gt; &lt;span class="n"&gt;Ltd&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;TypeCodes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;公司&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;Organizational&lt;/span&gt; &lt;span class="n"&gt;Unit&lt;/span&gt; &lt;span class="n"&gt;Name&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;eg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;section&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;TypeCodes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;行业&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;Common&lt;/span&gt; &lt;span class="n"&gt;Name&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;eg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;your&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="n"&gt;or&lt;/span&gt; &lt;span class="n"&gt;your&lt;/span&gt; &lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="n"&gt;hostname&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;TypeCodes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;自己的域名&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;Email&lt;/span&gt; &lt;span class="n"&gt;Address&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;vfhky&lt;/span&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="n"&gt;typecodes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;

&lt;span class="n"&gt;Please&lt;/span&gt; &lt;span class="n"&gt;enter&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;following&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;extra&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;attributes&lt;/span&gt;
&lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;sent&lt;/span&gt; &lt;span class="n"&gt;with&lt;/span&gt; &lt;span class="n"&gt;your&lt;/span&gt; &lt;span class="n"&gt;certificate&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;
&lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="n"&gt;challenge&lt;/span&gt; &lt;span class="n"&gt;password&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;这里不填&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;An&lt;/span&gt; &lt;span class="n"&gt;optional&lt;/span&gt; &lt;span class="n"&gt;company&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;这里不填&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="cp"&gt;###### 3 去掉密钥文件typecodes.key的密码  【强烈推荐】 &lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="n"&gt;typecodes&lt;/span&gt; &lt;span class="n"&gt;ssl&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="n"&gt;cp&lt;/span&gt; &lt;span class="n"&gt;typecodes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="n"&gt;typecodes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;origin&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="n"&gt;typecodes&lt;/span&gt; &lt;span class="n"&gt;ssl&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="n"&gt;openssl&lt;/span&gt; &lt;span class="n"&gt;rsa&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;typecodes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;origin&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;out&lt;/span&gt; &lt;span class="n"&gt;typecodes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;
&lt;span class="n"&gt;Enter&lt;/span&gt; &lt;span class="n"&gt;pass&lt;/span&gt; &lt;span class="n"&gt;phrase&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;typecodes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nl"&gt;origin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="n"&gt;writing&lt;/span&gt; &lt;span class="n"&gt;RSA&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;输入之前的密码&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="cp"&gt;###### 4 当然也可用openssl通过私钥和CSR自己生成签名文件，但是可能不被浏览器认可，所以本步骤应该跳过 &lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="n"&gt;typecodes&lt;/span&gt; &lt;span class="n"&gt;ssl&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="n"&gt;openssl&lt;/span&gt; &lt;span class="n"&gt;x509&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;req&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;days&lt;/span&gt; &lt;span class="mi"&gt;365&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;typecodes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;csr&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;signkey&lt;/span&gt; &lt;span class="n"&gt;typecodes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;out&lt;/span&gt; &lt;span class="n"&gt;typecodes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;crt&lt;/span&gt;
&lt;span class="n"&gt;Signature&lt;/span&gt; &lt;span class="n"&gt;ok&lt;/span&gt;
&lt;span class="n"&gt;subject&lt;/span&gt;&lt;span class="o"&gt;=/&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;CN&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ST&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;GuangDong&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;L&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;ShenZhen&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;O&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;TypeCodes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;OU&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;TypeCodes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;CN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;TypeCodes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;emailAddress&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;vfhky&lt;/span&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="n"&gt;typecodes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;
&lt;span class="n"&gt;Getting&lt;/span&gt; &lt;span class="n"&gt;Private&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;
&lt;span class="cp"&gt;###### 5 查看上面4个步骤所产生的文件，其中typecodes.crt是不需要的&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="n"&gt;typecodes&lt;/span&gt; &lt;span class="n"&gt;ssl&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="n"&gt;ls&lt;/span&gt;
&lt;span class="n"&gt;typecodes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;crt&lt;/span&gt;  &lt;span class="n"&gt;typecodes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;csr&lt;/span&gt;  &lt;span class="n"&gt;typecodes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;  &lt;span class="n"&gt;typecodes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;origin&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;二、获取SSL证书提供商发放的数字证书&lt;/h5&gt;
&lt;p&gt;首先进入Namecheap的SSL证书&lt;a href="https://manage.www.namecheap.com/myaccount/ssl-list.asp"&gt;管理界面&lt;/a&gt;，然后点击“Active Now”按钮准备购入SSL产品。这时会进入“Digital Certificate Order Form”页面，根据自己的web服务器类型在“Select Web Sever”中选择，博主的是Nginx。接着在SecureCRT终端上执行命令 &lt;code&gt;[root@typecodes ssl]# cat typecodes.csr&lt;/code&gt; ，然后复制从 &lt;code&gt;-----BEGIN CERTIFICATE REQUEST-----&lt;/code&gt; 到 &lt;code&gt;-----END CERTIFICATE REQUEST-----&lt;/code&gt; 中的所有内容再粘贴到“Enter csr”下面的空白栏中。&lt;/p&gt;
&lt;p&gt;&lt;img alt="复制typecodes.crt中的内容" src="https://o3cex9zsl.qnssl.com/2014/10/ssltypecodescsr.png" title="复制typecodes.crt中的内容" /&gt;&lt;/p&gt;
&lt;p&gt;最后点击“Next”，这时的界面会显示你的域名Whois信息上的相关邮箱地址列表，你需要选择能正常接收验证码的域名邮箱（&lt;code&gt;注意：使用了第三方如QQ企业邮箱等，在页面是不能显示出来的&lt;/code&gt;）。填写完使用者的相关信息（像城市名、街道名等等尽量使用英文，中文可能会出错）后，Namecheap会发一封有验证码的邮件到你选择的域名邮箱中，进入邮箱点击“here”按钮，然后输入验证码即可完成SSL订单。这时，Namecheap会把PositiveSSL证书文件通过邮件发送到自己的邮箱发送证书邮件。&lt;/p&gt;
&lt;p&gt;&lt;img alt="Namecheap发送的验证码" src="https://o3cex9zsl.qnssl.com/2014/10/namecheapvalidcode.png" title="Namecheap发送的验证码" /&gt;&lt;/p&gt;
&lt;h5&gt;三、配置服务器中Nginx文件&lt;/h5&gt;
&lt;p&gt;SSL证书提供商会在邮件中提供我们需要的四个.crt文件：&lt;code&gt;域名证书文件typecodes_com.crt&lt;/code&gt;、&lt;code&gt;COMODORSADomainValidationSecureServerCA.crt&lt;/code&gt;、&lt;code&gt;COMODORSAAddTrustCA.crt&lt;/code&gt;、&lt;code&gt;根证书文件AddTrustExternalCARoot.crt&lt;/code&gt; ，把它们导入到web服务器中的某个目录，例如/etc/nginx/ssl。一般情况下，直接用域名证书typecodes_com.crt即可受到浏览器（例如chrome等）的信任。但是为了避免在火狐firefox中出现“此连接不受信任”的警告，需要按照以下顺序合并所有证书文件，然后重新生成一个.crt文件：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@typecodes ssl]# cat typecodes_com.crt COMODORSADomainValidationSecureServerCA.crt COMODORSAAddTrustCA.crt AddTrustExternalCARoot.crt &amp;gt; typecodes_last.crt
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;最后，我们需要修改Nginx的配置文件（/etc/nginx/conf.d/default.conf）来让Nginx启用https协议，示例如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="err"&gt;######&lt;/span&gt; &lt;span class="err"&gt;开始配置&lt;/span&gt;&lt;span class="nt"&gt;Nginx&lt;/span&gt;&lt;span class="err"&gt;文件，支持&lt;/span&gt;&lt;span class="nt"&gt;http&lt;/span&gt;&lt;span class="err"&gt;协议跳转到&lt;/span&gt;&lt;span class="nt"&gt;https&lt;/span&gt;&lt;span class="err"&gt;协议&lt;/span&gt;
&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;root&lt;/span&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nx"&gt;typecodes&lt;/span&gt; &lt;span class="nx"&gt;conf.d&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="nt"&gt;vi&lt;/span&gt; &lt;span class="nt"&gt;default&lt;/span&gt;&lt;span class="nc"&gt;.conf&lt;/span&gt;
&lt;span class="err"&gt;######&lt;/span&gt; &lt;span class="err"&gt;新增一个“&lt;/span&gt;&lt;span class="nt"&gt;server&lt;/span&gt;&lt;span class="err"&gt;”，保留原&lt;/span&gt;&lt;span class="nt"&gt;80&lt;/span&gt;&lt;span class="err"&gt;端口，并强制将&lt;/span&gt;&lt;span class="nt"&gt;http&lt;/span&gt;&lt;span class="err"&gt;协议转换到&lt;/span&gt;&lt;span class="nt"&gt;https&lt;/span&gt;&lt;span class="err"&gt;协议&lt;/span&gt;
&lt;span class="nt"&gt;server&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;listen&lt;/span&gt; &lt;span class="m"&gt;80&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;server_name&lt;/span&gt; &lt;span class="n"&gt;www&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;typecodes&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;rewrite&lt;/span&gt; &lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;.*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;https&lt;/span&gt;&lt;span class="o"&gt;://&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;server_name&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="n"&gt;permanent&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="err"&gt;######&lt;/span&gt; &lt;span class="err"&gt;在原“&lt;/span&gt;&lt;span class="nt"&gt;server&lt;/span&gt;&lt;span class="err"&gt;”中，启用支持&lt;/span&gt;&lt;span class="nt"&gt;https&lt;/span&gt;&lt;span class="err"&gt;协议的&lt;/span&gt;&lt;span class="nt"&gt;443&lt;/span&gt;&lt;span class="err"&gt;端口，并配置相关信息&lt;/span&gt;
&lt;span class="nt"&gt;server&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;listen&lt;/span&gt; &lt;span class="m"&gt;443&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;server_name&lt;/span&gt;  &lt;span class="n"&gt;www&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;typecodes&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="n"&gt;ssl&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="err"&gt;最后新生成&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;crt&lt;/span&gt;&lt;span class="err"&gt;文件&lt;/span&gt;
    &lt;span class="n"&gt;ssl_certificate&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;nginx&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ssl&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;typecodes_last&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;crt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="err"&gt;最开始生成&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="err"&gt;文件&lt;/span&gt;
    &lt;span class="n"&gt;ssl_certificate_key&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;nginx&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ssl&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;typecodes&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;ssl_session_cache&lt;/span&gt; &lt;span class="n"&gt;shared&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;SSL&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;ssl_session_timeout&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;ssl_ciphers&lt;/span&gt; &lt;span class="n"&gt;ALL&lt;/span&gt;&lt;span class="o"&gt;:!&lt;/span&gt;&lt;span class="n"&gt;aNULL&lt;/span&gt;&lt;span class="o"&gt;:!&lt;/span&gt;&lt;span class="n"&gt;ADH&lt;/span&gt;&lt;span class="o"&gt;:!&lt;/span&gt;&lt;span class="n"&gt;eNULL&lt;/span&gt;&lt;span class="o"&gt;:!&lt;/span&gt;&lt;span class="n"&gt;LOW&lt;/span&gt;&lt;span class="o"&gt;:!&lt;/span&gt;&lt;span class="n"&gt;EXP&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;RC4&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;RSA&lt;/span&gt;&lt;span class="o"&gt;:+&lt;/span&gt;&lt;span class="n"&gt;HIGH&lt;/span&gt;&lt;span class="o"&gt;:+&lt;/span&gt;&lt;span class="n"&gt;MEDIUM&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="m"&gt;#Disabl&lt;/span&gt;&lt;span class="n"&gt;es&lt;/span&gt; &lt;span class="n"&gt;all&lt;/span&gt; &lt;span class="n"&gt;weak&lt;/span&gt; &lt;span class="n"&gt;ciphers&lt;/span&gt;
    &lt;span class="n"&gt;ssl_protocols&lt;/span&gt; &lt;span class="n"&gt;SSLv3&lt;/span&gt; &lt;span class="n"&gt;TLSv1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="m"&gt;#enable&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="n"&gt;SSLv3&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;TLSv1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;but&lt;/span&gt; &lt;span class="n"&gt;not&lt;/span&gt; &lt;span class="n"&gt;SSLv2&lt;/span&gt; &lt;span class="n"&gt;which&lt;/span&gt; &lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="n"&gt;weak&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="n"&gt;should&lt;/span&gt; &lt;span class="n"&gt;no&lt;/span&gt; &lt;span class="n"&gt;longer&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;used&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
    &lt;span class="n"&gt;ssl_prefer_server_ciphers&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;***************&lt;/span&gt;&lt;span class="err"&gt;省略其它不变的部分&lt;/span&gt;&lt;span class="o"&gt;****************&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="err"&gt;######&lt;/span&gt; &lt;span class="err"&gt;重启&lt;/span&gt;&lt;span class="nt"&gt;Nginx&lt;/span&gt;&lt;span class="err"&gt;服务&lt;/span&gt;
&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;root&lt;/span&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nx"&gt;typecodes&lt;/span&gt; &lt;span class="nx"&gt;conf.d&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="nt"&gt;service&lt;/span&gt; &lt;span class="nt"&gt;nginx&lt;/span&gt; &lt;span class="nt"&gt;restart&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这时访问www.typecodes.com或者typecodes.com都会自动跳转到https://www.typecodes.com了。因此，大功告成！&lt;/p&gt;
&lt;h5&gt;四、解决可能出现的问题&lt;/h5&gt;
&lt;h6&gt;4.1 SSL证书在Firefox浏览器中出现警告&lt;/h6&gt;
&lt;p&gt;解决方法是如上面的操作所示，将所有证书文件合并即可。&lt;/p&gt;
&lt;p&gt;&lt;img alt="火狐firefox中出现“此连接不受信任”的警告" src="https://o3cex9zsl.qnssl.com/2014/10/sslfirefoxwarning.png" title="火狐firefox中出现“此连接不受信任”的警告" /&gt;&lt;/p&gt;
&lt;h6&gt;4.2 解决"Chain issues - Contains anchor"的问题&lt;/h6&gt;
&lt;p&gt;如果在ssllabs.com中进行SSL效果测试时，发现"Chain issues - Contains anchor"的问题，那么可以尝试不要把&lt;code&gt;AddTrustExternalCARoot.crt&lt;/code&gt;证书内容添加到最终合成的证书typecodes_last.crt中去。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@typecodes ssl]# cat typecodes_com.crt COMODORSADomainValidationSecureServerCA.crt COMODORSAAddTrustCA.crt &amp;gt; typecodes_last.crt
&lt;/pre&gt;&lt;/div&gt;


&lt;h6&gt;4.3 密钥.key文件的密码弄错&lt;/h6&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;nginx: [emerg] SSL_CTX_use_PrivateKey_file(&amp;quot;/etc/nginx/typecodes.key&amp;quot;) failed (SSL: error:28069065:lib(40):UI_set_result:result too small:You must type in 4 to 1024 characters error:0906406D:PEM routines:PEM_def_callback:problems getting password error:0906A068:PEM routines:PEM_do_header:bad password read error:140B0009:SSL routines:SSL_CTX_use_PrivateKey_file:PEM lib)
nginx: configuration file /etc/nginx/nginx.conf test failed
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在生成密钥.key文件时，需要重复输入相同的密码两次，如果在接下来的步骤中输入错误的密码，就会出现上面这个错误。所以，我们最好执行上面推荐的步骤，去掉密码！&lt;/p&gt;
&lt;h6&gt;4.4 crt域名证书和密钥.key文件不匹配，则需要重头开始操作：&lt;/h6&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;nginx: [emerg] SSL_CTX_use_PrivateKey_file(&amp;quot;/etc/inx/decryptedprivate.key&amp;quot;) failed (SSL: error:0B080074:x509 certificate routines:X509_check_private_key:key values mismatch)
nginx: configuration file /etc/inx.conf test failed
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;我们可以通过 &lt;code&gt;https://www.sslchecker.com/matcher&lt;/code&gt; 进行匹配验证：把邮件中的域名证书 &lt;code&gt;typecodes_com.crt&lt;/code&gt; 中的内容粘贴到第一个栏目中，把最初生成的 &lt;code&gt;typecodes.key&lt;/code&gt; 中的内容填写到第二栏中，然后点击“Match”按钮，结果显示如图绿色提示“CSR match SSL” 则说明证书和密钥匹配。当然把之前生成的 typecodes.csr 中的内容粘贴到第二栏中也是匹配的。&lt;/p&gt;
&lt;h5&gt;五、针对typecho博客的数据库改动&lt;/h5&gt;
&lt;p&gt;操作数据库前，记得先备份！&lt;/p&gt;
&lt;h6&gt;5.1 更改博客url地址&lt;/h6&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;select&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nt"&gt;from&lt;/span&gt; &lt;span class="nt"&gt;typecho_options&lt;/span&gt; &lt;span class="nt"&gt;where&lt;/span&gt; &lt;span class="nt"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;siteUrl&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="nt"&gt;update&lt;/span&gt; &lt;span class="nt"&gt;typecho_options&lt;/span&gt; &lt;span class="nt"&gt;set&lt;/span&gt; &lt;span class="nt"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;https://www.typecodes.com&amp;#39;&lt;/span&gt; &lt;span class="nt"&gt;where&lt;/span&gt; &lt;span class="nt"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;siteUrl&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h6&gt;5.2 更改博客作者的地址以及新浪SCS图片的路径&lt;/h6&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;select&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nt"&gt;from&lt;/span&gt; &lt;span class="nt"&gt;typecho_users&lt;/span&gt; &lt;span class="nt"&gt;where&lt;/span&gt; &lt;span class="nt"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;user_name&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="nt"&gt;update&lt;/span&gt; &lt;span class="nt"&gt;typecho_users&lt;/span&gt; &lt;span class="nt"&gt;set&lt;/span&gt; &lt;span class="nt"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;https://www.typecodes.com&amp;#39;&lt;/span&gt; &lt;span class="nt"&gt;where&lt;/span&gt; &lt;span class="nt"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;user_name&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="nt"&gt;UPDATE&lt;/span&gt; &lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="nt"&gt;typecho_contents&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt; &lt;span class="nt"&gt;SET&lt;/span&gt; &lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="nt"&gt;text&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nt"&gt;REPLACE&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="nt"&gt;text&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;http://www.typecodes.com/usr/uploads/&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;https://o3cex9zsl.qnssl.com/&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Wed, 15 Oct 2014 00:02:00 +0800</pubDate><guid>tag:typecodes.com,2014-10-15:web/lnmppositivessl.html</guid><category>ssl证书</category><category>github pack</category><category>阿里云ssl</category><category>positivessl</category></item><item><title>更新新浪云存储(SCS) for Typecho 插件版本V1.1.1</title><link>https://typecodes.com/web/scsfortypechov111.html</link><description>&lt;h5&gt;1 更新说明&lt;/h5&gt;
&lt;p&gt;感谢 @奇趣铺 的使用反馈，插件版本更新至最新的V1.1.1。更新内容如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;1、更新官方SDK文件；
2、增加SCS存储路径参数配置，用户能更自由定义SCS存储路径；
3、取消SCS附件前缀用Unix time stamp格式命名，保持原附件名称不变。
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;2 版本升级方法&lt;/h5&gt;
&lt;p&gt;下面对于 Linux主机 和 Windows主机 的升级方法同样适用于之前没有安装该插件的童鞋，步骤完全一样。&lt;/p&gt;


&lt;h6&gt;2.1 Linux主机（推荐）&lt;/h6&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;###### 进入插件目录，然后获取github上最新的插件版本
[root@typecodes plugins]# wget -c https://github.com/vfhky/SCS/archive/master.zip
###### 将下载的master.zip解压得到SCS-master文件夹
[root@typecodes plugins]# unzip master.zip
###### 删除之前的SCS版本，然后重命名SCS-master文件夹为SCS
[root@typecodes plugins]# rm -rf SCS;mv SCS-master SCS
###### 版本更新完毕，进入typecho后台启用即可
&lt;/pre&gt;&lt;/div&gt;


&lt;h6&gt;2.2 Windows主机&lt;/h6&gt;
&lt;p&gt;对于Windows主机，可以上github上下载插件最新版本，或者下载目前最新的版本
&lt;a href="https://github.com/vfhky/SCS/archive/v1.1.1.tar.gz" title="github版本V1.1.1下载"&gt;SCS for Typecho V1.1.1&lt;/a&gt;，然后ftp上传到服务器，&lt;code&gt;重命名文件夹为SCS&lt;/code&gt; 即可。&lt;/p&gt;
&lt;h5&gt;3 插件使用教程&lt;/h5&gt;
&lt;p&gt;插件的基本设置和之前版本V1.0.4、V1.1.0一样。这里只对SCS存储路径参数配置和保持SCS附件名称这两个元素进行说明。&lt;/p&gt;
&lt;h6&gt;3.1 SCS存储路径参数配置&lt;/h6&gt;
&lt;p&gt;之前V1.1.0版本在日期方面是固定的 &lt;code&gt;年份/月份/附件上传的时间戳.后缀&lt;/code&gt; 这种样式，根据@奇趣铺的反馈，希望增加 &lt;code&gt;年份/原附件名.后缀&lt;/code&gt; 的形式。于是在插件中新增三个配置参数：{year}代表年份、{month}代表月份、{day}代表天数，用户可任意选择使用。因此，对于单纯的 &lt;code&gt;年份&lt;/code&gt; 这种形式，只需要在“自定义SCS路径”这项中输入 &lt;code&gt;{year}&lt;/code&gt; 就行了。&lt;/p&gt;
&lt;p&gt;同时，和之前的版本一样，如果“自定义SCS路径”这一项不填的话，那么SCS附件的路径依然是默认的 &lt;code&gt;年份/月份&lt;/code&gt; 形式。最后，对于混合样式，例如 &lt;code&gt;{year}/a目录/{month}/b目录/{day}&lt;/code&gt; 等等，插件也都支持。&lt;/p&gt;
&lt;p&gt;&lt;img alt="自定义SCS路径参数配置" src="https://o3cex9zsl.qnssl.com/2014/09/scs111set.png" title="自定义SCS路径参数配置" /&gt;&lt;/p&gt;
&lt;h6&gt;3.2 取消SCS附件的Unix time stamp命名方式，以原附件名称替代&lt;/h6&gt;
&lt;p&gt;考虑到和typecho上传附件的命名方式一致，之前插件所有版本都将上传至SCS的附件以Unix time stamp的值作为名称保存的，例如上面这张图片的名称就是4218153884.png。为了利于附件的识别，现决定在附件上传时，保持其名称不变，例如将本地一张名为a.png的图片上传至SCS，那么SCS上的文件名也还是a.png，而不会类似于之前的4218153884.png。&lt;/p&gt;
&lt;h5&gt;4 反馈和建议&lt;/h5&gt;
&lt;p&gt;本版本V1.1.1已经在SAE和BAE平台测试通过，目前博客也正在使用。任何问题，大家可以在这里反馈和讨论下。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Sat, 20 Sep 2014 11:34:00 +0800</pubDate><guid>tag:typecodes.com,2014-09-20:web/scsfortypechov111.html</guid><category>新浪云存储scs</category><category>typecho插件</category></item><item><title>更新新浪云存储(SCS) for Typecho 插件版本V1.1.0</title><link>https://typecodes.com/web/scsfortypechov110.html</link><description>&lt;h5&gt;1 更新说明&lt;/h5&gt;
&lt;p&gt;根据新浪云存储(SCS)官方计划，相比之前新增&lt;a href="https://open.sinastorage.com/?c=doc&amp;amp;a=guide&amp;amp;section=domain" title="官方详细说明"&gt;域名绑定功能&lt;/a&gt;。于是博主调整了SCS插件，同样更新的源代码已经托管在 &lt;a href="https://github.com/vfhky/SCS/" title="新浪云存储(SCS) for Typecho 插件"&gt;github&lt;/a&gt; 上了。&lt;/p&gt;
&lt;h5&gt;2 本次版本V1.1.0更新的主要内容：&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;1、更新SDK文件至官方最新；
2、优化自定义路径方式，用户能更自由定义SCS存储路径；
3、新增SCS域名绑定功能，用户可以自由选择是否启用该功能；
4、优化文章上传后附件显示的路径，更为简洁。
&lt;/pre&gt;&lt;/div&gt;




&lt;h5&gt;3 版本升级方法&lt;/h5&gt;
&lt;p&gt;下面对于 Linux主机 和 Windows主机 的升级方法同样适用于之前没有安装该插件的童鞋，步骤完全一样。&lt;/p&gt;
&lt;h6&gt;3.1 Linux主机（推荐）&lt;/h6&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;###### 进入插件目录，然后获取github上最新的插件版本
[root@typecodes plugins]# wget https://github.com/vfhky/SCS/archive/master.zip
###### 将下载的master.zip解压得到SCS-master文件夹
[root@typecodes plugins]# unzip master.zip
###### 删除之前的SCS版本，然后重命名SCS-master文件夹为SCS
[root@typecodes plugins]# rm -rf SCS;mv SCS-master SCS
###### 版本更新完毕，进入typecho后台启用即可
&lt;/pre&gt;&lt;/div&gt;


&lt;h6&gt;3.2 Windows主机&lt;/h6&gt;
&lt;p&gt;对于Windows主机，可以上github上下载插件最新版本，或者下载目前最新的版本
&lt;a href="https://github.com/vfhky/SCS/archive/v1.1.0.tar.gz" title="github版本V1.1.0下载"&gt;SCS for Typecho V1.1.0&lt;/a&gt;，然后ftp上传到服务器，&lt;code&gt;重命名文件夹为SCS&lt;/code&gt; 即可。&lt;/p&gt;
&lt;h5&gt;4 插件使用教程&lt;/h5&gt;
&lt;p&gt;插件的基本设置和前文&lt;a href="https://typecodes.com/web/scsfortypecho.html" title="《新浪云存储(SCS) for Typecho 插件》"&gt;新浪云存储(SCS) for Typecho 插件&lt;/a&gt;初始版本V1.0.4那样。这里只对新增的三个重要元素进行说明。&lt;/p&gt;
&lt;h6&gt;4.1 是否启用域名绑定功能&lt;/h6&gt;
&lt;p&gt;如果已经在新浪SCS上通过了&lt;a href="https://open.sinastorage.com/?c=console&amp;amp;a=parked_domain" title="官方申请地址"&gt;域名绑定&lt;/a&gt;的审核，那么就可以通过在typecho后台设置插件中启用该功能。&lt;/p&gt;
&lt;p&gt;&lt;img alt="新浪SCS域名绑定为o3cex9zsl.qnssl.com" src="https://o3cex9zsl.qnssl.com/2014/09/scsbinddomain.png" title="新浪SCS域名绑定为o3cex9zsl.qnssl.com" /&gt;&lt;/p&gt;
&lt;p&gt;由上图可以看到，博主已经将名为typecodes的bucket绑定在域名 &lt;code&gt;o3cex9zsl.qnssl.com&lt;/code&gt; 上了，于是进入typecho后台设置插件即可。&lt;/p&gt;
&lt;p&gt;&lt;img alt="在typecho后台设置SCS插件" src="https://o3cex9zsl.qnssl.com/2014/09/typechoscsconfig.png" title="在typecho后台设置SCS插件" /&gt;&lt;/p&gt;
&lt;p&gt;启用功能的效果就是将之前附件地址中的新浪SCS域名转换为自己的域名，例如
&lt;code&gt;http://sinastorage.cn/typecodes/2014/09/2018610863.png?KID=sina,k3ke9fHcgOHNIKowXKDi&amp;amp;Expires=1496546878&amp;amp;ssig=TGBdVgAwKR&lt;/code&gt;
转换为
&lt;code&gt;https://o3cex9zsl.qnssl.com/2014/09/2018610863.png?KID=sina,k3ke9fHcgOHNIKowXKDi&amp;amp;Expires=1496546878&amp;amp;ssig=TGBdVgAwKR&lt;/code&gt;&lt;/p&gt;
&lt;h6&gt;4.2 解决自定义SCS路径的问题&lt;/h6&gt;
&lt;p&gt;之前V1.0.4版本要求用户如果需要自定义附件的路径，那么需要按照规则 &lt;code&gt;a目录/b目录/c目录/&lt;/code&gt; 这种形式输入。本次版本已修复该问题，用户可以任意输入形如 &lt;code&gt;/a目录/b目录/c目录/&lt;/code&gt; 、 &lt;code&gt;//a目录/b目录/c目录//&lt;/code&gt;、&lt;code&gt;\\a目录\\b目录\\c目录\\&lt;/code&gt; 等等。&lt;/p&gt;
&lt;h6&gt;4.3 优化文章上传后附件显示的路径，更为简洁&lt;/h6&gt;
&lt;p&gt;之前V1.0.4版本，文章上传后附件的地址过长。考虑到上传的附件在SCS上的ACL对匿名用户来是“可读”的，也即无需签名验证。所以本次版本将其转换为正常的简洁URL地址，例如：
&lt;code&gt;https://o3cex9zsl.qnssl.com/2014/09/2018610863.png?KID=sina,k3ke9fHcgOHNIKowXKDi&amp;amp;Expires=1496546878&amp;amp;ssig=TGBdVgAwKR&lt;/code&gt;
会被转换为
&lt;code&gt;https://o3cex9zsl.qnssl.com/2014/09/2018610863.png&lt;/code&gt;&lt;/p&gt;
&lt;h5&gt;5 反馈和建议&lt;/h5&gt;
&lt;p&gt;本版本V1.1.0已经在SAE和BAE平台测试通过，使用中有任何问题，大家可以在这里反馈和讨论下。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Sat, 13 Sep 2014 00:00:00 +0800</pubDate><guid>tag:typecodes.com,2014-09-13:web/scsfortypechov110.html</guid><category>新浪云存储scs</category><category>typecho插件</category></item><item><title>新浪云存储(SCS) for Typecho 插件</title><link>https://typecodes.com/web/scsfortypecho.html</link><description>&lt;h5&gt;1 SCS插件说明&lt;/h5&gt;
&lt;p&gt;由于博主平常喜欢刷微博，所以关注了不少活动。最近在微博上看到 &lt;a href="http://weibo.com/cloudtrans" title="新浪云储存SCS官方微博"&gt;新浪云储存SCS&lt;/a&gt; 正在公测云储存服务（类似于七牛、百度BCS），于是私信获得了邀请码。测试发现其功能和性价比都不错，所以决定把博客所有的图片、下载文件等附件放到SCS上来。&lt;/p&gt;
&lt;p&gt;因此，写了一个Typecho博客的插件——SCS，它能自动将文章上传的附件转存至新浪云储存SCS中。&lt;/p&gt;


&lt;h5&gt;2 插件功能简介&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;1、自动将typecho附件上传至新浪云存储SCS；
2、支持自定义上传路径；支持附件修改；
3、支持新浪云平台（SAE）；
4、同步typecho附件状态至新浪云储存SCS（例如删除、修改等）。
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;3 下载地址&lt;/h5&gt;
&lt;p&gt;插件源码已提交至 &lt;a href="https://github.com/vfhky/SCS" title="Github插件源码"&gt;Github&lt;/a&gt; ，大家可以下载。更简便的方式是：&lt;/p&gt;
&lt;h6&gt;3.1 Linux主机（推荐）&lt;/h6&gt;
&lt;p&gt;对于Linux主机，无需ftp上传，直接通过命令获取github上插件最新版本并下载：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;###### 进入博客的插件根目录plugins
[root@typecodes plugins]# wget -c https://github.com/vfhky/SCS/archive/master.zip
###### 将下载的 master.zip 文件解压得到 SCS-master 文件夹
[root@typecodes plugins]# unzip master.zip
###### 重命名插件名称为 SCS 
[root@typecodes plugins]# mv SCS-master/ SCS 
###### 下载完成了，进入typecho后台启用插件即可
&lt;/pre&gt;&lt;/div&gt;


&lt;h6&gt;3.2 Windows主机&lt;/h6&gt;
&lt;p&gt;对于Windows主机，可以上github上下载插件最新版本，或者下载目前最新的版本&lt;a href="https://o3cex9zsl.qnssl.com/2014/09/SCS.zip" title="已存储在新浪SCS上"&gt;SCS for Typecho V1.0.4&lt;/a&gt;，然后ftp上传到服务器，重命名文件夹为SCS即可。&lt;/p&gt;
&lt;h5&gt;4 使用教程&lt;/h5&gt;
&lt;p&gt;首先当然是获取新浪云储存SCS的公测邀请码（可私信其官方微博），然后创建一个用于存储typecho上传的附件的仓库——bucket，例如博主创建的这个typecodes。然后点击右边的“ 获取Secret Key”按钮得到所需的SecretKey值。&lt;/p&gt;
&lt;p&gt;&lt;img alt="新浪云储存SCS创建bucket" src="https://o3cex9zsl.qnssl.com/2014/09/scscreatbucket.png" title="新浪云储存SCS创建bucket" /&gt;&lt;/p&gt;
&lt;p&gt;然后进入typecho的后台并启用 SCS 插件，再点击 “设置” 按钮，进入到 SCS 插件信息的设置页面。&lt;/p&gt;
&lt;p&gt;&lt;img alt="typecho后台启用SCS插件" src="https://o3cex9zsl.qnssl.com/2014/09/startscsplugin.png" title="typecho后台启用SCS插件" /&gt;&lt;/p&gt;
&lt;p&gt;其中，Bucke名称、AccessKey和SecretKey为必填项，值都是从步骤1中获取的。“自定义SCS路径”为非必填项目，用于定义附件在云SCS中储存的路径。如果不填，则默认上传至云SCS的附件路径为 “年份+月份” 形式，类似于： &lt;code&gt;http://sinastorage.cn/typecodes/2014/09/2018610863.png?KID=sina,k3ke9fHcgOHNIKowXKDi&amp;amp;Expires=1496546878&amp;amp;ssig=TGBdVgAwKR&lt;/code&gt; 还可以自定义为其他形式，例如输入 “test1/test2/” ，那么它的最终形式类似于： &lt;code&gt;http://sinastorage.cn/typecodes/test1/test2/2018610863.png?KID=sina,k3ke9fHcgOHNIKowXKDi&amp;amp;Expires=1496546878&amp;amp;ssig=TGBdVgAwKR&lt;/code&gt; &lt;/p&gt;
&lt;p&gt;&lt;code&gt;注意&lt;/code&gt;:自定义的路径前面不要加斜杠符号"/"，后面要加斜杠符号"/"。&lt;/p&gt;
&lt;p&gt;&lt;img alt="SCS插件设置" src="https://o3cex9zsl.qnssl.com/2014/09/setscsplugin.png" title="SCS插件设置" /&gt;&lt;/p&gt;
&lt;p&gt;这时，插件已经配置成功了。那么在typecho后台发布文章时，添加附件可以看到如下所示，则表示插件运行成功！&lt;/p&gt;
&lt;p&gt;&lt;img alt="typecho添加附件成功" src="https://o3cex9zsl.qnssl.com/2014/09/scsplugindefalutstyle.png" title="typecho添加附件成功" /&gt;&lt;/p&gt;
&lt;h5&gt;5 反馈和建议&lt;/h5&gt;
&lt;p&gt;使用中有任何问题，大家可以在这里反馈和讨论下。&lt;/p&gt;
&lt;h5&gt;6 update on 2014.09.12&lt;/h5&gt;
&lt;p&gt;目前已更新至V1.1.0版本，请大家移步至文章&lt;a href="https://typecodes.com/web/scsfortypechov110.html" title="点击查看文章"&gt;《更新新浪云存储(SCS) for Typecho 插件版本V1.1.0》&lt;/a&gt;。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Mon, 08 Sep 2014 12:39:00 +0800</pubDate><guid>tag:typecodes.com,2014-09-08:web/scsfortypecho.html</guid><category>新浪云存储scs</category><category>typecho插件</category></item><item><title>音乐播放器PlayAtWill for typecho插件（移植自wordpress）</title><link>https://typecodes.com/web/typechomp3player.html</link><description>&lt;h5&gt;1 移植wordpress音乐播放器到typecho&lt;/h5&gt;
&lt;p&gt;在之前的wordpress主题 [vfhky] 中，集成了三款不同风格的&lt;a href="https://typecodes.com/mix/vfhkyinsertmusicplayer.html" title="教程：主题【vfhky】如何在文章中插入音乐播放器"&gt;音乐播放器&lt;/a&gt;，觉得挺不错的。于是想把它们移植到typecho中，顺便学习一下typecho插件的制作。&lt;/p&gt;
&lt;p&gt;由于typecho不能像wordpress那样可直接在functions.php中使用hook，它只能以插件plugins的形式实现。&lt;/p&gt;


&lt;h5&gt;2 typecho插件制作方法&lt;/h5&gt;
&lt;p&gt;typecho插件入门教程，可以参考：&lt;a href="http://docs.typecho.org/plugins/hello-world" title="《第一个插件Hello World》"&gt;官方文档&lt;/a&gt;。另外，参考别人写的插件程序也是很有帮助的。尤其是对于目前typecho没有完整的钩子说明文档，通过查看其它插件中所用到的hooks，我们就可以定制自己的插件了。&lt;/p&gt;
&lt;p&gt;typecho插件制作的主流程都是相同的：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;1、写激活插件的方法；
2、写禁用插件的方法
3、写获取插件配置面板；
4、写个人用户的配置面板；
5、写插件实现方法。
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;3 使用方法和效果&lt;/h5&gt;
&lt;p&gt;这款typecho音乐播放器 PlayAtWill 插件，支持播放地址包括站内和在线的mp3、mp4等音乐。使用方法示例：在typecho后台文章内容中任意插入如下短代码（可在一篇文章内同时支持这三种播放模式）： &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;### 手工控制播放的灰色风格 ###
&lt;span class="nt"&gt;&amp;lt;music1&amp;gt;&lt;/span&gt;http://qzone.haoduoge.com/up/6/MTYzMzcyMw.mp3&lt;span class="nt"&gt;&amp;lt;/music1&amp;gt;&lt;/span&gt;

### 自动播放的灰色风格 ###
&lt;span class="nt"&gt;&amp;lt;music1&amp;gt;&lt;/span&gt;http://qzone.haoduoge.com/up/6/MTYzMzcyMw.mp3&lt;span class="err"&gt;&amp;amp;&lt;/span&gt;autostart=yes&lt;span class="err"&gt;&amp;amp;&lt;/span&gt;titles=happy birthday&lt;span class="nt"&gt;&amp;lt;/music1&amp;gt;&lt;/span&gt;

### 自动播放的彩色风格 ###
&lt;span class="nt"&gt;&amp;lt;music2&amp;gt;&lt;/span&gt;http://qzone.haoduoge.com/up/6/MTYzMzcyMw.mp3&lt;span class="err"&gt;&amp;amp;&lt;/span&gt;autostart=yes&lt;span class="err"&gt;&amp;amp;&lt;/span&gt;titles=happy birthday&lt;span class="nt"&gt;&amp;lt;/music2&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;具体演示效果，请点击 &lt;a href="http://t.cn/RhcIUOL" title="插件PlayAtWill的演示效果"&gt;这里&lt;/a&gt;  体验，截图如下：&lt;/p&gt;
&lt;p&gt;&lt;img alt="插件PlayAtWill的风格截图" src="https://o3cex9zsl.qnssl.com/2014/09/pluginplayatwill.png" title="插件PlayAtWill的风格截图" /&gt;&lt;/p&gt;
&lt;h5&gt;4 代码程序&lt;/h5&gt;
&lt;p&gt;插件 PlayAtWill 的源代码已经提交到了github上面，插件下载地址： &lt;a href="https://github.com/vfhky/PlayAtWill" title="typecho音乐播放器 PlayAtWill "&gt;github&lt;/a&gt;  或者 &lt;a href="https://o3cex9zsl.qnssl.com/2014/09/PlayAtWill.zip" title="新浪云存储SCS下载"&gt;新浪SCS&lt;/a&gt; 。把这个插件（文件目录名是PlayAtWill）提交到typecho的插件目录，然后在后台启用该插件就可使用了。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Fri, 05 Sep 2014 22:53:00 +0800</pubDate><guid>tag:typecodes.com,2014-09-05:web/typechomp3player.html</guid><category>ypecho插件</category><category>typecho音乐播放器</category><category>playatwill</category></item><item><title>再谈“0xC0000005读取写入位置冲突”——正确使用指针访问内存</title><link>https://typecodes.com/cseries/pointermemaccess0xC0000005.html</link><description>&lt;p&gt;在&lt;a href="https://typecodes.com/cseries/trimspace0xC0000005.html" title="未经处理的异常:0xC0000005:读取/写入位置冲突——从去掉字符串所有空格说起"&gt;前面一篇文章&lt;/a&gt;中，总结了错误使用指针指向一个字符串常量，然后对该字符串常量进行写入操作导致出错：“未经处理的异常：0xC0000005: 读取/写入位置发生访问冲突”。&lt;/p&gt;
&lt;p&gt;这篇文章继续使用指针来探索这个问题。&lt;/p&gt;
&lt;h5&gt;1 测试程序：“异常: 0xC0000005: 写入位置 0xxxxxxxxx 时发生访问冲突”&lt;/h5&gt;


&lt;p&gt;下面是一个测试程序，主要是字符串的“连接”——strcat函数，malloc有迷惑性。其中，指针p1指向malloc在堆上开辟的连续内存块，数组p3是一种正确的字符连接方法。&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt; * @FileName :  pointermemaccess0xC0000005.c&lt;/span&gt;
&lt;span class="cm"&gt; * @Author   :  vfhky https://typecodes.com 2014.08.25 20:00&lt;/span&gt;
&lt;span class="cm"&gt; * @Functions:  不正确使用指针p1导致出现“异常: 0xC0000005”和正确使用数组实现字符串的连接&lt;/span&gt;
&lt;span class="cm"&gt;*/&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;string.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;stdlib.h&amp;gt;&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;argc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;p1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;malloc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;p3&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;igkl&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;p2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;efgh&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;p1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;abcd&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;        &lt;span class="c1"&gt;//p1指向字符串&amp;quot;abcd&amp;quot;的首地址, 而不是把&amp;quot;abcd&amp;quot;拷贝到malloc开辟的内存块中&lt;/span&gt;
    &lt;span class="n"&gt;strcat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;p1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;p2&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;   &lt;span class="c1"&gt;//报错: 0xC0000005异常，访问冲突&lt;/span&gt;
    &lt;span class="n"&gt;strcat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;p3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;p2&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;   &lt;span class="c1"&gt;//正确&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;p1=[%s], p2=[%s]&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;p1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;p2&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;p3=[%s], p2=[%s]&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;p3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;p2&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="c1"&gt;//释放内存&lt;/span&gt;
    &lt;span class="n"&gt;free&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;p1&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;p1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h5&gt;2 在vs中设置断点并调试&lt;/h5&gt;
&lt;p&gt;如下图设置好断点后，单步执行到第10行。此时指针变量p1的值是 0x008734c0 ，p2的值是 0x00d75774 ，数组p3的起始地址是 0x0036f928 。&lt;/p&gt;
&lt;p&gt;&lt;img alt="在vs中设置断点并单步调试" src="https://o3cex9zsl.qnssl.com/2014/09/vsbreakp0xc00000005.png" title="在vs中设置断点并单步调试" /&gt;&lt;/p&gt;
&lt;h6&gt;2.1详细查看指针变量p1、p2以及数组p3的内存情况：（第10行）&lt;/h6&gt;
&lt;p&gt;此时，指针变量p1通过语句 &lt;code&gt;char * p1 = (char *)malloc( sizeof(char)*20 );&lt;/code&gt; 指向起始地址为 0x008734c0 到 地址 0x008734d3 的内存块（大小为 20 字节）。&lt;/p&gt;
&lt;p&gt;&lt;img alt="初始化指针变量p1的内存地址" src="https://o3cex9zsl.qnssl.com/2014/09/oldp1address0xc00000005.png" title="初始化指针变量p1的内存地址" /&gt;&lt;/p&gt;
&lt;p&gt;指针变量 p2 通过执行 &lt;code&gt;char * p2 = "efgh";&lt;/code&gt; 指向起始地址为  0x00d75774 的字符串“efgh”（共占 4 字节）。&lt;/p&gt;
&lt;p&gt;&lt;img alt="初始化指针变量p2的内存地址" src="https://o3cex9zsl.qnssl.com/2014/09/oldp2address0xc00000005.png" title="初始化指针变量p2的内存地址" /&gt;&lt;/p&gt;
&lt;p&gt;数组 p3 通过 &lt;code&gt;char p3[20]= "igkl";&lt;/code&gt; 开辟了起始地址为 0x0036f928 的内存块（共占 4 字节），存储字符串“igkl”。&lt;/p&gt;
&lt;p&gt;&lt;img alt="初始化数组p3的内存块" src="https://o3cex9zsl.qnssl.com/2014/09/oldp3address0xc00000005.png" title="初始化数组p3的内存块" /&gt;&lt;/p&gt;
&lt;h6&gt;2.2继续单步调试并查看内存情况：（第11行）&lt;/h6&gt;
&lt;p&gt;上述变量初始化完毕后，单步执行到第 11 行的断点。这时指针变量p1由最初的指向 0x008734c0 变成指向字符串“abcd”的地址 0x00d7576c 。p2 的地址仍不变（0x00d75774），p3的地址也不变（0x0036f928）。&lt;/p&gt;
&lt;p&gt;&lt;img alt="指针变量p1指向字符串“abcd”的首地址" src="https://o3cex9zsl.qnssl.com/2014/09/newpointeraddress0xc00000005.png" title="指针变量p1指向字符串“abcd”的首地址" /&gt;&lt;/p&gt;
&lt;p&gt;详细查看指针变量p1的内存情况：起始地址是 0x00d7576c ，该内存块存储的字符串是“abcd”。&lt;/p&gt;
&lt;p&gt;&lt;img alt="指针变量p1的内存情况" src="https://o3cex9zsl.qnssl.com/2014/09/newp1address0xc00000005.png" title="指针变量p1的内存情况" /&gt;&lt;/p&gt;
&lt;h6&gt;2.3继续单步调试并查看内存情况：（第12行）&lt;/h6&gt;
&lt;p&gt;然后，单步执行到第 12 行的断点，出现错误：test.exe 中的 0x0f85d2e9 (msvcr100d.dll) 处有未经处理的异常: 0xC0000005: 写入位置 0x00d75770 时发生访问冲突。&lt;/p&gt;
&lt;p&gt;也即在执行第11行的 &lt;code&gt;strcat( p1, p2 );&lt;/code&gt; 语句时，发生内存访问错误。该语句是把作为src的指针变量p2（0x00d75774）指向的内存块中的字符串“efgh”拷贝一份，然后复制到作为dst的指针变量p1（0x00d7576c）所指向内存块中的的字符串常量“abcd”后面。调用堆栈可以看到，当执行 &lt;code&gt;msvcr100d.dll!strcat(unsigned char * dst, unsigned char * src)&lt;/code&gt; 对应的strcat.asm汇编文件中第178行语句 &lt;code&gt;mov [edi], edx&lt;/code&gt; 时出错。&lt;/p&gt;
&lt;p&gt;&lt;img alt="未经处理的异常: 0xC0000005: 写入位置 0x00d75770 时发生访问冲突" src="https://o3cex9zsl.qnssl.com/2014/09/asm0xc00000005error.png" title="未经处理的异常: 0xC0000005: 写入位置 0x00d75770 时发生访问冲突" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="strcat.asm汇编文件mov指令出错" src="https://o3cex9zsl.qnssl.com/2014/09/strcatasm0xc00000005.png" title="strcat.asm汇编文件mov指令出错" /&gt;&lt;/p&gt;
&lt;h5&gt;3 原因分析&lt;/h5&gt;
&lt;p&gt;其实，通过上面的单步调试，我们也已经知道原因了。现总结一下：因为指针变量p1（0x00d7576c）所指向的字符串常量“abcd”后面，也即字符'd'的地址是 0x00d7576c+3=0x00d7576f 。&lt;/p&gt;
&lt;p&gt;而它后面以地址 0x00d75770 开始的内存块是不属于指针变量p1的，没有访问权限，所以把拷贝自指针变量p2（0x00d75774）指向的字符串“efgh”到以 0x00d75770 为起始地址的内存块中会报错。可以把语句 &lt;code&gt;p1 = "abcd";&lt;/code&gt; 改成 &lt;code&gt;p1 = p3;&lt;/code&gt;，然后直接使用 &lt;code&gt;strcat( p1, p2 );&lt;/code&gt;，这样是合法的。&lt;/p&gt;
&lt;p&gt;&lt;img alt="地址 0x00d75770 不能写入操作" src="https://o3cex9zsl.qnssl.com/2014/09/write0x00d75770err.png" title="地址 0x00d75770 不能写入操作" /&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Wed, 03 Sep 2014 22:26:00 +0800</pubDate><guid>tag:typecodes.com,2014-09-03:cseries/pointermemaccess0xC0000005.html</guid><category>异常0xc0000005</category><category>读取/写入位置冲突</category></item><item><title>千里佳音，收到新浪云(SAE)的一份礼物</title><link>https://typecodes.com/mix/getsaegift.html</link><description>&lt;p&gt;去年4月份，博主参与了百度知道的一个活动，很意外的收到了&lt;a href="https://typecodes.com/mix/getbaidugift.html" title="《千里佳音，竟然收到百度的一份GIFT》"&gt;百度无线的一个gift&lt;/a&gt;。上周末，因为参与了&lt;a href="http://weibo.com/saet" title="SAE新浪官方微博"&gt;SAE&lt;/a&gt;在7月22日的一个活动，又收到了一件来自新浪云的抱枕。&lt;/p&gt;
&lt;p&gt;由于之前也用过&lt;a href="https://console.developers.google.com/start/appengine" title="Google App Engine官方地址"&gt;GAE&lt;/a&gt;、&lt;a href="http://developer.baidu.com/cloud/rt" title="Baidu App Engine官方地址"&gt;BAE&lt;/a&gt;和&lt;a href="http://sae.sina.com.cn/" title="Sina App Engine官方地址"&gt;SAE&lt;/a&gt;以及正在申请公测资格的&lt;a href="http://www.aliyun.com/product/ace/" title="阿里ACE官方地址"&gt;阿里云引擎ACE&lt;/a&gt;，下面简单说说自己在这几款&lt;code&gt;PaaS（平台即服务）&lt;/code&gt;上的体验。&lt;/p&gt;


&lt;h5&gt;1 共同点&lt;/h5&gt;
&lt;p&gt;对于谷歌的GAE、新浪云SAE和百度GAE，由于发布的时间都比较早（从08年开始），所以到现在基本功能已经比较齐全，支持的语言更加丰富（PHP、Java、Python等，甚至支持nodejs），平台也更加稳定成熟。阿里ACE还在公测阶段，因此还有待考验，不过由于阿里云主机目前气势正旺，相信应该也会建立大量用户关系。&lt;/p&gt;
&lt;h5&gt;2 个人体验&lt;/h5&gt;
&lt;p&gt;由于国内的环境，GAE的使用环境还是不太好，博主之前也仅仅是上去弄了个静态的博客，然后就不了了之了。而新浪SAE还百度BAE平台很类似，二者对技术人员的支持力度还是挺大的，各种弹性而且性价比极高的服务都面向了众多的developers。尤其是新浪SAE，本来使用成本就地，要是申请通过了开发者认证或者机构认证，基本不用花费任何费用就可完全使用其服务了。博主之前用BAE2.0也是免费了很长时间，后来被BAE“无耻”地诱导升级到了3.0版本，结果欠费停用了。实名认证后获得了1000云豆，在SAE搭建了一个&lt;a href="http://vfhky.sinaapp.com/" title="TypeCodes on sae"&gt;wordpress主题演示版本&lt;/a&gt;，估计用个三四年没关系。&lt;/p&gt;
&lt;h5&gt;3 对于阿里云ACE的看法&lt;/h5&gt;
&lt;p&gt;09年9月阿里云的加入，对包括SAE、BAE、腾讯云等国内优秀云计算平台也是一种竞争和考验。其产品也是丰富多样化，无论是CDN加速、OSS云储存、网络防护等，都做得很不错。一旦ACE成熟，如果与上述产品很好的融合的话，相信也会占有相当数量的用户群。所以，SAE和BAE都得抓紧进一步提升产品多样性和用户体验，小心被ACE“后来居上”了。PS:目前新浪SAE也在公测云储存SCS项目，性价比依然是很高的，博主也申请了个体验资格，正在测试当中。&lt;/p&gt;
&lt;p&gt;最后，附上新浪SAE抱枕靓照：&lt;/p&gt;
&lt;p&gt;&lt;img alt="新浪云抱枕的正面照" src="https://o3cex9zsl.qnssl.com/2014/08/saegiftfront.png" title="新浪云抱枕的正面照" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="新浪云抱枕的背面照" src="https://o3cex9zsl.qnssl.com/2014/08/saegiftback.png" title="新浪云抱枕的背面照" /&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Sun, 31 Aug 2014 13:54:00 +0800</pubDate><guid>tag:typecodes.com,2014-08-31:mix/getsaegift.html</guid><category>新浪云</category><category>新浪sae</category></item><item><title>未经处理的异常:0xC0000005:读取/写入位置冲突——从去掉字符串所有空格说起</title><link>https://typecodes.com/cseries/trimspace0xC0000005.html</link><description>&lt;p&gt;在c/c++中，有时会遇到c0xC0000005: 读取/写入位置冲突的问题。明明编译器编译通过，但是在执行的时候就出现&lt;code&gt;Segmentation fault(coredump)&lt;/code&gt;了。&lt;/p&gt;
&lt;p&gt;该错误是由于内存访问出错引起的，最常见于指针的错误使用和数组越界等。下面是博主之前的一个经历——去掉一个字符串前后的所有空格。&lt;/p&gt;


&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;pcontent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;  abcdef  &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;//待去掉前后空格的字符串&lt;/span&gt;
&lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="cm"&gt;/* 1去除后面的空格 */&lt;/span&gt;
&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pcontent&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;strlen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;pcontent&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  &lt;span class="c1"&gt;//指针p指向字符串的末尾&lt;/span&gt;
&lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mh"&gt;0x20&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  &lt;span class="c1"&gt;//将字符串中‘f’后面的一位空格改成结束符号&amp;#39;\0&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Line=[%d], pcontent=[%s]&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;__LINE__&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pcontent&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;咋一看，思路挺对的，遍历字符串后面的所有空格，然后只要将字符串中‘f’后面的一位空格改成字符串结束符即可。遗憾的是出现了&lt;code&gt;Segmentation fault(coredump)&lt;/code&gt;，用Vs调试，程序执行到断点 &lt;code&gt;*(p+1) = 0x00;&lt;/code&gt; 时，出现未经处理的异常: 0xC0000005 写入冲突。&lt;/p&gt;
&lt;p&gt;&lt;img alt="未经处理的异常: 0xC0000005 写入冲突" src="https://o3cex9zsl.qnssl.com/2014/08/error0xC0000005.png" title="未经处理的异常: 0xC0000005 写入冲突" /&gt;&lt;/p&gt;
&lt;p&gt;调用内存和堆栈可以看到地址 0x001b5764 里面的元素是 0x20，表示空格。&lt;/p&gt;
&lt;p&gt;&lt;img alt="vs调用堆栈查看未经处理的异常: 0xC0000005 写入冲突" src="https://o3cex9zsl.qnssl.com/2014/08/vsdebug0xC0000005.png" title="vs调用堆栈查看未经处理的异常: 0xC0000005 写入冲突" /&gt;&lt;/p&gt;
&lt;p&gt;为什么把字符串结束符号'\0'写入到地址 0x001b5764 中就出错呢？原因是：定义指针pcontent的时候，语句&lt;code&gt;char * pcontent = "  abcdef  "&lt;/code&gt;中的字符串是一个常量&lt;code&gt;abcdef&lt;/code&gt;。常量在内存中是不可以被改写的，所以执行&lt;code&gt;*(p+1) = 0x00;&lt;/code&gt;就会出现&lt;code&gt;未经处理的异常: 0xC0000005: 写入位置冲突&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;另外，对于内存中的 0x00000000 地址，不能执行读取和写入操作。例如前面的&lt;code&gt;char * p = NULL;&lt;/code&gt;这种指针初始化（避免成为野指针）操作，在后面不能直接来一个&lt;code&gt;printf("%c", \*p)&lt;/code&gt;，否则就会出现错误&lt;code&gt;未经处理的异常:0xC0000005:读取位置0x00000000时发生冲突&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;知道原理后，改成正确的去掉一个字符串前后的所有空格的程序：&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt; * @FileName :  trimallspace.c&lt;/span&gt;
&lt;span class="cm"&gt; * @Author   :  vfhky https://typecodes.com 20140725&lt;/span&gt;
&lt;span class="cm"&gt; * @Functions:  去掉字符串前后所有的空格&lt;/span&gt;
&lt;span class="cm"&gt;*/&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;string.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;ccontent&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;  abcdef  &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;   &lt;span class="c1"&gt;//把字符串放进一个数组而不是成为常量&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Line=[%d], ccontent=[%s]&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;__LINE__&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ccontent&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="cm"&gt;/* 1去除后面的空格 */&lt;/span&gt;
    &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ccontent&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;strlen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;ccontent&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mh"&gt;0x20&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Line=[%d], pcontent=[%s]&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;__LINE__&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="cm"&gt;/* 2去除前面的空格 */&lt;/span&gt;
    &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ccontent&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;   &lt;span class="c1"&gt;//重置指针变量p的位置&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mh"&gt;0x20&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Line=[%d], p=[%s]&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;__LINE__&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Sat, 30 Aug 2014 13:17:00 +0800</pubDate><guid>tag:typecodes.com,2014-08-30:cseries/trimspace0xC0000005.html</guid><category>异常0xc0000005</category><category>读取/写入位置冲突</category><category>去掉字符串所有空格</category></item><item><title>PHP中将Unix timestamp时间戳转换成北京时间</title><link>https://typecodes.com/web/phpunixtimeconvert.html</link><description>&lt;p&gt;由于博客刚从wordpress转到typecho，所以对之前的数据库需要处理。在wordpress数据库中，文章和评论的时间记录形式和typecho不同：wordpress中登记的是北京时间，形如 2014-08-19 21:05:27；而typecho数据库中登记的是时间戳Unix timestamp，形如1408456593（对应标准北京时间是 2014/8/19 21:56:33 ）。&lt;/p&gt;
&lt;p&gt;于是，我在typecho中用&lt;code&gt;date('Y-m-d H:i', $older_date)&lt;/code&gt;函数把从数据库读取出来的Unix timestamp格式的&lt;code&gt;$older_date&lt;/code&gt;转换成形如 2014-08-19 21:05 的北京时间后，发现比当前的北京时间少了8个小时。GG一番，原来是时区导致的：格林威治时间与中国东八区本地时间相差8个时差。解决方法如下：&lt;/p&gt;


&lt;h5&gt;1 推荐的必杀技：修改php配置文件php.ini&lt;/h5&gt;
&lt;p&gt;先查看当前Linux系统的日期与时间（locale time）&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@typecodes ~]# date
Tue Aug 19 21:36:33 CST 2014
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;然后修改php.ini文件的第 943 行处的 date.timezone( 设置时区 )&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;root&lt;/span&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nx"&gt;typecodes&lt;/span&gt; &lt;span class="err"&gt;~&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="nx"&gt;vi&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;php&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ini&lt;/span&gt;
&lt;span class="mi"&gt;943&lt;/span&gt; &lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="kt"&gt;Date&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;
&lt;span class="mi"&gt;944&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;Defines&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;timezone&lt;/span&gt; &lt;span class="nx"&gt;used&lt;/span&gt; &lt;span class="nx"&gt;by&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;date&lt;/span&gt; &lt;span class="nx"&gt;functions&lt;/span&gt;
&lt;span class="mi"&gt;945&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//www.php.net/manual/en/datetime.configuration.php#ini.date.timezone&lt;/span&gt;
&lt;span class="mi"&gt;946&lt;/span&gt; &lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;timezone&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Asia&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;Shanghai&lt;/span&gt;
&lt;span class="err"&gt;######&lt;/span&gt; &lt;span class="nx"&gt;Asia&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;Shanghai&lt;/span&gt; &lt;span class="nx"&gt;还可以改成&lt;/span&gt; &lt;span class="nx"&gt;PRC&lt;/span&gt;&lt;span class="err"&gt;、&lt;/span&gt;&lt;span class="nx"&gt;Asia&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;Chongqing&lt;/span&gt;&lt;span class="err"&gt;、&lt;/span&gt;&lt;span class="nx"&gt;Asia&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;Taipei等中国时区&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;2 使用PHP代码的解决方法&lt;/h5&gt;
&lt;p&gt;如果主机不能修改 php.ini 文件，那么只能使用临时办法解决了：先把 Unix timestamp 的值加 8 个小时（相当于 8 * 3600 = 28800 秒），再使用 date 函数格式化输出。例如，将上面的php代码&lt;code&gt;date('Y-m-d H:i', $older_date)&lt;/code&gt;改成&lt;code&gt;date('Y-m-d H:i', $older_date+28800)&lt;/code&gt;即可转换成标准的北京时间。&lt;/p&gt;
&lt;p&gt;评论中 @mumuno 提供的PHP方法也是行的：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;date_default_timezone_set&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;PRC&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="nt"&gt;date&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Y-m-d H:i&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;3 计算机时间概要&lt;/h5&gt;
&lt;p&gt;以下内容整理自互联网和 &lt;a href="http://zoroeye.iteye.com/blog/2008381" title="计算机世界中的时间概念"&gt;计算机世界中的时间概念&lt;/a&gt; 一文。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;格林威治时间（Greenwich Mean Time, GMT）。

通用协调时间（Universal Time Coordinated, UTC）。UTC的表示方式为：年（y）、月（m）、日（d）、时（h）、分（min）、秒（s），均用数字表示。若以「世界标准时间」的角度来说，UTC比GMT来得更加精准： *UTC = GMT +/- 0.9* 。

本地时间(locale time)：很显然，本地时间跟时区(timezone)有关： *本地时间 = UTC + 时区* 。例如，中国北京标准时间（忽略GMT和UTC的差异）： *CST = GMT + 8 = UTC + 8* 。

Unix时间戳(Unix timestamp)，又称 Unix时间(Unix time) 或 POSIX时间(POSIX time) ，它从格林威治时间1970年01月01日00时00分00秒起至现在的总秒数。
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Tue, 19 Aug 2014 22:12:00 +0800</pubDate><guid>tag:typecodes.com,2014-08-19:web/phpunixtimeconvert.html</guid><category>unix timestamp转换</category></item><item><title>完美解决Mysql导入数据库中文乱码的问题</title><link>https://typecodes.com/web/mysqlimportmessy.html</link><description>&lt;h5&gt;1 问题由来：博客从 WordPress 转向 Typecho&lt;/h5&gt;
&lt;p&gt;在由 &lt;a href="https://typecodes.com/mix/eventualwptotypecho.html" title="《终于从WordPress转向Typecho了》"&gt;WordPress 转向 Typecho&lt;/a&gt; 的过程中，主要难点是将 WordPress 中的文章和评论数据用 &lt;a href="http://plugins.typecho.me/plugins/wordpress-to-typecho.html" title="插件wordpress to typecho"&gt;wordpress to typecho&lt;/a&gt; 插件剥离出来。经整理后再重新将文章转换为 markdown 格式发布到由ty搭建的本博客上，最后把评论导入到对应的文章下面，并对评论id重新排序。&lt;/p&gt;
&lt;h5&gt;2 本地编辑剥离出的文章和评论的.sql备份文件&lt;/h5&gt;
&lt;p&gt;通过插件把wordpress中文章和评论的数据转换成 typecho 形式的文章和评论数据，并导出为.sql备份文件。由于评论数据有1521条，对其id重新排序比较困难，所以博主将它们分拆为两个 .sql 文件（其中一个是utf-8格式的resultsql1.sql，另一个是gbk格式的resultsql2.sql）。&lt;/p&gt;


&lt;p&gt;由于当时没注意文件格式，在把这两个sql文件上传到主机空间后，执行命令&lt;code&gt;mysql -u typecodes -p typecodes&amp;lt;/root/resultsql1.sql;&lt;/code&gt;和&lt;code&gt;mysql -u typecho -p typecho&amp;lt;/root/resultsql2.sql;&lt;/code&gt;。前者导入后，博客页面显示正常，但是文件2导入后，出现了乱码。原因是博客初始建数据库时，默认的编码格式是 utf-8 ，而导入的文件resultsql2.sql是 gbk 的格式，所以出现了乱码现象。&lt;/p&gt;
&lt;h5&gt;3 解决方法：&lt;/h5&gt;
&lt;p&gt;思路：先在本地数据库将gbk的格式 resultsql2.sql 转换成&lt;code&gt;Unicode&lt;/code&gt;格式，然后导入到本地数据库中，最后以utf-8的格式导出，再把导出的.sql文件导入到阿里云远程数据库中。这里用到了SQLog工具。&lt;/p&gt;
&lt;p&gt;1、在本地电脑打开SQLog软件，然后建立本地数据库连接。&lt;/p&gt;
&lt;p&gt;&lt;img alt="SQLog连接本地数据库 typecho " src="https://o3cex9zsl.qnssl.com/2014/08/sqloglinktosql.png" title="SQLog连接本地数据库 typecho " /&gt;&lt;/p&gt;
&lt;p&gt;2、将gbk文件 resultsql2.sql 用记事本打开，然后选择“另存为”，在底部的编码一栏中选择第二项&lt;code&gt;Unicode&lt;/code&gt;。保存好后，再用记事本打开，然后复制所有内容；&lt;/p&gt;
&lt;p&gt;3、把刚才复制的信息粘贴到下图框中，然后点击左上角的双箭头按钮，或者快捷键“Ctrl + F9”执行所有复制的语句。&lt;/p&gt;
&lt;p&gt;&lt;img alt="SQLog执行所有sql语句 typecho " src="https://o3cex9zsl.qnssl.com/2014/08/sqllogimport.png" title="SQLog执行所有sql语句" /&gt;&lt;/p&gt;
&lt;p&gt;4、执行完步骤3中所有的SQL语句成功，就可以在SQLog底部看到下图所示“信息”。这时点击SQLog左上角的“刷新”按钮。然后用phpmyadmin查看表 typecho_comments 中的中文是否还是乱码。很庆幸，显示正常了。&lt;/p&gt;
&lt;p&gt;&lt;img alt="SQLog执行结果没有乱码的中文" src="https://o3cex9zsl.qnssl.com/2014/08/sqllogimpoinfo.png" title="SQLog执行结果没有乱码的中文" /&gt;&lt;/p&gt;
&lt;p&gt;5、最后一个步骤，如果本地数据库中的表 typecho_comments 没有乱码，那么就将这个表导出为 utf-8 格式的 resultsql2.sql 文件，然后上传到阿里云远程主机上，再执行以下命令导入到博客数据库中就解决了。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;###### 一定要和创建数据库时设置的编码utf8一致
[root@typecodes ~]# mysql -u typecodes -p typecodes &amp;lt; /root/resultsql2.sql -f --default-character-set=utf8;
Enter password:   #输入用户typecode的密码然后回车
mysql&amp;gt;    #然后就可以查看 typecho_comments 没有乱码的中文了
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Mon, 18 Aug 2014 22:24:00 +0800</pubDate><guid>tag:typecodes.com,2014-08-18:web/mysqlimportmessy.html</guid><category>mysql</category><category>mysql sqlog</category></item><item><title>解决阿里云无法安装typecho 1.0，页面全变空白</title><link>https://typecodes.com/web/installtypechofail.html</link><description>&lt;p&gt;在Windows中安装 typecho 比较简单，只要先创建了数据库，然后安装过程和wordpress也类似。但是之前博主在自己的阿里云CentOS 6.5系统中安装 typecho，却出现了问题。&lt;/p&gt;
&lt;h5&gt;1 问题描述&lt;/h5&gt;
&lt;p&gt;先用 mysql 的一个用户创建了一个数据库，然后进入typecho的安装页面，填写好相关信息。typecho 会自动检测输入的数据库信息是否正确。如果正确，那么就会出现下图的页面。因为博客的根目录权限是不可写的，所以typecho程序无法自动生成配置文件 config.inc.php 。于是把里面的代码复制出来，并在根目录下新建文件 config.inc.php ，然后把复制的代码粘贴进去。结果在点击“创建完毕，继续安装”后，安装页面就跳转到空白页面了。&lt;/p&gt;
&lt;p&gt;&lt;img alt="点击“创建完毕，继续安装”后，安装页面就跳转到空白页面" src="https://o3cex9zsl.qnssl.com/2014/08/typechoconfig.png" title="点击“创建完毕，继续安装”后，安装页面就跳转到空白页面" /&gt;&lt;/p&gt;


&lt;h5&gt;2 问题解决&lt;/h5&gt;
&lt;p&gt;初步看了下typecho的安装代码文件 install.php ，主要是初始化数据库、生成配置文件等，然后看了下 php-fpm 的错误日志 error.log 。结果发现很多 warning 信息，原来和 session 有关：找不到需要的 session 文件(no such file)、无法写入 session 内容。&lt;/p&gt;
&lt;p&gt;&lt;img alt="session 警告和错误" src="https://o3cex9zsl.qnssl.com/2014/08/typechosessionfail.png" title="session 警告和错误" /&gt;&lt;/p&gt;
&lt;p&gt;linux 文件的读写问题，肯定跟权限有关。于是查看 php 默认的 session 文件保存路径：在配置文件 /etc/php.ini 的第 1267 行可以看到是 /var/lib/php/session 。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;1264 ; where MODE is the octal representation of the mode. Note that this
1265 ; does not overwrite the process&amp;#39;s umask.
1266 ; http://www.php.net/manual/en/session.configuration.php#ini.session.save-path
1267 session.save_path = &amp;quot;/var/lib/php/session&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;于是查看 /var/lib/php/session 目录的权限设置，增加写入权限：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;###### 默认权限为 755
[root@typecodes php]# ls -l
total 4
drwxr-xr-x 2 root apache 4096 Jul 26 19:02 session
###### 修改权限为 770
[root@typecodes php]# chmod 775 -R session
total 4
drwxrwx--- 2 root apache 4096 Jul 26 19:02 session
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;3 后记&lt;/h5&gt;
&lt;p&gt;问题就这样解决了，安装 typecho 比较关键的是自己要先创建一个数据库，这点和wordpress是不同的。至于安装过程中出现的问题，大家可以通过 php 的日志查看是否存在错误或警告信息。至于前面提到的 “安装页面就跳转到空白页面了” 原因是：typecho的安装程序 install.php 的第 58 行，对 $_SESSION['typecho'] 做了判断，即为空则直接 exit，页面不显示任何内容。另外，php的错误日志 error.log 中产生的 warning 信息，也都是由 install.php 中相应的代码导致的，就不多说了。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="x"&gt;//判断是否已经安装&lt;/span&gt;
&lt;span class="x"&gt;if (!isset(&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;_GET&lt;/span&gt;&lt;span class="x"&gt;[&amp;#39;finish&amp;#39;]) &amp;amp;&amp;amp; file_exists(__TYPECHO_ROOT_DIR__ . &amp;#39;/config.inc.php&amp;#39;) &amp;amp;&amp;amp; empty(&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;_SESSION&lt;/span&gt;&lt;span class="x"&gt;[&amp;#39;typecho&amp;#39;])) &lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;    exit;&lt;/span&gt;
&lt;span class="x"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Sun, 17 Aug 2014 21:33:00 +0800</pubDate><guid>tag:typecodes.com,2014-08-17:web/installtypechofail.html</guid><category>阿里云 centos</category><category>typecho</category></item><item><title>阿里云iptables防火墙配置出错导致ssh无法远程登录</title><link>https://typecodes.com/web/iptablessshnologin.html</link><description>&lt;h5&gt;1 悲催的 iptables 探索&lt;/h5&gt;
&lt;p&gt;由于之前对 iptables 不熟悉，所以在配置 iptables 的时候，直接执行命令&lt;code&gt;iptables -F&lt;/code&gt;。结果导致 Securecrt 中所有连接远端服务器的窗口都断掉了，而且博客的所有页面都无法打开。心中顿时一慌，ssh无法登录，即使博客中的程序和数据库已经备份了也无法取出了。&lt;/p&gt;
&lt;p&gt;网上搜了一下，原来在使用这个命令之前一定要先执行命令&lt;code&gt;iptables -P INPUT ACCEPT&lt;/code&gt;。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;###### 即先把 policy 设定为 ACCEPT, 允许所有的封包传输. 否则, 当前连接远程服务器的终端会立即断掉
[root@typecodes ~]# iptables -P INPUT ACCEPT
###### 可以通过清除所有规则来暂时停止防火墙：(警告：这只适合在没有配置防火墙的环境中，如果已经配置过默认规则为deny的环境，此步骤将使系统的所有网络访问中断)
[root@typecodes ~]# iptables -F
&lt;/pre&gt;&lt;/div&gt;




&lt;h5&gt;2 解决方法&lt;/h5&gt;
&lt;p&gt;在多次尝试用 Securecrt 登陆失败后，就快准备用ECS快照回滚磁盘了。突然想起了阿里云服务器管理控制台的 “连接管理终端” 的功能选项。如果用这个功能还不能登录远程主机的话，那只能用快照回滚磁盘了，损失惨重。于是赶紧打开 “连接管理终端” 的界面，输入6位 VNC 密码后，竟然成功登录进去了。欢喜之余，立马执行命令&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@typecodes ~]# ./iptables.sh* ，也就是重新设置 iptables 规则。
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;3 后记&lt;/h5&gt;
&lt;p&gt;问题就这样解决了，不得不感叹阿里云这个 “连接管理终端” 功能太强大了！不过，对于这个强大的功能也有一丝担忧，要是其它人知道了 root 账户密码，那么是不是也能通过这个 “连接管理终端” 获取管理权限（虽然已经设置了只能通过 ssh 方式登录）。所以，建议阿里云能增加身份验证，例如在登陆之前设置一个短信验证码之类的。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Sat, 16 Aug 2014 23:19:00 +0800</pubDate><guid>tag:typecodes.com,2014-08-16:web/iptablessshnologin.html</guid><category>阿里云 centos</category><category>iptables</category></item><item><title>阿里云CentOS主机 LNMP 环境之主机安全篇二</title><link>https://typecodes.com/web/aliyuncentoslnmpiptables.html</link><description>&lt;p&gt;在&lt;a href="https://typecodes.com/web/aliyuncentoslnmphostssh.html" title="阿里云CentOS主机 LNMP 环境之主机安全篇一"&gt;前面一篇文章&lt;/a&gt;介绍了阿里云的 CentOS 系统，用户如何通过 ssh 登陆方式降低主机被入侵的几率。那么这篇文章主要分享通过配置 iptables 防火墙来进一步强化 linux 主机防护。&lt;/p&gt;
&lt;p&gt;之前在探索 iptables 也发生过惨案，详见&lt;a href="https://typecodes.com/web/iptablessshnologin.html" title="阿里云iptables防火墙配置出错导致ssh无法远程登录"&gt;此文&lt;/a&gt;。&lt;/p&gt;


&lt;h5&gt;1 检查阿里云主机的 CentOS 是否安装并启动 iptables 防火墙服务&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;###### 检查iptables服务的状态
[root@typecodes ~]# service iptables status
###### 如果已经安装了 iptables，但是没启动服务
iptables: Firewall is not running.
[root@typecodes ~]# service iptables start
iptables: Applying firewall rules:                         [  OK  ]
###### 检查当前 iptables 的规则配置, 默认情况下是没有内容的
[root@typecodes ~]# iptables -L -n

###### 如果没有安装 iptables 
[root@typecodes ~]# yum install -y iptables
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;2 下面是一个 iptables 防火墙规则示例，大家可以直接保存为 iptables.sh 文件，然后上传到主机服务器。&lt;/h5&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="c"&gt;#&lt;/span&gt;
&lt;span class="c"&gt;# FileName:    iptables.sh&lt;/span&gt;
&lt;span class="c"&gt;# Functions:   Linux(CentOS)主机防火墙设置(服务于 web 服务器 )&lt;/span&gt;
&lt;span class="c"&gt;# Description: 由 TypeCodes 整理自http://www.tudaxia.com/archives/784, 有所改动&lt;/span&gt;
&lt;span class="c"&gt;#&lt;/span&gt;

&lt;span class="c"&gt;##############&lt;/span&gt;
&lt;span class="c"&gt;# 清空原有的iptables规则, 计数器置0&lt;/span&gt;
&lt;span class="c"&gt;##############&lt;/span&gt;
iptables -F
iptables -X
iptables -Z

&lt;span class="c"&gt;##############&lt;/span&gt;
&lt;span class="c"&gt;# 对公网开放的服务端口, 2001是上文中设置的ssh端口, 80是web服务端口&lt;/span&gt;
&lt;span class="c"&gt;# 由于 typecodes.com 关闭了主机ftp服务, 即不开放21端口&lt;/span&gt;
&lt;span class="c"&gt;##############&lt;/span&gt;
&lt;span class="nv"&gt;SERVICE_TCP_PORTS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;2001,80&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;SERVICE_UDP_PORTS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;53&amp;quot;&lt;/span&gt;

&lt;span class="c"&gt;##############&lt;/span&gt;
&lt;span class="c"&gt;# 设置默认规则&lt;/span&gt;
&lt;span class="c"&gt;# 通常INPUT及FORWARD设为DROP,OUTPUT设置为ACCEPT就足够了&lt;/span&gt;
&lt;span class="c"&gt;# 极端情况下，可以将OUTPUT也设置成默认DROP。然后针对OUTPUT逐条增加过滤规则&lt;/span&gt;
&lt;span class="c"&gt;##############&lt;/span&gt;
iptables -P INPUT DROP
iptables -P FORWARD DROP
iptables -P OUTPUT ACCEPT

&lt;span class="c"&gt;##############&lt;/span&gt;
&lt;span class="c"&gt;# 允许lo( 则允许通过127.0.0.1访问主机本地服务 ), PING&lt;/span&gt;
&lt;span class="c"&gt;##############&lt;/span&gt;
iptables -A INPUT -i lo -j ACCEPT
iptables -A INPUT -p icmp -j ACCEPT
iptables -A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT
iptables -A FORWARD -p icmp -j ACCEPT
iptables -A FORWARD -m state --state ESTABLISHED -j ACCEPT

&lt;span class="c"&gt;##############&lt;/span&gt;
&lt;span class="c"&gt;# 关闭危险端口, 范围是 31337~31340&lt;/span&gt;
&lt;span class="c"&gt;##############&lt;/span&gt;
iptables -A OUTPUT -p tcp --dport 31337:31340 -j DROP
iptables -A OUTPUT -p tcp --sport 31337:31340 -j DROP

&lt;span class="c"&gt;##############&lt;/span&gt;
&lt;span class="c"&gt;# 如果要添加内网ip信任（接受其所有TCP请求）&lt;/span&gt;
&lt;span class="c"&gt;##############&lt;/span&gt;
iptables -A INPUT -p tcp -s 45.96.174.68 -j ACCEPT

&lt;span class="c"&gt;##############&lt;/span&gt;
&lt;span class="c"&gt;# 拒绝某个IP( 例如111.111.111.111 )访问阿里云主机服务器, 即拉入黑名单&lt;/span&gt;
&lt;span class="c"&gt;##############&lt;/span&gt;
iptables -I INPUT -s 111.111.111.111 -j DROP

&lt;span class="c"&gt;##############&lt;/span&gt;
&lt;span class="c"&gt;# 放开TCP及UDP服务端口&lt;/span&gt;
&lt;span class="c"&gt;##############&lt;/span&gt;
iptables -A INPUT  -p tcp -j ACCEPT -m multiport --dport &lt;span class="nv"&gt;$SERVICE_TCP_PORTS&lt;/span&gt;
iptables -A INPUT  -p udp -j ACCEPT -m multiport --dport &lt;span class="nv"&gt;$SERVICE_UDP_PORTS&lt;/span&gt;

&lt;span class="c"&gt;#######################&lt;/span&gt;
&lt;span class="c"&gt;# 防止DDOS攻击：Ping of Death&lt;/span&gt;
&lt;span class="c"&gt;#######################&lt;/span&gt;
iptables -N PING_OF_DEATH
iptables -A PING_OF_DEATH -p icmp --icmp-type &lt;span class="nb"&gt;echo&lt;/span&gt;-request &lt;span class="se"&gt;\&lt;/span&gt;
         -m hashlimit &lt;span class="se"&gt;\&lt;/span&gt;
         --hashlimit 1/s &lt;span class="se"&gt;\&lt;/span&gt;
         --hashlimit-burst &lt;span class="m"&gt;10&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
         --hashlimit-htable-expire &lt;span class="m"&gt;300000&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
         --hashlimit-mode srcip &lt;span class="se"&gt;\&lt;/span&gt;
         --hashlimit-name t_PING_OF_DEATH &lt;span class="se"&gt;\&lt;/span&gt;
         -j RETURN
iptables -A PING_OF_DEATH -j LOG --log-prefix &lt;span class="s2"&gt;&amp;quot;ping_of_death_attack: &amp;quot;&lt;/span&gt;
iptables -A PING_OF_DEATH -j DROP
iptables -A INPUT -p icmp --icmp-type &lt;span class="nb"&gt;echo&lt;/span&gt;-request -j PING_OF_DEATH

&lt;span class="c"&gt;#######################&lt;/span&gt;
&lt;span class="c"&gt;# 防止DDOS攻击：SYN FLOOD&lt;/span&gt;
&lt;span class="c"&gt;#######################&lt;/span&gt;
iptables -N SYN_FLOOD
iptables -A SYN_FLOOD -p tcp --syn &lt;span class="se"&gt;\&lt;/span&gt;
         -m hashlimit &lt;span class="se"&gt;\&lt;/span&gt;
         --hashlimit 200/s &lt;span class="se"&gt;\&lt;/span&gt;
         --hashlimit-burst &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
         --hashlimit-htable-expire &lt;span class="m"&gt;300000&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
         --hashlimit-mode srcip &lt;span class="se"&gt;\&lt;/span&gt;
         --hashlimit-name t_SYN_FLOOD &lt;span class="se"&gt;\&lt;/span&gt;
         -j RETURN
iptables -A SYN_FLOOD -j LOG --log-prefix &lt;span class="s2"&gt;&amp;quot;syn_flood_attack: &amp;quot;&lt;/span&gt;
iptables -A SYN_FLOOD -j DROP
iptables -A INPUT -p tcp --syn -j SYN_FLOOD

&lt;span class="c"&gt;#######################&lt;/span&gt;
&lt;span class="c"&gt;# 防止DDOS攻击：stealth scan&lt;/span&gt;
&lt;span class="c"&gt;#######################&lt;/span&gt;
iptables -N STEALTH_SCAN
iptables -A STEALTH_SCAN -j LOG --log-prefix &lt;span class="s2"&gt;&amp;quot;stealth_scan_attack: &amp;quot;&lt;/span&gt;
iptables -A STEALTH_SCAN -j DROP

iptables -A INPUT -p tcp --tcp-flags SYN,ACK SYN,ACK -m state --state NEW -j STEALTH_SCAN
iptables -A INPUT -p tcp --tcp-flags ALL NONE -j STEALTH_SCAN

iptables -A INPUT -p tcp --tcp-flags SYN,FIN SYN,FIN         -j STEALTH_SCAN
iptables -A INPUT -p tcp --tcp-flags SYN,RST SYN,RST         -j STEALTH_SCAN
iptables -A INPUT -p tcp --tcp-flags ALL SYN,RST,ACK,FIN,URG -j STEALTH_SCAN

iptables -A INPUT -p tcp --tcp-flags FIN,RST FIN,RST -j STEALTH_SCAN
iptables -A INPUT -p tcp --tcp-flags ACK,FIN FIN     -j STEALTH_SCAN
iptables -A INPUT -p tcp --tcp-flags ACK,PSH PSH     -j STEALTH_SCAN
iptables -A INPUT -p tcp --tcp-flags ACK,URG URG     -j STEALTH_SCAN

&lt;span class="c"&gt;#######################&lt;/span&gt;
&lt;span class="c"&gt;# 保存上述规则到文件 /etc/sysconfig/iptables 中&lt;/span&gt;
&lt;span class="c"&gt;#######################&lt;/span&gt;
service iptables save
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h5&gt;3 启用 iptables 防火墙服务&lt;/h5&gt;
&lt;p&gt;把上面的脚本文件 iptables.sh 上传到服务器上后，可以通过以下命令启用 iptables 防火墙服务。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;######  执行脚本文件
[root@typecodes ~]# ./iptables.sh
###### 重启防火墙服务
[root@typecodes ~]# service iptables restart

######  执行脚本文件
[root@typecodes ~]# ./iptables.sh 
iptables: Saving firewall rules to /etc/sysconfig/iptables: [  OK  ]

###### 重启防火墙服务
[root@typecodes ~]# service iptables start
iptables: Applying firewall rules: [  OK  ]

###### 开机启动防火墙服务
[root@typecodes ~]# chkconfig iptables on

###### 查看当前防火墙规则是否生效, 部分截图如下：
[root@typecodes ~]# iptables -L -n
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="CentOS iptables 防火墙" src="https://o3cex9zsl.qnssl.com/2014/08/iptables.png" title="CentOS iptables 防火墙" /&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Sat, 16 Aug 2014 20:26:00 +0800</pubDate><guid>tag:typecodes.com,2014-08-16:web/aliyuncentoslnmpiptables.html</guid><category>阿里云 centos</category><category>iptables</category></item><item><title>阿里云CentOS主机 LNMP 环境之主机安全篇一</title><link>https://typecodes.com/web/aliyuncentoslnmphostssh.html</link><description>&lt;p&gt;在&lt;a href="https://typecodes.com/web/aliyuncentoslnmpwebsafeconf.html" title="阿里云CentOS主机 LNMP 环境之web安全篇"&gt;前面一篇文章&lt;/a&gt;介绍了阿里云的CentOS 6.5系统 LNMP 环境下，如何让 web 站点的更为安全。这篇文章主要从用户登录主机方式入手，简单分享下如何让自己的 Linux 主机更安全。&lt;/p&gt;
&lt;h5&gt;1 禁止 CentOS 系统中除 root 外的用户登录&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;###### 查看 CentOS 系统中的所有用户
[root@typecodes ~]# cat /etc/passwd
root:x:0:0:root:/root:/bin/bash
bin:x:1:1:bin:/bin:/sbin/nologin
###### 只需简单在 /etc 目录下建立 nologin 文件即可禁止除root外的用户登录
[root@typecodes ~]# touch /etc/nologin
&lt;/pre&gt;&lt;/div&gt;




&lt;h5&gt;2 禁用密码登录, 只能使用ssh公私钥匹配认证登录主机&lt;/h5&gt;
&lt;p&gt;通过上面一步的操作，只剩下 root 用户可以登录系统了。但是 Linux 系统默认可以使用密码登录，这种方式的缺点就是假如其它人获取了密码，就等于获取了完全控制主机的权限。所以，我们可以选择一种更为严格和安全的登录方式，那就是使用 ssh公钥和私钥配置认证的方式登录。其基本原理是：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;用户先通过非对称加密技术RSA产生一对公、私密钥，公钥储存在远端主机上，私钥保留在自己手中。在登录时，用户端请求连接远端服务器。服务器端先生成一段随机数然后发给用户端，用户端通过私钥对其解密，成功则说明用户端认证通过。然后回传给服务器端，服务器端用储存的公钥对其解密，成功则说明服务器端认证通过。这样双方都认证成功，也就实现了免密码直接登录shell。
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;下面介绍用 SecureCRT 客户端生成公、私密钥登录 ssh 服务器。&lt;/p&gt;
&lt;p&gt;1、“工具”——“创建公钥”，在“密钥生成向导”会话框中的“密钥类型”选择“RSA”，然后点击“下一步”。&lt;/p&gt;
&lt;p&gt;&lt;img alt="“密钥类型”选择“RSA”" src="https://o3cex9zsl.qnssl.com/2014/08/creatersakey.png" title="“密钥类型”选择“RSA”" /&gt;&lt;/p&gt;
&lt;p&gt;2、设置“通行短语”，用于保护本地的密钥（根据个人需要选择）&lt;/p&gt;
&lt;p&gt;&lt;img alt="设置“通行短语”" src="https://o3cex9zsl.qnssl.com/2014/08/setshortwords.png" title="设置“通行短语”" /&gt;&lt;/p&gt;
&lt;p&gt;3、设置“密钥位长度(K)”为1024，然后出现“密钥生成向导”进度条。&lt;/p&gt;
&lt;p&gt;&lt;img alt="设置“密钥位长度(K)”为1024" src="https://o3cex9zsl.qnssl.com/2014/08/createkeyproc.png" title="设置“密钥位长度(K)”为1024" /&gt;&lt;/p&gt;
&lt;p&gt;4、选择“OpenSSH 密钥格式”以及密钥保存位置
当完成该操作后，会在该文件路径下生成两个文件：公钥文件，例如centos6_Identity.pub；私钥文件，例如centos6_Identity。&lt;/p&gt;
&lt;p&gt;&lt;img alt="“OpenSSH 密钥格式”以及密钥保存位置" src="https://o3cex9zsl.qnssl.com/2014/08/savekeypath.png" title="“OpenSSH 密钥格式”以及密钥保存位置" /&gt;&lt;/p&gt;
&lt;p&gt;5、在“是否使用此密钥为全局密钥？”确认框中选择“否”。&lt;/p&gt;
&lt;p&gt;6、用root账户在 home 目录下创建 .ssh 文件夹, 权限600 ：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@typecodes ~]# mkdir .ssh
[root@typecodes ~]# chmod 600 .ssh
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;7、用root账户把刚保存的公钥文件 centos6_Identity.pub 上传到 .ssh 文件夹下，并复制一份名为 authorized_keys 的文件。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@typecodes .ssh]# cp centos6_Identity.pub authorized_keys
[root@typecodes .ssh]# chmod 600 authorized_keys
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;8、修改 OpenSSH 服务器配置文件&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@typecodes ~]# vim /etc/ssh/sshd_config
###### 修改 OpenSSH 默认端口 22 为其它端口
Port 2001
###### 允许 root 账户登录
PermitRootLogin yes
###### 禁止使用密码验证登录
PasswordAuthentication no
###### 启用RSA加密
RSAAuthentication yes
###### 启用公钥认证
PubkeyAuthentication yes
###### 公钥文件的存放位置
AuthorizedKeysFile .ssh/authorized_keys

###### :wq保存后, 重启 sshd 服务
[root@typecodes ~]# service sshd restart
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;9、用 SecureCRT 重新登录远程主机：
“选项”——“会话选项”——“连接”——“SSH2”——“公钥”——“属性”，在“使用身份或证书文件”中选择之前存储的密钥文件 centos6_Identity.pub 。如果在步骤8中修改了 ssh 默认的端口 22 的话，相应把下图 SecureCRT 中的端口改掉。&lt;/p&gt;
&lt;p&gt;&lt;img alt="重新配置ssh2的登录方式" src="https://o3cex9zsl.qnssl.com/2014/08/sshloginset.png" title="重新配置ssh2的登录方式" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="选择之前生成的密钥文件" src="https://o3cex9zsl.qnssl.com/2014/08/choosepubkey.png" title="选择之前生成的密钥文件" /&gt;&lt;/p&gt;
&lt;p&gt;10.输入之前设置的“通行短语”即可成功登录：&lt;/p&gt;
&lt;p&gt;&lt;img alt="输入之前设置的“通行短语”" src="https://o3cex9zsl.qnssl.com/2014/08/inputshortwords.png" title="输入之前设置的“通行短语”" /&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Sat, 16 Aug 2014 16:32:00 +0800</pubDate><guid>tag:typecodes.com,2014-08-16:web/aliyuncentoslnmphostssh.html</guid><category>阿里云 centos</category><category>sshd</category></item><item><title>阿里云CentOS主机 LNMP 环境之web安全篇</title><link>https://typecodes.com/web/aliyuncentoslnmpwebsafeconf.html</link><description>&lt;p&gt;前面几篇文章介绍了阿里云的CentOS 6.5系统中如何搭建和配置 LNMP 环境，这篇文章主要说说 web 站点的安全配置。&lt;/p&gt;
&lt;h5&gt;1 修改 CentOS 系统的主机名(关系不大, 看个人喜好)&lt;/h5&gt;
&lt;p&gt;默认同开通的阿里云 Linux 主机都是以 AY+随机数 命名的，修改方法如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@typecodes ~]# vi /etc/sysconfig/network
###### 修改主机名HOSTNAME, 例如 HOSTNAME=typecodes , 然后:wq保存退出
HOSTNAME=typecodes
###### 接着执行 hostname 命令
[root@typecodes ~]# hostname typecodes
###### 退出ssh, 然后重新登录即可
&lt;/pre&gt;&lt;/div&gt;




&lt;h5&gt;2 控制脚本访问权限&lt;/h5&gt;
&lt;p&gt;在 /etc/php.ini 的第 375 行开始，有个重要的web安全点： open_basedir 。只要将其设置为自己的 web 站点根路径，就可以限制 web 站点中的所有文件(包括.php脚本等)操作都只能在这个目录(即web根路径)下，从而防止 CentOS 系统中的其它文件/目录受到攻击。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;375 ; open_basedir, if set, limits all file operations to the defined directory
376 ; and below.  This directive makes most sense if used in a per-directory
377 ; or per-virtualhost web server configuration file. This directive is
378 ; *NOT* affected by whether Safe Mode is turned On or Off.
379 ; http://www.php.net/manual/en/ini.sect.safe-mode.php#ini.open-basedir
380 open_basedir = /usr/wwwroot/typecodes;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;3 关闭错误消息显示&lt;/h5&gt;
&lt;p&gt;像 PHP、JSP、ASP.NET 等动态web在脚本处理失败时，可能会在客户端的错误页面上暴露出一些重要信息从而被利用。因此，对于 PHP 站点，我们可以通过配置 /etc/php.ini 关闭错误信息来避免，处理位置从第 528 行开始。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;528 ; Production Value: Off
529 ; http://www.php.net/manual/en/errorfunc.configuration.php#ini.display-errors
530 display_errors = Off
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;4 针对 nginx 的安全设置&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;###### 消除目录浏览漏洞, 在 nginx.conf 的 http 属性中配置
[root@typecodes ~]# vi /etc/nginx/nginx.conf
autoindex Off

###### 目录安全配置, 在 /etc/nginx/conf.d/default.conf的 server 属性配置: 直接访问该目录下面的任意.php脚本文件, 都跳到404界面. 这点也在前面文章 https://typecodes.com/web/aliyuncentoslnmpnginxconf.html 提到了。

[root@typecodes ~]# vi /etc/nginx/conf.d/default.conf
location ~ .*/plugins/.*\.(php|php5)$ {
    deny  all;
}
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;5 禁止显示 PHP 和 Nginx 的版本号&lt;/h5&gt;
&lt;p&gt;对于 Php 和 Nginx 这两款开源属性的程序，出于安全考虑可以不把站点正在使用的版本号公布出来。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;###### 禁止显示 Php 版本, 配置文件是 /etc/php.ini
 427 ; Decides whether PHP may expose the fact that it is installed on the server
 428 ; (e.g. by adding its signature to the Web server header).  It is no security
 429 ; threat in any way, but it makes it possible to determine whether you use PHP
 430 ; on your server or not.
 431 ; http://www.php.net/manual/en/ini.core.php#ini.expose-php
 432 expose_php = Off

###### 禁止显示 Nginx 版本, 在 /etc/nginx/nginx.conf 的 http 属性中添加下面这行
server_tokens off;

###### 测试效果(其实很多站长工具提供的查询功能也是利用curl请求命令)

[root@typecodes ~]# curl -I typecodes.com
HTTP/1.1 301 Moved Permanently
Server: nginx
Date: Fri, 15 Aug 2014 13:10:46 GMT
Content-Type: text/html
Content-Length: 178
Connection: keep-alive
Location: https://typecodes.com/
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Fri, 15 Aug 2014 21:25:00 +0800</pubDate><guid>tag:typecodes.com,2014-08-15:web/aliyuncentoslnmpwebsafeconf.html</guid><category>阿里云 centos</category><category>lnmp 安全配置</category></item><item><title>阿里云CentOS主机 LNMP 环境配置之Php篇——安装XCache加速器</title><link>https://typecodes.com/web/aliyuncentoslnmpxcacheconf.html</link><description>&lt;p&gt;在完成了上面两篇关于阿里云CentOS 6.5主机中 Nginx 和 Mysql 的配置的经验分享后，这篇文章说说如何安装 php 的“加速器”——&lt;a href="http://xcache.lighttpd.net/wiki/ReleaseArchive" title="XCache稳定版官方介绍"&gt;XCache&lt;/a&gt;。相信大家听说过 php 的几款缓存加速器：APC、xcache、eaccelerator等（对于小站咱就不要使用 Memcached 了）。&lt;/p&gt;
&lt;h5&gt;1 官网下载 XCache 3.1.0 源码(支持php5.1 ~ 5.4)&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;###### 下载XCache 3.1.0稳定版
[root@typecodes ~]# wget http://xcache.lighttpd.net/pub/Releases/3.1.0/xcache-3.1.0.tar.gz
###### 解压到当前目录
[root@typecodes ~]# tar -zxvf xcache-3.1.0.tar.gz
[root@typecodes ~]# cd xcache-3.1.0

###### phpize是用来扩展php模块的，建立外挂模块
[root@typecodes xcache-3.1.0]# phpize
Configuring for:
PHP Api Version:        20090626
Zend Module Api No:     20090626
Zend Extension Api No:  20090626

###### 如果出现 -bash: phpize: command not found，是因为没安装 php-devel 导致的
[root@typecodes ~]# yum install php-devel
&lt;/pre&gt;&lt;/div&gt;




&lt;h5&gt;2 编译 XCache 3.1.0 的源码进行安装&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;###### ./configure 命令编译生成 Makefile 文件
[root@typecodes xcache-3.1.0]# ./configure --enable-xcache --enable-xcache-coverager --enable-xcache-optimizer  --enable-xcache-disassembler  --enable-xcache-mmap --with-php-config=/usr/bin/php-config
checking for grep that handles long lines and -e... /bin/grep
###### 省略一大堆的配置以及 checking for 当前的环境是否满足安装的依赖关系 ######

###### 接着执行make并安装
[root@typecodes xcache-3.1.0]# make &amp;amp;&amp;amp; make install
###### 省略一大堆的安装过程, 快结束时会看到
Build complete.
###### 最后显示如下, 我们需要的 xcache.so 动态链接共享库就在这个目录下 ######
Installing shared extensions:     /usr/lib64/php/modules/
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;3 把 XCache 的配置文件 xcache.ini 引入到 php.ini 中生效&lt;/h5&gt;
&lt;p&gt;从 php 的配置文件( /etc/php.ini )的第 933 行开始，我们可以看到：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt; 933 ;;;;
 934 ; Note: packaged extension modules are now loaded via the .ini files
 935 ; found in the directory /etc/php.d; these are loaded by default.
 936 ;;;;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;其含义是：打包的扩展模块目前通过 /etc/php.d 目录下的 .ini 文件默认自动加载。因此，我们需要将 XCache 的配置文件 xcache.ini 移到该目录下，以便php能自动加载 XCache 扩展。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@typecodes xcache-3.1.0]# mv xcache.ini /etc/php.d
[root@typecodes xcache-3.1.0]# cd /etc/php.d
###### 设置 XCache 只读保护
[root@typecodes php.d]# vi xcache.ini
xcache.readonly_protection = On
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;4 后记&lt;/h5&gt;
&lt;p&gt;这样，安装XCache加速器的整个过程就结束了。我们可以通过在web站点目录下新建一个php脚本文件，内容写上 &amp;lt;?php php_info();?&amp;gt; 就可以看到 XCache 的模块说明了。还可以通过命令方式查看是否生效：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@TypeCodes ~]# php -v
PHP 5.*.* (cli) (built: *** ** 20** **:**:**) 
Copyright (c) 1997-2010 The PHP Group
Zend Engine v2.3.0, Copyright (c) 1998-2010 Zend Technologies
    with XCache v3.1.0, Copyright (c) 2005-2013, by mOo
    with XCache Optimizer v3.1.0, Copyright (c) 2005-2013, by mOo
    with XCache Cacher v3.1.0, Copyright (c) 2005-2013, by mOo
    with XCache Coverager v3.1.0, Copyright (c) 2005-2013, by mOo
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Thu, 14 Aug 2014 23:06:00 +0800</pubDate><guid>tag:typecodes.com,2014-08-14:web/aliyuncentoslnmpxcacheconf.html</guid><category>阿里云 centos</category><category>xcache加速器</category></item><item><title>阿里云CentOS主机 LNMP 环境配置之Nginx篇</title><link>https://typecodes.com/web/aliyuncentoslnmpnginxconf.html</link><description>&lt;p&gt;上一篇文章主要分享了&lt;a href="https://typecodes.com/web/aliyuncentoslnmpmysqlconf.html" title="阿里云CentOS主机 LNMP 环境配置之Mysql篇"&gt;LNMP 环境如何简单配置 Mysql&lt;/a&gt;。这篇文章简要说说如何配置 Nginx 。是其默认配置文件是&lt;code&gt;nginx.conf&lt;/code&gt;和&lt;code&gt;default.conf&lt;/code&gt;。&lt;/p&gt;
&lt;h5&gt;1 nginx.conf配置文件&lt;/h5&gt;
&lt;p&gt;在 nginx.conf 文件中，会看到 nginx 默认的错误日志保存文件：error.log。它记录了服务器端由nginx处理的错误信息，例如永久跳转301、页面不存在404错误、服务器错误500错误等等。&lt;/p&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;###### 错误日志文件error.log, 可重新定义路径
error_log  /var/log/nginx/error.log warn;

###### 客户端请求处理记录文件access.log, 可重新定义路径
access_log  /var/log/nginx/access.log
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在 CentOS 系统中的很多配置文件都会用到“引用文件”，其效果就像C/C++或PHP等语言中的 include 文件预处理。在 nginx.conf 中定义的 http 属性中同样可以看到示例：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;###### Multipurpose Internet Mail Extensions, 定义不同文件后缀对应的MIME类型
include  /etc/nginx/mime.types;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;重点来了，如何为站点开启 Gzip 压缩呢？方法很简单，在 http 属性中添加&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;#support gzip
gzip on;

###### 压缩条件:页面最小字节数(从header头中的content-length获取)大于1K
gzip_min_length 1k;

gzip_buffers 16 64k;
gzip_http_version 1.1;

###### gzip压缩比例, 1到9, 9压缩比最大但处理速度最慢
gzip_comp_level 6;

###### 需要压缩的文件类型,  text/javascript是js压缩, 不要漏掉
gzip_types text/plain application/x-javascript text/css application/javascript text/javascript image/jpeg image/gif image/png application/xml application/json;

###### 浏览器支持,则开启 Gzip 压缩
gzip_vary on;

###### 去掉 IE6 以下系列浏览器的支持, 避免 nginx 出错
gzip_disable &amp;quot;MSIE [1-6].(?!.*SV1)&amp;quot;;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;2 default.conf配置文件&lt;/h5&gt;
&lt;p&gt;在 nginx.conf 中通过&lt;code&gt;include /etc/nginx/conf.d/\*.conf;&lt;/code&gt;引入了 default.conf 这个server配置文件。它用来详细配置整个web站点的Server信息。下面是一个完整的 default.conf 配置文件示例，要点已注释。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;server&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="err"&gt;######&lt;/span&gt;  &lt;span class="err"&gt;监听&lt;/span&gt;&lt;span class="m"&gt;80&lt;/span&gt;&lt;span class="err"&gt;端口&lt;/span&gt;
    &lt;span class="n"&gt;listen&lt;/span&gt;       &lt;span class="m"&gt;80&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;server_name&lt;/span&gt;  &lt;span class="n"&gt;www&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;typecodes&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="m"&gt;#http&lt;/span&gt;  &lt;span class="m"&gt;301&lt;/span&gt; &lt;span class="n"&gt;redirect&lt;/span&gt;
    &lt;span class="n"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;host&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;www.typecodes.com&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;rewrite&lt;/span&gt; &lt;span class="o"&gt;^/&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;.*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;https&lt;/span&gt;&lt;span class="o"&gt;://&lt;/span&gt;&lt;span class="n"&gt;www&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;typecodes&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="n"&gt;permanent&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="err"&gt;#####&lt;/span&gt;  &lt;span class="nt"&gt;web&lt;/span&gt;&lt;span class="err"&gt;站点的根路径&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="err"&gt;大家可自定义&lt;/span&gt;
    &lt;span class="nt"&gt;root&lt;/span&gt;   &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;wwwroot&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;typecho&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="nt"&gt;index&lt;/span&gt;  &lt;span class="nt"&gt;index&lt;/span&gt;&lt;span class="nc"&gt;.php&lt;/span&gt; &lt;span class="nt"&gt;index&lt;/span&gt;&lt;span class="nc"&gt;.html&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

    &lt;span class="err"&gt;#####&lt;/span&gt;  &lt;span class="nt"&gt;css&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;javascript&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="err"&gt;图片等静态资源缓存的天数&lt;/span&gt;
    &lt;span class="nt"&gt;location&lt;/span&gt; &lt;span class="o"&gt;~&lt;/span&gt; &lt;span class="o"&gt;.*&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="o"&gt;.(&lt;/span&gt;&lt;span class="nt"&gt;css&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="nt"&gt;js&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="nt"&gt;ico&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="nt"&gt;png&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="nt"&gt;gif&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="nt"&gt;jpg&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="nt"&gt;json&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="nt"&gt;mp3&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="nt"&gt;mp4&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="nt"&gt;flv&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="nt"&gt;swf&lt;/span&gt;&lt;span class="o"&gt;)(.*)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;expires&lt;/span&gt; &lt;span class="m"&gt;60&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="err"&gt;#####&lt;/span&gt;  &lt;span class="err"&gt;禁止执行某个目录下面的&lt;/span&gt;&lt;span class="nt"&gt;php&lt;/span&gt;&lt;span class="err"&gt;脚本&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;此示例是针对&lt;/span&gt;&lt;span class="nt"&gt;wordpress&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;typecho&lt;/span&gt;&lt;span class="err"&gt;的插件目录&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="nt"&gt;location&lt;/span&gt; &lt;span class="o"&gt;~&lt;/span&gt; &lt;span class="o"&gt;.*/&lt;/span&gt;&lt;span class="nt"&gt;plugins&lt;/span&gt;&lt;span class="o"&gt;/.*&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="o"&gt;.(&lt;/span&gt;&lt;span class="nt"&gt;php&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="nt"&gt;php5&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="o"&gt;)$&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;deny&lt;/span&gt;  &lt;span class="n"&gt;all&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="err"&gt;#####&lt;/span&gt;  &lt;span class="nt"&gt;Rewrite&lt;/span&gt;&lt;span class="err"&gt;的伪静态法则&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;针对&lt;/span&gt;&lt;span class="nt"&gt;wordpress&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;typecho&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="nt"&gt;location&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;request_filename&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;rewrite&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;.*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt; &lt;span class="n"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nt"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;-f&lt;/span&gt; &lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="nt"&gt;request_filename&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;index&lt;/span&gt;&lt;span class="nc"&gt;.php&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;rewrite&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;.*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;php&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nt"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(!&lt;/span&gt;&lt;span class="nt"&gt;-f&lt;/span&gt; &lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="nt"&gt;request_filename&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;rewrite&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;.*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;php&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="err"&gt;}&lt;/span&gt;

    &lt;span class="err"&gt;#####&lt;/span&gt;  &lt;span class="nt"&gt;redirect&lt;/span&gt; &lt;span class="nt"&gt;server&lt;/span&gt; &lt;span class="nt"&gt;error&lt;/span&gt; &lt;span class="nt"&gt;pages&lt;/span&gt; &lt;span class="nt"&gt;to&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;static&lt;/span&gt; &lt;span class="nt"&gt;page&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;50x&lt;/span&gt;&lt;span class="nc"&gt;.html&lt;/span&gt;
    &lt;span class="nt"&gt;error_page&lt;/span&gt;   &lt;span class="nt"&gt;500&lt;/span&gt; &lt;span class="nt"&gt;502&lt;/span&gt; &lt;span class="nt"&gt;503&lt;/span&gt; &lt;span class="nt"&gt;504&lt;/span&gt;  &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;50x&lt;/span&gt;&lt;span class="nc"&gt;.html&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="nt"&gt;location&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;50x&lt;/span&gt;&lt;span class="nc"&gt;.html&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;root&lt;/span&gt;   &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;share&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;nginx&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="err"&gt;#####&lt;/span&gt;  &lt;span class="err"&gt;依葫芦画瓢设置&lt;/span&gt; &lt;span class="nt"&gt;http&lt;/span&gt; &lt;span class="nt"&gt;403&lt;/span&gt;&lt;span class="err"&gt;、&lt;/span&gt;&lt;span class="nt"&gt;404&lt;/span&gt;&lt;span class="err"&gt;响应码的处理页面&lt;/span&gt;
    &lt;span class="nt"&gt;error_page&lt;/span&gt;  &lt;span class="nt"&gt;403&lt;/span&gt; &lt;span class="nt"&gt;404&lt;/span&gt;              &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;40x&lt;/span&gt;&lt;span class="nc"&gt;.html&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="nt"&gt;location&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;40x&lt;/span&gt;&lt;span class="nc"&gt;.html&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;root&lt;/span&gt;   &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;share&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;nginx&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="err"&gt;#####&lt;/span&gt;  &lt;span class="nt"&gt;pass&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;PHP&lt;/span&gt; &lt;span class="nt"&gt;scripts&lt;/span&gt; &lt;span class="nt"&gt;to&lt;/span&gt; &lt;span class="nt"&gt;FastCGI&lt;/span&gt; &lt;span class="nt"&gt;server&lt;/span&gt; &lt;span class="nt"&gt;listening&lt;/span&gt; &lt;span class="nt"&gt;on&lt;/span&gt; &lt;span class="nt"&gt;127&lt;/span&gt;&lt;span class="nc"&gt;.0.0.1&lt;/span&gt;&lt;span class="nd"&gt;:9000&lt;/span&gt;
    &lt;span class="nt"&gt;location&lt;/span&gt;  &lt;span class="o"&gt;~&lt;/span&gt; &lt;span class="o"&gt;.*&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nc"&gt;.php&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="o"&gt;/.*)*$&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;fastcgi_split_path_info&lt;/span&gt; &lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;.+&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;php&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="o"&gt;/.+&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;fastcgi_pass&lt;/span&gt;   &lt;span class="m"&gt;127&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;9000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;fastcgi_index&lt;/span&gt;  &lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;php&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="err"&gt;#####&lt;/span&gt;  &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;document_root&lt;/span&gt;&lt;span class="err"&gt;代表开头的&lt;/span&gt; &lt;span class="n"&gt;root&lt;/span&gt; &lt;span class="err"&gt;定义的&lt;/span&gt;&lt;span class="n"&gt;web&lt;/span&gt;&lt;span class="err"&gt;根路径&lt;/span&gt;
        &lt;span class="n"&gt;fastcgi_param&lt;/span&gt;  &lt;span class="n"&gt;SCRIPT_FILENAME&lt;/span&gt;  &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;document_root&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;fastcgi_script_name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;include&lt;/span&gt;        &lt;span class="n"&gt;fastcgi_params&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="err"&gt;######&lt;/span&gt; &lt;span class="err"&gt;禁止访问某个重要文件&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;示例是禁止&lt;/span&gt; &lt;span class="nc"&gt;.htxxx&lt;/span&gt; &lt;span class="err"&gt;文件&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt; &lt;span class="err"&gt;记得举一反三&lt;/span&gt;
    &lt;span class="nt"&gt;location&lt;/span&gt; &lt;span class="o"&gt;~&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nc"&gt;.ht&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;deny&lt;/span&gt;  &lt;span class="n"&gt;all&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;3关于网站空白页面如何显示404错误&lt;/h5&gt;
&lt;p&gt;上面配置的404页面，只能在访问服务器上不存在的静态资源(例如.html、js、css等)时，才会通过 40x.html 显示错误提示。当访问服务器上不存在的 .php 文件时，站点会显示空白页面，即设置的 40x.html 没生效。原因是在 nginx.conf 配置文件中的 http 属性没有设置&lt;code&gt;fastcgi_intercept_errors on;&lt;/code&gt;导致的。其作用是当 FastCGI 后端服务器处理请求给出 http 响应码为 4xx 和 5xx 时，就转发给 nginx，由 default.conf 配置的 error_page 项来处理，最后响应给客户端。这样就将由于不存在的 .php 脚本文件出现的404错误也引导至 40x.html 页面处理了。&lt;/p&gt;
&lt;h5&gt;4关于网站如何显示服务器500等错误&lt;/h5&gt;
&lt;p&gt;原理一样，通过上面的设置，http状态码为500等错误时，也会引导至 50x.html 页面处理。最后请注意，在一个 http 中可以启动多个 server；在一个server中，可以有多个location配置，这样就有了Nginx多站点的配置（略去）。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Wed, 13 Aug 2014 23:22:00 +0800</pubDate><guid>tag:typecodes.com,2014-08-13:web/aliyuncentoslnmpnginxconf.html</guid><category>阿里云 centos</category><category>lnmp</category><category>nginx</category></item><item><title>阿里云CentOS主机 LNMP 环境配置之Mysql篇</title><link>https://typecodes.com/web/aliyuncentoslnmpmysqlconf.html</link><description>&lt;p&gt;&lt;a href="https://typecodes.com/web/aliyuncentos6creatlnmp.html" title="阿里云CentOS 6.5搭建LNMP环境（非一键脚本）"&gt;上文中&lt;/a&gt;分享了在aliyun主机 CentOS 6.5 系统上搭建了 LNMP 环境，其实就是很简单的一行 yum install 命令搞定了。这篇文章简要说说 LNMP 环境下 Mysql 数据库的一些配置和使用，当然以后我们还得主动去学习数据库安全、优化等知识。&lt;/p&gt;
&lt;h5&gt;1 掌握 Linux(包括CentOS) 系统下基本的mysql操作命令&lt;/h5&gt;


&lt;p&gt;在刚搭好的 LNMP 环境中，mysql和linux主机一样会默认创建一个管理员，而且都叫&lt;code&gt;root&lt;/code&gt;（千万不要混淆!）。但是mysql数据库的管理员 root 默认是没有设密码的，因此第一件事就是为它设置一个密码：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@typecodes ~]# mysqladmin -u root password  &amp;#39;你想设置的 root 用户密码&amp;#39;* 。那么接下来我们很可能会用到的 mysql 操作命令。

###### 使用root管理员身份登录mysql
[root@typecodes ~]# mysql -u root -p
Enter password:         #输入root用户的密码然后回车即可

###### 登陆成功后, 如果觉得之前的root密码不合适, 可以如下命令修改
mysql&amp;gt; UPDATE user SET Password=PASSWORD(&amp;#39;new_root_passwd&amp;#39;) where USER=&amp;#39;root&amp;#39;;
mysql&amp;gt; flush privileges ;

###### 查看当前mysql所有的数据库
mysql&amp;gt; show databases;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| mysql              |
| test               |
+--------------------+
5 rows in set (0.00 sec)

###### 选择要操作的数据库
mysql&amp;gt; use mysql;
Database changed

###### 查看这个数据库中所有的表
mysql&amp;gt; show tables;
+---------------------------+
| Tables_in_mysql           |
+---------------------------+
| columns_priv              |
*********略去部分表名********
| user                      |
+---------------------------+

###### 删除某个不需要的数据库
mysql&amp;gt; drop database database_name;

###### 重新创建这个数据库, 默认编码设置为utf8/GBK等（避免以后乱码）
mysql&amp;gt; CREATE DATABASE `database_name` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci;

###### 管理员root授权密码为123abc的用户database_user, 拥有数据库database_name的所有管理权限(为安全起见,大家根据实际设置) 
mysql&amp;gt; grant all privileges on database_name.* to database_user@localhost identified by &amp;#39;123abc&amp;#39;;

###### 记得刷新
mysql&amp;gt; flush privileges;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;2 为数据库导入已备份的.sql文件&lt;/h5&gt;
&lt;p&gt;在上面步骤中，我们知道了创建用户和数据库，那么以后经常遇到数据库还原的问题，它的命令也很简单：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;###### database_user是用户名, databasename是数据库名, backup.sql是备份的数据库文件
       utf8一定要和创建数据库时设置的编码一致
[root@typecodes ~]# mysql -u database_user -p databasename &amp;lt; /root/backup.sql -f --default-character-set=utf8;
Enter password:   #输入database_user的密码然后回车即可
mysql&amp;gt;    #然后你就可以按照步骤1中查看是否还原成功
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;3 将数据库备份导出为.sql文件&lt;/h5&gt;
&lt;p&gt;知道mysql数据库的还原，当然还得知道数据库备份：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;###### 导出数据库的表结构和数据, database_user用户名, databasename数据库名
       backup为导出的sql文件名
[root@typecodes ~]# mysqldump -u database_user -p databasename &amp;gt; backup.sql;
Enter password:     #输入database_user的密码然后回车即可
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;4 后记&lt;/h5&gt;
&lt;p&gt;这样，我们就在阿里云的 CentOS 系统上简单配置好了 LNMP 环境中的 Mysql 数据库。对于 phpmyadmin 扩展，博主认为受够了虚拟主机的童鞋可以不用了。平常需要注意的是数据库编码、安全设置和效率优化的问题，需要我们进一步的学习！&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Tue, 12 Aug 2014 22:41:00 +0800</pubDate><guid>tag:typecodes.com,2014-08-12:web/aliyuncentoslnmpmysqlconf.html</guid><category>阿里云 centos</category><category>lnmp</category><category>mysql</category></item><item><title>阿里云CentOS 6.5搭建LNMP环境（非一键脚本）</title><link>https://typecodes.com/web/aliyuncentos6creatlnmp.html</link><description>&lt;p&gt;个人不太喜欢网上的“一键脚本”，原因很简单：我的地盘我做主。下面是自己在5月初购买aliyun初级ECS后，8月初在CentOS 6.5上搭建 LNMP 环境的心得。大鸟请自动飘过，如若错误，请大家指正！&lt;/p&gt;
&lt;h5&gt;1 先脑补下Linux系统&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Linux系统分支众多，其发行版本可以根据打包方式分为两类：一类是基于Dpkg的Debian系，一类是基于RPM的Red Hat系。前者由社区组织维护发行，包括Debian、Ubuntu等；后者一般是商业公司维护发布，包括CentOS、Fedora、RHEL等。在稳定性方面，红帽RHEL和CentOS性能相对较好。
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;很牛逼的样子？NO，请叫我 &lt;a href="http://zh.wikipedia.org/wiki/Linux%E5%8F%91%E8%A1%8C%E7%89%88%E5%88%97%E8%A1%A8" title="Linux发行版列表——wiki百科"&gt;wiki 搬运工&lt;/a&gt;。那么如何查看自己的主机类型呢？&lt;/p&gt;


&lt;h5&gt;查看系统使用的Linux内核版本&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;# cat /proc/version
Linux version 2.6.32-358.6.2.el6.x86_64 (mockbuild@c6b8.bsys.dev.centos.org) (gcc version 4.4.7 20120313 (Red Hat 4.4.7-3) (GCC) ) #1 SMP Thu May 16 20:59:36 UTC 2013
##### 查看系统所属的Linux发行版本
# cat /etc/redhat-release
CentOS release 6.5 (Final)
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;2 更新基于Shell前端的RPM包管理器：yum源&lt;/h5&gt;
&lt;p&gt;相对于用RPM包安装软件，yum能更方便快捷，还能自动安装所需依赖包。因此，我们需要根据自己的主机类型找到对应的yum源进行更新。考虑到和谐，推荐使用国内的开源镜像源，例如 &lt;a href="http://mirrors.163.com/"&gt;网易&lt;/a&gt;、&lt;a href="http://mirrors.hust.edu.cn/"&gt;华科&lt;/a&gt;、&lt;a href="http://mirrors.sohu.com/"&gt;搜狐&lt;/a&gt; 等。这里以163镜像为例：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;##### 先备份原有的yum源文件
# mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup;
##### 切换到yum源文件根目录
# cd /etc/yum.repos.d/
##### 根据步骤1中内核版本获取网易相应的CentOS的Base repo
# wget http://mirrors.163.com/.help/CentOS6-Base-163.repo
##### 重命名为CentOS-Base.repo
# mv CentOS6-Base-163.repo CentOS-Base.repo
##### 建立缓存
# yum makecache
##### 更新yum资源库（第一次可能会持续较长时间）
# yum update
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;3 进入正题：搭建LNMP环境&lt;/h5&gt;
&lt;p&gt;直接使用下面这条命令即可搭建LNM环境，这其中除了php-fpm外还包括了其它几个常用的php扩展，例如php-dev、php-mysql等。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;# yum -y  install nginx mysql mysql-server php-fpm php-devel php-cli php-mysql
php-gd php-imap php-ldap php-odbc php-pear php-xml php-xmlrpc php-mbstring php-mcrypt php-mssql php-snmp php-soap php-tidy
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;4 查看LNMP是否搭建成功：&lt;/h5&gt;
&lt;p&gt;可以通过以下命令分别检测 Nginx、Mysql、Php 的版本。为了站点安全，大家不要把这些信息透露出来，包括在以后自己站点的 http 头等位置（方法会在接下来的文章中说明）。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;##### Nginx版本，已 * 号代替
# nginx -v
nginx version: nginx/1.*.*
##### Mysql版本，已 * 号代替
# mysql -V
mysql  Ver 14.** Distrib 5.*.**, for redhat-linux-gnu (x86_64) using readline 5.1
##### Php版本，已 * 号代替
# php-fpm -v
PHP 5.*.* (fpm-fcgi) (built: *** ** **** **:**:**)
Copyright (c) 1997-2012 The PHP Group
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;5 （开机）启动 LNMP 环境&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;##### 重启 LNMP
# service nginx restart;    service php-fpm restart;    service mysqld restart;
##### 设置 LNMP 开机启动
# chkconfig nginx on;    chkconfig php-fpm on;    chkconfig mysqld on;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;6 其它 LNMP 事项&lt;/h5&gt;
&lt;p&gt;这个时候，打开自己的域名（假设已绑定好了主机IP），可以看到nginx的welcome页面（其实就是/usr/share/nginx/html/index.html）！如果稍微调整下 nginx 的配置文件 default.conf 就可以浏览 php 页面了（会另文说明）。下面是 LNMP 环境默认的一些配置和日志信息。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;##### 默认Nginx配置文件
/etc/nginx/nginx.conf  #具体配置在 /etc/nginx/conf.d/default.conf 中
##### 默认Nginx配置文件设置的web根路径
/usr/share/nginx/html/
##### 默认Nginx日志目录
/var/log/nginx
##### 默认Nginx端口
80

##### 默认php-fpm配置文件
/etc/php-fpm.conf
##### 默认php-fpm日志目录
/var/log/php-fpm

##### 默认php配置文件
/etc/php.ini

##### 默认mysql配置文件
/etc/my.cnf
##### 默认mysql错误日志文件
/var/log/mysqld.log
##### 默认mysql端口
3306
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Mon, 11 Aug 2014 23:31:00 +0800</pubDate><guid>tag:typecodes.com,2014-08-11:web/aliyuncentos6creatlnmp.html</guid><category>阿里云</category><category>centos搭建lnmp环境</category></item><item><title>解决C-FREE 5编译出现“ld.exe: Dwarf Error: found dwarf version '0'”的问题</title><link>https://typecodes.com/cseries/cfree5ldexedwarferr.html</link><description>&lt;h5&gt;1问题描述&lt;/h5&gt;
&lt;p&gt;之前自己在win7 64bit的机器上，安装了MinGW编译器，GCC版本是4.8.1，安装目录是 C:\MinGW ，同时安装了C-FREE 5这款C/C++集成开发环境到 D:\C-Free 5\ 目录。用c-free编译程序的时候总是报：C-FREE~1\mingw\bin\ld.exe: Dwarf Error: found dwarf version '0', this reader only handles version 2 and 3 information。如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img alt="C-FREE 5编译出现“ld.exe: Dwarf Error: found dwarf version '0'”" src="https://o3cex9zsl.qnssl.com/2014/08/cfree5ldexedwarferr.png" title="C-FREE 5编译出现“ld.exe: Dwarf Error: found dwarf version '0'”" /&gt;&lt;/p&gt;


&lt;h5&gt;2检查c-free的配置项：&lt;/h5&gt;
&lt;p&gt;通过“构建”--“构建选项”--“路径”检查c-free中三个配置项：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Include Files 主路径: $(CFRoot)\mingw\include、$(CFRoot)\mingw\lib\gcc\mingw32\3.4.5\include
Library Files 主路径: $(CFRoot)\mingw\lib、$(CFRoot)\mingw\mingw32\lib
Excuteable Files 主路径: $(CFRoot)\mingw\bin、$(CFRoot)\mingw\mingw32\bin
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这样都设置成 C-FREE 5 的相关路径。按理说应该没错的，但是在编译程序的时候总是报上面的错误。&lt;/p&gt;
&lt;h5&gt;3谷歌搜到一个关于Qt编译的类似错误&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;The problem stems from the fact that you are using terribly outdated GCC, while your Qt binaries are most likely built with bleeding-edge GCC (or the one close to it). For instance, as the error message shows, DWARF is outdated in case of your current GCC and is incompatible with the one used by your current Qt. Furthermore, even if it wouldn&amp;#39;t, you&amp;#39;d still hit other problems with binary incompatibilities, since you essentially mix compilers with different major version numbers, which is strongly discouraged. Notice, that your problem has nothing to do with CMake at all. You can see it yourself in the error message, i.e. the error is reported by ld, the linker utility from (your outdated) GCC toolchain. To conclude, your only option is to update GCC, ideally exactly to the one which was used to build your current Qt.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;自己脑残翻译一下&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;问题源于这样一个事实：使用的是非常过时的GCC版本，但Qt二进制文件却是用最新或将近最新的GCC构建的。正如错误信息所示，当前的GCC的DWARF已经过时，并且不符合当前使用的Qt版本。另外，即使不出现上面的情况，你还是会遇到其它二进制不兼容性的问题。因为你把不同主版本号的编译器混淆了，这是非常不鼓励的。另外，这根本跟CMake无关。这点你可以从错误消息中看出来，例如来自(过时的)GCC的链接器功能ld报告的错误。总之，唯一的选择就是更新GCC，最好是能正好用于构建当前Qt的版本。
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;4问题解决&lt;/h5&gt;
&lt;p&gt;既然可能是gcc版本不够新引起的编译问题，那么将MinGW编译器中的GCC版本，也即将 C:\MinGW 下面的&lt;code&gt;所有&lt;/code&gt;文件（当然包括 &lt;code&gt;C:\MinGW\bin\ld.ex&lt;/code&gt; 和 &lt;code&gt;C:\MinGW\mingw32\bin\ld.exe&lt;/code&gt;）复制到 C-FREE 5 安装目录中的 D:\C-Free 5\mingw 目录下面。这样c-free中旧的 GCC 版本文件就被替换成新的了。然后重启c-free，问题解决。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Sun, 10 Aug 2014 23:37:00 +0800</pubDate><guid>tag:typecodes.com,2014-08-10:cseries/cfree5ldexedwarferr.html</guid><category>ld.exe: dwarf error</category></item><item><title>终于从WordPress转向Typecho了</title><link>https://typecodes.com/mix/eventualwptotypecho.html</link><description>&lt;p&gt;4月底，博客的虚拟主机到期。因为不想再用绑定几百个站点的虚拟主机了，所以决定买个vps或者云主机。在比较了几个vps和云主机后，发现阿里的ECS相对来说价格还比较合适，稳定性不错。于是选了个最低配置的CentOS主机，期限为一年。&lt;/p&gt;
&lt;p&gt;买完后，由于没时间去备案，所以5，6，7月份博客都处于无法访问状态。7月底下决心准备把博客重新捡起来，顺带完成去年年底就准备的工作——&lt;a href="https://typecodes.com/mix/wptoconcisetypecho.html" title="简洁的哲学：从华丽的WordPress转Typecho"&gt;从wordpress转向typecho&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img alt="终于从WordPress转向Typecho了" src="https://o3cex9zsl.qnssl.com/2013/10/typecho.png" title="终于从WordPress转向Typecho了" /&gt;&lt;/p&gt;


&lt;p&gt;在本地测试完几个typecho主题后，提交到BAE2.0的空间上（http://huangkeye.duapp.com/）进行测试。结果尼玛被BAE管理平台诱导升级到3.0，立马提醒欠费20多了。坑爹的，这才明白，虽然bae2.0也会提示欠费，但是不会停掉空间服务，用svn还是可以提交代码。但是一升级到3.0，欠费立马就down掉空间服务。悲了个催的，BAE是不能用了。幸好去年还申请了新浪SAE帐号，立马用起来！&lt;/p&gt;
&lt;p&gt;先在SAE进行了实名认证，这样就得到了1000云豆。立马搭了个typecho的测试环境 &lt;a href="http://1.vfhky.sinaapp.com/"&gt;http://1.vfhky.sinaapp.com&lt;/a&gt; ，同样用SVN提交了个初始版本1。由于去年的时候已经准备了一些typecho的通用模块程序，另外原来用着的wp主题的代码还可以利用，所以没多久就完成了新的typecho主题的初始版本。&lt;/p&gt;
&lt;p&gt;在修改完成typecodes的主题后，决定把博客域名也一并更换了。于是在万网上淘了N久，终于找到一个比较满意的，那就是现在在用的这个域名 typecodes.com。然后花费了较大功夫，把原来wordpress博客的数据中的文章和评论这两个模块剥离出来，再重新导入到typecho数据库中。接着又在SAE创建了版本号2，用于演示之前的wordpress博客，大家可以通过 &lt;a href="http://vfhky.sinaapp.com"&gt;http://vfhky.sinaapp.com&lt;/a&gt; 访问。&lt;/p&gt;
&lt;p&gt;最后，对之前没来得及通知博客暂时关闭的小伙伴们说声抱歉！&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Sat, 09 Aug 2014 17:13:00 +0800</pubDate><guid>tag:typecodes.com,2014-08-09:mix/eventualwptotypecho.html</guid><category>博客成长录</category></item><item><title>小心visual studio的“BUG”：变量的声明和使用</title><link>https://typecodes.com/cseries/vsbugonvariable.html</link><description>&lt;p&gt;昨天一Q友找我帮忙写个C程序：其中函数fun要实现：求出2000到2500之内能被7或者17或者27整除，但是不能同时被7和17整除，也不能同时被17和27整除的整数。题目倒是不难，遂打开visual studio，默默地写出下面的程序。&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;
&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;fun&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sum&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(;&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;2501&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="mi"&gt;17&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="mi"&gt;27&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;  &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="mi"&gt;17&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="mi"&gt;17&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="mi"&gt;27&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;
           &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
           &lt;span class="n"&gt;sum&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
   &lt;span class="cm"&gt;/* 返回符合要求元素的个数 */&lt;/span&gt;
   &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;120&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
   &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="n"&gt;fun&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
   &lt;span class="cm"&gt;/* 使指针pt指向数组a的起始地址 */&lt;/span&gt;
   &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;pt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(;&lt;/span&gt;&lt;span class="n"&gt;pt&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;120&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;pt&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="p"&gt;{&lt;/span&gt;
         &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%d&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;pt&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
   &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%d&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;然后ctrl+F5执行，结果很意外的报错了：&lt;/p&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nt"&gt;------&lt;/span&gt; &lt;span class="err"&gt;已启动生成&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;项目&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;test&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="err"&gt;配置&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;Debug&lt;/span&gt; &lt;span class="nt"&gt;Win32&lt;/span&gt; &lt;span class="nt"&gt;------&lt;/span&gt;
&lt;span class="nt"&gt;1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;生成启动时间为&lt;/span&gt; &lt;span class="nt"&gt;2014&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;3&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;18&lt;/span&gt; &lt;span class="nt"&gt;16&lt;/span&gt;&lt;span class="nd"&gt;:30:15&lt;/span&gt;&lt;span class="err"&gt;。&lt;/span&gt;
&lt;span class="nt"&gt;1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nt"&gt;InitializeBuildStatus&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="nt"&gt;1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;  &lt;span class="err"&gt;正在创建“&lt;/span&gt;&lt;span class="nt"&gt;Debug&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nt"&gt;test&lt;/span&gt;&lt;span class="nc"&gt;.unsuccessfulbuild&lt;/span&gt;&lt;span class="err"&gt;”，因为已指定“&lt;/span&gt;&lt;span class="nt"&gt;AlwaysCreate&lt;/span&gt;&lt;span class="err"&gt;”。&lt;/span&gt;
&lt;span class="nt"&gt;1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nt"&gt;ClCompile&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="nt"&gt;1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;  &lt;span class="nt"&gt;1&lt;/span&gt;&lt;span class="nc"&gt;.c&lt;/span&gt;
&lt;span class="nt"&gt;1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nt"&gt;g&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nt"&gt;vsprj&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nt"&gt;test&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nt"&gt;test&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nt"&gt;1&lt;/span&gt;&lt;span class="nc"&gt;.c&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;23&lt;/span&gt;&lt;span class="o"&gt;):&lt;/span&gt; &lt;span class="nt"&gt;error&lt;/span&gt; &lt;span class="nt"&gt;C2143&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;语法错误&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;缺少“&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;在“类型”的前面&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nt"&gt;1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nt"&gt;g&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nt"&gt;vsprj&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nt"&gt;test&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nt"&gt;test&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nt"&gt;1&lt;/span&gt;&lt;span class="nc"&gt;.c&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;24&lt;/span&gt;&lt;span class="o"&gt;):&lt;/span&gt; &lt;span class="nt"&gt;error&lt;/span&gt; &lt;span class="nt"&gt;C2065&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;“&lt;/span&gt;&lt;span class="nt"&gt;pt&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;未声明的标识符&lt;/span&gt;
&lt;span class="nt"&gt;1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nt"&gt;g&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nt"&gt;vsprj&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nt"&gt;test&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nt"&gt;test&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nt"&gt;1&lt;/span&gt;&lt;span class="nc"&gt;.c&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;24&lt;/span&gt;&lt;span class="o"&gt;):&lt;/span&gt; &lt;span class="nt"&gt;warning&lt;/span&gt; &lt;span class="nt"&gt;C4047&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;“&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="err"&gt;“&lt;/span&gt;&lt;span class="nt"&gt;int&lt;/span&gt;&lt;span class="err"&gt;”与“&lt;/span&gt;&lt;span class="nt"&gt;int&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="err"&gt;”的间接级别不同&lt;/span&gt;
&lt;span class="nt"&gt;1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nt"&gt;g&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nt"&gt;vsprj&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nt"&gt;test&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nt"&gt;test&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nt"&gt;1&lt;/span&gt;&lt;span class="nc"&gt;.c&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;24&lt;/span&gt;&lt;span class="o"&gt;):&lt;/span&gt; &lt;span class="nt"&gt;error&lt;/span&gt; &lt;span class="nt"&gt;C2065&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;“&lt;/span&gt;&lt;span class="nt"&gt;pt&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;未声明的标识符&lt;/span&gt;
&lt;span class="nt"&gt;1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nt"&gt;g&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nt"&gt;vsprj&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nt"&gt;test&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nt"&gt;test&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nt"&gt;1&lt;/span&gt;&lt;span class="nc"&gt;.c&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;26&lt;/span&gt;&lt;span class="o"&gt;):&lt;/span&gt; &lt;span class="nt"&gt;error&lt;/span&gt; &lt;span class="nt"&gt;C2065&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;“&lt;/span&gt;&lt;span class="nt"&gt;pt&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;未声明的标识符&lt;/span&gt;
&lt;span class="nt"&gt;1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nt"&gt;g&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nt"&gt;vsprj&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nt"&gt;test&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nt"&gt;test&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nt"&gt;1&lt;/span&gt;&lt;span class="nc"&gt;.c&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;26&lt;/span&gt;&lt;span class="o"&gt;):&lt;/span&gt; &lt;span class="nt"&gt;error&lt;/span&gt; &lt;span class="nt"&gt;C2100&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;非法的间接寻址&lt;/span&gt;
&lt;span class="nt"&gt;1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;生成失败。&lt;/span&gt;
&lt;span class="nt"&gt;1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;已用时间&lt;/span&gt; &lt;span class="nt"&gt;00&lt;/span&gt;&lt;span class="nd"&gt;:00:00&lt;/span&gt;&lt;span class="nc"&gt;.65&lt;/span&gt;
&lt;span class="o"&gt;==========&lt;/span&gt; &lt;span class="err"&gt;生成&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;成功&lt;/span&gt; &lt;span class="nt"&gt;0&lt;/span&gt; &lt;span class="err"&gt;个，失败&lt;/span&gt; &lt;span class="nt"&gt;1&lt;/span&gt; &lt;span class="err"&gt;个，最新&lt;/span&gt; &lt;span class="nt"&gt;0&lt;/span&gt; &lt;span class="err"&gt;个，跳过&lt;/span&gt; &lt;span class="nt"&gt;0&lt;/span&gt; &lt;span class="err"&gt;个&lt;/span&gt; &lt;span class="o"&gt;==========&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;无奈，只能根据上面的错误信息一个一个排查了。但很显然，第23行的int *pt = a;前面不缺分号，另外pt也声明为指针了，所以整个程序应该是没错的。检查了好几遍还是没看出问题，估计是vs编译出错了，于是决定用cygwin编译器重新编译一下。win+r打开cmd命令窗口，输入编译命令&lt;code&gt;gcc G:\VSprj\test\test\1.c -o 1&lt;/code&gt;，然后直接执行1.exe。见证奇迹的时刻，竟然输出了数据。&lt;/p&gt;
&lt;p&gt;&lt;img alt="cmd命令窗口gcc编译" src="https://o3cex9zsl.qnssl.com/2014/03/gcc_compile.png" /&gt;&lt;/p&gt;
&lt;p&gt;回头想想，记得以前网上看过一个帖子，说是visual c++和visual studio对变量的声明要求特别严格，局部/全局变量一定要先声明在函数的最前面。于是把main函数中的指针pt声明调整到在fun函数的前面，再编译就没报错了。&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt; * 使用指针和数组求2000到2500之内能被7或者17或者27整除，但是不能同时被7和17整除也不能同时被17和27整除的整数&lt;/span&gt;
&lt;span class="cm"&gt; * @author: vfhky 20140318 16:52&lt;/span&gt;
&lt;span class="cm"&gt; */&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;
&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;fun&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sum&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(;&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;2501&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="mi"&gt;17&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="mi"&gt;27&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;  &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="mi"&gt;17&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="mi"&gt;17&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="mi"&gt;27&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="n"&gt;sum&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
   &lt;span class="cm"&gt;/* 返回符合要求元素的个数 */&lt;/span&gt;
   &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="cm"&gt;/* 用于保存符合要求的元素 */&lt;/span&gt;
   &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;120&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
   &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="cm"&gt;/* 先声明指针变量pt */&lt;/span&gt;
   &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;pt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="n"&gt;fun&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
   &lt;span class="cm"&gt;/* 再使指针pt指向数组a的起始地址 */&lt;/span&gt;
   &lt;span class="n"&gt;pt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(;&lt;/span&gt;&lt;span class="n"&gt;pt&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;120&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;pt&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="p"&gt;{&lt;/span&gt;
         &lt;span class="cm"&gt;/* 循环输出符合要求的元素 */&lt;/span&gt;
         &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%d&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;pt&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
   &lt;span class="cm"&gt;/* 输出总共符合要求的元素的个数 */&lt;/span&gt;
   &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%d&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;虽然说vs对变量的使用比较“苛刻”，造成类似上面的“bug”，提供的错误信息“误导”了开发人员。但是细想之下，又觉得vs这种做法很“规范”：任何变量在使用之前必须先声明！而为了增强程序的可读性，也应该把声明语句尽量放在最前面！&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Wed, 19 Mar 2014 16:34:00 +0800</pubDate><guid>tag:typecodes.com,2014-03-19:cseries/vsbugonvariable.html</guid><category>visual studio</category></item><item><title>GitHub个人仓库更新：wordpress主题[W_vfhky]</title><link>https://typecodes.com/mix/postwvfhkygithub.html</link><description>&lt;p&gt;今天往自己的github仓库中扔进另一份博客wordpress主题[W_vfhky]。这份主题是从12年6月12建立至2013年7月，博主一直在用的。原型是威少的主题&lt;a href="http://www.weisay.com/"&gt;weisaysimple&lt;/a&gt;，简洁明了，很适合IT类的博客。精炼的页面设计，让博客的内容主次分明，详略得当，真的是让人爱不释手。&lt;/p&gt;
&lt;p&gt;当然，我也对weisaysimple修改了N多次，做了很多代码优化和个性化需求的定制和改进。例如，博客右上角的综合谷歌自定义搜索和百度搜索为一体的博客站内搜索，博客右侧栏的Jquery滚动公告，右侧栏的Jquery滚动最新评论和样式设计，评论列表纯真IP库的使用，邮件通知的改进，博客整站的avatar个性头像缓存等等。&lt;/p&gt;


&lt;p&gt;还有很多代码的精简优化可能无法从博客界面直接体现出来，但是每次的优化都直奔用户体验。具体就不多说了，大家可以查看博客的Tag标签聚合文章：&lt;a href="https://typecodes.com/tag/博客成长录/" title="《博客成长录》"&gt;《博客成长录》&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img alt="GitHub个人仓库更新：wordpress主题[W_vfhky]" src="https://o3cex9zsl.qnssl.com/2014/03/blog.png" title="GitHub个人仓库更新：wordpress主题[W_vfhky]" /&gt;&lt;/p&gt;
&lt;p&gt;其实，在折腾一份主题后，会发现其实很多wordpress主题的程序设计都相似。同时，折腾完一份主题后，能大幅提高自己对wordpress的认识和研究。下载地址见下：&lt;/p&gt;
&lt;p&gt;百度云盘（黄克业的博客资源共享区）：http://www.dwz.cn/fcF4x&lt;/p&gt;
&lt;p&gt;GitHub个人仓库：https://github.com/vfhky/W_vfhky&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Tue, 18 Mar 2014 18:42:00 +0800</pubDate><guid>tag:typecodes.com,2014-03-18:mix/postwvfhkygithub.html</guid><category>博客成长录</category></item><item><title>版本更新：wordpress主题【vfhky 1.1】发布</title><link>https://typecodes.com/mix/updatewpthemevfhky1.html</link><description>&lt;h5&gt;1 主题【vfhky】版本1.1的更新说明&lt;/h5&gt;
&lt;p&gt;主题vfhky在2月15号发布了&lt;a href="https://typecodes.com/mix/postwpthemevfhky1.html" title="《整装待发：wordpress主题【vfhky 1.0】强势发布》"&gt;1.0版本&lt;/a&gt;，经调整和优化，现发布1.1版本。目前该版本已经更新到了github上了，大家可以&lt;a href="https://github.com/vfhky/vfhky"&gt;点击此处&lt;/a&gt;查看并下载。此次更新的主要内容如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nx"&gt;优化站内搜索程序&lt;/span&gt;&lt;span class="err"&gt;：&lt;/span&gt;&lt;span class="nx"&gt;谷歌自定义搜索&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;百度搜索&lt;/span&gt;&lt;span class="err"&gt;；&lt;/span&gt;
&lt;span class="nx"&gt;PHP&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;js模块处理&lt;/span&gt;&lt;span class="err"&gt;，&lt;/span&gt;&lt;span class="nx"&gt;优化广告加载速度&lt;/span&gt;&lt;span class="err"&gt;；&lt;/span&gt;
&lt;span class="nx"&gt;优化&lt;/span&gt;&lt;span class="err"&gt;“&lt;/span&gt;&lt;span class="nx"&gt;网站安全认证&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="nx"&gt;以及全站链接跳转结果的查询模式&lt;/span&gt;&lt;span class="err"&gt;；&lt;/span&gt;

&lt;span class="nx"&gt;主题自动检测版本更新&lt;/span&gt;&lt;span class="err"&gt;；&lt;/span&gt;
&lt;span class="nx"&gt;去插件自带google代码高亮&lt;/span&gt;&lt;span class="err"&gt;，&lt;/span&gt;&lt;span class="nx"&gt;支持文章和评论中代码高亮&lt;/span&gt;&lt;span class="err"&gt;；&lt;/span&gt;
&lt;span class="nx"&gt;三种不同风格的音乐播放器&lt;/span&gt;&lt;span class="err"&gt;，&lt;/span&gt;&lt;span class="nx"&gt;可任意加载至文章中&lt;/span&gt;&lt;span class="err"&gt;；&lt;/span&gt;

&lt;span class="nx"&gt;拓展左侧文章页面宽度&lt;/span&gt;&lt;span class="err"&gt;，&lt;/span&gt;&lt;span class="nx"&gt;体验从页宽628px到728px的&lt;/span&gt;&lt;span class="err"&gt;“&lt;/span&gt;&lt;span class="nx"&gt;大屏幕&lt;/span&gt;&lt;span class="err"&gt;”，&lt;/span&gt;&lt;span class="nx"&gt;看代码再也累了&lt;/span&gt;&lt;span class="err"&gt;；&lt;/span&gt;
&lt;span class="nx"&gt;首页5张幻灯片&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="nx"&gt;篇置顶文章无重复显示&lt;/span&gt;&lt;span class="err"&gt;；&lt;/span&gt;
&lt;span class="nx"&gt;优化functions&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;php代码中的邮件通知以及评论楼层的代码&lt;/span&gt;&lt;span class="err"&gt;；&lt;/span&gt;

&lt;span class="nx"&gt;js调整优化淘宝IP库的API接口的加载速度&lt;/span&gt;&lt;span class="err"&gt;；&lt;/span&gt;
&lt;span class="nx"&gt;修复go&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;php中的bug&lt;/span&gt;&lt;span class="err"&gt;，&lt;/span&gt;&lt;span class="nx"&gt;解决网址大写的优质网址认证失败的问题&lt;/span&gt;&lt;span class="err"&gt;；&lt;/span&gt;
&lt;span class="nx"&gt;优化functions&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;php中检查评论者是否有gravatar头像的代码&lt;/span&gt;&lt;span class="err"&gt;；&lt;/span&gt;
&lt;span class="nx"&gt;代码精简&lt;/span&gt;&lt;span class="err"&gt;，&lt;/span&gt;&lt;span class="nx"&gt;目前整个主题文件的安装包体积为1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="nx"&gt;M&lt;/span&gt;&lt;span class="err"&gt;。&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;




&lt;h5&gt;2 后记&lt;/h5&gt;
&lt;p&gt;目前，博主现在用的就是1.1的版本，希望大家喜欢！&lt;/p&gt;
&lt;p&gt;&lt;img alt="版本更新：wordpress主题【vfhky 1.1】发布" src="https://o3cex9zsl.qnssl.com/2014/03/vfhky1.1.png" title="版本更新：wordpress主题【vfhky 1.1】发布" /&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Sun, 16 Mar 2014 14:32:00 +0800</pubDate><guid>tag:typecodes.com,2014-03-16:mix/updatewpthemevfhky1.html</guid><category>博客成长录</category></item><item><title>再议wordpress中限制没有Gravatar头像的访客提交评论</title><link>https://typecodes.com/web/againwplimitnogravatar.html</link><description>&lt;p&gt;今天博客收到&lt;a href="https://typecodes.com/web/wplimitnogravatar.html" title="查看评论详情"&gt;@羽中&lt;/a&gt;童鞋关于文章&lt;a href="https://typecodes.com/web/wplimitnogravatar.html" title="《wordpress中限制没有Gravatar头像的访客提交评论》"&gt;《wordpress中限制没有Gravatar头像的访客提交评论》&lt;/a&gt;的评论，对代码中使用 get_headers 函数的效率提出质疑。于是写这篇文章来讨论一下。&lt;/p&gt;
&lt;p&gt;&lt;img alt="wordpress中限制没有Gravatar头像的访客提交评论" src="https://o3cex9zsl.qnssl.com/2013/09/wordpress_no_gravatar.png" title="wordpress中限制没有Gravatar头像的访客提交评论" /&gt;&lt;/p&gt;


&lt;p&gt;博客目前的主题vfhky已经启用了这段代码，来限制没有gravatar头像的访客进行留言。在访客提交留言时，程序会自动检测是否有gravatar头像，经过这么长时间的测试感觉返回的判断结果还是比较快的。当然，这可能跟博客同一时间的请求量不大也有关系。&lt;/p&gt;
&lt;p&gt;当然还可以使用其它方式来判断，之前文章&lt;a href="https://typecodes.com/web/againwpgravatarcache.html" title="《再议Gravatar头像缓存至本地服务器》"&gt;《再议Gravatar头像缓存至本地服务器》&lt;/a&gt;做法是:先远程请求资源，然后把gravatar头像保存到本地服务器，再根据图片的&lt;code&gt;filesize($e) == 2637&lt;/code&gt;判断没有gravatar头像。&lt;/p&gt;
&lt;p&gt;但这样做消耗的资源比较大，所以考虑可以采用curl的方式。其优势在于能够通过DNS缓存来加快响应速度，另外可以直接通过CURLINFO_HTTP_CODE返回值来判断。&lt;/p&gt;
&lt;p&gt;下面是具体代码，同时也用这段代码替换了博客之前用的代码，并提交到了&lt;a href="https://github.com/vfhky/vfhky" title="博客主题GitHub源码"&gt;github&lt;/a&gt;上。&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="x"&gt;/*&lt;/span&gt;
&lt;span class="x"&gt; * @author：vfhky  2014年03月15日22:26&lt;/span&gt;
&lt;span class="x"&gt; * @param string $email       用户提交留言表单中的email字段&lt;/span&gt;
&lt;span class="x"&gt; * @return int  0:无gravatar头像;  1:有gravatar头像&lt;/span&gt;
&lt;span class="x"&gt; **/&lt;/span&gt;
&lt;span class="x"&gt;function vfhky_checkgravatar($email){&lt;/span&gt;
&lt;span class="x"&gt;   $email_hash = md5(strtolower(trim($email)));&lt;/span&gt;
&lt;span class="x"&gt;   $check_uri = &amp;#39;http://www.gravatar.com/avatar/&amp;#39; . $email_hash . &amp;#39;?d=404&amp;#39;;&lt;/span&gt;
&lt;span class="x"&gt;   $ch = curl_init();&lt;/span&gt;
&lt;span class="x"&gt;   curl_setopt($ch, CURLOPT_URL, $check_uri);&lt;/span&gt;
&lt;span class="x"&gt;   /* 保留response header */&lt;/span&gt;
&lt;span class="x"&gt;   curl_setopt($ch, CURLOPT_HEADER, TRUE);&lt;/span&gt;
&lt;span class="x"&gt;   /* 去掉response body */&lt;/span&gt;
&lt;span class="x"&gt;   curl_setopt($ch, CURLOPT_NOBODY, TRUE);&lt;/span&gt;
&lt;span class="x"&gt;   curl_setopt($ch, CURLOPT_RETURNTRANSFER, TRUE);&lt;/span&gt;
&lt;span class="x"&gt;   curl_setopt($ch, CURLOPT_FOLLOWLOCATION, FALSE);&lt;/span&gt;
&lt;span class="x"&gt;   curl_setopt($ch, CURLOPT_TIMEOUT, 3);&lt;/span&gt;
&lt;span class="x"&gt;   $result = curl_exec($ch);&lt;/span&gt;
&lt;span class="x"&gt;   if (curl_getinfo($ch, CURLINFO_HTTP_CODE) == &amp;#39;200&amp;#39;)&lt;/span&gt;
&lt;span class="x"&gt;      return 1;/* 有头像 */&lt;/span&gt;
&lt;span class="x"&gt;   else&lt;/span&gt;
&lt;span class="x"&gt;      return 0;/* 无头像 */&lt;/span&gt;
&lt;span class="x"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Sat, 15 Mar 2014 22:59:00 +0800</pubDate><guid>tag:typecodes.com,2014-03-15:web/againwplimitnogravatar.html</guid><category>wordpress</category><category>gravatar头像</category></item><item><title>PHP模拟登录WordPress后台二：使用curl函数</title><link>https://typecodes.com/mix/chromephpsimulatelogwptwo.html</link><description>&lt;p&gt;在&lt;a href="https://typecodes.com/web/chromephpsimulatelogwpone.html" title="《PHP模拟登录WordPress后台一：使用Chrome浏览器网络抓包》"&gt;上一篇文章&lt;/a&gt;中讲述了如何使用chrome浏览器进行网络抓包，那么这篇文章就说说结合chrome抓包工具，使用PHP的curl函数模拟登录wordpress后台。&lt;/p&gt;
&lt;h5&gt;1 根据chrome网络抓包的数据组PHP发送包&lt;/h5&gt;
&lt;p&gt;根据上一篇文章chrome抓包的情况（主要是见节点6），通过curl函数组发送包。组包信息包括CURLOPT_HTTPHEADER等curl_setopt函数中的所有字段。&lt;/p&gt;


&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="x"&gt;/**&lt;/span&gt;
&lt;span class="x"&gt;* @access_path: http://127.0.0.1/4.php&lt;/span&gt;
&lt;span class="x"&gt;* @author: vfhky 20140313 19:13&lt;/span&gt;
&lt;span class="x"&gt;* @description: PHP模拟登录wordpress后台(http://127.0.0.1/wpupdate/wp-admin/)&lt;/span&gt;
&lt;span class="x"&gt;* @reference: http://vfhky.sinaapp.com/mix/887.html&lt;/span&gt;
&lt;span class="x"&gt;*/&lt;/span&gt;

&lt;span class="x"&gt;/* wordpress帐号 */&lt;/span&gt;
&lt;span class="x"&gt;$log = &amp;#39;***&amp;#39;;&lt;/span&gt;
&lt;span class="x"&gt;/* wordpress密码 */&lt;/span&gt;
&lt;span class="x"&gt;$pwd = &amp;#39;***&amp;#39;;&lt;/span&gt;
&lt;span class="x"&gt;/* cookie位置，一定要使用绝对路径 */&lt;/span&gt;
&lt;span class="x"&gt;$cookie = dirname(__file__).&amp;#39;/cookie.txt&amp;#39;;&lt;/span&gt;
&lt;span class="x"&gt;/* 目标登录的地址 */&lt;/span&gt;
&lt;span class="x"&gt;$login_url = &amp;#39;http://127.0.0.1/wpupdate/wp-login.php&amp;#39;;&lt;/span&gt;
&lt;span class="x"&gt;/* POST方式提交的字段内容 */&lt;/span&gt;
&lt;span class="x"&gt;$post = &amp;#39;log=&amp;#39;.$log.&amp;#39;&amp;amp;pwd=&amp;#39;.$pwd.&amp;#39;&amp;amp;wp-submit=登录&amp;#39;;&lt;/span&gt;

&lt;span class="x"&gt;$ch = curl_init($login_url);&lt;/span&gt;
&lt;span class="x"&gt;curl_setopt($ch, CURLOPT_COOKIESESSION, true);&lt;/span&gt;
&lt;span class="x"&gt;curl_setopt($ch, CURLOPT_HEADER, true);&lt;/span&gt;

&lt;span class="x"&gt;/* curl_setopt($ch, CURLOPT_USERAGENT, $_SERVER[&amp;#39;HTTP_USER_AGENT&amp;#39;]); */&lt;/span&gt;
&lt;span class="x"&gt;curl_setopt($ch, CURLOPT_HTTPHEADER, array(&amp;#39;Accept-Language: zh-cn&amp;#39;,&amp;#39;Cache-Control: no-cache&amp;#39;,&amp;#39;User-Agent:Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/30.0.1599.101 Safari/537.36&amp;#39;,&amp;#39;Connection:keep-alive&amp;#39;,&amp;#39;Referer:Referer:http://127.0.0.1/wpupdate/wp-login.php?redirect_to=http%3A%2F%2F127.0.0.1%2Fwpupdate%2Fwp-admin%2F&amp;amp;reauth=1&amp;#39;));&lt;/span&gt;

&lt;span class="x"&gt;/* CURL收到的 HTTP Response 中的 Set-Cookie 存放的位置 */&lt;/span&gt;
&lt;span class="x"&gt;curl_setopt($ch, CURLOPT_COOKIEJAR, $cookie);&lt;/span&gt;
&lt;span class="x"&gt;/* CURL发送的 HTTP Request 中的 Cookie 存放的位置 */&lt;/span&gt;
&lt;span class="x"&gt;curl_setopt($ch, CURLOPT_COOKIEFILE, $cookie);&lt;/span&gt;
&lt;span class="x"&gt;curl_setopt($ch,CURLOPT_RETURNTRANSFER,1);&lt;/span&gt;
&lt;span class="x"&gt;curl_setopt($ch, CURLOPT_POSTFIELDS, $post);&lt;/span&gt;
&lt;span class="x"&gt;$result = curl_exec($ch);&lt;/span&gt;
&lt;span class="x"&gt;curl_close($ch);&lt;/span&gt;

&lt;span class="x"&gt;/* 输出获取的资源$result,该资源是wordpress后台处理返回的Response Headers信息 */&lt;/span&gt;
&lt;span class="x"&gt;print_r($result);&lt;/span&gt;

&lt;span class="x"&gt;/* 清理cookie文件: unlink($cookie_file); */&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h5&gt;2 打开chrome准备进行抓包&lt;/h5&gt;
&lt;p&gt;在chrome中F12打开“审查元素”，然后在地址栏中输入http://127.0.0.1/4.php，得到如下图片。图中Request Headers中，可以看出上面程序组包的那些字段：User-Agent、Connection等。&lt;/p&gt;
&lt;p&gt;&lt;img alt="打开chrome准备进行抓包" src="https://o3cex9zsl.qnssl.com/2014/03/google_php_crab.png" title="打开chrome准备进行抓包" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="chrome网络抓包的数据" src="https://o3cex9zsl.qnssl.com/2014/03/google_crab_data.png" title="chrome网络抓包的数据" /&gt;&lt;/p&gt;
&lt;h5&gt;3 查看程序运行结果&lt;/h5&gt;
&lt;p&gt;上面程序在浏览器中输出结果后，可以通过右键“查看网页源代码”来查看返回数据的清晰结构。&lt;/p&gt;
&lt;p&gt;&lt;img alt="chrome中查看程序运行结果" src="https://o3cex9zsl.qnssl.com/2014/03/data_return.png" title="chrome中查看程序运行结果" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="chrome中右键“查看网页源代码”" src="https://o3cex9zsl.qnssl.com/2014/03/data_return_source.png" title="chrome中右键“查看网页源代码”" /&gt;&lt;/p&gt;
&lt;p&gt;同时，在和4.php同目录下面生成了一个cookie.txt的文件。里面保存cookie信息如下所示，它和上图中浏览器中显示的信息完全一致（敏感信息博主用*替换了）。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;# Netscape HTTP Cookie File
# http://curl.haxx.se/rfc/cookie_spec.html
# This file was generated by libcurl! Edit at your own risk.

127.0.0.1   FALSE   /wpupdate/  FALSE   0   wordpress_test_cookie   WP+Cookie+check
#HttpOnly_127.0.0.1 FALSE   /wpupdate/wp-content/plugins    FALSE   0   wordpress_39bb3cf5af28163bc1699c85ce702b1c  ****************************75e2bc172f438ff20ac*******
#HttpOnly_127.0.0.1 FALSE   /wpupdate/wp-admin  FALSE   0   wordpress_39bb3cf5af28163bc1699c85ce702b1c  ****************************75e2bc172f438ff20ac*******
#HttpOnly_127.0.0.1 FALSE   /wpupdate/  FALSE   0   wordpress_logged_in_39bb3cf5af28163bc1699c85ce702b1c    *********************C7ffc62ae1216786a97b67bb*********
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;3 收到wordpress后台发送过来的登录成功的邮箱提醒&lt;/h5&gt;
&lt;p&gt;由于主题[vfhky]设置了后台登录成功或者失败的邮件提醒功能，所以上面的操作如果成功的话，还会一封登录成功的邮件。&lt;/p&gt;
&lt;p&gt;&lt;img alt="wordpress后台登录成功的邮件提醒" src="https://o3cex9zsl.qnssl.com/2014/03/mail_notice.png" title="wordpress后台登录成功的邮件提醒" /&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Sat, 15 Mar 2014 13:21:00 +0800</pubDate><guid>tag:typecodes.com,2014-03-15:mix/chromephpsimulatelogwptwo.html</guid><category>chrome网络抓包</category><category>php模拟登录wordpress</category></item><item><title>图解UEStudio/UltraEdit如何新建一个工程</title><link>https://typecodes.com/mix/uestudiocreateproject.html</link><description>&lt;p&gt;UEStudio/UltraEdit应该说是一个超强大的文本编辑器了。之前用过notepad、editplus，博主最后还是选择了强大的UEStudio。在UEStudio或者UltraEdit中新建一个工程，可以方便管理程序文件。另外对于C程序开发人员来说，通过“在工程文件中查找符号定义”按钮轻松找到某个函数的定义处或者某个结构体的定义的地方。下面就说说具体的操作步骤：&lt;/p&gt;
&lt;h5&gt;1 点击左上角菜单栏中的“工程”选项&lt;/h5&gt;
&lt;p&gt;点击左上角菜单栏中的“工程”--“新建工程/工作区”--“新建工程”。在弹出的“指定工程文件”窗口中，选择合适的硬盘位置，例如选择G盘。然后在“文件名”中填入任意要新建的工程名字，例如1。&lt;/p&gt;
&lt;p&gt;&lt;img alt="点击左上角菜单栏中的“工程”--“新建工程/工作区”--“新建工程”" src="https://o3cex9zsl.qnssl.com/2014/03/creat_new_project.png" title="点击左上角菜单栏中的“工程”--“新建工程/工作区”--“新建工程”" /&gt;&lt;/p&gt;


&lt;h5&gt;2 为工程添加文件/文件夹&lt;/h5&gt;
&lt;p&gt;这时，你已经新建成了一个工程，但是工程里面还没有任何文件/文件夹。&lt;/p&gt;
&lt;p&gt;&lt;img alt="新建工程1完成并准备添加文件夹" src="https://o3cex9zsl.qnssl.com/2014/03/set_project.png" title="新建工程1完成并准备添加文件夹" /&gt;&lt;/p&gt;
&lt;p&gt;所以，在弹出的对话窗口中，点击“+文件夹”来为工程添加文件夹。&lt;/p&gt;
&lt;p&gt;&lt;img alt="点击“+文件夹”来为工程添加文件夹" src="https://o3cex9zsl.qnssl.com/2014/03/add_new_file.png" title="点击“+文件夹”来为工程添加文件夹" /&gt;&lt;/p&gt;
&lt;p&gt;然后在弹出来的对话框中点击“浏览”，接着选择系统硬盘中已存在的文件夹，如图中所示的“test”文件夹。&lt;/p&gt;
&lt;p&gt;&lt;img alt="选择系统硬盘中已存在的文件夹" src="https://o3cex9zsl.qnssl.com/2014/03/add_file.png" title="选择系统硬盘中已存在的文件夹" /&gt;&lt;/p&gt;
&lt;p&gt;这样就会在刚才窗口的“文件夹”下面显示上面选择的文件夹test的绝对路径G:\VSprj\test，最后点击“确定”。&lt;/p&gt;
&lt;p&gt;&lt;img alt="为工程添加文件/文件夹" src="https://o3cex9zsl.qnssl.com/2014/03/add_file_ok.png" title="为工程添加文件/文件夹" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="工程添加文件/文件夹test" src="https://o3cex9zsl.qnssl.com/2014/03/add_file_return.png" title="工程添加文件/文件夹test" /&gt;&lt;/p&gt;
&lt;h5&gt;3 UEStudio或者UltraEdit左侧“工作区管理器”&lt;/h5&gt;
&lt;p&gt;完成上述步骤后，在UEStudio或者UltraEdit左侧“工作区管理器”中的“工程”这个table选项卡下面，会自动显示刚才新建的工程。&lt;/p&gt;
&lt;p&gt;&lt;img alt="在工程文件中查找符号定义" src="https://o3cex9zsl.qnssl.com/2014/03/project.png" title="在工程文件中查找符号定义" /&gt;&lt;/p&gt;
&lt;h5&gt;4 使用“在工程文件中查找符号定义”按钮&lt;/h5&gt;
&lt;p&gt;注意上图红框中的“放大镜”可以通过在“视图”--“视图/列表”--“工具栏”--“INTELLITIP工具栏”打勾显示，然后我们鼠标选中C函数/结构体等，再点击这个“放大镜”（即“在工程文件中查找符号定义”）按钮就可以在鼠标上方显示该函数/结构体的原始定义的地方，鼠标双击即可查看。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Fri, 14 Mar 2014 12:33:00 +0800</pubDate><guid>tag:typecodes.com,2014-03-14:mix/uestudiocreateproject.html</guid><category>UEStudio</category><category>UltraEdit</category></item><item><title>PHP模拟登录WordPress后台一：使用Chrome浏览器网络抓包</title><link>https://typecodes.com/web/chromephpsimulatelogwpone.html</link><description>&lt;p&gt;使用PHP的curl函数，可以模拟登录各种类型的网站后台，例如Discuz、QQ邮箱、WordPress、DeDeCMS等等。模拟登录需要两个步骤，第一个是了解目标网站后台登录时所需要提交的数据字段，第二个才是用curl函数模拟向网站后台提交数据。那么这篇文章先通过讲解使用Chrome浏览器进行网络抓包，获取目标网站后台登录时所需要的数据。下一篇文章才是PHP模拟登录演示。&lt;/p&gt;
&lt;h5&gt;1 以本地登录WordPress后台为例&lt;/h5&gt;
&lt;p&gt;在本地搭建一个wordpress博客程序，那么默认的后台登录地址就类似于：http://127.0.0.1/wpupdate/wp-admin。于是，先打开Chrome浏览器，然后按下F12键打开“审查元素”的界面，接着点击“Network”选项。可以看到这时没发生任何网络信息交互，抓包为空。&lt;/p&gt;
&lt;p&gt;&lt;img alt="chrome抓包" src="https://o3cex9zsl.qnssl.com/2014/03/chrome_crab8.png" title="chrome抓包" /&gt;&lt;/p&gt;


&lt;h5&gt;2 访问wordpress后台&lt;/h5&gt;
&lt;p&gt;在浏览器地址栏中输入http://127.0.0.1/wpupdate/wp-admin，然后Chrome浏览器会自动进行抓包得到如下图所示数据。这时可以看到浏览器地址栏已经变成了：http://127.0.0.1/wpupdate/wp-login.php?redirect_to=http%3A%2F%2F127.0.0.1%2Fwpupdate%2Fwp-admin%2F&amp;amp;reauth=1。&lt;/p&gt;
&lt;p&gt;那么下面这张图就描述了变化的详细过程。图中请求方式“Method”都是“Get”，当然还得知道图中的HTTP状态码“Status”值的含义是什么（1xx：临时响应；2xx表示响应成功；3xx：已重定向；4xx：请求错误；5xx：服务器错误）。&lt;/p&gt;
&lt;p&gt;&lt;img alt="访问wordpress后台" src="https://o3cex9zsl.qnssl.com/2014/03/chrome_crab1.png" title="访问wordpress后台" /&gt;&lt;/p&gt;
&lt;h5&gt;3 点击“Name”选项下抓取的wp-admin的内容&lt;/h5&gt;
&lt;p&gt;先点击“wp-admin”，显示如下图所抓包的数据。Request Headers是我们发送的请求报文头，Response Headers是WordPress后台响应的头部信息。之前输入的http://127.0.0.1/wpupdate/wp-admin代表发送的请求URL，得到的HTTP响应码是301（永久跳转），于是后台响应跳转到http://127.0.0.1/wpupdate/wp-admin/（即图中Response Headers下的“Location”）。&lt;/p&gt;
&lt;p&gt;&lt;img alt="点击“Name”选项下抓取的wp-admin的内容" src="https://o3cex9zsl.qnssl.com/2014/03/chrome_crab2.png" title="点击“Name”选项下抓取的wp-admin的内容" /&gt;&lt;/p&gt;
&lt;h5&gt;4 点击“Name”选项下抓取的wp-admin/的内容&lt;/h5&gt;
&lt;p&gt;先点击“wp-admin/”，显示如下图所抓包的数据。这时，http://127.0.0.1/wpupdate/wp-admin/变成了发送的请求URL，得到的HTTP响应码是302（临时跳转），于是后台响应跳转到http://127.0.0.1/wpupdate/wp-login.php?redirect_to=http%3A%2F%2F127.0.0.1%2Fwpupdate%2Fwp-admin%2F&amp;amp;reauth=1（即图中Response Headers下的“Location”）。&lt;/p&gt;
&lt;p&gt;&lt;img alt="点击“Name”选项下抓取的wp-admin/的内容" src="https://o3cex9zsl.qnssl.com/2014/03/chrome_crab3.png" title="点击“Name”选项下抓取的wp-admin/的内容" /&gt;&lt;/p&gt;
&lt;h5&gt;5 点击“Name”选项下抓取的wp-login.php?redirect_to=h的内容&lt;/h5&gt;
&lt;p&gt;先点击“wp-admin/”下面的“wp-login.php?redirect_to=h……”，显示如下图所抓包的数据。这时，http://127.0.0.1/wpupdate/wp-login.php?redirect_to=http%3A%2F%2F127.0.0.1%2Fwpupdate%2Fwp-admin%2F&amp;amp;reauth=1变成了发送的请求URL。这时图中Response Headers下没有“Location”，即不会再跳转到其它地址。出现了Set-Cookie，即服务器在在浏览器中生成了以wordpress_为前缀的cookie。&lt;/p&gt;
&lt;p&gt;&lt;img alt="点击“Name”选项下抓取的wp-login.php?redirect_to=h的内容" src="https://o3cex9zsl.qnssl.com/2014/03/chrome_crab9.png" title="点击“Name”选项下抓取的wp-login.php?redirect_to=h的内容" /&gt;&lt;/p&gt;
&lt;h5&gt;6 输入帐号和密码登录wordpress后台&lt;/h5&gt;
&lt;p&gt;在输入帐号和密码后，Chrome抓包如下图所示。
&lt;img alt="输入帐号和密码登录wordpress后台" src="https://o3cex9zsl.qnssl.com/2014/03/chrome_crab4.png" title="输入帐号和密码登录wordpress后台" /&gt;
然后点击“wp-login.php”的抓包数据。可以看到请求URL是http://127.0.0.1/wpupdate/wp-login.php，但是请求方式“Method”变成了“POST”。&lt;/p&gt;
&lt;p&gt;“Referer”是之前步骤5中地址栏中的地址。Request Headers请求包中可以看到刚才输入的帐号(log)对应的值：vfhky；密码(pwd)对应的明文是刚才输入的密码；wp-submit对应的值“登录”；“redirect_to”表示发送上面数据的目标地址。而对应的Response Headers中的“Location”也跳转到“redirect_to”对应的地址http://127.0.0.1/wpupdate/wp-admin/。同时通过Set-Cookie也生成了四个cookie。&lt;/p&gt;
&lt;p&gt;&lt;img alt="点击“wp-login.php”的抓包数据" src="https://o3cex9zsl.qnssl.com/2014/03/chrome_crab5.png" title="点击“wp-login.php”的抓包数据" /&gt;
&lt;img alt="Set-Cookie生成四个cookie" src="https://o3cex9zsl.qnssl.com/2014/03/chrome_crab6.png" title="Set-Cookie生成四个cookie" /&gt;&lt;/p&gt;
&lt;h5&gt;7 点击“Name”选项下抓取的wp-admin/的内容&lt;/h5&gt;
&lt;p&gt;先点击“wp-admin/”，显示如下图所抓包的数据。图中Request Headers信息中，发送了第6个步骤生成了4个cookie。这时图中Response Headers下也没有“Location”，即不会再跳转到其它地址。因此，此时浏览器中的地址应该是：http://127.0.0.1/wpupdate/wp-admin/。&lt;/p&gt;
&lt;p&gt;&lt;img alt="点击“Name”选项下抓取的wp-admin/的内容" src="https://o3cex9zsl.qnssl.com/2014/03/chrome_crab7.png" title="点击“Name”选项下抓取的wp-admin/的内容" /&gt;&lt;/p&gt;
&lt;h5&gt;8 Chrome抓包总结&lt;/h5&gt;
&lt;p&gt;通过wordpress后台登录，我们用chrome实现网络抓包，完整的知道了后台登录的整个流程。当然，对于其它后台网站的登录，抓包过程也是一样的。在&lt;a href="https://typecodes.com/mix/chromephpsimulatelogwptwo.html" title="《PHP模拟登录WordPress后台二：使用curl函数》"&gt;下一篇文章&lt;/a&gt;中，就直接通过PHP程序模拟wordpress后台登录。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Thu, 13 Mar 2014 20:54:00 +0800</pubDate><guid>tag:typecodes.com,2014-03-13:web/chromephpsimulatelogwpone.html</guid><category>chrome网络抓包</category><category>php模拟登录wordpress</category></item><item><title>Google 开发者控制台Developers Console简单介绍以及API KEY的生成</title><link>https://typecodes.com/mix/googledevelopersconsoleapi.html</link><description>&lt;p&gt;如Google Developers所述：Google Developers is now the place to find all Google developer documentation, resources, events, and products，&lt;a href="https://developers.google.com/" title="点击进入"&gt;谷歌开发者（Google Developers）&lt;/a&gt;是查询所有谷歌开发文档、资源、活动和产品的地方。&lt;/p&gt;
&lt;p&gt;例如，你需要使用Google url shortener、Google Maps Engine的API接口，那么你就可以到这里找官方接口文档说明、代码示例（资源）等等。对开发者来说，Google Developers最主要的内容是Developer Tools，它包括了&lt;a href="https://developers.google.com/apis-explorer/" title="点击进入"&gt;API Explorer&lt;/a&gt;、开发者控制台&lt;a href="https://console.developers.google.com/" title="点击进入"&gt;Developers Console&lt;/a&gt;、GAE管理平台&lt;a href="https://appengine.google.com/" title="点击进入"&gt;App Engine Console&lt;/a&gt;、&lt;a href="https://developers.google.com/oauthplayground" title="点击进入"&gt;OAuth 2.0 Playground&lt;/a&gt;、谷歌代码中心&lt;a href="https://code.google.com/hosting/" title="点击进入"&gt;Project Hosting&lt;/a&gt;等。当你在GAE管理平台&lt;a href="https://appengine.google.com/" title="点击进入"&gt;App Engine Console&lt;/a&gt;创建好了工程项目后，就可以在&lt;a href="https://console.developers.google.com" title="点击进入"&gt;开发者控制台（Developers Console）&lt;/a&gt;管理你工程里面的应用了。&lt;/p&gt;
&lt;p&gt;&lt;img alt="谷歌Developers Console首页" src="https://o3cex9zsl.qnssl.com/2014/03/Google_developers_product.png" title="谷歌Developers Console首页" /&gt;&lt;/p&gt;


&lt;h5&gt;1 谷歌Developers Console简单介绍&lt;/h5&gt;
&lt;p&gt;&lt;img alt="谷歌Developers Console中的工程项目" src="https://o3cex9zsl.qnssl.com/2014/03/Google_developers_Console.png" title="谷歌Developers Console中的工程项目" /&gt;&lt;/p&gt;
&lt;p&gt;如上图所示，博主创建了一个名为1-vfhky的工程（当初是&lt;a href="https://typecodes.com/mix/chromegoagent.html" title="《翻越那道墙，用谷歌Goagent打造自己的chrome利器》"&gt;用来翻墙&lt;/a&gt;的），点击该工程然后再点击左侧菜单的“APIs”选项，可以看到该工程下所有的API接口列表（当然你可以直接通过&lt;a href="https://developers.google.com/apis-explorer/" title="《翻越那道墙，用谷歌Goagent打造自己的chrome利器》"&gt;API Explorer&lt;/a&gt;来查看谷歌目前所有开放的API列表）。&lt;/p&gt;
&lt;p&gt;由于这些API接口默认都是关闭的，即显示“OFF”，所以我们需要找到自己想要用的那个API接口。点击“OFF”按钮，然后打勾接受谷歌API的开发协议，就可以使用该接口了。&lt;/p&gt;
&lt;p&gt;&lt;img alt="谷歌Developers Console所有的API接口列表" src="https://o3cex9zsl.qnssl.com/2014/03/Google_APIs.png" title="谷歌Developers Console所有的API接口列表" /&gt;&lt;/p&gt;
&lt;h5&gt;2 生成APP KEY&lt;/h5&gt;
&lt;p&gt;当我们启用了该API接口，那么是否可以直接使用了呢？答案是否定的。因为你在调用该接口的时候，需要对你应用所发送的请求进行“身份证明”，否则该API服务器不会“认可”你的请求。而APP KEY或者OAuth 2.0 token正是这张“身份证”。&lt;/p&gt;
&lt;p&gt;如下图所示，工程1-vfhky的“Credentials”选项下面有一个OAuth管理器和一个Public API Access管理器。下面是生成APP KEY的方法：&lt;/p&gt;
&lt;p&gt;1、点击“CREATE NEW KEY”，然后在弹出的灰色框框中，从下面四个选项中选择这个KEY的类型：Server Key、Browser Key、Android Key、iOS Key。&lt;/p&gt;
&lt;p&gt;&lt;img alt="谷歌Developers Console点击Browser Key" src="https://o3cex9zsl.qnssl.com/2014/03/google_shorturl_apikey.png" title="谷歌Developers Console点击Browser Key" /&gt;&lt;/p&gt;
&lt;p&gt;这里只说明下Server Key和Browser Key的定义，Android Key和iOS Key不用说大家都知道。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cm"&gt;/* 1.Server Key：*/&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
This&lt;span class="w"&gt; &lt;/span&gt;key&lt;span class="w"&gt; &lt;/span&gt;should&lt;span class="w"&gt; &lt;/span&gt;be&lt;span class="w"&gt; &lt;/span&gt;kept&lt;span class="w"&gt; &lt;/span&gt;secret&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kr"&gt;on&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;your&lt;span class="w"&gt; &lt;/span&gt;server&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;Every&lt;span class="w"&gt; &lt;/span&gt;API&lt;span class="w"&gt; &lt;/span&gt;request&lt;span class="w"&gt; &lt;/span&gt;is&lt;span class="w"&gt; &lt;/span&gt;generated&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kr"&gt;by&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;software&lt;span class="w"&gt; &lt;/span&gt;running&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kr"&gt;on&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;a&lt;span class="w"&gt; &lt;/span&gt;machine&lt;span class="w"&gt; &lt;/span&gt;that&lt;span class="w"&gt; &lt;/span&gt;you&lt;span class="w"&gt; &lt;/span&gt;control&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;Per&lt;span class="o"&gt;-&lt;/span&gt;user&lt;span class="w"&gt; &lt;/span&gt;limits&lt;span class="w"&gt; &lt;/span&gt;will&lt;span class="w"&gt; &lt;/span&gt;be&lt;span class="w"&gt; &lt;/span&gt;enforced&lt;span class="w"&gt; &lt;/span&gt;using&lt;span class="w"&gt; &lt;/span&gt;the&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kr"&gt;address&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;found&lt;span class="w"&gt; &lt;/span&gt;in&lt;span class="w"&gt; &lt;/span&gt;each&lt;span class="w"&gt; &lt;/span&gt;request&lt;span class="s"&gt;&amp;#39;s userIp parameter, (if specified). If the userIp parameter is missing, your machine&amp;#39;&lt;/span&gt;s&lt;span class="w"&gt; &lt;/span&gt;IP&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kr"&gt;address&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;will&lt;span class="w"&gt; &lt;/span&gt;be&lt;span class="w"&gt; &lt;/span&gt;used&lt;span class="w"&gt; &lt;/span&gt;instead&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="err"&gt;此密钥需要密存在你的服务器上。每个&lt;/span&gt;API&lt;span class="err"&gt;请求都来自于运行在你控制的机器上的软件。如有需要，可以通过每个请求者的&lt;/span&gt;IP&lt;span class="err"&gt;参数中的地址来增强对每个用户的限制。如若用户&lt;/span&gt;IP&lt;span class="err"&gt;参数丢失，那么你机器的&lt;/span&gt;IP&lt;span class="err"&gt;地址将会被替代。&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="cm"&gt;/* 2.Browser Key */&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
This&lt;span class="w"&gt; &lt;/span&gt;key&lt;span class="w"&gt; &lt;/span&gt;can&lt;span class="w"&gt; &lt;/span&gt;be&lt;span class="w"&gt; &lt;/span&gt;deployed&lt;span class="w"&gt; &lt;/span&gt;in&lt;span class="w"&gt; &lt;/span&gt;your&lt;span class="w"&gt; &lt;/span&gt;clients&lt;span class="s"&gt;&amp;#39; applications. API requests are sent directly to Google from your clients&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;browsers&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="err"&gt;这个密钥可以保存在客户的应用中。来自于客户浏览器的每一个&lt;/span&gt;API&lt;span class="err"&gt;请求都会被直接发送到&lt;/span&gt;Google&lt;span class="err"&gt;。&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;2、在弹出的小框中输入你认为合法的HTTP referers，例如博主自己的typecodes.com。不过谷歌的这个URL Shortener API接口并没有真正的对每一个请求的HTTP referers进行检查，也即你即使在本地127.0.0.1发送请求，只要程序正确的话，Google还是会返回给你正常的应答。&lt;/p&gt;
&lt;p&gt;&lt;img alt="谷歌Developers Console生成KEY设置HTTP referers" src="https://o3cex9zsl.qnssl.com/2014/03/google_shorturl_getapikey.png" title="谷歌Developers Console生成KEY设置HTTP referers" /&gt;&lt;/p&gt;
&lt;p&gt;3、点击“Create”后，就可以看到如下图的内容了，其中就有需要的APP KEY哦！&lt;/p&gt;
&lt;p&gt;&lt;img alt="谷歌Developers Console生成的APP KEY" src="https://o3cex9zsl.qnssl.com/2014/03/GAE_API_KEY.png" title="谷歌Developers Console生成的APP KEY" /&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Thu, 13 Mar 2014 14:49:00 +0800</pubDate><guid>tag:typecodes.com,2014-03-13:mix/googledevelopersconsoleapi.html</guid><category>google developers</category><category>谷歌api</category></item><item><title>PHP实现谷歌短网址服务的API接口调用</title><link>https://typecodes.com/web/phgoogleshorturlapi.html</link><description>&lt;p&gt;前面整理了一篇文章&lt;a href="https://typecodes.com/web/phpbd163sinashorturlapi.html" title="点击查看"&gt;《PHP实现百度、网易、新浪短网址服务的API接口调用》&lt;/a&gt;，这篇文章就来说说如何用PHP实现谷歌短网址API接口的调用。谷歌短网址的API接口功能比较丰富，还能analytics某个短网址，例如点击量创建时间等等。&lt;/p&gt;
&lt;h5&gt;1 谷歌短网址API接口介绍&lt;/h5&gt;
&lt;p&gt;谷歌短网址（Google url shortener）页面是http://goo.gl/，官方API文档说明是：&lt;a href="https://developers.google.com/url-shortener/v1/getting_started" title="点击查看"&gt;点击进入&lt;/a&gt;。同新浪短网址的API一样，谷歌短网址的API调用可以通过两种授权方式（Authentication）实现。正如文档中所提到的：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Every request your application sends to the Google URL Shortener API needs to identify your application to Google. There are two ways to identify your application: using an OAuth 2.0 token (which also authorizes the request) and/or using the application&amp;#39;s API key.（你的应用向谷歌短网址API服务器所发送的每一个请求，都需要向Google提供合法证明。有如下两种渠道来识别你的应用：使用一个OAuth 2.0 token，或者使用应用的API KEY）。由于OAuth 2.0的认证过程相对麻烦，而且谷歌官方文档也说了“An API key is highly recommended”，所以这里就使用第二种API KEY来实现。
&lt;/pre&gt;&lt;/div&gt;




&lt;h5&gt;2 使用Google url shortener的API KEY来调用谷歌短网址API&lt;/h5&gt;
&lt;p&gt;Google url shortener的API KEY申请方式见&lt;a href="https://typecodes.com/mix/googledevelopersconsoleapi.html" title="点击查看"&gt;《Google 开发者控制台Developers Console简单介绍以及API KEY的生成》&lt;/a&gt;。在获得了API KEY后就可以使用下面的代码来实现谷歌短网址的API接口调用了：&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
    &lt;span class="sd"&gt;/**&lt;/span&gt;
&lt;span class="sd"&gt;    * @author: vfhky 201403012 20:31&lt;/span&gt;
&lt;span class="sd"&gt;    * @description: PHP调用谷歌短网址API接口&lt;/span&gt;
&lt;span class="sd"&gt;    * @reference: http://goo.gl/Ro277L&lt;/span&gt;
&lt;span class="sd"&gt;    * @param string $type: 非零整数代表长网址转短网址,0表示短网址转长网址&lt;/span&gt;
&lt;span class="sd"&gt;    * @note: 长网址转短网址采用POST模式,短网址转长网址采用Get模式&lt;/span&gt;
&lt;span class="sd"&gt;    */&lt;/span&gt;
    &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;ggUrlAPI&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$type&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$url&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$type&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
         &lt;span class="cm"&gt;/* The API key is safe for embedding in URLs; it doesn&amp;#39;t need any encoding. */&lt;/span&gt;
         &lt;span class="nv"&gt;$key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;AIzaSyBlRWs2M5c6a04l-YSDUpUKtlsvDK1hL1Q&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="c1"&gt;//这是我申请的KEY，大家可以测试用&lt;/span&gt;
         &lt;span class="nv"&gt;$data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;longUrl&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;key&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$key&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
         &lt;span class="cm"&gt;/* requests containing JSON content bodies must be accompanied by a Content-Type: application/json request header */&lt;/span&gt;
         &lt;span class="nv"&gt;$post&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;json_encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
         &lt;span class="nv"&gt;$baseurl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;https://www.googleapis.com/urlshortener/v1/url&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="k"&gt;else&lt;/span&gt;
         &lt;span class="nv"&gt;$baseurl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;https://www.googleapis.com/urlshortener/v1/url?shortUrl=&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;$url&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nv"&gt;$ch&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;curl_init&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
      &lt;span class="nb"&gt;curl_setopt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$ch&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;CURLOPT_URL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$baseurl&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nb"&gt;curl_setopt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$ch&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;CURLOPT_RETURNTRANSFER&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nb"&gt;curl_setopt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$ch&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;CURLOPT_SSL_VERIFYPEER&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nb"&gt;curl_setopt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$ch&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;CURLOPT_HEADER&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$type&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
         &lt;span class="nb"&gt;curl_setopt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$ch&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;CURLOPT_HTTPHEADER&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Content-type:application/json&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
         &lt;span class="nb"&gt;curl_setopt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$ch&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;CURLOPT_POST&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
         &lt;span class="nb"&gt;curl_setopt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$ch&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;CURLOPT_POSTFIELDS&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$post&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="nv"&gt;$response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;curl_exec&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$ch&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nv"&gt;$arrResponse&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;json_decode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$response&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nb"&gt;curl_close&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$ch&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$arrResponse&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;谷歌短网址API接口测试结果: &amp;lt;br/&amp;gt; &amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Long to Short: &amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nb"&gt;print_r&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ggUrlAPI&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;http://vfhky.sinaapp.com&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Short to Long: &amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nb"&gt;print_r&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ggUrlAPI&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;http://goo.gl/F90bfL&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h5&gt;3 要说明的地方1&lt;/h5&gt;
&lt;p&gt;&lt;img alt="PHP实现谷歌短网址服务的API接口调用" src="https://o3cex9zsl.qnssl.com/2014/03/google_shorturl_api.png" title="PHP实现谷歌短网址服务的API接口调用" /&gt;](https://o3cex9zsl.qnssl.com/2014/03/google_shorturl_api.png)&lt;/p&gt;
&lt;p&gt;从上面的测试结果图片可以看出，“长转短”和“短转长”的返回的对象中的成员类似，“短转长”多了一个status成员而已。下面是json格式的视图：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cm"&gt;/* 1短网址转长网址 */&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;kind&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;urlshortener#url&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;id&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://goo.gl/F90bfL&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;longUrl&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://vfhky.sinaapp.com&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="cm"&gt;/* 2短网址转长网址 */&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;kind&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;urlshortener#url&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;id&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://goo.gl/F90bfL&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;longUrl&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://vfhky.sinaapp.com&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;status&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;OK&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;4 要说明的地方2&lt;/h5&gt;
&lt;p&gt;上面代码输出的是对象，大家可以直接输出里面的成员，例如输出“短转长”中返回的短网址和长网址&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="nt"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nt"&gt;ggUrlAPI&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;0&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;http://goo.gl/F90bfL&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="nt"&gt;echo&lt;/span&gt; &lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="nt"&gt;result-&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nt"&gt;id&lt;/span&gt;&lt;span class="o"&gt;.$&lt;/span&gt;&lt;span class="nt"&gt;result-&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nt"&gt;longUrl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;5 错误响应Error responses&lt;/h5&gt;
&lt;p&gt;假如输入的数据有误或者其它原因造成接口返回错误数据，那么可以通过错误数据进行调试。谷歌短网址API返回的错误信息包括：a status code(状态码), a human readable message(人工可读的消息), and a list of error details(错误详细列表)。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;{
 &amp;quot;error&amp;quot;: {
  &amp;quot;errors&amp;quot;: [
   {
    &amp;quot;domain&amp;quot;: &amp;quot;global&amp;quot;,
    &amp;quot;reason&amp;quot;: &amp;quot;required&amp;quot;,
    &amp;quot;message&amp;quot;: &amp;quot;Required&amp;quot;,
    &amp;quot;locationType&amp;quot;: &amp;quot;parameter&amp;quot;,
    &amp;quot;location&amp;quot;: &amp;quot;resource.longUrl&amp;quot;
   }
  ],
  &amp;quot;code&amp;quot;: 400,
  &amp;quot;message&amp;quot;: &amp;quot;Required&amp;quot;
 }
}
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Wed, 12 Mar 2014 22:20:00 +0800</pubDate><guid>tag:typecodes.com,2014-03-12:web/phgoogleshorturlapi.html</guid><category>短网址api</category><category>谷歌短网址api</category></item><item><title>教程：主题【vfhky】如何添加文章到首页幻灯片以及置顶文章</title><link>https://typecodes.com/mix/vfhkystickarticleflash.html</link><description>&lt;p&gt;主题【vfhky】可以在首页展示5张幻灯片，并且可以自动切换；另外，可以显示最新置顶的3篇文章的标题，效果博客首页所示。下面就分别说明具体的设置方法：&lt;/p&gt;
&lt;p&gt;&lt;img alt="主题【vfhky】添加文章到首页幻灯片以及置顶文章" src="https://o3cex9zsl.qnssl.com/2014/03/article_index.png" title="主题【vfhky】添加文章到首页幻灯片以及置顶文章" /&gt;&lt;/p&gt;
&lt;h5&gt;1 添加文章到首页幻灯片&lt;/h5&gt;
&lt;p&gt;如何把博客中的推荐文章作为首页幻灯片展示给用户？方法很简单：&lt;/p&gt;
&lt;p&gt;1、进入wordpress后台管理界面，点击左侧面板中的“所有文章”，然后在右边找到自己想要展示的文章，点击“编辑”，然后点击右上角的“显示选项”，把“自定义栏目”打勾。&lt;/p&gt;
&lt;p&gt;&lt;img alt="在wordpress后台右上角点击“显示选项”" src="https://o3cex9zsl.qnssl.com/2014/03/show_column.png" /&gt;&lt;/p&gt;


&lt;p&gt;2、在“添加自定义栏目：”中的“名称”选择“news”，然后在“值”中填入任意唯一字符即可。&lt;/p&gt;
&lt;p&gt;&lt;img alt="在“news”栏的值中填写任意唯一的字符" src="https://o3cex9zsl.qnssl.com/2014/03/write_news.png" title="在“news”栏的值中填写任意唯一的字符" /&gt;&lt;/p&gt;
&lt;h5&gt;2 设置主题文章置顶&lt;/h5&gt;
&lt;p&gt;利用wordpress自带的置顶选项，即可实现在首页显示最新置顶的3篇文章（并且排除了上面设置为幻灯片的5篇文章）。同样进入wordpress后台管理界面，点击左侧面板中的“所有文章”，然后在右边找到自己想要展示的文章，点击“快速编辑”，然后把“置顶这篇文章”打上勾即可。&lt;/p&gt;
&lt;p&gt;&lt;img alt="在“置顶这篇文章”选项上打勾" src="https://o3cex9zsl.qnssl.com/2014/03/article_stick.png" title="在“置顶这篇文章”选项上打勾" /&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Mon, 10 Mar 2014 11:51:00 +0800</pubDate><guid>tag:typecodes.com,2014-03-10:mix/vfhkystickarticleflash.html</guid><category>wordpress</category><category>wordpress首页幻灯片</category></item><item><title>又要换主机空间了</title><link>https://typecodes.com/mix/changehostspace.html</link><description>&lt;p&gt;不知不觉，两年的时光就飞逝了。博客从12年6月12日建立，已经换过两次主机了。第一次是包子赞助的国外主机，第二次（13年4月底）也就是现在用的主机是从一网友买的国内linux虚拟主机，顺便备了个案（话说这哥们帮我备案的时候也挺用心的，在此表示感谢）。空间的速度还不错，价格稍微有点贵，就是IP绑定了将近200多个站。下个月底空间也将近过期了，所以打算重新换个新窝了。&lt;/p&gt;
&lt;p&gt;上周找包子聊了聊，看能不能合租一个主机空间。结果包子参加了一个主机商“续三年送二年”的活动，于是又慷慨地把主机panel给了我。好吧，说多了都是谢！&lt;/p&gt;


&lt;p&gt;晚上闲下来，考虑了下博客挪窝需要准备哪些，把该打包的文件备份打包。另外上谷歌搜索了下关键词 “黄克业的博客” ，竟然发现博客有了站内相关链接（Google Sitelinks）。于是再上&lt;a href="http://seo.chinaz.com/?host=typecodes.com&amp;amp;c=1&amp;amp;m=1" title="站长之家——站长工具"&gt;站长之家&lt;/a&gt;查看了下博客百度权重和谷歌PR都变1了。虽然博客文章不多，更新时间也不定，不过每篇文章也算是比较用心了吧。总之，挺高兴的。&lt;/p&gt;
&lt;p&gt;谷歌站内相关链接（Google Sitelinks）的图片：&lt;/p&gt;
&lt;p&gt;&lt;img alt="Google Sitelinks" src="https://o3cex9zsl.qnssl.com/2014/03/google.png" title="Google Sitelinks" /&gt;&lt;/p&gt;
&lt;p&gt;站长之家——站长工具的图片：&lt;/p&gt;
&lt;p&gt;&lt;img alt="站长之家工具" src="https://o3cex9zsl.qnssl.com/2014/03/zhangzhangtools.png" title="站长之家工具" /&gt;&lt;/p&gt;
&lt;p&gt;不多说了，明天开始换空间，应该不会出错吧，嘿嘿。。&lt;/p&gt;
&lt;p&gt;什么是站内相关链接（Google Sitelinks）?
Google的站长帮助中心有官方对站内相关的解释：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;显示在有些网站的搜索结果下面的链接，叫做站内相关链接(Stielinks)，这些链接是为了帮助用户更好地访问你的站点。我们的系统通过分析网站的链接结构，来发现这种快捷方式，以帮助用户节省时间、更迅速地找到他们想要的东西。
只有当我们觉得这些站内链接对我们的用户非常有价值的时候我们才会把他们显示出来。如果你的网站结构不能让我们的算法找出高质量的站内链接，或者我们认为这些链接跟我们的用户搜索请求并不相关的时候，我们也不会把它们显示出来。
目前，站内链接完全是机器自动生成的，我们也一直在致力于提高我们的站内链接算法，将来我们可能会让我们的广大网站管理员参与进来。
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Sat, 08 Mar 2014 23:30:00 +0800</pubDate><guid>tag:typecodes.com,2014-03-08:mix/changehostspace.html</guid><category>主机</category></item><item><title>Eclipse中的搭建C/C++开发环境：安装MinGW和Eclipse CDT插件</title><link>https://typecodes.com/java/eclipseloadmingwcdt.html</link><description>&lt;p&gt;Eclipse 是一款由IBM提供支持的开源IDE工具。它的母站是www.eclipse.org。Eclipse在Java工程开发中非常流行。并且它可以通过外部插件来支持C/C++、PHP、Python、Perl以及其它网络工程开发。Eclipse还可以跨平台运行于Windows、Linux和Mac OS上。&lt;/p&gt;
&lt;h5&gt;1 安装MinGw GCC或者Cygwin GCC编译器&lt;/h5&gt;
&lt;p&gt;想要Eclipse来C/C++编程，需要安装C/C++编译器。在Windows平台上，你可以安装MinGW GCC或者Cygwin GCC。如果不确定要选哪一个的话，那么就用MinGW吧。因为MinGW的安装更为便捷，但相对CygWin来说，却也少了一些特性。安装MinGW GCC：请阅读&lt;a href="https://typecodes.com/cseries/windowsinstallmingwgcc.html" title="点击查看原文"&gt;《Windows平台如何安装最新的MinGW GCC编译器》&lt;/a&gt;；安装Cygwin GCC：请阅读&lt;a href="https://typecodes.com/cseries/netbeanscdevenv.html" title="点击查看原文"&gt;《完美配置NetBeans IDE中的C/C++开发环境》&lt;/a&gt;。&lt;/p&gt;


&lt;p&gt;安装完MinGW或者Cygwin后，在cmd窗口中输入gcc --version、g++ --version以及gdb --version都能显示相应的版本信息，否则表示安装失败。&lt;/p&gt;
&lt;p&gt;&lt;img alt="在cmd中gcc/g++/gdb版本信息" src="https://o3cex9zsl.qnssl.com/2014/03/cmd_gcc_g%2B%2B_gdb.png" title="在cmd中gcc/g++/gdb版本信息" /&gt;&lt;/p&gt;
&lt;h5&gt;2 安装Eclipse C/C++ Development Tool（CDT）&lt;/h5&gt;
&lt;p&gt;安装CDT的方法有两种，这取决于你之前是否安装了Eclipse：&lt;/p&gt;
&lt;h6&gt;2.1 之前已经安装了“Eclipse for Java Developers”或者其它Eclipse包&lt;/h6&gt;
&lt;p&gt;那么你可以按照下面的方法来安装CDT插件：运行Eclipse =&amp;gt; Help =&amp;gt; Install New Software =&amp;gt; 在“Work with”选项，下拉下拉菜单然后选择"Kepler - http://download.eclipse.org/releases/kepler"（或者Eclipse 4.2的juno版本，又或者Eclipse 3.7的helios版本）。在“Name”框中，扩展“Programming Language”节点，然后点击“C/C++ Development Tools”，然后一路“Next”，最后点击“Finish”。&lt;/p&gt;
&lt;h6&gt;2.2 之前没安装任何Eclipse包&lt;/h6&gt;
&lt;p&gt;那么你可以从http://www.eclipse.org/downloads下载"Eclipse IDE for C/C++ Developers" ，然后解压下载的文件到你选择的一个路径。&lt;/p&gt;
&lt;h5&gt;3 配置Eclipse&lt;/h5&gt;
&lt;p&gt;你完全不需要做任何配置，只要Cygwin或者MinGW库被包含在系统的PATH环境变量中了。CDT会自动搜索PATH环境变量找到C/C++编译器。到这里，其实你已经拥有了C/C++的开发环境了！如果对eclipse熟悉的话，下面的操作可以忽略不看。&lt;/p&gt;
&lt;h5&gt;4 在Eclipse中写下你的第一个C/C++程序（以C++为例）&lt;/h5&gt;
&lt;h6&gt;4.1 创建一个新的c++工程&lt;/h6&gt;
&lt;p&gt;对于每一个C++应用，你需要创建一个工程来保存所有的源代码、目标文件、可执行文件以及其他相关的资源。创建一个新的C/C++工程的方法：&lt;/p&gt;
&lt;p&gt;1、选择“File”菜单，点击“New” =&amp;gt; “Project” =&amp;gt; C/C++ =&amp;gt; C/C++ project。2、在“Toolchains”框中，选择你刚才安装的编译器，例如“Cygwin GCC”或者“MinGW GCC”然后一路“NEXT”。3、在“Select Configurations”对话框中，把“Debug”和“Release”都选上，然后“Finish”。&lt;/p&gt;
&lt;h6&gt;4.2 写一个 Hello-world的C++程序&lt;/h6&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;#include &amp;lt;iostream&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Hello, world!&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h6&gt;4.3 如果出现“Unresolved Inclusion Error”&lt;/h6&gt;
&lt;p&gt;如果在#include语句下面出现了“unresolved inclusion”，那是因为没有正确设置“include paths for headers”（头文件路径）。可以通过选择“Project”菜单 =&amp;gt; Properties =&amp;gt; C/C++ General =&amp;gt; Paths and Symbols =&amp;gt; 在“Includes”选项中：&lt;/p&gt;
&lt;p&gt;对Cygwin GCC：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cm"&gt;/* 1添加以下路径至“GNU C”，其中$CYGWIN_HOME是你安装Cygwin的路径 */&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="err"&gt;$&lt;/span&gt;CYGWIN_HOME&lt;span class="o"&gt;\&lt;/span&gt;lib&lt;span class="o"&gt;\&lt;/span&gt;gcc&lt;span class="o"&gt;\&lt;/span&gt;i686&lt;span class="o"&gt;-&lt;/span&gt;pc&lt;span class="o"&gt;-&lt;/span&gt;cygwin&lt;span class="o"&gt;\&lt;/span&gt;&lt;span class="m"&gt;4.5&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;x&lt;span class="o"&gt;\&lt;/span&gt;include&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="err"&gt;$&lt;/span&gt;CYGWIN_HOME&lt;span class="o"&gt;\&lt;/span&gt;lib&lt;span class="o"&gt;\&lt;/span&gt;gcc&lt;span class="o"&gt;\&lt;/span&gt;i686&lt;span class="o"&gt;-&lt;/span&gt;pc&lt;span class="o"&gt;-&lt;/span&gt;cygwin&lt;span class="o"&gt;\&lt;/span&gt;&lt;span class="m"&gt;4.5&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;x&lt;span class="o"&gt;\&lt;/span&gt;include&lt;span class="o"&gt;-&lt;/span&gt;fixed&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="err"&gt;$&lt;/span&gt;CYGWIN_HOME&lt;span class="o"&gt;\&lt;/span&gt;usr&lt;span class="o"&gt;\&lt;/span&gt;include&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="err"&gt;$&lt;/span&gt;CYGWIN_HOME&lt;span class="o"&gt;\&lt;/span&gt;usr&lt;span class="o"&gt;\&lt;/span&gt;include&lt;span class="o"&gt;\&lt;/span&gt;w32api&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="cm"&gt;/* 2添加以下路径至“GNU C++”，其中$CYGWIN_HOME是你安装Cygwin的路径 */&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="err"&gt;$&lt;/span&gt;CYGWIN_HOME&lt;span class="o"&gt;\&lt;/span&gt;lib&lt;span class="o"&gt;\&lt;/span&gt;gcc&lt;span class="o"&gt;\&lt;/span&gt;i686&lt;span class="o"&gt;-&lt;/span&gt;pc&lt;span class="o"&gt;-&lt;/span&gt;cygwin&lt;span class="o"&gt;\&lt;/span&gt;&lt;span class="m"&gt;4.5&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;x&lt;span class="o"&gt;\&lt;/span&gt;include&lt;span class="o"&gt;\&lt;/span&gt;c&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="err"&gt;$&lt;/span&gt;CYGWIN_HOME&lt;span class="o"&gt;\&lt;/span&gt;lib&lt;span class="o"&gt;\&lt;/span&gt;gcc&lt;span class="o"&gt;\&lt;/span&gt;i686&lt;span class="o"&gt;-&lt;/span&gt;pc&lt;span class="o"&gt;-&lt;/span&gt;cygwin&lt;span class="o"&gt;\&lt;/span&gt;&lt;span class="m"&gt;4.5&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;x&lt;span class="o"&gt;\&lt;/span&gt;include&lt;span class="o"&gt;\&lt;/span&gt;c&lt;span class="o"&gt;++\&lt;/span&gt;i686&lt;span class="o"&gt;-&lt;/span&gt;pc&lt;span class="o"&gt;-&lt;/span&gt;cygwin&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="err"&gt;$&lt;/span&gt;CYGWIN_HOME&lt;span class="o"&gt;\&lt;/span&gt;lib&lt;span class="o"&gt;\&lt;/span&gt;gcc&lt;span class="o"&gt;\&lt;/span&gt;i686&lt;span class="o"&gt;-&lt;/span&gt;pc&lt;span class="o"&gt;-&lt;/span&gt;cygwin&lt;span class="o"&gt;\&lt;/span&gt;&lt;span class="m"&gt;4.5&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;x&lt;span class="o"&gt;\&lt;/span&gt;include&lt;span class="o"&gt;\&lt;/span&gt;c&lt;span class="o"&gt;++\&lt;/span&gt;backward&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="err"&gt;$&lt;/span&gt;CYGWIN_HOME&lt;span class="o"&gt;\&lt;/span&gt;lib&lt;span class="o"&gt;\&lt;/span&gt;gcc&lt;span class="o"&gt;\&lt;/span&gt;i686&lt;span class="o"&gt;-&lt;/span&gt;pc&lt;span class="o"&gt;-&lt;/span&gt;cygwin&lt;span class="o"&gt;\&lt;/span&gt;&lt;span class="m"&gt;4.5&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;x&lt;span class="o"&gt;\&lt;/span&gt;include&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="err"&gt;$&lt;/span&gt;CYGWIN_HOME&lt;span class="o"&gt;\&lt;/span&gt;lib&lt;span class="o"&gt;\&lt;/span&gt;gcc&lt;span class="o"&gt;\&lt;/span&gt;i686&lt;span class="o"&gt;-&lt;/span&gt;pc&lt;span class="o"&gt;-&lt;/span&gt;cygwin&lt;span class="o"&gt;\&lt;/span&gt;&lt;span class="m"&gt;4.5&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;x&lt;span class="o"&gt;\&lt;/span&gt;include&lt;span class="o"&gt;-&lt;/span&gt;fixed&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="err"&gt;$&lt;/span&gt;CYGWIN_HOME&lt;span class="o"&gt;\&lt;/span&gt;usr&lt;span class="o"&gt;\&lt;/span&gt;include&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="err"&gt;$&lt;/span&gt;CYGWIN_HOME&lt;span class="o"&gt;\&lt;/span&gt;usr&lt;span class="o"&gt;\&lt;/span&gt;include&lt;span class="o"&gt;\&lt;/span&gt;w32api&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;对MinGW GCC：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cm"&gt;/* 1添加以下路径至“GNU C”，其中$MINGW_HOME是你安装MinGW的路径 */&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="err"&gt;$&lt;/span&gt;MINGW_HOME&lt;span class="o"&gt;\&lt;/span&gt;lib&lt;span class="o"&gt;\&lt;/span&gt;gcc&lt;span class="o"&gt;\&lt;/span&gt;mingw32&lt;span class="o"&gt;\&lt;/span&gt;&lt;span class="m"&gt;4.6&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;x&lt;span class="o"&gt;\&lt;/span&gt;include&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="err"&gt;$&lt;/span&gt;MINGW_HOME&lt;span class="o"&gt;\&lt;/span&gt;include&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="err"&gt;$&lt;/span&gt;MINGW_HOME&lt;span class="o"&gt;\&lt;/span&gt;lib&lt;span class="o"&gt;\&lt;/span&gt;gcc&lt;span class="o"&gt;\&lt;/span&gt;mingw32&lt;span class="o"&gt;\&lt;/span&gt;&lt;span class="m"&gt;4.6&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;x&lt;span class="o"&gt;\&lt;/span&gt;include&lt;span class="o"&gt;-&lt;/span&gt;fixed&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="cm"&gt;/* 2添加以下路径至“GNU C++”，其中$MINGW_HOME是你安装MinGW的路径 */&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="err"&gt;$&lt;/span&gt;MINGW_HOME&lt;span class="o"&gt;\&lt;/span&gt;lib&lt;span class="o"&gt;\&lt;/span&gt;gcc&lt;span class="o"&gt;\&lt;/span&gt;mingw32&lt;span class="o"&gt;\&lt;/span&gt;&lt;span class="m"&gt;4.6&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;x&lt;span class="o"&gt;\&lt;/span&gt;include&lt;span class="o"&gt;\&lt;/span&gt;c&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="err"&gt;$&lt;/span&gt;MINGW_HOME&lt;span class="o"&gt;\&lt;/span&gt;lib&lt;span class="o"&gt;\&lt;/span&gt;gcc&lt;span class="o"&gt;\&lt;/span&gt;mingw32&lt;span class="o"&gt;\&lt;/span&gt;&lt;span class="m"&gt;4.6&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;x&lt;span class="o"&gt;\&lt;/span&gt;include&lt;span class="o"&gt;\&lt;/span&gt;c&lt;span class="o"&gt;++\&lt;/span&gt;mingw32&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="err"&gt;$&lt;/span&gt;MINGW_HOME&lt;span class="o"&gt;\&lt;/span&gt;lib&lt;span class="o"&gt;\&lt;/span&gt;gcc&lt;span class="o"&gt;\&lt;/span&gt;mingw32&lt;span class="o"&gt;\&lt;/span&gt;&lt;span class="m"&gt;4.6&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;x&lt;span class="o"&gt;\&lt;/span&gt;include&lt;span class="o"&gt;\&lt;/span&gt;c&lt;span class="o"&gt;++\&lt;/span&gt;backward&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="err"&gt;$&lt;/span&gt;MINGW_HOME&lt;span class="o"&gt;\&lt;/span&gt;lib&lt;span class="o"&gt;\&lt;/span&gt;gcc&lt;span class="o"&gt;\&lt;/span&gt;mingw32&lt;span class="o"&gt;\&lt;/span&gt;&lt;span class="m"&gt;4.6&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;x&lt;span class="o"&gt;\&lt;/span&gt;include&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="err"&gt;$&lt;/span&gt;MINGW_HOME&lt;span class="o"&gt;\&lt;/span&gt;include&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="err"&gt;$&lt;/span&gt;MINGW_HOME&lt;span class="o"&gt;\&lt;/span&gt;lib&lt;span class="o"&gt;\&lt;/span&gt;gcc&lt;span class="o"&gt;\&lt;/span&gt;mingw32&lt;span class="o"&gt;\&lt;/span&gt;&lt;span class="m"&gt;4.6&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;x&lt;span class="o"&gt;\&lt;/span&gt;include&lt;span class="o"&gt;-&lt;/span&gt;fixed&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;提示：想要找到头文件的路径，你可以通过在Cygwin或者MinGW的安装路径下搜索stdio.h或者iostream。如果在链接期间，遇到“error while loading shared libraries”。那么在cygwin中安装“libmpfr4”即可。&lt;/p&gt;
&lt;h5&gt;5 编译和构建compile/Build&lt;/h5&gt;
&lt;p&gt;ctrl+b表示构建，ctrl+f11表示执行。&lt;/p&gt;
&lt;h5&gt;6 程序调试debug&lt;/h5&gt;
&lt;p&gt;调试的基本步骤：1、设置断点；2、开启调试；3、点击“Step-Over”进行单步调试；4、“Run-To-Line”可以使调试先执行到某一行然后继续调试，“Resume”继续执行，“Terminate”终止调试。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Sat, 08 Mar 2014 11:22:00 +0800</pubDate><guid>tag:typecodes.com,2014-03-08:java/eclipseloadmingwcdt.html</guid><category>eclipse</category><category>mingw</category><category>cdt</category></item><item><title>Windows平台如何安装最新的MinGW GCC编译器</title><link>https://typecodes.com/cseries/windowsinstallmingwgcc.html</link><description>&lt;p&gt;在Eclipse中搭建C/C++环境的话，需要一个C/C++编译器。之前文章&lt;a href="https://typecodes.com/cseries/netbeanscdevenv.html" title="点击查看原文"&gt;《完美配置NetBeans IDE中的C/C++开发环境》&lt;/a&gt;中提到了使用Cygwin作为C/C++程序的编译器，那么这篇文章就说说在Windows平台如何安装最新的MinGW GCC编译器。&lt;/p&gt;
&lt;h5&gt;1 下载MinGW GCC编译器&lt;/h5&gt;
&lt;p&gt;MinGW官网地址是：http://www.mingw.org/，目前它已经把MinGW源码托管在了sourceforge上了，因此下载地址是：&lt;a href="http://sourceforge.net/projects/mingw/" title="进入官方下载地址"&gt;点击进入&lt;/a&gt;。把那个mingw-get-setup.exe下载至本地电脑上即可。&lt;/p&gt;


&lt;h5&gt;2 点击开始安装MinGW&lt;/h5&gt;
&lt;p&gt;点击刚下载的mingw-get-setup.exe，将出现下图所示的界面，然后点击“Install”。&lt;/p&gt;
&lt;p&gt;&lt;img alt="点击mingw-get-setup.exe安装" src="https://o3cex9zsl.qnssl.com/2014/03/8.png" title="点击mingw-get-setup.exe安装" /&gt;&lt;/p&gt;
&lt;p&gt;然后出现下图所示画面，可以修改安装目录。这里保持默认即可，点击“Continue”。&lt;/p&gt;
&lt;p&gt;&lt;img alt="点击mingw-get-setup.exe安装，再保持默认安装" src="https://o3cex9zsl.qnssl.com/2014/03/9.png" title="点击mingw-get-setup.exe安装，再保持默认安装" /&gt;&lt;/p&gt;
&lt;p&gt;接着Mingw会自动下载远程文件，看到绿色进度条到达“100%”即可点击“Continue”继续下面的安装步骤。&lt;/p&gt;
&lt;p&gt;&lt;img alt="等待在线安装mingw文件" src="https://o3cex9zsl.qnssl.com/2014/03/10.png" title="等待在线安装mingw文件" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="在线安装mingw文件完成" src="https://o3cex9zsl.qnssl.com/2014/03/11.png" title="在线安装mingw文件完成" /&gt;&lt;/p&gt;
&lt;p&gt;如果弹出如图所示警告，点击“确定”忽略即可。&lt;/p&gt;
&lt;p&gt;&lt;img alt="mingw弹出警告" src="https://o3cex9zsl.qnssl.com/2014/03/12.png" title="mingw弹出警告" /&gt;&lt;/p&gt;
&lt;p&gt;接着会弹出下图所示的界面，先选择左上角的“Basic Setup”。然后通过右键点击，把mingw32-base、mingw32-gcc-g++、mingw32-gcc-gdb等选上。接着点击左上角的“All Packges”，一定要确定是否选择了“gcc”（编译用），“g++”（编译用），“gdb”（调试用）以及“make”（Makefile文件用）这四个包。&lt;/p&gt;
&lt;p&gt;&lt;img alt="选择“Basic Setup”" src="https://o3cex9zsl.qnssl.com/2014/03/13.png" title="选择“Basic Setup”" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="选择“All Packges”" src="https://o3cex9zsl.qnssl.com/2014/03/14.png" title="选择“All Packges”" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="右键选择要安装的文件" src="https://o3cex9zsl.qnssl.com/2014/03/15.png" title="右键选择要安装的文件" /&gt;&lt;/p&gt;
&lt;p&gt;最后点击左上角菜单栏的“Installation”，然后点击“Apply this change”，这样就会把之前选中的在线安装了。当然由于网络问题，可能有些会安装失败，你需要再次点击“Basic Setup”和“All Packges”检查上面四个包安装完成与否。如果部分没安装成功，那么把没安装好的那个项选上，然后再次安装。&lt;/p&gt;
&lt;h5&gt;3 把C:\MinGW\bin;添加到环境变量Path中&lt;/h5&gt;
&lt;p&gt;把MincGW安装路径下的bin目录，例如默认的C:\MinGW\bin;添加到系统的环境变量Path中去。&lt;/p&gt;
&lt;h5&gt;4 检查是否安装成功&lt;/h5&gt;
&lt;p&gt;win+r打开cmd窗口，分别输入gcc --version、g++ --version、gdb --version。安装成功的话，会出现如下所示：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;C:\MinGW\bin
C:\Users\vfhky&amp;gt;gcc --version
gcc (GCC) 4.8.1
Copyright (C) 2013 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

C:\Users\vfhky&amp;gt;g++ --version
g++ (GCC) 4.8.1
Copyright (C) 2013 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

C:\Users\vfhky&amp;gt;gdb --version
GNU gdb (GDB) 7.6.1
Copyright (C) 2013 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later &amp;lt;http://gnu.org/licenses/gpl.html&amp;gt;
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type &amp;quot;show copying&amp;quot;
and &amp;quot;show warranty&amp;quot; for details.
This GDB was configured as &amp;quot;mingw32&amp;quot;.
For bug reporting instructions, please see:
&amp;lt;http://www.gnu.org/software/gdb/bugs/&amp;gt;.
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Sat, 08 Mar 2014 11:00:00 +0800</pubDate><guid>tag:typecodes.com,2014-03-08:cseries/windowsinstallmingwgcc.html</guid><category>mingw</category><category>gcc</category></item><item><title>PHP实现百度、网易、新浪短网址服务的API接口调用</title><link>https://typecodes.com/web/phpbd163sinashorturlapi.html</link><description>&lt;p&gt;闲来蛋疼，看了几个短网址API服务，于是把它们整理出来，方便以后使用。目前，提供靠谱的短网址API接口的公司不多（谷歌、百度、新浪微博、网易等），而像腾讯微博、淘宝这几个巨头的短网址服务都是仅供内部使用。&lt;/p&gt;
&lt;h5&gt;1 谷歌、百度、网易、新浪短网址服务的API比较&lt;/h5&gt;
&lt;p&gt;百度短网址API接口完全对外开放，用户不需申请其开放平台的APPKEY，也不用采用OAuth的协议，因此相对简单方便；谷歌的短网址API接口有两种形式，一种类似于百度无需进行繁复的OAuth认证，不过限制比多；另一种是采用GAE平台OAuth2.0的认证方式，限制较少。&lt;/p&gt;


&lt;p&gt;新浪微博的短网址API接口服务也类似于谷歌，第一种只需要取得新浪微博开放平台的APPKEY即可使用，第二种是采用OAuth2.0认证的方式。网易只提供类似于新浪微博提供的第二种API接口调用方式，即需要申请APPKEY，不过申请非常容易通过，这点不同于新浪微博。值得一提的是，经博主测试，网易的短网址API接口貌似有bug。最终三个接口的测试效果如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img alt="百度网易新浪微博短网址API接口" src="https://o3cex9zsl.qnssl.com/2014/03/shorturlAPI.png" title="百度网易新浪微博短网址API接口" /&gt;&lt;/p&gt;
&lt;h5&gt;2 PHP实现百度短网址API接口调用&lt;/h5&gt;
&lt;p&gt;百度短网址的API接口封装不是很好，需要针对长网址转短网址和短网址转长网址请求不同的页面（create.php和query.php），另外官方的示例程序也有错误。&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
 &lt;span class="sd"&gt;/**&lt;/span&gt;
&lt;span class="sd"&gt; * @author: vfhky 20130304 20:10&lt;/span&gt;
&lt;span class="sd"&gt; * @description: PHP调用百度短网址API接口&lt;/span&gt;
&lt;span class="sd"&gt; * @reference: http://dwz.cn/d10C4&lt;/span&gt;
&lt;span class="sd"&gt; * @param string $type: 非零整数代表长网址转短网址,0表示短网址转长网址&lt;/span&gt;
&lt;span class="sd"&gt; */&lt;/span&gt;
 &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;bdUrlAPI&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$type&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$url&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
   &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$type&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="nv"&gt;$baseurl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://dwz.cn/create.php&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="k"&gt;else&lt;/span&gt;
      &lt;span class="nv"&gt;$baseurl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://dwz.cn/query.php&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="nv"&gt;$ch&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;curl_init&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
   &lt;span class="nb"&gt;curl_setopt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$ch&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;CURLOPT_URL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$baseurl&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
   &lt;span class="nb"&gt;curl_setopt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$ch&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;CURLOPT_POST&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
   &lt;span class="nb"&gt;curl_setopt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$ch&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;CURLOPT_RETURNTRANSFER&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
   &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$type&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;url&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="nv"&gt;$url&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
   &lt;span class="k"&gt;else&lt;/span&gt;
      &lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;tinyurl&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="nv"&gt;$url&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
   &lt;span class="nb"&gt;curl_setopt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$ch&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;CURLOPT_POSTFIELDS&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
   &lt;span class="nv"&gt;$strRes&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;curl_exec&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$ch&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
   &lt;span class="nb"&gt;curl_close&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$ch&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
   &lt;span class="nv"&gt;$arrResponse&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;json_decode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$strRes&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
   &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$arrResponse&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;status&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;!=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;ErrorCode: [&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;$arrResponse&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;status&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;] ErrorMsg: [&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;iconv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;UTF-8&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;GBK&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$arrResponse&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;err_msg&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;]&amp;lt;br/&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
   &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$type&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$arrResponse&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;tinyurl&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
   &lt;span class="k"&gt;else&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$arrResponse&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;longurl&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;
 &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;----------百度短网址API----------&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
 &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Long to Short: &amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bdUrlAPI&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://vfhky.sinaapp.com&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;lt;br/&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
 &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Short to Long: &amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bdUrlAPI&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://dwz.cn/evlhW&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h5&gt;3 PHP实现网易短网址API接口调用&lt;/h5&gt;
&lt;p&gt;&lt;img alt="网易短网址API接口" src="https://o3cex9zsl.qnssl.com/2014/03/neteasy.png" title="网易短网址API接口" /&gt;&lt;/p&gt;
&lt;p&gt;用户首先需要申请一个appkey，申请地址是http://126.am/，登录进去即可申请，并且很快得到审核。不过，经过测试发现一个bug：用接口生成的短网址无法通过API接口还原为之前的长网址，提示“NOT_MATCH”（对应的官方说明是：Key和短地址不匹配，无法还原）。但是如上图所示，如果在http://126.am/user.action的页面生成的短网址却能够通过API还原为原来的长网址。&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
 &lt;span class="sd"&gt;/**&lt;/span&gt;
&lt;span class="sd"&gt; * @author: vfhky 20130304 20:10&lt;/span&gt;
&lt;span class="sd"&gt; * @description: PHP调用网易短网址API接口&lt;/span&gt;
&lt;span class="sd"&gt; * @reference: http://126.am/client/api_register_new.jsp&lt;/span&gt;
&lt;span class="sd"&gt; * @param string $type: 非零整数代表长网址转短网址,0表示短网址转长网址&lt;/span&gt;
&lt;span class="sd"&gt; */&lt;/span&gt;
 &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;wyUrlAPI&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$type&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$url&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
   &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$type&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="nv"&gt;$baseurl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://126.am/api!shorten.action&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="k"&gt;else&lt;/span&gt;
      &lt;span class="nv"&gt;$baseurl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://126.am/api!expand.action&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="cm"&gt;/* 这是我申请的APPKEY，大家可以测试使用 */&lt;/span&gt;
   &lt;span class="nv"&gt;$key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;4f0c04771d4e40b4945afcfdc0337e3d&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="nv"&gt;$ch&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;curl_init&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
   &lt;span class="nb"&gt;curl_setopt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$ch&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;CURLOPT_URL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$baseurl&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
   &lt;span class="nb"&gt;curl_setopt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$ch&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;CURLOPT_POST&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
   &lt;span class="nb"&gt;curl_setopt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$ch&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;CURLOPT_RETURNTRANSFER&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
   &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$type&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;longUrl&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="nv"&gt;$url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;key&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="nv"&gt;$key&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
   &lt;span class="k"&gt;else&lt;/span&gt;
      &lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;shortUrl&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="nv"&gt;$url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;key&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="nv"&gt;$key&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
   &lt;span class="nb"&gt;curl_setopt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$ch&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;CURLOPT_POSTFIELDS&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
   &lt;span class="nv"&gt;$strRes&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;curl_exec&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$ch&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
   &lt;span class="nb"&gt;curl_close&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$ch&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
   &lt;span class="nv"&gt;$arrResponse&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;json_decode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$strRes&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
   &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$arrResponse&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;status_code&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;!=&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;ErrorCode: [&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;$arrResponse&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;status_code&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;] ErrorMsg: [&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;iconv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;UTF-8&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;GBK&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$arrResponse&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;status_txt&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;]&amp;lt;br/&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$arrResponse&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;url&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;
 &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;----------网易短网址API----------&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
 &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Long to Short: &amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;wyUrlAPI&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;http://vfhky.sinaapp.com&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;lt;br/&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
 &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Short to Long: &amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;wyUrlAPI&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;http://126.am/huangky&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;lt;br/&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
 &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Short to Long: &amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;wyUrlAPI&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;126.am/XRYsJ2&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h5&gt;4 PHP实现新浪微博短网址API接口调用&lt;/h5&gt;
&lt;p&gt;同样，用户首先需要申请一个新浪微博开放平台的appkey，申请地址是http://open.t.sina.com.cn/，不过审核相对严格而且比较慢。新浪微博短网址API接口有两种实现方式，第一种是原始的OAuth1.0的验证方式，比较简单，无需申请token，第二种是OAuth2.0的验证方式，这个需要access_token（虽然官方文档http://t.cn/8FgFoL8说可以像第一种那样直接通过appkey验证，但是测试不成功）。因此下面的示例采用的是第一种方式，即直接通过appkey验证。&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
 &lt;span class="sd"&gt;/**&lt;/span&gt;
&lt;span class="sd"&gt; * @author: vfhky 20130304 20:10&lt;/span&gt;
&lt;span class="sd"&gt; * @description: PHP调用新浪短网址API接口&lt;/span&gt;
&lt;span class="sd"&gt; * @reference: http://t.cn/8FgeBI2&lt;/span&gt;
&lt;span class="sd"&gt; * @param string $type: 非零整数代表长网址转短网址,0表示短网址转长网址&lt;/span&gt;
&lt;span class="sd"&gt; */&lt;/span&gt;
 &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;xlUrlAPI&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$type&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$url&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
   &lt;span class="cm"&gt;/* 这是我申请的APPKEY，大家可以测试使用 */&lt;/span&gt;
   &lt;span class="nv"&gt;$key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;1562966081&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$type&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="nv"&gt;$baseurl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://api.t.sina.com.cn/short_url/shorten.json?source=&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;$key&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;amp;url_long=&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;$url&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="k"&gt;else&lt;/span&gt;
      &lt;span class="nv"&gt;$baseurl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://api.t.sina.com.cn/short_url/expand.json?source=&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;$key&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;amp;url_short=&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;$url&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="nv"&gt;$ch&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;curl_init&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
   &lt;span class="nb"&gt;curl_setopt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$ch&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;CURLOPT_URL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$baseurl&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
   &lt;span class="nb"&gt;curl_setopt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$ch&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;CURLOPT_HEADER&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
   &lt;span class="nb"&gt;curl_setopt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$ch&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;CURLOPT_TIMEOUT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
   &lt;span class="nb"&gt;curl_setopt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$ch&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;CURLOPT_RETURNTRANSFER&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
   &lt;span class="nv"&gt;$strRes&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;curl_exec&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$ch&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
   &lt;span class="nb"&gt;curl_close&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$ch&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
   &lt;span class="nv"&gt;$arrResponse&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;json_decode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$strRes&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
   &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;isset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$arrResponse&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nb"&gt;isset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$arrResponse&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;url_long&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nv"&gt;$arrResponse&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;url_long&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$type&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$arrResponse&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;url_short&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
   &lt;span class="k"&gt;else&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$arrResponse&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;url_long&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;
 &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;----------新浪短网址API----------&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
 &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Long to Short: &amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;xlUrlAPI&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;http://vfhky.sinaapp.com&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;lt;br/&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
 &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Short to Long: &amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;xlUrlAPI&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;http://t.cn/8FdW1rm&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h5&gt;5 后记&lt;/h5&gt;
&lt;p&gt;综上，百度的短网址API相对方便，而且限制较少；新浪和网易的API接口相对麻烦；网易的短网址API是唯一具备API请求统计功能的，但很容易受到“请求过于频繁而遭到REQUEST_LIMIT”。&lt;/p&gt;
&lt;p&gt;另外，对于任何API接口的调试工作，一定要使用其接口提供的错误信息，例如上面百度接口的$arrResponse['status']字段、网易的$arrResponse['status_code']字段。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Tue, 04 Mar 2014 11:21:00 +0800</pubDate><guid>tag:typecodes.com,2014-03-04:web/phpbd163sinashorturlapi.html</guid><category>短网址api</category></item><item><title>教程：主题【vfhky】如何高亮wordpress文章以及文章评论中的代码</title><link>https://typecodes.com/mix/vfhkyhighlightcode.html</link><description>&lt;p&gt;博客主题【vfhky 1.0】版本，使用google-code-prettify来对wordpress文章中的代码进行高亮美化。博主之前用过WP-CodeBox和Google Syntax Highlighter for WordPress插件，感觉还是不是很适合，而且延长了页面的载入时间。最后选择了google-code-prettify来作为博客代码高亮，注意它不是一款插件，无须在wordpress后台进行管理。&lt;/p&gt;
&lt;p&gt;google-code-prettify官方使用方法是：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;pre&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;prettyprint lang-php&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;代码&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;里面的php就是你的代码所对应的语言种类，例如你要高亮C代码，那就把php改成c。使用方法很简单吧，下面是方法和效果示例：&lt;/p&gt;


&lt;h5&gt;1 在wordpress文章中使代码高亮&lt;/h5&gt;
&lt;p&gt;google-code-prettify支持html、css、php、asp、asp.net、js、c/c++等多种语言的代码高亮。在wordpress文章插入代码时，只需要添加相应的语言种类就行了。但有一点要注意，那就是把代码中的大于、小于这两个符号写成对应的&lt;code&gt;html实体格式&lt;/code&gt;。&lt;/p&gt;
&lt;h6&gt;1.1 PHP代码高亮效果&lt;/h6&gt;
&lt;p&gt;例如要高亮PHP代码，保持lang-php就行了，效果如下：&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
  &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;PHP代码高亮方法&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;pre&lt;/span&gt; &lt;span class="nx"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;prettyprint lang-php&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;这里加入要高亮的PHP代码&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nx"&gt;pre&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;

  &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Javascript代码高亮方法&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;pre&lt;/span&gt; &lt;span class="nx"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;prettyprint lang-js&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;这里加入要高亮的JS代码&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nx"&gt;pre&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;

  &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;CSS代码高亮方法&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;pre&lt;/span&gt; &lt;span class="nx"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;prettyprint lang-css&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;这里加入要高亮的CSS代码&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nx"&gt;pre&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;

  &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;其它依此类推&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h6&gt;1.2 JS代码高亮效果&lt;/h6&gt;
&lt;p&gt;例如要高亮javascript代码，把lang-php改成lang-js就行了，效果如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;script&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  alert(new Date().toLocaleDateString());
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h6&gt;1.3 CSS代码高亮效果&lt;/h6&gt;
&lt;p&gt;例如要高亮css代码，把lang-php改成lang-css就行了，效果如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="na"&gt;.time1&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="no"&gt;float&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="no"&gt;right&lt;/span&gt;&lt;span class="err"&gt;;&lt;/span&gt;&lt;span class="no"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;55&lt;/span&gt;&lt;span class="no"&gt;px&lt;/span&gt; &lt;span class="mi"&gt;70&lt;/span&gt;&lt;span class="no"&gt;px&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;
&lt;span class="c"&gt;#top2{background:#33363b;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;2 在文章评论中使代码高亮&lt;/h5&gt;
&lt;p&gt;在wordpress文章评论中使用google-code-prettify来高亮代码的方法和上面的方法是一样的，这里就不示例了。效果如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img alt="google-code-prettify代码高亮" src="https://o3cex9zsl.qnssl.com/2014/02/google-code-pretty.png" title="google-code-prettify代码高亮" /&gt;&lt;/p&gt;
&lt;h5&gt;3 附录：在文章或者评论中设置关键词高亮&lt;/h5&gt;
&lt;p&gt;wordpress文章内容或者评论内容的某些关键词高亮，效果如本文中蓝色背景的词语所示。只要在wordpress后台文章中使用：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;highwords&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;关键词&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Sun, 16 Feb 2014 12:54:00 +0800</pubDate><guid>tag:typecodes.com,2014-02-16:mix/vfhkyhighlightcode.html</guid><category>google-code-prettify</category><category>wordpress</category><category>代码高亮</category></item><item><title>教程：主题【vfhky】如何在文章中插入音乐播放器</title><link>https://typecodes.com/mix/vfhkyinsertmusicplayer.html</link><description>&lt;p&gt;博客主题【vfhky 1.0】版本，在functions.php中封装了三种音乐播放器的短代码函数。因此，在wordpress后台写文章时可以插入三种不同风格的音乐播放器，并可设置是否自动+循环播放模式。不多说了，直接上代码：其中参数auto值为yes表示自动播放，no或者不填写auto则不自动播放；参数loop值为loop表示循环播放，no或者不填写表示不循环播放。注意将代码中的【替换为[，同样把】替换为]。&lt;/p&gt;
&lt;h5&gt;1 灰色简洁风格&lt;/h5&gt;
&lt;p&gt;&lt;img alt="灰色简洁风格" src="https://o3cex9zsl.qnssl.com/2014/02/smusic.png" title="灰色简洁风格" /&gt;&lt;/p&gt;


&lt;p&gt;这款灰色简洁播放器和主题风格比较搭调，在wordpress后台文章中插入下面这段代码即可实现上图所示样式。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;【smusic】http://storage.live.com/items/4054252DDEB2E987!285?a.mp3 【/smusic】

【smusic auto=yes loop=yes】http://storage.live.com/items/4054252DDEB2E987!285?a.mp3 【/smusic】
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;2 红色喜庆风格&lt;/h5&gt;
&lt;p&gt;&lt;img alt="红色喜庆风格" src="https://o3cex9zsl.qnssl.com/2014/02/smusic1.png" title="红色喜庆风格" /&gt;&lt;/p&gt;
&lt;p&gt;红色喜庆风格的播放器同样是单曲目播放，在wordpress后台文章中插入下面这段代码即可实现上图所示样式。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;【smusic1】http://storage.live.com/items/4054252DDEB2E987!285?a.mp3 【/smusic1】

【smusic1 auto=yes loop=yes】http://storage.live.com/items/4054252DDEB2E987!285?a.mp3 【/smusic1】
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;3 多曲目彩色风格&lt;/h5&gt;
&lt;p&gt;&lt;img alt="多曲目彩色风格" src="https://o3cex9zsl.qnssl.com/2014/02/mmusic.png" title="多曲目彩色风格" /&gt;&lt;/p&gt;
&lt;p&gt;不同于前面两种播放风格，这段代码能够实现多首曲目的播放，在wordpress后台文章中插入下面这段代码即可实现上图所示样式。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;【mmusic】http://storage.live.com/items/4054252DDEB2E987!285?a.mp3|http://storage.live.com/items/4054252DDEB2E987!266?a.mp3|http://storage.live.com/items/4054252DDEB2E987!267?a.mp3 【/mmusic】

【mmusic auto=yes loop=yes】http://storage.live.com/items/4054252DDEB2E987!285?a.mp3|http://storage.live.com/items/4054252DDEB2E987!266?a.mp3|http://storage.live.com/items/4054252DDEB2E987!267?a.mp3 【/mmusic】
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Sun, 16 Feb 2014 12:11:00 +0800</pubDate><guid>tag:typecodes.com,2014-02-16:mix/vfhkyinsertmusicplayer.html</guid><category>wordpress</category><category>wordpress音乐播放器</category></item><item><title>如何在github上参与主题【vfhky】的代码开发：开源项目协作开发实战</title><link>https://typecodes.com/mix/githubcollaborationtvfhky.html</link><description>&lt;p&gt;为了使更多的童鞋能通过github加入到主题【vfhky】的开发上来，博主把整个流程简要介绍下。其实，这也是一篇如何在github上参与一个开源项目的简单教程。&lt;/p&gt;
&lt;h5&gt;1 下载github（window客户端）&lt;/h5&gt;
&lt;p&gt;在github上用邮注册帐号后，下载github的window客户端，地址是&lt;a href="https://help.github.com/articles/set-up-git"&gt;https://help.github.com/articles/set-up-git&lt;/a&gt;。&lt;/p&gt;
&lt;h5&gt;2 登录github客户端&lt;/h5&gt;
&lt;p&gt;为了简单起见，这里就不使用生成ssh key的方法了，直接打开那个蓝色的GitHub图标，这个是图形界面。然后输入帐号密码，它会自动生成一个ssh key并同步到github远端上。&lt;/p&gt;


&lt;h5&gt;3 使用Git Shell&lt;/h5&gt;
&lt;p&gt;打开那个黑色的Git Shell图标，这个类似与Linux的命令终端。打开后如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img alt="Git Shell窗口" src="https://o3cex9zsl.qnssl.com/2014/02/gitshell.png" title="Git Shell窗口" /&gt;&lt;/p&gt;
&lt;h5&gt;4 在github上fork主题到自己的远端仓库&lt;/h5&gt;
&lt;p&gt;打开地址主题【vfhky】在github上的主页：&lt;a href="https://github.com/vfhky/vfhky" title="主题【vfhky】在github上的主页"&gt;点击此处&lt;/a&gt;，会看到如下图所示。左上角的vfhky/vfhky表示“作者/项目名称”，点击右上角的fork，这样就把这个仓库复制到了自己的远端仓库（可以打开自己的github主页看到）。&lt;/p&gt;
&lt;p&gt;&lt;img alt="github个人源仓库" src="https://o3cex9zsl.qnssl.com/2014/02/vfhkytheme.png" title="github个人源仓库" /&gt;&lt;/p&gt;
&lt;h5&gt;5 在github上fork主题到自己的远端仓库&lt;/h5&gt;
&lt;p&gt;打开地址主题【vfhky】在github上的主页：&lt;a href="https://github.com/vfhky/vfhky" title="主题【vfhky】在github上的主页"&gt;点击此处&lt;/a&gt;，会看到如下图所示。左上角的vfhky/vfhky表示“作者/仓库名”，点击右上角的fork，这样就把这个仓库完整复制到了自己的远端仓库。然后打开自己的github主页下面看到新增了一个vfhky仓库，进入后把如下图中的右下角的ssh链接复制出来（类似于git@github.com:vfhky/vfhky.git）。&lt;/p&gt;
&lt;h5&gt;6 克隆自己远端仓库到本地仓库&lt;/h5&gt;
&lt;p&gt;打开那个黑色的Git Shell图标，然后输入git clone [刚才那个ssh链接]，这样就把你自己的远端仓库克隆到了本地。&lt;/p&gt;
&lt;h5&gt;7 修改代码后提交到本地仓库&lt;/h5&gt;
&lt;p&gt;先使用 git add go.php ，然后 git commit -m '这是我第一次修改go.php文件'。然后 git push origin master ，把本地的仓库同步更新到自己的github远端仓库。&lt;/p&gt;
&lt;h5&gt;8 保持与主题源仓库的代码同步&lt;/h5&gt;
&lt;p&gt;打开github你自己仓库的主页，如上图右边的中上位置，有个pull request，这个就是把你更新的代码提交到源仓库，由源仓库的管理员（也就是博主我啦）来审核并决定是否合并代码。但是有种情况，就是在你修改代码的同时，博主也在修改这个主题的代码。那么这时你 pull request 就有可以会出错，因为你fork的repo和现在的仓库拥有者vfhky的repo已经不一样了，从而导致了一个conflict。所以你需要在你pull request前，更新你本地仓库的代码。&lt;/p&gt;
&lt;p&gt;首先，在Git Shell中使用 git remote add vfhky git@github.com:vfhky/vfhky.git 。这样就在你本地仓库增加了一个上游仓库，用于保持和源仓库代码的更新。&lt;/p&gt;
&lt;p&gt;然后，使用命令 git fetch vfhky master 表示从源仓库中的master分支拉取代码，用于本地代码更新至最新。&lt;/p&gt;
&lt;p&gt;接着，进行代码的merger合并。&lt;/p&gt;
&lt;p&gt;最后使用 git pull vfhky master 命令查看是否还有conflict。这样你在提交一个pull request就行了。&lt;/p&gt;
&lt;h5&gt;9 等待源仓库拥有者审核&lt;/h5&gt;
&lt;p&gt;&lt;img alt="pull request" src="https://o3cex9zsl.qnssl.com/2014/02/issues.png" title="pull request" /&gt;&lt;/p&gt;
&lt;p&gt;完成上面的步骤后，在源仓库的主页右侧栏的“Issues”会显示一个更新，也就是你的提交会以一个issues显示在源仓库对应的栏目下面。如上图所示，这时你要做的是等待源仓库的拥有者（当然是博主啦）审核合并代码，或者在你提交的issues下面参与讨论。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Sat, 15 Feb 2014 22:22:00 +0800</pubDate><guid>tag:typecodes.com,2014-02-15:mix/githubcollaborationtvfhky.html</guid><category>github</category><category>github多人协作</category></item><item><title>配置IIS出现错误的解决方法</title><link>https://typecodes.com/mix/postwpthemevfhky1.html</link><description>&lt;p&gt;从13年11月起，博客一直没有更新，主要是工作比较忙。之前陆陆续续有人问我，说主题挺不错的，能不能共享下。由于当时我的主题还在折腾，有时都有代码都有bug，所以一直没有发布。另外去年打算用typecho，选了一个主题，感觉不是很满意，所以也放弃了。趁现在空闲时间，我把现在用的这个主题整理出来（算是一个稳定版本吧），希望大家喜欢。虽然，之前折腾过一个功能比较多的版本，后来发现自己越来越喜欢精简的东西，所以就没用了。不多说了，直接进入主题vfhky1.0的发布正题。&lt;/p&gt;


&lt;h5&gt;1 主题更新历程&lt;/h5&gt;
&lt;p&gt;这个wordpress主题是基于洃少的&lt;a href="http://www.zuifengyun.com/fengyun-2-1.html" title="查看 风云时代主题 "&gt;风云时代主题&lt;/a&gt;完成的。后面经过对程序的改进，变成了现在博主用的这个主题【vfhky】。主题最初是在去年7月在博客使用的：&lt;a href="https://typecodes.com/mix/cmsblogwithvfhkyreturn.html" title="启用CMS类型的博客主题，vfhky再次回归"&gt;《启用CMS类型的博客主题，vfhky再次回归》&lt;/a&gt;，后面不断折腾，改成了现在博客的风格。详情可以点击 &lt;a href="https://typecodes.com/tag/%E5%8D%9A%E5%AE%A2%E6%88%90%E9%95%BF%E5%BD%95/" title="查看主题【vfhky】的更新历程"&gt;此处&lt;/a&gt; 查看主题的更新历程。主题制作是一个非常折腾的过程，代码改了又改，bug调了又调。其中的艰辛就不多说了，当然这也是一个痛并快乐的过程。在此当然还得特别感谢洃少童鞋！&lt;/p&gt;
&lt;h5&gt;2 主题下载&lt;/h5&gt;
&lt;p&gt;为了让主题【vfhky】能够得到完善，我把它放在了github上，地址是&lt;a href="https://github.com/vfhky/vfhky" title="下载主题【vfhky 1.0】"&gt;https://github.com/vfhky/vfhky&lt;/a&gt;。怎么下载？请大家先fork，然后使用github客户端或者git shell来创建一个属于你自己的本地仓库。再进行修改，如果觉得自己修改的代码更好一些，那么可以提交一个pull request，我会及时合并。当然，你也可以直接在上面那个地址找到下载链接，不过还是请大家多fork！以后主题的补丁更新或者功能完善都会发布到github上，创建一个自己的本地仓库有利于更新到主题的最新版本。&lt;/p&gt;
&lt;h5&gt;3 主题安装方法&lt;/h5&gt;
&lt;h6&gt;3.1 在github上clone本地仓库&lt;/h6&gt;
&lt;p&gt;在fork后，创建clone一个自己的本地仓库。然后把go.php和urlsafe.php放到网站根目录下面；主题vfhky放在wordpress的主题wp-content\themes目录下面；另外在网站根目录下面新建一个名为avatar的文件夹，用于gravatar头像缓存；最后，把浏览人次的统计插件WP-PostViews Plus上传到wordpress的插件wp-content\plugins目录下面。&lt;/p&gt;
&lt;h6&gt;3.2 修改页面底部的当前在线人数程序&lt;/h6&gt;
&lt;p&gt;将custom.js中所有的https://typecodes.com替换为你的域名，例如http://www.baidu.com。&lt;/p&gt;
&lt;h6&gt;3.3 修改网站安全认证模版程序&lt;/h6&gt;
&lt;p&gt;将siteconfirm.php中所有的https://typecodes.com替换为你的域名，例如http://www.baidu.com。&lt;/p&gt;
&lt;h6&gt;3.4 修改淘宝IP库接口调用程序&lt;/h6&gt;
&lt;p&gt;将single.js中所有的https://typecodes.com替换为你的域名，例如http://www.baidu.com。&lt;/p&gt;
&lt;h6&gt;3.5 修改wordpress评论跳转程序&lt;/h6&gt;
&lt;p&gt;将go.php中第157和第168行的https://typecodes.com替换为你的域名，例如http://www.baidu.com。&lt;/p&gt;
&lt;h6&gt;3.6 增加博客“网站安全认证”页面&lt;/h6&gt;
&lt;p&gt;在wp后台新建一个页面，在“页面属性”-“模版”一栏中选择“网站认证”。页面的标题可以任意输入你想要的名字，例如“网站安全认证”；页面内容不用填，直接选择“发布”即可。&lt;/p&gt;
&lt;h5&gt;4 wordpress页面侧面小工具栏的设置&lt;/h5&gt;
&lt;p&gt;进入wordpress后台，然后如下图所示设置小工具栏就行了，当然你还可以自定义。&lt;/p&gt;
&lt;p&gt;&lt;img alt="主题vfhky右侧栏小工具设置" src="https://o3cex9zsl.qnssl.com/2014/02/wordpress_sidertool.png" title="主题vfhky右侧栏小工具设置" /&gt;&lt;/p&gt;
&lt;h5&gt;5 安装后续&lt;/h5&gt;
&lt;p&gt;此次主题vfhky 1.0是博主直接拿自己现在在用的代码提交的，所以有很多程序文件存在https://typecodes.com，大家可以直接替换掉。因此此次版本适合有PHP基础的童鞋使用，在下面的版本更新中，博主再封装完善下。&lt;/p&gt;
&lt;h5&gt;6 问题探讨&lt;/h5&gt;
&lt;p&gt;三种途径：博客自带的谷歌搜索；如果是安装过程出现问题，请加Q群：24385396；如果是代码合并更新问题，请直接提交一个pull request。&lt;/p&gt;
&lt;h5&gt;7 关于使用腾讯开放平台API接口&lt;/h5&gt;
&lt;p&gt;博主已经完成了腾讯所有API接口的调用封装（vfhky.QC.class.php），演示可以参考&lt;a href="https://typecodes.com/web/qqapifollowweibo.html" title="上线第一个腾讯开放平台的API应用：收听微博用户（Beta版）"&gt;《上线第一个腾讯开放平台的API应用：收听微博用户（Beta版）》&lt;/a&gt;。大家可以参考wpwplogin1.php文件中的调用方法，可以通过腾讯的API接口把博客中的信息推送到腾讯微博或者腾讯空间等等功能。&lt;/p&gt;
&lt;h5&gt;8 最后等你在github&lt;/h5&gt;
&lt;p&gt;为了主题vfhky能更加完善，请大家多多fork。等你在github！&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Sat, 15 Feb 2014 20:07:00 +0800</pubDate><guid>tag:typecodes.com,2014-02-15:mix/postwpthemevfhky1.html</guid><category>博客成长录</category><category>主题vfhky</category></item><item><title>使用.bat批处理文件实现内外网多IP地址的切换</title><link>https://typecodes.com/mix/batchginterandextnalnetwork.html</link><description>&lt;p&gt;从上一篇文章&lt;a href="https://typecodes.com/mix/dosbatmethod.html" title="批处理文件（.bat）的写法——DOS命令大全"&gt;《批处理文件（.bat）的写法——DOS命令大全》&lt;/a&gt;，大致了解了DOS命令以及.bat文件的基本写法，那么这篇文章就是一个实战实例。同时，也能更好地理解文章&lt;a href="https://typecodes.com/mix/win7wifi.html" title="如何用笔记本Win7系统建立Wifi"&gt;《如何用笔记本Win7系统建立Wifi》&lt;/a&gt;中.bat文件中的dos命令。最终效果如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img alt="使用.bat批处理文件实现内外网多IP地址的切换" src="https://o3cex9zsl.qnssl.com/2013/12/IPchange.jpg" title="使用.bat批处理文件实现内外网多IP地址的切换" /&gt;&lt;/p&gt;


&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;:: 使用.bat批处理文件实现内外网多IP地址的切换演示文件：IPchange.bat&lt;/span&gt;
&lt;span class="c"&gt;:: 还可以增加3,4,5等多个IP地址，只要增加相应的if语句和label跳转标签即可&lt;/span&gt;
&lt;span class="c"&gt;:: 首选DNS为谷歌的8.8.8.8，备用DNS为8.8.4.4&lt;/span&gt;

&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="k"&gt;Echo&lt;/span&gt; &lt;span class="k"&gt;Off&lt;/span&gt;
TITLE  IP设置

&lt;span class="nl"&gt;:start&lt;/span&gt;
&lt;span class="k"&gt;cls&lt;/span&gt;
color &lt;span class="m"&gt;3&lt;/span&gt;f
&lt;span class="c"&gt;:: 使用COLOR命令对控制台输出颜色进行更改&lt;/span&gt;
mode con cols&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;56&lt;/span&gt; lines&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;20&lt;/span&gt;
&lt;span class="c"&gt;:: MODE语句为设定窗体的宽和高&lt;/span&gt;

&lt;span class="nl"&gt;:sc_main&lt;/span&gt;
&lt;span class="k"&gt;echo&lt;/span&gt;       -------------------------------------------
&lt;span class="k"&gt;echo&lt;/span&gt;.&amp;amp;&lt;span class="k"&gt;echo&lt;/span&gt;.
&lt;span class="k"&gt;echo&lt;/span&gt;             &lt;span class="m"&gt;0&lt;/span&gt;.&lt;span class="m"&gt;192&lt;/span&gt;.&lt;span class="m"&gt;168&lt;/span&gt;.&lt;span class="m"&gt;154&lt;/span&gt;.&lt;span class="m"&gt;29&lt;/span&gt; &amp;amp; &lt;span class="k"&gt;echo&lt;/span&gt;.
&lt;span class="k"&gt;echo&lt;/span&gt;             &lt;span class="m"&gt;1&lt;/span&gt;.&lt;span class="m"&gt;132&lt;/span&gt;.&lt;span class="m"&gt;114&lt;/span&gt;.&lt;span class="m"&gt;154&lt;/span&gt;.&lt;span class="m"&gt;29&lt;/span&gt; &amp;amp; &lt;span class="k"&gt;echo&lt;/span&gt;.
&lt;span class="k"&gt;echo&lt;/span&gt;             q.退出 &amp;amp; &lt;span class="k"&gt;echo&lt;/span&gt;.&amp;amp;&lt;span class="k"&gt;echo&lt;/span&gt;.&amp;amp;&lt;span class="k"&gt;echo&lt;/span&gt;.&amp;amp;&lt;span class="k"&gt;echo&lt;/span&gt;.&amp;amp;&lt;span class="k"&gt;echo&lt;/span&gt;.&amp;amp;&lt;span class="k"&gt;echo&lt;/span&gt;.
&lt;span class="k"&gt;set&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;select=&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;set&lt;/span&gt; &lt;span class="n"&gt;/p&lt;/span&gt; select&lt;span class="o"&gt;=&lt;/span&gt;              输入数字，按回车继续 :
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;%select%&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;0&amp;quot;&lt;/span&gt; (&lt;span class="k"&gt;goto&lt;/span&gt; &lt;span class="nl"&gt;sc_ip0&lt;/span&gt;) 
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;%select%&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt; (&lt;span class="k"&gt;goto&lt;/span&gt; &lt;span class="nl"&gt;sc_ip1&lt;/span&gt;) 
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;%select%&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Q&amp;quot;&lt;/span&gt; (&lt;span class="k"&gt;goto&lt;/span&gt; &lt;span class="nl"&gt;sc_exit&lt;/span&gt;)

&lt;span class="nl"&gt;:sc_exit&lt;/span&gt;
exit
&lt;span class="k"&gt;goto&lt;/span&gt; &lt;span class="nl"&gt;:eof&lt;/span&gt;

&lt;span class="nl"&gt;:sc_ip0&lt;/span&gt;
&lt;span class="k"&gt;cls&lt;/span&gt;
&lt;span class="k"&gt;echo&lt;/span&gt; 正在设置中，请稍候
Netsh interface IP &lt;span class="k"&gt;Set&lt;/span&gt; &lt;span class="nv"&gt;Address&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;本地连接&amp;quot;&lt;/span&gt; Static &lt;span class="m"&gt;192&lt;/span&gt;.&lt;span class="m"&gt;168&lt;/span&gt;.&lt;span class="m"&gt;154&lt;/span&gt;.&lt;span class="m"&gt;29&lt;/span&gt; &lt;span class="m"&gt;255&lt;/span&gt;.&lt;span class="m"&gt;255&lt;/span&gt;.&lt;span class="m"&gt;255&lt;/span&gt;.&lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;192&lt;/span&gt;.&lt;span class="m"&gt;168&lt;/span&gt;.&lt;span class="m"&gt;154&lt;/span&gt;.&lt;span class="m"&gt;250&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; 
netsh interface ip &lt;span class="k"&gt;set&lt;/span&gt; &lt;span class="nv"&gt;dns&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;本地连接&amp;quot;&lt;/span&gt; static &lt;span class="m"&gt;8&lt;/span&gt;.&lt;span class="m"&gt;8&lt;/span&gt;.&lt;span class="m"&gt;8&lt;/span&gt;.&lt;span class="m"&gt;8&lt;/span&gt;
netsh interface ip add dns &lt;span class="s2"&gt;&amp;quot;本地连接&amp;quot;&lt;/span&gt; &lt;span class="m"&gt;8&lt;/span&gt;.&lt;span class="m"&gt;8&lt;/span&gt;.&lt;span class="m"&gt;4&lt;/span&gt;.&lt;span class="m"&gt;4&lt;/span&gt;
&lt;span class="k"&gt;echo&lt;/span&gt; 成功设置外网&lt;span class="m"&gt;192&lt;/span&gt;.&lt;span class="m"&gt;168&lt;/span&gt;.&lt;span class="m"&gt;154&lt;/span&gt;.&lt;span class="m"&gt;29&lt;/span&gt;
&lt;span class="k"&gt;PAUSE&lt;/span&gt; &lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;nul&lt;/span&gt;
&lt;span class="k"&gt;Goto&lt;/span&gt; &lt;span class="nl"&gt;sc_main&lt;/span&gt;

&lt;span class="nl"&gt;:sc_ip1&lt;/span&gt;
&lt;span class="k"&gt;cls&lt;/span&gt;
&lt;span class="k"&gt;echo&lt;/span&gt; 正在设置中，请稍候
netsh interface IP &lt;span class="k"&gt;Set&lt;/span&gt; &lt;span class="nv"&gt;Address&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;本地连接&amp;quot;&lt;/span&gt; Static &lt;span class="m"&gt;132&lt;/span&gt;.&lt;span class="m"&gt;114&lt;/span&gt;.&lt;span class="m"&gt;154&lt;/span&gt;.&lt;span class="m"&gt;29&lt;/span&gt; &lt;span class="m"&gt;255&lt;/span&gt;.&lt;span class="m"&gt;255&lt;/span&gt;.&lt;span class="m"&gt;255&lt;/span&gt;.&lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;132&lt;/span&gt;.&lt;span class="m"&gt;114&lt;/span&gt;.&lt;span class="m"&gt;154&lt;/span&gt;.&lt;span class="m"&gt;250&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; 
netsh interface ip &lt;span class="k"&gt;set&lt;/span&gt; &lt;span class="nv"&gt;dns&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;本地连接&amp;quot;&lt;/span&gt; static &lt;span class="m"&gt;8&lt;/span&gt;.&lt;span class="m"&gt;8&lt;/span&gt;.&lt;span class="m"&gt;8&lt;/span&gt;.&lt;span class="m"&gt;8&lt;/span&gt;
netsh interface ip add dns &lt;span class="s2"&gt;&amp;quot;本地连接&amp;quot;&lt;/span&gt; &lt;span class="m"&gt;8&lt;/span&gt;.&lt;span class="m"&gt;8&lt;/span&gt;.&lt;span class="m"&gt;4&lt;/span&gt;.&lt;span class="m"&gt;4&lt;/span&gt;
&lt;span class="k"&gt;echo&lt;/span&gt; 成功设置内网 &lt;span class="m"&gt;132&lt;/span&gt;.&lt;span class="m"&gt;114&lt;/span&gt;.&lt;span class="m"&gt;154&lt;/span&gt;.&lt;span class="m"&gt;29&lt;/span&gt;
&lt;span class="k"&gt;PAUSE&lt;/span&gt; &lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;nul&lt;/span&gt;
&lt;span class="k"&gt;Goto&lt;/span&gt; &lt;span class="nl"&gt;sc_main&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Mon, 16 Dec 2013 16:07:00 +0800</pubDate><guid>tag:typecodes.com,2013-12-16:mix/batchginterandextnalnetwork.html</guid><category>cmd</category><category>批处理</category><category>内外网ip切换</category></item><item><title>批处理文件（.bat）的写法——DOS命令大全</title><link>https://typecodes.com/mix/dosbatmethod.html</link><description>&lt;p&gt;最近看了下cmd命令，发觉有些用起来挺方便的。于是决定把这些DOS命令整理出来，方便以后写.bat批处理文件。&lt;/p&gt;


&lt;h5&gt;1 先来看看.cmd，.bat是什么：&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="na"&gt;.bat&lt;/span&gt;&lt;span class="err"&gt;是&lt;/span&gt;&lt;span class="no"&gt;dos&lt;/span&gt;&lt;span class="err"&gt;下的批处理文件；&lt;/span&gt;
&lt;span class="na"&gt;.cmd&lt;/span&gt;&lt;span class="err"&gt;是&lt;/span&gt;&lt;span class="no"&gt;nt&lt;/span&gt;&lt;span class="err"&gt;内核命令行环境的另一种批处理文件；&lt;/span&gt;

&lt;span class="err"&gt;因此，二者是没有本质区别。从更广义的角度来看，&lt;/span&gt;&lt;span class="nf"&gt;unix&lt;/span&gt;&lt;span class="err"&gt;的&lt;/span&gt;&lt;span class="no"&gt;shell&lt;/span&gt;&lt;span class="err"&gt;脚本以及其它操作系统甚至应用程序中由外壳进行解释执行的文本，都具有与批处理文件十分相似的作用，而且同样是由专用解释器以行为单位解释执行，这种文本形式更通用的称谓是脚本语言。&lt;/span&gt;

&lt;span class="err"&gt;所以从某个程度分析，&lt;/span&gt;&lt;span class="nf"&gt;batch&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;unixshell&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;awk&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;basic&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;perl&lt;/span&gt;&lt;span class="err"&gt;等脚本语言都是一样的，只不过应用的范围和解释的平台各有不同而已。甚至有些应用程序仍然沿用批处理这一称呼，而其内容和扩展名与&lt;/span&gt;&lt;span class="no"&gt;dos&lt;/span&gt;&lt;span class="err"&gt;的批处理却又完全不同。&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;接下来就是vfhky整理的DOS命令了。第一部分比较常用，第二部分用的不多。有了这些基本的DOS命令，那么写简单的.bat批处理文件也就不难了（实例见下篇文章用.bat批处理文件实现内外网多IP切换）。&lt;/p&gt;
&lt;h5&gt;2 第一部分：常用的DOS命令&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="err"&gt;@，屏幕不显示当前行的&lt;/span&gt;&lt;span class="n"&gt;DOS&lt;/span&gt;&lt;span class="err"&gt;命令&lt;/span&gt;

&lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="n"&gt;off&lt;/span&gt;&lt;span class="err"&gt;，屏幕不显示&lt;/span&gt;&lt;span class="n"&gt;bat&lt;/span&gt;&lt;span class="err"&gt;文件中所有的命令行&lt;/span&gt;

&lt;span class="n"&gt;dir&lt;/span&gt; &lt;span class="nl"&gt;d&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;filelist&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt;&lt;span class="err"&gt;，将&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="err"&gt;盘文件列表写入&lt;/span&gt;&lt;span class="n"&gt;filelist&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt;&lt;span class="err"&gt;中&lt;/span&gt;

&lt;span class="n"&gt;cls&lt;/span&gt;&lt;span class="err"&gt;，清除显示器屏幕上的内容，使&lt;/span&gt;&lt;span class="n"&gt;DOS&lt;/span&gt;&lt;span class="err"&gt;提示符到屏幕左上角&lt;/span&gt;

&lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="err"&gt;，设置控制台前景和背景颜色。具体可以在&lt;/span&gt;&lt;span class="n"&gt;cmd&lt;/span&gt;&lt;span class="err"&gt;下用“&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt; &lt;span class="o"&gt;/?&lt;/span&gt;&lt;span class="err"&gt;”查询&lt;/span&gt;

&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="err"&gt;，设置控制台窗口的标题。默认为“&lt;/span&gt;&lt;span class="n"&gt;cmd&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;

&lt;span class="n"&gt;cd&lt;/span&gt;&lt;span class="err"&gt;，英文&lt;/span&gt;&lt;span class="n"&gt;change&lt;/span&gt; &lt;span class="n"&gt;directory&lt;/span&gt;&lt;span class="err"&gt;的缩写（切换目录）。例如&lt;/span&gt;&lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="nl"&gt;d&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;sybase&lt;/span&gt;&lt;span class="err"&gt;，进入&lt;/span&gt;&lt;span class="n"&gt;sybase&lt;/span&gt;&lt;span class="err"&gt;目录&lt;/span&gt;

&lt;span class="n"&gt;md&lt;/span&gt;&lt;span class="err"&gt;，英文&lt;/span&gt;&lt;span class="n"&gt;make&lt;/span&gt; &lt;span class="n"&gt;directory&lt;/span&gt;&lt;span class="err"&gt;的缩写（创建目录。例如&lt;/span&gt;&lt;span class="n"&gt;md&lt;/span&gt; &lt;span class="nl"&gt;c&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="mi"&gt;123&lt;/span&gt;

&lt;span class="n"&gt;rd&lt;/span&gt;&lt;span class="err"&gt;，英文&lt;/span&gt;&lt;span class="n"&gt;remove&lt;/span&gt; &lt;span class="n"&gt;directory&lt;/span&gt;&lt;span class="err"&gt;的缩写（删除目录）。例如&lt;/span&gt;&lt;span class="n"&gt;rd&lt;/span&gt; &lt;span class="nl"&gt;c&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="mi"&gt;123&lt;/span&gt;

&lt;span class="n"&gt;del&lt;/span&gt;&lt;span class="err"&gt;，英文&lt;/span&gt;&lt;span class="k"&gt;delete&lt;/span&gt;&lt;span class="err"&gt;的缩写（删除）。用于删除指定磁盘、目录中的一个或一组文件，例如&lt;/span&gt;&lt;span class="n"&gt;del&lt;/span&gt; &lt;span class="nl"&gt;D&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;gvim&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exe&lt;/span&gt;

&lt;span class="n"&gt;ren&lt;/span&gt;&lt;span class="err"&gt;，英文&lt;/span&gt;&lt;span class="n"&gt;rename&lt;/span&gt;&lt;span class="err"&gt;的缩写（重新命名）。用于对指定磁盘、目录中的一个文件或一组文件更改名称，&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;格式&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;ren&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nl"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:][&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="n"&gt;filename1&lt;/span&gt;&lt;span class="p"&gt;[.&lt;/span&gt;&lt;span class="n"&gt;ext&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;filename2&lt;/span&gt;&lt;span class="p"&gt;[.&lt;/span&gt;&lt;span class="n"&gt;ext&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="err"&gt;，显示和设置&lt;/span&gt;&lt;span class="n"&gt;DOS&lt;/span&gt;&lt;span class="err"&gt;的系统时间。&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;格式&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;hh&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;mm&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;ss&lt;/span&gt;&lt;span class="p"&gt;[.&lt;/span&gt;&lt;span class="n"&gt;cc&lt;/span&gt;&lt;span class="p"&gt;]]]&lt;/span&gt;

&lt;span class="n"&gt;date&lt;/span&gt;&lt;span class="err"&gt;，显示和设置&lt;/span&gt;&lt;span class="n"&gt;DOS&lt;/span&gt;&lt;span class="err"&gt;的系统日期。&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;格式&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;date&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;MM&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;DD&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;YY&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="err"&gt;，表示参数（在运行批处理文件时在文件名后加的字符串，例如&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="err"&gt;、&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="err"&gt;等）；&lt;/span&gt;

&lt;span class="nf"&gt;%var&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="err"&gt;，变量&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="err"&gt;；&lt;/span&gt;

&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="err"&gt;，它与&lt;/span&gt;&lt;span class="n"&gt;echo&lt;/span&gt;&lt;span class="err"&gt;连用构成“&lt;/span&gt;&lt;span class="n"&gt;echo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="err"&gt;”，作用是换行；&lt;/span&gt;

&lt;span class="n"&gt;call&lt;/span&gt;&lt;span class="err"&gt;，用于从一个批处理程序调用另一个批处理程序，而不终止父批处理程序。例如：&lt;/span&gt;&lt;span class="n"&gt;call&lt;/span&gt; &lt;span class="nl"&gt;d&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bat&lt;/span&gt;&lt;span class="err"&gt;；&lt;/span&gt;

&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="k"&gt;goto&lt;/span&gt; &lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="err"&gt;，跳转到“&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="err"&gt;”标签处；&lt;/span&gt;

&lt;span class="n"&gt;rem&lt;/span&gt;&lt;span class="err"&gt;，注释命令，相当于“&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="err"&gt;”命令；&lt;/span&gt;

&lt;span class="n"&gt;pause&lt;/span&gt;&lt;span class="err"&gt;，暂停命令。运行时，将显示下面的文字：&lt;/span&gt; 
&lt;span class="n"&gt;Press&lt;/span&gt; &lt;span class="n"&gt;any&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="k"&gt;continue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="p"&gt;.(&lt;/span&gt;&lt;span class="err"&gt;或者：请按任意键继续&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="p"&gt;.)&lt;/span&gt;
&lt;span class="n"&gt;pause&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;nul&lt;/span&gt;&lt;span class="err"&gt;的作用是同样的，区别是不显示“请按任意键继续&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;

&lt;span class="n"&gt;set&lt;/span&gt;&lt;span class="err"&gt;，显示、设置或删除变量。有三种基本格式：&lt;/span&gt;&lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="err"&gt;表达式；&lt;/span&gt;&lt;span class="n"&gt;SET&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;variable&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;&lt;span class="err"&gt;；&lt;/span&gt;&lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="n"&gt;variable&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;promptString&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="err"&gt;（&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;号右边的&lt;/span&gt;&lt;span class="n"&gt;promptString&lt;/span&gt;&lt;span class="err"&gt;是提示语&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="err"&gt;不是变量的值）。&lt;/span&gt;

&lt;span class="n"&gt;type&lt;/span&gt;&lt;span class="err"&gt;，文本输出命令；&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;3 第二部分：相对用的少的DOS命令&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;start，调用外部程序。例如start &amp;quot;&amp;quot; &amp;quot;d:\gvim.exe&amp;quot;

format，磁盘格式化命令。[格式] [C:][path]format drive:[/S]

discopy，磁盘复制，即复制出一个和原来磁盘内容一模一样的磁盘。[格式] diskcopy　源驱动器名　目的驱动器名

deltree， 删除目录树（将整个指定目录树全部消灭，而不管它是否是只读、隐藏与否。）。[格式] [C:][path]DELTREE [C1:][path1] [[C2:][path2] […]]

mem，英文memory的缩写，用来查看计算机内存大小以及内存的使用情况。[格式] 直接键入mem命令

chkdsk，英文check disk的缩写，用来检查你的磁盘的使用情况。[格式] chkdsk　磁盘名

find，搜索命令。用于在文件中搜索特定字符串。例如：
type a.txt | find &amp;quot;黄克业的博客&amp;quot; &lt;span class="err"&gt;&amp;amp;&amp;amp;&lt;/span&gt; echo &amp;quot;麻辣的视界&amp;quot; 。
该命令会在a.txt中搜索“黄克业的博客”，如果存在该内容，就会输出“麻辣的视界”。

&amp;gt;、&amp;gt;&amp;gt;
二者都是输出重定向命令，即把前面命令的流文字重定向写入到一个文件中。二者的唯一区别是，&amp;gt;命令在清除掉原有文件中的内容后才把新的内容写入原文件，而&amp;gt;&amp;gt;命令会另起一行把新的内容追加到原文件中。

&lt;span class="err"&gt;&amp;lt;&lt;/span&gt;、&amp;gt;&lt;span class="err"&gt;&amp;amp;&lt;/span&gt;、&lt;span class="err"&gt;&amp;lt;&amp;amp;&lt;/span&gt; ：三个管道命令（不常用）
&lt;span class="err"&gt;&amp;lt;&lt;/span&gt;，输入重定向命令。即从文件中读入命令输入，而不是从键盘中读入。  
&amp;gt;&lt;span class="err"&gt;&amp;amp;&lt;/span&gt;，将一个句柄的输出写入到另一个句柄的输入中。
&lt;span class="err"&gt;&amp;lt;&amp;amp;&lt;/span&gt;，刚好和&amp;gt;&lt;span class="err"&gt;&amp;amp;&lt;/span&gt;相反，从一个句柄读取输入并将其写入到另一个句柄输出中。

&lt;span class="err"&gt;&amp;amp;&lt;/span&gt;，组合连接命令。即它可以连接n个DOS命令，然后按顺序执行，并且会忽略执行失败的命令。

&lt;span class="err"&gt;&amp;amp;&amp;amp;&lt;/span&gt; ，组合连接命令。它可以把它前后两个命令组合起来当一个命令来用。但是和&lt;span class="err"&gt;&amp;amp;&lt;/span&gt;命令不同的是，&lt;span class="err"&gt;&amp;amp;&amp;amp;&lt;/span&gt;会检测是否有执行出错的命令，一旦发现出错后将不继续执行剩下的命令。

|，作用是让前一命令的输出当做后一命令的输入。

|| ，用法和&lt;span class="err"&gt;&amp;amp;&amp;amp;&lt;/span&gt;几乎一样，但作用恰恰相反：当遇到一个执行正确的命令时，就退出此命令组合，不再继续执行下面的命令。

at，列出在指定的时间和日期在计算机上运行的已计划命令或计划命令和程序，例如at 12:00 “d:\abc.bat”。
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Tue, 26 Nov 2013 23:14:00 +0800</pubDate><guid>tag:typecodes.com,2013-11-26:mix/dosbatmethod.html</guid><category>cmd</category><category>批处理</category></item><item><title>Sybase客户端打开SQL Advantage 12.5.1报错：Internal failure while initializing SQL Advantage(二)</title><link>https://typecodes.com/database/sqladvatage12internalfailuretwo.html</link><description>&lt;h5&gt;1 打开SQL Advantage报错：Internal failure while initializing SQL Advantage&lt;/h5&gt;
&lt;p&gt;在sybase官方论坛上找到了两个比较有代表性的提问。二者共同的特点就是之前安装的都是SQL Advantage 11.5.1.3的版本，然后想使用12.5.1的版本（博主只装了12.5.1）。在安装好这两个客户端后，打开SQL Advantage就会报错。根据这两个提问并结合自己的理解，列出解决该问题的参考方法：&lt;/p&gt;


&lt;h5&gt;2.1 提问1：SQL Advantage 12.5.1 and OC 12&lt;/h5&gt;
&lt;p&gt;提问原地址：&lt;a href="http://nntp-archive.sybase.com/nntp-archive/action/article/%3C416bbf95.6ed.1681692777@sybase.com%3E"&gt;点击查看&lt;/a&gt;。大致的意思就是：之前安装了Open Client 12和SQL Advantage 11.5.1.3 ，由于想要使用最新的SQL Advantage 12.5.1，于是从另外一台电脑上直接拷贝过来。但是由于之前11.5.1.3设置的环境变量导致当尝试运行SQL Advantage 12.5.1的时候，都会报错并在sqladv-12_5的文件夹下面产生一个sybinit.err文件。文件内容和vfhky之前博主遇到的不同：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;The context allocation routine failed. 
The following problem caused the failure: 
Invalid context version.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;根据建议：建立一个.bat批处理文件（博主的示例）&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;set SYBASE=D:\Sybase
set SYBASE_OCS=OCS-12_5
D:\Sybase\sqladv-12_5\sqladv.exe
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这样设置好OC客户端的环境变量后，发现拷贝过来的sybase客户端还需要添加charsets、ini、locales文件夹。于是添加这些文件夹，最后测试成功。&lt;/p&gt;
&lt;h5&gt;2.2 提问2：Sybase Central 4.3 and SQL Advantage 12.5&lt;/h5&gt;
&lt;p&gt;提问原地址：&lt;a href="http://nntp-archive.sybase.com/nntp-archive/action/article/%3C4702b054$1@forums-1-dub%3E"&gt;点击查看&lt;/a&gt;。大致的意思就是：之前安装过版本11.5.1.3和12.5.4的SQL Advantage ，每次“Open SQL Advantage”的时候，都会报错“Internal failure while initializing SQL Advantage. Please check that Open Client is configured correctly.”。其根本因是由于之前11.5.1.3的版本中的一些DLLS文件最终未删除还在%windows%\system32目录下，而这个目录在系统环境变量PATH中处于优先地位，因此在搜索支持sqladv.exe的Open Client的函数库文件DLLS时，会优先搜索11.5.1.3的DLLS而不是12.5.4的DLLS文件。&lt;/p&gt;
&lt;p&gt;根据建议：通过调整在dos窗口中输入set命令查看%SYBASE%和%SYBASE_OCS%的选项是否正确，若否则建立一个batch批处理文件（范例见2.1小节），设置好12.5.4的环境变量%SYBASE%和%SYBASE_OCS%的值。博主后来用set命令查看了自己电脑的系统环境变量和用户环境变量。结果如下图所示。&lt;/p&gt;
&lt;p&gt;&lt;img alt="dos窗口中set命令查看环境变量" src="https://o3cex9zsl.qnssl.com/2013/11/cmd.png" title="dos窗口中set命令查看环境变量" /&gt;&lt;/p&gt;
&lt;h5&gt;3 该问题的经验总结&lt;/h5&gt;
&lt;p&gt;关于“Sybase win客户端打开SQL Advantage 12.5.1报错：Internal failure while initializing SQL Advantag”的问题，主要是环境变量的问题引起的。博主的情况是只安装了SQL Advantage12.5.1的版本，而论坛上两位提问者同时安装了11.5和12.5的版本。博主是把系统环境变量PATH中的一个变量写错了（“\”错写成了“/”），而论坛上的是之前11.5版本的SQLAdvantage的环境变量设置优先于版本12.5或者没有正确设置。因此，解决这个问题的关键在于两个地方：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;set命令查看系统中SYBASE的环境变量是否设置正确（若否，使用bat批处理文件或者直接使用set命令设置）；
检查系统环境变量PATH中关于%SYBASE%、%SYBASE_OCS%等是否设置为对应的SYBASE安装路径。
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Sun, 17 Nov 2013 21:31:00 +0800</pubDate><guid>tag:typecodes.com,2013-11-17:database/sqladvatage12internalfailuretwo.html</guid><category>sqladvatage</category><category>sybase internal failure</category></item><item><title>Sybase客户端打开SQL Advantage 12.5.1报错：Internal failure while initializing SQL Advantage(一)</title><link>https://typecodes.com/database/sqladvatage12internalfailureone.html</link><description>&lt;h5&gt;1 打开SQL Advantage报错：Internal failure while initializing SQL Advantage&lt;/h5&gt;
&lt;p&gt;前几天在用sybase win客户端（OC 12.5.1）的时候，遇到了一个问题。每次打开SQL Advantage 12.5.1后，如果强制关闭窗口（例如有时界面卡死强退），那么再次打开就会报错：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Internal failure while initializing SQL Advantage. 
Please check that Open Client is configured correctly.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;正如下图所示，奇怪的是如果这时候重启电脑的话，那么打开SQL Advantage就正常。&lt;/p&gt;
&lt;p&gt;&lt;img alt="sybase客户端打开SQL Advantage 12.5.1报错" src="https://o3cex9zsl.qnssl.com/2013/11/sybase.jpg" title="sybase客户端打开SQL Advantage 12.5.1报错" /&gt;&lt;/p&gt;


&lt;h5&gt;2 查看报错信息：sybinit.err文件&lt;/h5&gt;
&lt;p&gt;正如下图所示，每次初始化SQL Advantage失败后，都会在这个文件中显示：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;The context allocation routine failed when it tried to load localization files!!
One or more following problems may caused the failure。按照文件中的提示，检查了SYBASE的环境变量值确实是D:\sybase，同时在D:\sybase\locales\locales.dat文件中LANG的值也为zh_CN。
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="报错信息sybinit.err文件" src="https://o3cex9zsl.qnssl.com/2013/11/sybinit.err_.png" title="报错信息sybinit.err文件" /&gt;&lt;/p&gt;
&lt;h5&gt;3 猜想：OC客户端产生系统临时文件&lt;/h5&gt;
&lt;p&gt;在GG和BD无果后，寻思为什么SQL Advantage在电脑重启后又能够正常工作？当时“最可能”的猜想就是：在强制关闭前，OC端会产生一些临时文件，保存一些配置信息，电脑关闭后会自动清除这些文件。于是做了一个测试，在报错之后，立马使用CCleaner清理系统文件。然后再次打开SQL Advantage，结果还是报错。猜想失败！！！&lt;/p&gt;
&lt;h5&gt;4 系统环境变量：windows中“/”和“\”&lt;/h5&gt;
&lt;p&gt;折腾了几次，还是没找到方法。大致看了下GG的搜索结果，提到了PATH环境变量。于是查看了下自己的。结果发现关于SYBASE需要的几个配置全部都有而且也都对。认真比较了几次，还是没发现异常。突然发现在PATH配置内容的末尾竟然出现了不和谐因素：“/”。如图所示，这是之前在安装jdk时，配置的环境变量。平常没注意在windows中设置目录要使用“\”，而不是“/”，不然会导致出现找不到路径的错误。于是把PATH变量中的两个“/”改成“\”，然后打开SQL Advantage，竟然正常了！&lt;/p&gt;
&lt;p&gt;&lt;img alt="系统环境变量PATH" src="https://o3cex9zsl.qnssl.com/2013/11/environment.png" title="系统环境变量PATH" /&gt;&lt;/p&gt;
&lt;h5&gt;5 延伸：其它不当配置也会报同样的错误&lt;/h5&gt;
&lt;p&gt;在搞定后，特地上GG搜索了下。其中，sybase官方论坛上的两个提问比较有代表性。限于篇幅，大家可以移步到下一篇文章一起探讨一下：&lt;a href="https://typecodes.com/database/sqladvatage12internalfailuretwo.html" title="《Sybase客户端打开SQL Advantage 12.5.1报错：Internal failure while initializing SQL Advantage(二)》"&gt;《Sybase客户端打开SQL Advantage 12.5.1报错：Internal failure while initializing SQL Advantage(二)》&lt;/a&gt;。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Sun, 17 Nov 2013 20:32:00 +0800</pubDate><guid>tag:typecodes.com,2013-11-17:database/sqladvatage12internalfailureone.html</guid><category>sqladvatage</category><category>sybase internal failure</category></item><item><title>更新GitHub for Windows出错：git command could not be found</title><link>https://typecodes.com/mix/updategithubclienterr.html</link><description>&lt;h5&gt;1 更新Github for Windows&lt;/h5&gt;
&lt;p&gt;前天在用git shell时，发现有新版本。作为“版本控”的我，自然是不会放过了。在升级后，重新打开git shell，竟然显示两个warning：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;警告: git command could not be found. Please create an alias or add it to yourPATH.
警告: Could not find ssh-agent.
&lt;/pre&gt;&lt;/div&gt;




&lt;h5&gt;2 解决方法&lt;/h5&gt;
&lt;p&gt;当时心里就在嘀咕，windows不至于这么弱吧。反复打开和关闭git shell，还是会出现这个问题。输入任何命令都报错“not recognized as the name of a cmdlet”。网上gg了一下，在Stack Overflow找到了答案。解决方法如下三个步骤：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;在更新完Git Shell后，关闭该窗口；
打开GitHub for Windows客户端，然后等待其Extracting更新的文件并进行一些后期安装（如下图所示）；
等待GitHub for Windows后期安装完后，重新打开Git Shell即可。
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="GitHub for Windows客户端安装更新" src="https://o3cex9zsl.qnssl.com/2013/11/GitHub-for-Windows-extracting.jpg" title="GitHub for Windows客户端安装更新" /&gt;&lt;/p&gt;
&lt;h5&gt;3 扯点题外话&lt;/h5&gt;
&lt;p&gt;前段时间都没什么业余时间弄ty的主题，改了m4html几个小地方：站内搜索、评论框、侧栏和文章归档等。另有几个蛋疼的地方：界面调整（css和js的增改）、二级目录（ty遗憾不支持）、router设置、wp数据移植（貌似测试发现有点问题）。目前这个主题弄在bae上，大家可以上去看看提个建议神马的。好吧，估计主题要慢慢整了；另计划近期把之前这两个wp主题整理到github上。唉，先写到这里了。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Sun, 10 Nov 2013 00:15:00 +0800</pubDate><guid>tag:typecodes.com,2013-11-10:mix/updategithubclienterr.html</guid><category>github</category></item><item><title>简洁的哲学：从华丽的WordPress转Typecho</title><link>https://typecodes.com/mix/wptoconcisetypecho.html</link><description>&lt;p&gt;前段时间，vfhky还在折腾主题，只为变得更简洁轻快。从12年6月博客建立初，就一直在用Wordpress。优秀的开发团队和强大的社区力量给予了Wordpress强大的生命力。看看各种琳琅满目的主题以及各种功能强劲的插件，你不由得感概这是wp统治的博客帝国。甚者，还有开发人员将其用于企业WEB站点。但是，我还是被简洁的 &lt;a href="http://typecho.org/" title="进入typecho官方网站"&gt;Typecho&lt;/a&gt; 所吸引了……下面是个人愚见，希望和大家探讨一下。&lt;/p&gt;


&lt;h5&gt;1 主观：博客的原始需求&lt;/h5&gt;
&lt;p&gt;为什么要建立一个博客？可能我们会忘记了初衷。我们不是为了在wordpress中折腾各种主题和各种插件，而是为了有个平台让我们做学习笔记、总结心得、分享经验、记录生活！正如Typecho所阐述的那样：typecho想提供这样一个产品，它如同安静的玻璃瓶，简简单单，没有什么花巧的装饰。撰写者只需要考虑往容器里放什么，而不是怎么放。&lt;/p&gt;
&lt;p&gt;&lt;img alt="简洁极致的哲学：typecho" src="https://o3cex9zsl.qnssl.com/2013/10/typecho.png" title="简洁极致的哲学：typecho" /&gt;&lt;/p&gt;
&lt;h5&gt;2 负载能力比较：WordPress和Typecho程序&lt;/h5&gt;
&lt;p&gt;目前，最新的wordpress版本3.61，tar包后体积为3.8M；而最新的Typecho版本0.8，tar包后的体积为278k。二者差距很大，因为WordPress强悍的内部功能（例如编辑器）。但是这些功能对于很多人来说并不一定是必须的，例如vfhky在写博客时都是直接在vim中编辑好然后贴到WordPress后台编辑器的文本框中去，根本没用到其它功能。而Typecho虽然体型小，基本的博客写作功能却是一应俱全。追求精简到极致的php博客代码，能有效减轻对cpu的压力，提高负载能力。WordPress会使用wp_head()等函数钩子进行查询，错综交互，插件越多运行越慢；而Typecho采用PHP5静态技术，使用的是接口，通过静态继承快速传递参数，插件的开启对博客速度影响却微乎其微。因此，整体负载能力Ty还是领先于WP。&lt;/p&gt;
&lt;h5&gt;3 博客功能比较：WordPress和Typecho&lt;/h5&gt;
&lt;p&gt;WordPress毫无疑问是纵多博客程序中功能最为健全和华丽的。不过正如上面所提到的，如果你只想找一个平台，写下你内心的片段，那么Typecho能够完全满足。我想每个程序员可能都有这么一个想法：只想静敲代码，不想夹入任何一个多余的文字。因此，如果只想用文字表达你的态度、分享你的经验、记录生活，那么Typecho绝对是首选；如果想多折腾，打造一个华丽而强大的博客平台，那么WordPress绝对是首选。&lt;/p&gt;
&lt;p&gt;&lt;img alt="最新的WordPress3.6.1程序" src="https://o3cex9zsl.qnssl.com/2013/10/wordpress3.6.1.png" title="最新的WordPress3.6.1程序" /&gt;&lt;/p&gt;
&lt;h5&gt;4 用户群体比较：WordPress和Typecho社区&lt;/h5&gt;
&lt;p&gt;WordPress和Typecho都是开源的PHP博客程序，但WP拥有Ty完全无法企及的用户数量。因此，这也是WordPress蓬勃发展的重要推力。很多WP的问题，只要在谷歌或者百度一搜，立马给出一大堆的解决方案。而小众化的Ty目前还处于“难产”阶段：两年过去了，70组织的开发小组（据说都来自淘宝）还在为升级0.8到2.0版本而奋战。反观WP已经是隔不了几个月就升级一次，看来这也是社区用户群体的数目差距。&lt;/p&gt;
&lt;h5&gt;5 总结比较：WordPressh和Typecho博客&lt;/h5&gt;
&lt;p&gt;正如上面提到的四点，WordPress拥有强大的社区力量和健全的“功能”，而Typecho着重突出优越的负载性能、专注于文章内容写作，实实在在的一个简洁的博客程序。因此，根据自身情况，vfhky决定从华丽的WordPress转向简洁的Typecho（目前还在本地进行数据迁移和主题测试）。最后，在github上，静待70的Ty2.0……&lt;/p&gt;
&lt;p&gt;&lt;img alt="Typecho在github上的开发进度" src="https://o3cex9zsl.qnssl.com/2013/10/typecho_github.png" title="Typecho在github上的开发进度" /&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Sun, 13 Oct 2013 00:57:00 +0800</pubDate><guid>tag:typecodes.com,2013-10-13:mix/wptoconcisetypecho.html</guid><category>博客成长录</category></item><item><title>博客减负记：wordpress主题的优化</title><link>https://typecodes.com/mix/wpthemeoptimize.html</link><description>&lt;p&gt;主题制作从7月21完成后，基本上没进行什么大的改动了。而且域名从huangkeye.com转到vfhky.sinaapp.com上来后，就一直搭载着360网站卫士。每天都要上360看看博客的安全状况，尤其看到那些被拦截的攻击后心里就特爽。心里就在琢磨着，要是没用360，博客是不是早就挂掉了。不过，用着用着总是有麻烦的。比如，有博友反映博客在很多地方打开奇慢。最令自己烦心的就是每次用联通的网络修改代码，动不动就超时或者2k左右的代码半天提交不了。到9月15左右，博客从.com域名转到.cn域名大概有5个月了，而百度的收录竟然还只是停留在40多篇，很不科学。这跟360卫士CDN逃不了干系，因此在把域名的DNS解析回原主机后，vfhky就打算彻底给博客做个诊断。&lt;/p&gt;


&lt;h5&gt;1 主题：花式繁杂vs简约实用&lt;/h5&gt;
&lt;p&gt;首先从页面的加载速度着手，蜘蛛的耐心也有限呐。很多时候，我和大多博主一样，会在博客功能上下大功夫，追求花式多样的风格。也许这样看着心里觉得特别舒服，多有内涵呐。不过，渐渐地却发现很多功能都是用户不常用或者根本不用的，这样它们就成了无用的摆设，而且还加重了服务器的负担。于是vfhky决定从简出发，给博客减负！简约实用才是王道，而且不浪费资源！&lt;/p&gt;
&lt;h5&gt;2 优化wordpress评论者信息列表&lt;/h5&gt;
&lt;p&gt;之前博客对评论者实行了“等级”制度——根据评论者在博客留言的总数来显示相应的等级图标。这样就造成了每次加载评论信息时，都要查询数据库。于是把这个功能连同博主身份提示图标一同去掉，只显示通过jQuery调用淘宝IP库接口的评论者地理位置信息。&lt;/p&gt;
&lt;p&gt;&lt;img alt="wordpress主题的优化：评论信息列表" src="https://o3cex9zsl.qnssl.com/2013/09/blog_comment_style.png" title="wordpress主题的优化：评论信息列表" /&gt;&lt;/p&gt;
&lt;h5&gt;3 优化wordpress相关文章&lt;/h5&gt;
&lt;p&gt;很多博客的主题都有“相关文章”功能，个人感觉列出的相关文章与原文的“相关程度”不是很高，所以决定一同把这个功能去掉。减少数据库的查询和图片信息的加载。&lt;/p&gt;
&lt;p&gt;&lt;img alt="wordpress主题的优化：相关文章" src="https://o3cex9zsl.qnssl.com/2013/09/blog_related_article.png" title="wordpress主题的优化：相关文章" /&gt;&lt;/p&gt;
&lt;h5&gt;4 优化wordpress评论框&lt;/h5&gt;
&lt;p&gt;主题之前在评论框上玩了一把花哨的功能：用jquery在评论框下加载一个包含“表情”、“颜色”、“代码”、“插图”等功能的工具。不过从前面的评论来看，用户几乎很少用到这些。所以vfhky也决定把它删掉，js文件瞬间减少进0.5k大小。&lt;/p&gt;
&lt;p&gt;&lt;img alt="wordpress主题的优化：评论框" src="https://o3cex9zsl.qnssl.com/2013/09/comment_js_simplefied.png" title="wordpress主题的优化：评论框" /&gt;&lt;/p&gt;
&lt;h5&gt;5 优化wordpress右侧栏的TAB列表&lt;/h5&gt;
&lt;p&gt;之前博客右侧栏加载了两个TAB列表栏，功能相对丰富，包含了大多的文章归类显示方式。但是这个需要多次查询数据库，而且还需加载jQUery代码使这两个TAB菜单列表自动从左向右滚动。考虑到用户的需求，去掉“热门标签”、“博主推荐”等列表，保留了“本季热文”、“读者热评”、“最新文章”、“博客统计”这四个功能，并把它们整合到一个TAB菜单列表中。&lt;/p&gt;
&lt;p&gt;&lt;img alt="wordpress主题的优化：tab列表" src="https://o3cex9zsl.qnssl.com/2013/09/wordpress_tab.gif" title="wordpress主题的优化：tab列表" /&gt;&lt;/p&gt;
&lt;h5&gt;6 优化wordpress的站外Trackback&lt;/h5&gt;
&lt;p&gt;之前在弄主题的时候，就琢磨着这个功能可以方便博客间的交流。不过，现实残忍地标明这个功能已经是wordpress垃圾评论的发源地了。而且站外Trackback也需要服务器去检测你的文章是否被引用了，消耗了资源。因此，通过SQL关闭之前所有文章的Trackback后，再在博客后台设置不启用站外Trackback就解决了这个问题。&lt;/p&gt;
&lt;p&gt;&lt;img alt="wordpress主题的优化：pingback" src="https://o3cex9zsl.qnssl.com/2013/09/blog_pingback.png" title="wordpress主题的优化：pingback" /&gt;&lt;/p&gt;
&lt;h5&gt;7 压缩js和css文件&lt;/h5&gt;
&lt;p&gt;压缩js和css文件对页面的加载速度还是很有帮助的，这里vfhky总结了4个比较好的javascript和css在线压缩网站，希望对大家有用！&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;http://jscompress.com/
http://www.csscompressor.com/
http://www.ostools.net/jscompress
http://tool.css-js.com/
http://javascriptcompressor.com/
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;8 博客减负后记&lt;/h5&gt;
&lt;p&gt;精简的代码，看着舒服；简约的博客，看着同样舒服！从15号到现在，博客从360网站卫士撤回来，然后完成了上面这几个优化，收到了不错的效果。昨天百度收录将近100，快照也更新了。最重要的是每次打开博客速度比以前快了，页面看着也更顺心了！&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Sat, 28 Sep 2013 23:18:00 +0800</pubDate><guid>tag:typecodes.com,2013-09-28:mix/wpthemeoptimize.html</guid><category>wordpress主题优化</category></item><item><title>伟大的淘宝IP库的API接口竟然提示503挂掉了</title><link>https://typecodes.com/mix/taobaoipapi503.html</link><description>&lt;h5&gt;1 淘宝IP库惊现503错误&lt;/h5&gt;
&lt;p&gt;吃完晚饭，大概6点半了，天色已暗，太阳早就落山了。回到宿舍打开博客一看，傻眼了：博客每篇文章的评论者的地理信息全部处于“正在查询中……”的状态。这神马情况，不会是被淘宝封了吧？但是就凭博客这点小流量应该不至于达到QPS小于10的限制吧？难道是js文件加载出错了？检查了一遍还是没问题啊。囧，在万般无奈之际，博主决定简单测试。于是ping了下度娘，得到ip地址123.125.114.144。于是直接用浏览器打开&lt;code&gt;http://ip.taobao.com/service/getIpInfo.php?ip=123.125.114.144&lt;/code&gt;。结果看到下面的画面，小伙伴们惊呆了……&lt;/p&gt;
&lt;p&gt;&lt;img alt="淘宝IP地址库的API接口挂掉了" src="https://o3cex9zsl.qnssl.com/2013/09/taobao_api_503error.png" title="淘宝IP地址库的API接口挂掉了" /&gt;&lt;/p&gt;


&lt;h5&gt;2 新浪IP工具 VS 淘宝IP接口&lt;/h5&gt;
&lt;p&gt;之前写了一篇文章&lt;a href="https://typecodes.com/web/wptaoiplibapitwo.html" title="点击查看原文"&gt;《WordPress使用淘宝IP地址库的API显示评论者的位置信息（二）》&lt;/a&gt;。文章内容是关于如何利用淘宝IP库提供的API接口实现wordpress博客评论者的地理位置显示。在这之前，博客都是用的新浪的tool。虽然说新浪的IP地址库更新得不是很勤快，但是一直都是比较稳定的，而且没有QPS的限制。淘宝这贱货，在9月20号的时候还更新了地址库。尼玛今天就503了，尼玛503之前好歹也给个通知行不行！&lt;/p&gt;
&lt;p&gt;&lt;img alt="淘宝IP地址库最新更新" src="https://o3cex9zsl.qnssl.com/2013/09/taobao_api_renew.png" title="淘宝IP地址库最新更新" /&gt;&lt;/p&gt;
&lt;h5&gt;3 淘宝IP库503错误的理性思考&lt;/h5&gt;
&lt;p&gt;小喷之后咱还是回归理性：WEB503错误是临时的服务器维护或者过载，导致服务器当前无法处理请求。从图中也可以看到“maintenance downtime or capacity problems”的字样。不过看到上面图片底部的“Powered by Tengine”，还是觉得淘宝挺牛的，自己写的服务器程序能处理淘宝帝国这么大的数据交互。唉，这不是咱考虑的事，当务之急是这个接口什么时候能好？不行的话就换新浪的了。小伙伴们，你们怎么看呢？&lt;/p&gt;
&lt;h5&gt;4 Update 20130929 22:16&lt;/h5&gt;
&lt;p&gt;淘宝IP库的API接口已经在9月29日中午11点左右恢复正常。从9月27日下午6时左右算起，此次503错误大概持续了40个小时左右。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Fri, 27 Sep 2013 19:47:00 +0800</pubDate><guid>tag:typecodes.com,2013-09-27:mix/taobaoipapi503.html</guid><category>淘宝ip库</category></item><item><title>再议wordpress反垃圾评论：都是strpos函数惹的祸</title><link>https://typecodes.com/web/wpantispamstrpoerror.html</link><description>&lt;h5&gt;1 strpos函数引起的失误&lt;/h5&gt;
&lt;p&gt;前天写了一篇文章&lt;a href="https://typecodes.com/web/wpantispamblacklist.html" title="wordpress关键词黑名单：反垃圾评论再升级"&gt;《wordpress关键词黑名单：反垃圾评论再升级》&lt;/a&gt;。文章内容是关于如何通过在Willin Kan大神写的comments-ajax.php文件中添加关键词黑名单，实现对评论者的昵称和评论内容进行检测，最终判定是否为垃圾评论。在程序中，博主使用了strpos函数，其功能是：查找字符串首次出现的位置。由于对该函数了解不全，上午 @坏坏博客 童鞋一个邪恶测试，发现了上篇文章代码的BUG。晚上下班回来，仔细看了下代码，发现是自己对strpos函数的片面认识，因此做个笔记Mark一下。&lt;/p&gt;


&lt;h5&gt;2 strpos函数的原型&lt;/h5&gt;
&lt;p&gt;相信大家对strpos函数并不陌生，经常在字符串的处理中能看到它的身影。strpos函数原型是：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;/**&lt;/span&gt;
&lt;span class="c"&gt; * @Para string $source:  在该字符串中进行查找&lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="c"&gt;&lt;/span&gt;
&lt;span class="c"&gt; * @Para mixed $target:  要查找的字符串；如若不是字符串，将被转换为整型并被视为字符的顺序值&lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="c"&gt;&lt;/span&gt;
&lt;span class="c"&gt; * @Para int $offset:  查找的起始位置&lt;/span&gt;
&lt;span class="c"&gt; * @Return int/boolean:  成功则返回第一次出现的位置; 失败返回 FALSE 值&lt;/span&gt;
&lt;span class="c"&gt; */&lt;/span&gt;
 &lt;span class="nt"&gt;int&lt;/span&gt; &lt;span class="nt"&gt;strpos&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;string&lt;/span&gt; &lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="nt"&gt;source&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;mixed&lt;/span&gt; &lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="nt"&gt;target&lt;/span&gt; &lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;int&lt;/span&gt; &lt;span class="nv"&gt;$offset&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;3 strpos函数的简单测试&lt;/h5&gt;
&lt;p&gt;了解了strpos函数的原型之后，我们先来看一段简单的测试代码。&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="x"&gt;/**&lt;/span&gt;
&lt;span class="x"&gt; * @Author：  vfhky 2013年09月21日20:35&lt;/span&gt;
&lt;span class="x"&gt; * @Description:  通过两个不同的测试变量$test_1和$test_2直击关键&lt;/span&gt;
&lt;span class="x"&gt; */&lt;/span&gt;
&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
 &lt;span class="nv"&gt;$words&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;com,cn,info,net,www,http,cc,host,代理,移动,电,国,港,日,购&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
 &lt;span class="nv"&gt;$word&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;explode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;,&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$words&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
 &lt;span class="nv"&gt;$num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;count&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$word&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

 &lt;span class="nv"&gt;$test_1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;购买TT&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
 &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nv"&gt;$num&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;strpos&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$test_1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$word&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)){&lt;/span&gt;
        &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;广告必删，多谢理解!&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;
 &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;----------This is &lt;/span&gt;&lt;span class="si"&gt;$test_1&lt;/span&gt;&lt;span class="s2"&gt; END----------&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

 &lt;span class="nv"&gt;$test_2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;坏坏购买TT&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
 &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nv"&gt;$num&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;strpos&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$test_2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$word&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)){&lt;/span&gt;
        &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;广告必删，多谢理解!&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;
 &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;----------This is &lt;/span&gt;&lt;span class="si"&gt;$test_2&lt;/span&gt;&lt;span class="s2"&gt; END----------&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;测试结果如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img alt="再议wordpress反垃圾评论：都是strpos函数惹的祸" src="https://o3cex9zsl.qnssl.com/2013/09/strpos_test.png" title="再议wordpress反垃圾评论：都是strpos函数惹的祸" /&gt;&lt;/p&gt;
&lt;h5&gt;4 strpos函数的测试结果分析&lt;/h5&gt;
&lt;p&gt;上面这段代码中有两个不同的测试变量$test_1和$test_2，并且二者都包含了黑名单中的关键词：购。但是从图中显示的测试结果来看，$test_1变量没有别有效屏蔽，而变量$test_2却被提示包含广告词。奥秘就在于变量$test_1和$test_2中的“购”字出现的位置就！当关键词“购”出现在最前面时($test_1)，&lt;span class=""&gt;strpos($test_1,$word[$i],0)&lt;/span&gt;函数的执行结果为0，因为“购”字在字符串“购买TT”的最前面。那么for循环中的if语句变成了&lt;span class=""&gt;if(0){}&lt;/span&gt;，从而不会被视为垃圾评论，这就造成了BUG。下面分别是继续用strpos函数和使用PHP正则表达式，两种方法来实现“wordpress关键词黑名单：反垃圾评论再升级”。&lt;/p&gt;
&lt;h6&gt;5.1 正确使用strpos函数修正BUG&lt;/h6&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="x"&gt;/**&lt;/span&gt;
&lt;span class="x"&gt; * @Author：  vfhky 2013年09月24日20:06&lt;/span&gt;
&lt;span class="x"&gt; * @Description:   正确使用strpos函数，解决上一篇文章代码的BUG&lt;/span&gt;
&lt;span class="x"&gt; * @Related article:  https://typecodes.com/web/wpantispamstrpoerror.html&lt;/span&gt;
&lt;span class="x"&gt; */&lt;/span&gt;
&lt;span class="x"&gt; $words = &amp;quot;com,cn,info,net,www,http,cc,host,代理,移动,电,国,港,器,服,医,肥,药,农,信,贷,日,购,播&amp;quot;;&lt;/span&gt;
&lt;span class="x"&gt; $word = explode(&amp;#39;,&amp;#39;, $words);&lt;/span&gt;
&lt;span class="x"&gt; $num = count($word);&lt;/span&gt;
&lt;span class="x"&gt; for($i=0;$i&amp;lt; $num ;$i++){&lt;/span&gt;
&lt;span class="x"&gt;  if ( (strpos($comment_author,$word[$i],0) !== false) || (strpos($comment_content,$word[$i],0) !== false) ){&lt;/span&gt;
&lt;span class="x"&gt;        err( __(&amp;#39;广告必删，多谢理解!&amp;#39;) );&lt;/span&gt;
&lt;span class="x"&gt;        break;&lt;/span&gt;
&lt;span class="x"&gt;  } &lt;/span&gt;
&lt;span class="x"&gt; }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h6&gt;5.2 使用PHP正则表达式修正BUG&lt;/h6&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="x"&gt;/**&lt;/span&gt;
&lt;span class="x"&gt; * @Author：  vfhky 2013年09月24日20:06&lt;/span&gt;
&lt;span class="x"&gt; * @Description:   使用PHP正则表达式修正BUG，实现“wordpress关键词黑名单：反垃圾评论再升级（非插件）”&lt;/span&gt;
&lt;span class="x"&gt; * @Related article:  https://typecodes.com/web/wpantispamstrpoerror.html&lt;/span&gt;
&lt;span class="x"&gt; */&lt;/span&gt;
&lt;span class="x"&gt; $words = &amp;quot;com,cn,info,net,www,http,cc,host,代理,移动,电,国,港,器,服,医,肥,药,农,信,贷,日,购,播&amp;quot;;&lt;/span&gt;
&lt;span class="x"&gt; $word = explode(&amp;#39;,&amp;#39;, $words);&lt;/span&gt;
&lt;span class="x"&gt; $num = count($word);&lt;/span&gt;
&lt;span class="x"&gt; for($i=0;$i&amp;lt; $num ;$i++){&lt;/span&gt;
&lt;span class="x"&gt;  if( preg_match(&amp;quot;/$word[$i]/i&amp;quot;, $comment_author) || preg_match(&amp;quot;/$word[$i]/i&amp;quot;, $comment_content) ){&lt;/span&gt;
&lt;span class="x"&gt;        err( __(&amp;#39;广告必删，多谢理解!&amp;#39;) );&lt;/span&gt;
&lt;span class="x"&gt;        break;&lt;/span&gt;
&lt;span class="x"&gt;  } &lt;/span&gt;
&lt;span class="x"&gt; }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h5&gt;6 函数strpos的重要提醒&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;使用strpos函数还需要注意的一点就是：它可能返回布尔值 FALSE，但也可能返回等同于 FALSE 的非布尔值。
例如返回整型0，浮点型值0.0，空字符串，字符串 &amp;quot;0&amp;quot;，不包括任何元素的数组，不包括任何成员变量的对象，特殊类型NULL等等。
因此，应使用会检查返回的值的类型的恒等运算符“===”来测试此函数的返回值，而不是使用简单的等号“==”来判别。
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;7Update 2013.09.26 22:27&lt;/h5&gt;
&lt;p&gt;经过 @星河大帝 的提醒，可以使用数组来代替字符串，执行效率应该差不多。&lt;/p&gt;
&lt;h6&gt;7.1 使用strpos函数+数组修正BUG&lt;/h6&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6
7
8&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="x"&gt;$words = array(&amp;quot;com&amp;quot;,&amp;quot;cn&amp;quot;,&amp;quot;info&amp;quot;,&amp;quot;net&amp;quot;,&amp;quot;www&amp;quot;,&amp;quot;http&amp;quot;,&amp;quot;cc&amp;quot;,&amp;quot;host&amp;quot;,&amp;quot;代理&amp;quot;,&amp;quot;移动&amp;quot;,&amp;quot;电&amp;quot;,&amp;quot;国&amp;quot;,&amp;quot;港&amp;quot;,&amp;quot;购&amp;quot;);&lt;/span&gt;
&lt;span class="x"&gt;$num = count($words);&lt;/span&gt;
&lt;span class="x"&gt;for($i=0;$i&amp;lt; $num ;$i++){&lt;/span&gt;
&lt;span class="x"&gt;    if (strpos($comment_author,$words[$i],0) !== false || strpos($comment_content,$words[$i],0) !== false){&lt;/span&gt;
&lt;span class="x"&gt;        err( __(&amp;#39;广告必删，多谢理解!&amp;#39;) );&lt;/span&gt;
&lt;span class="x"&gt;        break;&lt;/span&gt;
&lt;span class="x"&gt;    }&lt;/span&gt;
&lt;span class="x"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h6&gt;7.2 使用正则式+数组修正BUG&lt;/h6&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6
7
8&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="x"&gt;$words = array(&amp;quot;com&amp;quot;,&amp;quot;cn&amp;quot;,&amp;quot;info&amp;quot;,&amp;quot;net&amp;quot;,&amp;quot;www&amp;quot;,&amp;quot;http&amp;quot;,&amp;quot;cc&amp;quot;,&amp;quot;host&amp;quot;,&amp;quot;代理&amp;quot;,&amp;quot;移动&amp;quot;,&amp;quot;电&amp;quot;,&amp;quot;国&amp;quot;,&amp;quot;港&amp;quot;,&amp;quot;购&amp;quot;);&lt;/span&gt;
&lt;span class="x"&gt;$num = count($words);&lt;/span&gt;
&lt;span class="x"&gt;    for($i=0;$i&amp;lt; $num ;$i++){&lt;/span&gt;
&lt;span class="x"&gt;        if( preg_match(&amp;quot;/$words[$i]/i&amp;quot;, $comment_author) || preg_match(&amp;quot;/$words[$i]/i&amp;quot;, $comment_content) ){&lt;/span&gt;
&lt;span class="x"&gt;            err( __(&amp;#39;广告必删，多谢理解!&amp;#39;) );&lt;/span&gt;
&lt;span class="x"&gt;            break;&lt;/span&gt;
&lt;span class="x"&gt;    }&lt;/span&gt;
&lt;span class="x"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Tue, 24 Sep 2013 22:24:00 +0800</pubDate><guid>tag:typecodes.com,2013-09-24:web/wpantispamstrpoerror.html</guid><category>wordpress垃圾评论</category></item><item><title>wordpress关键词黑名单：反垃圾评论再升级（非插件）</title><link>https://typecodes.com/web/wpantispamblacklist.html</link><description>&lt;h5&gt;1 老话题：wordpress垃圾评论&lt;/h5&gt;
&lt;p&gt;wordpress垃圾评论由来已久，在各位博主的有力反抗下，垃圾评论完成了一次又一次的升级。对wp新手来说，肯定不会想到自己的博客会被spam盯上。甚至还可能真认为是某老外关顾了自己的文章（博主曾经就二逼的用英文回复过）。等垃圾评论越来越多时，才仿然大悟。对于一些用wp时间也比较长的博主来说，一些与文章话题无关的评论也是很烦人。为了增强wordpress免疫力，尽量从根源上解决wordpress博客中的垃圾评论，博主也不能闲着，下面就贡献小小的一份力量。&lt;/p&gt;


&lt;h5&gt;2 博主的反wordpress垃圾评论历程&lt;/h5&gt;
&lt;p&gt;1、博客刚建立时，用的是wordpress垃圾评论屏蔽神器——Akismet，确实效果很好；&lt;/p&gt;
&lt;p&gt;2、不过后来由于博主对插件不太看好，所以就改用了Willin Kan写的非插件的方法，效果也是挺不错的，就是代码量稍微有点大。具体大家可以参考一下：&lt;a href="https://typecodes.com/web/antiwpspamplugorno.html" title="屏蔽wordpress垃圾评论的方法（插件和非插件）"&gt;《屏蔽wordpress垃圾评论的方法（插件和非插件）》&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;3、之后没用Willin Kan的小墻工具了，直接使用验证码，发觉挺管用的。详见文章&lt;a href="https://typecodes.com/web/againwpmathverifycode.html" title="博客优化第二波(三)：wordpress评论添加算术验证码"&gt;《博客优化第二波(三)：wordpress评论添加算术验证码》&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;4、启用这个新主题后，集成 “访问安全提示” 和 “网站安全认证” 的功能，效果也不错。详见文章&lt;a href="https://typecodes.com/mix/commentlinksitecertification.html" title="关于博客评论的链接审查、网站认证的声明"&gt;《关于博客评论的链接审查、网站认证的声明》&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;5、最近设置无Gravatar头像的用户无法提交评论，大家反馈意见不一。详见文章：&lt;a href="https://typecodes.com/web/wplimitnogravatar.html" title="wordpress中限制没有Gravatar头像的访客提交评论"&gt;《wordpress中限制没有Gravatar头像的访客提交评论》&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;6、昨天再次升级防护，新增用户昵称、评论内容提交时的黑名单中的关键词验证。也是本篇文章的主题，下面是具体的实现代码。&lt;/p&gt;
&lt;h5&gt;3 修改主题comments-ajax.php文件&lt;/h5&gt;
&lt;p&gt;在主题目录下的comments-ajax.php文件中，大概60行左右的位置（刚取得用户提交的评论表单中的$_POST['author']等字段）。然后在该文件中加上下面的代码：&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="x"&gt;/*&lt;/span&gt;
&lt;span class="x"&gt; * @Author：  vfhky 2013年09月21日22:13&lt;/span&gt;
&lt;span class="x"&gt; * @Variable string $word:  黑名单中的关键词，用户可自行按规律进行增加或减少&lt;/span&gt;
&lt;span class="x"&gt; * @Variable string $comment_author:  用户提交的$_POST[&amp;#39;author&amp;#39;]字段值，表示昵称&lt;/span&gt;
&lt;span class="x"&gt; * @Variable string $comment_content:  用户提交的$_POST[&amp;#39;comment&amp;#39;]字段值，表示评论内容&lt;/span&gt;
&lt;span class="x"&gt; **/&lt;/span&gt;
&lt;span class="x"&gt;$words = &amp;quot;com,cn,info,net,www,http,cc,host,代理,移动,电,国,港,器,服,医,肥,药,农,信,贷,日,盈,网,票,域,销,黄,司,企,机,租,人,钱,设,购,播&amp;quot;;&lt;/span&gt;
&lt;span class="x"&gt;$word = explode(&amp;#39;,&amp;#39;, $words);&lt;/span&gt;
&lt;span class="x"&gt;$num = count($word);&lt;/span&gt;
&lt;span class="x"&gt;for($i=0;$i&amp;lt; $num ;$i++){&lt;/span&gt;
&lt;span class="x"&gt;   if (strpos($comment_author,$word[$i],0) || strpos($comment_content,$word[$i],0)){&lt;/span&gt;
&lt;span class="x"&gt;       err( __(&amp;#39;广告必删，多谢理解!&amp;#39;) );&lt;/span&gt;
&lt;span class="x"&gt;       break;&lt;/span&gt;
&lt;span class="x"&gt;   } &lt;/span&gt;
&lt;span class="x"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h5&gt;4 后记&lt;/h5&gt;
&lt;p&gt;通过上面这段简单代码，我们就实现了提交对评论输入的用户昵称、评论内容进行了黑名单中的关键词的校验。一旦匹配到了上面的任何一个词语，例如出现了www，那么就提示用户“广告必删，多谢理解!”，效果如下图所示。这样算是又给博客上了一道保险，增强了wordpress反垃圾评论的免疫力，而且还是非插件的方法实现的哟！&lt;/p&gt;
&lt;p&gt;&lt;img alt="wordpress关键词黑名单：反垃圾评论再升级（非插件）" src="https://o3cex9zsl.qnssl.com/2013/09/badwords_comment.png" title="wordpress关键词黑名单：反垃圾评论再升级（非插件）" /&gt;&lt;/p&gt;
&lt;h5&gt;5 BUG修复：Update 2013.09.24 20:20&lt;/h5&gt;
&lt;p&gt;经过 @坏坏博客 童鞋的邪恶回复测试，发现上面代码有未考虑周全之处。正在修改中，具体见下一篇文章&lt;a href="https://typecodes.com/web/wpantispamstrpoerror.html" title="再议wordpress反垃圾评论：都是strpos函数惹的祸"&gt;《再议wordpress反垃圾评论：都是strpos函数惹的祸》&lt;/a&gt;。最后向 @坏坏博客 童鞋致敬！&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Sun, 22 Sep 2013 22:55:00 +0800</pubDate><guid>tag:typecodes.com,2013-09-22:web/wpantispamblacklist.html</guid><category>wordpress垃圾评论</category></item><item><title>PHP+jQuery实现wordpress当前在线人数统计</title><link>https://typecodes.com/web/phpjquerywponlinenum.html</link><description>&lt;h5&gt;1 在线人数统计：插件OR代码&lt;/h5&gt;
&lt;p&gt;如何实现一个web站点的在线人数统计？方法可能有很多，在最开始接触PHP的时候，大家可能会用session保存当前用户的IP地址和时间；也有人把登录用户的IP地址和登录时间保存到数据库中，然后在需要的地方查询数据库得到相应的数据；当然还可以用txt、html等文件来保存用户的IP和最初登录的时间，然后不断读写文件取得数据；最后，还可以用cnzz等统计方代码或者WP插件通过加载javascript脚本显示当前在线人数。&lt;/p&gt;
&lt;h5&gt;2 用PHP+jQuery实现&lt;/h5&gt;
&lt;p&gt;网上搜了下相关的教程，代码基本类似，都是直接通过PHP读写txt文件实现的。博主起初采用这种方法，发现页面加载较之前明显变慢。考虑到不断读写文件对页面速度的影响，博主于是改用jQuery加载的方式实现当前在线人数统计。具体方法如下：&lt;/p&gt;


&lt;h6&gt;2.1 修改主题底部模板footer.php&lt;/h6&gt;
&lt;p&gt;在主题的底部模板（footer.php）中找到需要显示人数统计结果的位置，然后在该文件中加上下面的代码：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;/**
 * @Description:  jQuery异步调用显示节点
 */
&lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;online&amp;#39;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h6&gt;2.2 修改主题头部模板header.php&lt;/h6&gt;
&lt;p&gt;在主题的头部模板（header.php）中找到任意一个js文件，然后在最后加上下面的jQuery代码：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt; * @Description:  jQuery加载统计代码文件countOEUTQ.php&lt;/span&gt;
&lt;span class="cm"&gt; */&lt;/span&gt;
&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;.online&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;load&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;http://vfhky.sinaapp.com/wp-content/themes/vfhky/countOEUTQ.php&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h6&gt;2.3 新建统计代码文件countOEUTQ.php&lt;/h6&gt;
&lt;p&gt;新建一个countOEUTQ.php文件中加入下面的代码，然后把该文件放在2.2步骤中所填写的路径中。&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="x"&gt;/*&lt;/span&gt;
&lt;span class="x"&gt; * @From：  Network &amp;amp;&amp;amp; vfhky 2013年09月17日21:23&lt;/span&gt;
&lt;span class="x"&gt; * @Description:  文本txt保存的单条数据格式类似于 “123.123.123.123,1379769278#”&lt;/span&gt;
&lt;span class="x"&gt; * @return:  输出文本“Online:12”&lt;/span&gt;
&lt;span class="x"&gt; **/&lt;/span&gt;
&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
   &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;HTTP_REFERER&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nb"&gt;strpos&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;HTTP_REFERER&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;HTTP_HOST&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="k"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  &lt;span class="c1"&gt;//如果直接加载本文件则直接退出&lt;/span&gt;
   &lt;span class="nv"&gt;$online_log&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;conutnQudHh0.txt&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  &lt;span class="c1"&gt;//保存数据用，请重命名该文件&lt;/span&gt;
   &lt;span class="nv"&gt;$timeout&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  &lt;span class="c1"&gt;//超时时间，单位秒，越小越精确，但是越耗资源&lt;/span&gt;
   &lt;span class="nv"&gt;$user_arr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="nb"&gt;file_get_contents&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$online_log&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  &lt;span class="c1"&gt;//读取txt文件的全部内容&lt;/span&gt;
   &lt;span class="nv"&gt;$user_arr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;explode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nb"&gt;rtrim&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$user_arr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
   &lt;span class="nv"&gt;$temp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
   &lt;span class="k"&gt;foreach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$user_arr&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nv"&gt;$value&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
      &lt;span class="nv"&gt;$user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;explode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;,&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;trim&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$value&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
      &lt;span class="c1"&gt;//如果为新的IP地址并且txt文件中的时间记录大于当前时间&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;$user&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="nb"&gt;getenv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;REMOTE_ADDR&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$user&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;time&lt;/span&gt;&lt;span class="p"&gt;())){&lt;/span&gt;
         &lt;span class="nb"&gt;array_push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$temp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$user&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;,&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;$user&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
         &lt;span class="nv"&gt;$user_arr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;implode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$temp&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
   &lt;span class="nb"&gt;array_push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$temp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nb"&gt;getenv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;REMOTE_ADDR&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;,&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;time&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nv"&gt;$timeout&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  &lt;span class="c1"&gt;//上面两个getenv(&amp;quot;REMOTE_ADDR&amp;quot;)可以改用更为精确的IP统计变量&lt;/span&gt;
   &lt;span class="nv"&gt;$user_arr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;implode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$temp&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
   &lt;span class="nv"&gt;$fp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;fopen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$online_log&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;w&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="c1"&gt;//更新文件&lt;/span&gt;
   &lt;span class="nb"&gt;flock&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$fp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;LOCK_EX&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  &lt;span class="c1"&gt;//锁定txt文件，直到写入完数据&lt;/span&gt;
   &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="nb"&gt;fputs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$fp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$user_arr&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
   &lt;span class="nb"&gt;flock&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$fp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;LOCK_UN&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  &lt;span class="c1"&gt;//释放锁定&lt;/span&gt;
   &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="nb"&gt;fclose&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;  &lt;span class="c1"&gt;//关闭文件资源&lt;/span&gt;
   &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Online:&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;count&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$temp&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h5&gt;3 后记&lt;/h5&gt;
&lt;p&gt;通过上面的三个步骤，我们就用PHP+jQuery实现了wordpress当前在线人数统计的功能。根据博主自身的体验，相对于直接用PHP读写txt文件，这种方法对页面的载入速度影响小很多。另外，超时变量$timeout不宜过小，否则会给服务器造成较大负荷。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Sat, 21 Sep 2013 22:41:00 +0800</pubDate><guid>tag:typecodes.com,2013-09-21:web/phpjquerywponlinenum.html</guid><category>wordpress在线人数</category></item><item><title>wordpress中限制没有Gravatar头像的访客提交评论</title><link>https://typecodes.com/web/wplimitnogravatar.html</link><description>&lt;h5&gt;1 为何限制没有Gravatar头像的访客&lt;/h5&gt;
&lt;p&gt;前几天博主就一直在想着是否要限制没有gravatar头像的用户在博客留言，主要原因有三点：&lt;/p&gt;
&lt;p&gt;1、博客使用的是wordpress程序，而Gravatar早在07年就被Automattic公司收购并在wp程序上发扬光大。所以，wp博客和gravatar头像天生就是一对，当然要让他们在一起了。&lt;/p&gt;
&lt;p&gt;2、屏蔽广告。很多spamer都是没有gravatar头像的，限制没有gravatar头像的访客就等于过滤掉了相当一部分的垃圾广告。扯远一点，多说插件为众多广告商做出了巨大贡献。&lt;/p&gt;


&lt;p&gt;3、屏蔽毫无意义的评论。一般没有gravatar头像的访客不会活跃在博客圈。大多是有问题就找你，一解决就拍屁股走人。博主深有体会，之前写了一篇&lt;a href="https://typecodes.com/mix/sfinvitationcode.html" title="查看文章"&gt;《动易官方论坛的邀请码》&lt;/a&gt;，很多人拿到邀请码后连句谢谢都没有。博客本来就是一个交流的平台，失去了和用户的交互，那就没有任何意义了。所以，为了提升博客整体质量，需要屏蔽这部分访客。&lt;/p&gt;
&lt;p&gt;那么接下来就说说实现“wordpress中限制没有Gravatar头像的访客提交评论”的具体方法：&lt;/p&gt;
&lt;h5&gt;2 判断是否具有Gravatar头像的函数&lt;/h5&gt;
&lt;p&gt;在functions.php中添加下面的函数，其作用是根据提交的email字段判断该留言者是否具有gravatar头像。还有种方法是通过http://www.gravatar.com/avatar/获取到头像文件的大小值是否为2637k来判断，具体方法大家可以参考&lt;a href="https://typecodes.com/web/againwpgravatarcache.html" title="再议Gravatar头像缓存至本地服务器"&gt;《再议Gravatar头像缓存至本地服务器》&lt;/a&gt;中的代码。&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="x"&gt;/*&lt;/span&gt;
&lt;span class="x"&gt; * @author：vfhky  2013年09月11日20:23&lt;/span&gt;
&lt;span class="x"&gt; * @param string $email       用户提交的表单中的email字段&lt;/span&gt;
&lt;span class="x"&gt; * @return int  0:无gravatar头像;  1:有gravatar头像&lt;/span&gt;
&lt;span class="x"&gt; **/&lt;/span&gt;
&lt;span class="x"&gt;function vfhky_checkgravatar($email){&lt;/span&gt;
&lt;span class="x"&gt;   $email_hash = md5(strtolower(trim($email)));&lt;/span&gt;
&lt;span class="x"&gt;   $check_uri = &amp;#39;http://www.gravatar.com/avatar/&amp;#39; . $email_hash . &amp;#39;?d=404&amp;#39;;&lt;/span&gt;
&lt;span class="x"&gt;   $headers = @get_headers($check_uri);&lt;/span&gt;
&lt;span class="x"&gt;   if (!preg_match(&amp;quot;|200|&amp;quot;, $headers[0])) &lt;/span&gt;
&lt;span class="x"&gt;      return 0;&lt;/span&gt;
&lt;span class="x"&gt;   else&lt;/span&gt;
&lt;span class="x"&gt;      return 1;&lt;/span&gt;
&lt;span class="x"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h5&gt;3 在comments-ajax.php中调用判断函数&lt;/h5&gt;
&lt;p&gt;gravatar头像判断函数完成后，就可以在Willin Kan大神的comments-ajax.php文件中调用了。大概在该文件的90行处，在原代码中加入判断函数进行调用即可。&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="x"&gt;/*&lt;/span&gt;
&lt;span class="x"&gt; * @author：vfhky  2013年09月11日20:30&lt;/span&gt;
&lt;span class="x"&gt; * @param string $comment_author_email  用户提交的表单中的email字段&lt;/span&gt;
&lt;span class="x"&gt; **/&lt;/span&gt;
&lt;span class="x"&gt;if ( !$user-&amp;gt;ID ) {&lt;/span&gt;
&lt;span class="x"&gt;  if ( 6 &amp;gt; strlen($comment_author_email) || &amp;#39;&amp;#39; == $comment_author )&lt;/span&gt;
&lt;span class="x"&gt;      err( __(&amp;#39;提示：必须填写昵称及邮件。&amp;#39;) );&lt;/span&gt;
&lt;span class="x"&gt;  elseif ( !is_email($comment_author_email))&lt;/span&gt;
&lt;span class="x"&gt;      err( __(&amp;#39;提示：请输入一个有效的电子邮件地址。&amp;#39;) );&lt;/span&gt;
&lt;span class="x"&gt;  elseif (vfhky_checkgravatar($comment_author_email) == 0)&lt;/span&gt;
&lt;span class="x"&gt;      err( __(&amp;#39;请使用Gravatar头像留言。&amp;#39;) );&lt;/span&gt;
&lt;span class="x"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h5&gt;4 后记&lt;/h5&gt;
&lt;p&gt;&lt;img alt="wordpress中限制没有Gravatar头像的访客提交评论" src="https://o3cex9zsl.qnssl.com/2013/09/wordpress_no_gravatar.png" title="wordpress中限制没有Gravatar头像的访客提交评论" /&gt;&lt;/p&gt;
&lt;p&gt;简单两步就实现了限制没有Gravatar头像的访客提交评论，最终效果如上图所示。当然，这个功能也可以用jquery实现。不过，一旦用户浏览器屏蔽了js，那么也就没效果了。所以，综合考虑还是用服务器端判断更为安全可靠，虽然增加了额外资源的消耗。&lt;/p&gt;
&lt;h5&gt;更新： UPDATE ON 2014-03-15 22:59&lt;/h5&gt;
&lt;p&gt;由于 羽中 童鞋对 get_headers 函数的效率提出质疑，于是另起文章来讨论下：&lt;a href="https://typecodes.com/web/againwplimitnogravatar.html" title="《再议wordpress中限制没有Gravatar头像的访客提交评论》"&gt;《再议wordpress中限制没有Gravatar头像的访客提交评论》&lt;/a&gt;。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Sun, 15 Sep 2013 12:13:00 +0800</pubDate><guid>tag:typecodes.com,2013-09-15:web/wplimitnogravatar.html</guid><category>gravatar头像</category></item><item><title>集齐腾讯开放平台的所有API接口权限</title><link>https://typecodes.com/mix/collectallqqapi.html</link><description>&lt;h5&gt;1 申请到第一个腾讯开放平台应用&lt;/h5&gt;
&lt;p&gt;在2012年6月份的时候，博主当时跟风申请了一个腾讯开放平台的应用。这个时候博客刚建立不久，而且当时腾讯开放平台的API授权还用的是Oauth1.0，集中在discuz论坛登录应用。所以，这个应用也一直荒废着。到今年8月底，博主看到各个云平台都打得火热，于是也想试试。因此就琢磨着申请将这个应用上线（虽然一点代码都没写）。&lt;/p&gt;
&lt;h5&gt;2 申请将应用上线&lt;/h5&gt;
&lt;p&gt;记得第一次腾讯把申请上线的应用给退了回来，原因大致是“QQ登录不规范”。应该是因为我就在wordpress后台的登录页面添加了一个QQ登录的图标，然后腾讯不同意。于是又找到官方文档（http://wiki.connect.qq.com/网站前端页面规范），细细看了一遍，最后改用了腾讯官方提供的JS SDK开发包方式放置登录按钮。只需简单两步就可以实现常见的QQ登录方式，这也是JS SDK开发包的优势所在。&lt;/p&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;//在HTML适当位置放置引用腾讯JS SDK的JavaScript脚本文件
&lt;span class="nt"&gt;&amp;lt;script&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://qzonestyle.gtimg.cn/qzone/openapi/qc_loader.js&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;data-appid=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;APPID&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;data-redirecturi=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;REDIRECTURI&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;utf-8&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;然后，在你想要放置QQ登录按钮的HTML的任何位置加入下面的代码：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;qqLoginBtn&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;script&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
 QC.Login({
   btnId:&amp;quot;qqLoginBtn&amp;quot;    //插入按钮的节点id
 });
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;3 申请全部的API接口权限&lt;/h5&gt;
&lt;p&gt;本以为这样放置后会顺利通过审核，结果没过一天又被腾讯告知“登录放置不符合要求”。想了想，好吧，可能是放在wordpress后台登陆的位置可能不太明显。于是，我又把上面的代码放到博客的首页底部的版权位置，测试也能正常登陆和退出。但是，一天后又被退了回来，还是提示“登陆防止不符合要求”。尼玛，这也不行？果断“大刑”问候腾讯工作人员，结果人家说最好把图标放在首页顶部的显眼位置。无语，一个完全没开发的应用让你放首页顶部……没办法，改吧，这是企鹅的地盘！改在首页后过了不久，就给审核通过了。效率还是挺高的！&lt;/p&gt;
&lt;h5&gt;4 集齐腾讯开放平台的所有API接口权限&lt;/h5&gt;
&lt;p&gt;应用审核后就是查看自己获得了那些权限，结果发现“腾讯财付通支付接口get_tenpay_addr”、“”、“用户发表分享到QQ空间接口add_share”、“用户的空间相册接口upload_pic”等是未授权的。于是，博主“慷慨激昂”、“义正言辞”地在“申请缘由”栏目中写上一句“由于博客的迅速壮大，原有的接口已经满足不了需求；”；然后在“日访问量”一栏中填写“1-2万PV数”。结果，3天后毫无音讯。博主忍不住了，有在QQ上“问候”一下那位腾讯GG/MM。结果被告知最长可能一个月。好吧，咱也不多说了，瞅瞅人家新浪娃子多爽快，各种接口权限！不过，在上周五也就是9月6日，博主终于集齐了腾讯开放平台的所有API接口权限。总共算起来也就10天的样子，还算比较快。&lt;/p&gt;
&lt;p&gt;&lt;img alt="集齐腾讯开放平台的所有API接口权限" src="https://o3cex9zsl.qnssl.com/2013/09/qq_auth_all.png" title="集齐腾讯开放平台的所有API接口权限" /&gt;&lt;/p&gt;
&lt;h5&gt;5 API接口权限申请心得&lt;/h5&gt;
&lt;p&gt;所以，博主总结一个规律。要想把事情做好，首先自己要“态度诚恳”。比如在申请更高的接口权限时，在框框里多写几句话。将心比心，你自己都随意无所谓写那么一两句话，人家凭什么那么认真对待呢？其次，在自己的工作做得差不多的时候，一定要去“问候”一下官方人员，去催一下，稍微抱怨一下（注意把握尺度喔）会很有用！&lt;/p&gt;
&lt;h5&gt;6 如何将API接口和wordpress整合&lt;/h5&gt;
&lt;p&gt;总算集齐了所有API接口权限，而且vfhky在上周末也完成了对所有接口的类的调用和测试工作。但是，在如何把这些API接口和wordpress整合起来仍然没有头绪。例如，博主考虑过可以让QQ登陆用户在文章评论上发言，使用腾讯微博或者Q-Zone的头像，然后把评论内容自动同步到腾讯微博和Q-Zone。但是后面考虑到一些安全和用户体验等问题，还是理不出一个合理的思路。大家有什么建议呢？&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Mon, 09 Sep 2013 23:15:00 +0800</pubDate><guid>tag:typecodes.com,2013-09-09:mix/collectallqqapi.html</guid><category>腾讯开放平台api</category></item><item><title>折腾comment-ajax造成wordpress后台页面空白的BUG</title><link>https://typecodes.com/web/wpcommentajaxbug.html</link><description>&lt;h5&gt;1 折腾Willin Kan评论代码的一个“BUG”&lt;/h5&gt;
&lt;p&gt;前几天折腾了下Willin Kan的comment-ajax.php文件，改动了一些代码，结果博客好几天都没收到评论了。昨晚上还在纳闷，会不会是文章写得太烂了又或者是360的节点挂了？反正是百思不得其解。随便翻看着之前写的文章，突然想到了自己前几天修改了comment-ajax.php文件。会不会跟这个有关？赶紧UE打开看看！比较了下之前备份的comment_parentnt-ajax.php文件，发现最新的这份PHP文件中多出了下面几行代码。这个和前几天发现的一个BUG有关：查看了大多数有用Willin Kan大神的评论代码（comment-ajax.php、comment-ajax.js）的博客，只要在文章地址后面添加类似“?replytocom=1123'”的语句就会出现“BUG”（还在研究解决中，不多说了……）。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="x"&gt;//父评论不存在时，恶意提交评论&lt;/span&gt;
&lt;span class="x"&gt;if(&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;post&lt;/span&gt;&lt;span class="x"&gt;-&amp;gt;comment_parent == &amp;quot;&amp;quot;)&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt; exit;  //直接退出，不给出提示&lt;/span&gt;
&lt;span class="x"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;




&lt;h5&gt;2 wordpress后台页面空白&lt;/h5&gt;
&lt;p&gt;于是，vfhky毫不犹豫地把上面的代码注释掉，然后在本地环境中测试，终于能正常发表评论了。紧接着，博主把修改好的这份文件覆盖掉线上的comment_ajax.php文件。改好后不久，博客就收到了来自 &lt;a href="http://vfhky.sinaapp.com/it/743.html#comment-1390" title="查看 IT三两事 的评论"&gt;IT三两事&lt;/a&gt; 的评论。&lt;/p&gt;
&lt;p&gt;经博主回复后，进入博客的后台却发现了异常情况：后台评论显示区域是空白的（如下图所示）。但是，博客前台还是能正常发送和接收评论。好吧，一事未完，一事又起，刚才的欢喜立马没了。遂百度了下“wordpress后台空白”，发现都是由于服务器搬家或者使用新主题造成的。和博主的情况完全不一样，在查看了其它PHP文件还是没有头绪。&lt;/p&gt;
&lt;p&gt;&lt;img alt="wordpress后台页面空白" src="https://o3cex9zsl.qnssl.com/2013/09/wordpress_center_error.jpg" title="wordpress后台页面空白" /&gt;&lt;/p&gt;
&lt;h5&gt;3 评论者的comment_parent值出错&lt;/h5&gt;
&lt;p&gt;晚上又在琢磨这个问题，后台页面的其它功能都正常，唯独评论无法正常显示。会不是数据库的问题呢？于是把博客的数据库备份到本地，然后对比之前备份的数据库文件。&lt;/p&gt;
&lt;p&gt;在用Beyond compare对比后，发现一个重要问题，那就是“两三事”的评论的comment_parent字段值竟然和博主回复的comment_parent是一样的1390！显然这个是错误的，comment_parent代表的是该条评论的主评论的ID，也就是博主回复的comment_parent值1390是正确的，而两三事的comment_parent应该是0！于是博主立马用phpmyadmin修改了该值。&lt;/p&gt;
&lt;p&gt;&lt;img alt="wordpress数据库的comment_parent字段出现BUG" src="https://o3cex9zsl.qnssl.com/2013/09/wordpress_comment_error.jpg" title="wordpress数据库的comment_parent字段出现BUG" /&gt;&lt;/p&gt;
&lt;p&gt;然后进入博客的后台，接下来就是见证奇迹的时刻！&lt;/p&gt;
&lt;p&gt;&lt;img alt="wordpress后台恢复正常" src="https://o3cex9zsl.qnssl.com/2013/09/wordpress_center_default.jpg" title="wordpress后台恢复正常" /&gt;&lt;/p&gt;
&lt;h5&gt;4 后记&lt;/h5&gt;
&lt;p&gt;由于急着解决Willin Kan评论代码的一个“BUG”，博主没考虑周全就把代码放到了线上，结果出现了博客无法评论的情况。在注释掉这行代码后，博客能正常评论，但是wordpress的后台界面又出现了BUG：竟然变成了“一片空白”。幸亏vfhky备份还比较勤快，在对比数据库后，发现是数据库的wp_comments表中的字段comment_parent值出现了问题。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Thu, 05 Sep 2013 23:51:00 +0800</pubDate><guid>tag:typecodes.com,2013-09-05:web/wpcommentajaxbug.html</guid><category>php curl</category></item><item><title>PHP中的cURL请求及示例</title><link>https://typecodes.com/web/qqapifollowweibo.html</link><description>&lt;p&gt;经过近段时间的努力，博主研究的腾讯开放平台API接口终于有所“突破”了。今天正式上线第一个测试版的接口应用：收听腾讯微博用户。先上效果图（也是add_idol接口调用的整个流程），希望大家提提意见。&lt;/p&gt;
&lt;h5&gt;1 add_idol接口调用流程&lt;/h5&gt;
&lt;p&gt;（1）点击博客右侧栏的“腾讯微博”图标，准备接口调用。&lt;/p&gt;
&lt;p&gt;&lt;img alt="腾讯API调用接口" src="https://o3cex9zsl.qnssl.com/2013/09/qq_weibo_idol.png" /&gt;&lt;/p&gt;


&lt;p&gt;（2）接着会在当前页面弹出腾讯开放平台的授权页面，用户需要对博客进行授权。&lt;/p&gt;
&lt;p&gt;&lt;img alt="用户授权" src="https://o3cex9zsl.qnssl.com/2013/09/qq_api.png" /&gt;&lt;/p&gt;
&lt;p&gt;（3）获取到了用户的授权信息后，调用add_idol接口并返回结果：成功OR失败。&lt;/p&gt;
&lt;p&gt;&lt;img alt="关注微博成功" src="https://o3cex9zsl.qnssl.com/2013/09/qq_auth_success.png" /&gt;&lt;/p&gt;
&lt;h5&gt;2 add_idol接口说明&lt;/h5&gt;
&lt;p&gt;大家可以先看看add_idol接口的官网说明文档，地址是&lt;a href="http://wiki.connect.qq.com/add_idol" title="add_idol接口的官网说明文档"&gt;http://wiki.connect.qq.com/add_idol&lt;/a&gt;。从文档中我们可以看到，在add_idol接口的请求报文中，我们需要传入“name”或者“fopenids”这两个字段的值。“name”字段是微博用户的账户，“fopendis”是在用户授权后获取到唯一标识符号。其实，腾讯发布了开放平台的JS SDK开发包，可以使用js实现“傻瓜式”的调用各个接口。考虑到js的响应速度以及博客未来的功能整合拓展，所以vfhky选择了PHP个性开发。&lt;/p&gt;
&lt;p&gt;&lt;img alt="add_idol接口文档" src="https://o3cex9zsl.qnssl.com/2013/09/add_idol.png" /&gt;&lt;/p&gt;
&lt;h5&gt;3 add_idol接口的期待&lt;/h5&gt;
&lt;p&gt;目前，由于该接口应用还处于测试阶段，还有不完善的地方。首先是授权界面UI设计还是一块空白区域；其次是和博客的整合度不高，现在还只能收听博主的腾讯微博，计划是在博客的评论列表中所有评论者都能被授权用户收听；最后，该接口还没有和vfhky正在内测的其它接口实现交互，从而完成整个博客的一站式服务。&lt;/p&gt;
&lt;h5&gt;4 生日快乐，vfhky&lt;/h5&gt;
&lt;p&gt;没想到写完文章生日就到了，哈哈，祝自己“！！！生日快乐！！！”咯&lt;/p&gt;
&lt;p&gt;[smusic]http://storage.live.com/items/4054252DDEB2E987!285?a.mp3[/smusic]&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Wed, 04 Sep 2013 00:17:00 +0800</pubDate><guid>tag:typecodes.com,2013-09-04:web/qqapifollowweibo.html</guid><category>腾讯微博api</category><category>腾讯开放平台api</category></item><item><title>PHP中的cURL请求及示例</title><link>https://typecodes.com/web/phpcurlrequestsample.html</link><description>&lt;p&gt;最近在学习腾讯开放平台API接口的过程中，看到了一个很强大的PHP库——cURL。它是利用URL语法在命令行方式下工作的文件传输工具。这篇文章是博主直接从国外一个博客翻译过来的，原文地址是：&lt;a href="http://codular.com/curl-with-php" title="点击查看原文"&gt;http://codular.com/curl-with-php&lt;/a&gt;。这篇文章讲的很基础，但条理很清晰，知识比较系统和全面，所以转过来收藏了！（下面的有些标题是博主画蛇添足的，大家近乎可以忽略。）&lt;/p&gt;
&lt;h5&gt;1 定义：什么是cURL&lt;/h5&gt;
&lt;p&gt;cURL允许数据传输跨广泛的协议,是一个非常强大的系统。它广泛用于跨网站发送数据，包括诸如API交互和oAuth。cURL是在它的应用范围内几乎是无所不能的，从基本的HTTP请求，到更为复杂的FTP上传或封闭式HTTPS网站的交互验证。让我们一起来看看发送一个GET和POST请求和处理返回的响应的简单区别，以及一些重要的参数说明。&lt;/p&gt;


&lt;p&gt;在我们通过一个cURL请求做任何事之前，我们首先需要初始化一个cURL的实例。我们可以通过调用函数curl_init()函数实现，它会返回一个cURL资源。该函数接收你想要发送的请求URL作为它的一个参数。在本文中，我们先不做这一步，可以在接下来的过程中用另一种方式来实现它。&lt;/p&gt;
&lt;h5&gt;2 须知：一些核心设置&lt;/h5&gt;
&lt;p&gt;一旦我们得到了一个cURL资源，我们可以开始进行一些配置，下面列出我总结的一些核心设置。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;CURLOPT_RETURNTRANSFER - 返回响应作为一个字符串，而不是输出到屏幕
CURLOPT_CONNECTTIMEOUT - 连接超时的时间
CURLOPT_TIMEOUT - cURL执行的超时时间
CURLOPT_USERAGENT - 用于请求的Useragent字符串
CURLOPT_URL - 发送请求的URL对象
CURLOPT_POST - 以POST方式发送一个请求
CURLOPT_POSTFIELDS - 在POST提交的请求中的数组数据
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;3 创建一个配置&lt;/h5&gt;
&lt;p&gt;我们可以通过使用curl_setopt()方式创建一个配置，这个方式接受3个参数：cURL资源、设置以及设置对应的值。因此，我们可以如下所示设置我们正在发送的请求URL。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="nt"&gt;curl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nt"&gt;curl_init&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
&lt;span class="nt"&gt;curl_setopt&lt;/span&gt;&lt;span class="o"&gt;($&lt;/span&gt;&lt;span class="nt"&gt;curl&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;CURLOPT_URL&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://testcURL.com&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;如上所示，当获取cURL资源时，我们可以通过传送一个参数来设置URL。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="nt"&gt;curl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nt"&gt;curl_init&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;http://testcURL.com&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;当然我们也可以通过给curl_setopt_array()函数传递一个包含变量名和变量值的数组一次性地创建多重配置。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;curl&lt;/span&gt;&lt;span class="x"&gt; = curl_init();&lt;/span&gt;
&lt;span class="x"&gt;curl_setopt_array(&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;curl&lt;/span&gt;&lt;span class="x"&gt;, array(&lt;/span&gt;
&lt;span class="x"&gt;    CURLOPT_RETURNTRANSFER =&amp;gt; 1,&lt;/span&gt;
&lt;span class="x"&gt;    CURLOPT_URL =&amp;gt; &amp;#39;http://testcURL.com&amp;#39;&lt;/span&gt;
&lt;span class="x"&gt;));&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;4 执行请求：curl_exec()&lt;/h5&gt;
&lt;p&gt;当所有选项都配置好后，准备发送请求时，我们可以通过调用curl_exec()方式来执行这个cURL请求。这个函数将会返回三种不同的情形：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;false - 如果执行这个请求时发生错误
true - 如果该请求成功执行并且CURLOPT_RETURNTRANSFER被设置为false
The result - 如果该请求成功执行并且CURLOPT_RETURNTRANSFER被设置为true
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;如果我们想要从上面的例子获得返回结果,我们可以用以下方法：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;result&lt;/span&gt;&lt;span class="x"&gt; = curl_exec(&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;curl&lt;/span&gt;&lt;span class="x"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;此时，$result已经包含了页面的响应——它可能是JSON，一个字符串或者一个完整的网站的HTML。&lt;/p&gt;
&lt;h5&gt;5 关闭请求：curl_close()&lt;/h5&gt;
&lt;p&gt;当你发送完一个请求并且获取到了相应的返回结果，你就需要关闭这个cURL请求以便释放一些系统资源。通过调用curl_close()方法，我们可以像其它所有需要将资源作为参数的函数一样简单实现资源的释放。&lt;/p&gt;
&lt;h5&gt;6 GET请求&lt;/h5&gt;
&lt;p&gt;GET请求是默认的请求方法，并且我们可以很直截了当的使用它。事实上所有的例子到目前为止一直都是GET请求。如果你想在请求中加入传入一些参数，那么你可以像http://testcURL.com/?item1=value&amp;amp;item2=value2一样把这些参数作为一个查询字符串附加在URL地址后面。&lt;/p&gt;
&lt;p&gt;因此，我们可以通过如下示例发送一个GET请求到上面的URL中去，并且返回相应的结果。&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="x"&gt;// Get cURL resource&lt;/span&gt;
&lt;span class="x"&gt;$curl = curl_init();&lt;/span&gt;
&lt;span class="x"&gt;// Set some options - we are passing in a useragent too here&lt;/span&gt;
&lt;span class="x"&gt;curl_setopt_array($curl, array(&lt;/span&gt;
&lt;span class="x"&gt;    CURLOPT_RETURNTRANSFER =&amp;gt; 1,&lt;/span&gt;
&lt;span class="x"&gt;    CURLOPT_URL =&amp;gt; &amp;#39;http://testcURL.com/?item1=value&amp;amp;item2=value2&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt;    CURLOPT_USERAGENT =&amp;gt; &amp;#39;Codular Sample cURL Request&amp;#39;&lt;/span&gt;
&lt;span class="x"&gt;));&lt;/span&gt;
&lt;span class="x"&gt;// Send the request &amp;amp; save response to $resp&lt;/span&gt;
&lt;span class="x"&gt;$resp = curl_exec($curl);&lt;/span&gt;
&lt;span class="x"&gt;// Close request to clear up some resources&lt;/span&gt;
&lt;span class="x"&gt;curl_close($curl);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h5&gt;7 POST请求&lt;/h5&gt;
&lt;p&gt;GET请求和POST请求两者之间语法的唯一区别就是：在你想要传送一些数据时，多了一个设置。我们将把CURLOPT_POST设置为true，并且通过设置CURLOPT_POSTFIELDS来传送包含一个数组的数据。&lt;/p&gt;
&lt;p&gt;因此，如果把上面的GET请求转换为POST请求，我们可以使用下面的代码：&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="x"&gt;// Get cURL resource&lt;/span&gt;
&lt;span class="x"&gt;$curl = curl_init();&lt;/span&gt;
&lt;span class="x"&gt;// Set some options - we are passing in a useragent too here&lt;/span&gt;
&lt;span class="x"&gt;curl_setopt_array($curl, array(&lt;/span&gt;
&lt;span class="x"&gt;    CURLOPT_RETURNTRANSFER =&amp;gt; 1,&lt;/span&gt;
&lt;span class="x"&gt;    CURLOPT_URL =&amp;gt; &amp;#39;http://testcURL.com&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt;    CURLOPT_USERAGENT =&amp;gt; &amp;#39;Codular Sample cURL Request&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt;    CURLOPT_POST =&amp;gt; 1,&lt;/span&gt;
&lt;span class="x"&gt;    CURLOPT_POSTFIELDS =&amp;gt; array(&lt;/span&gt;
&lt;span class="x"&gt;        item1 =&amp;gt; &amp;#39;value&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt;        item2 =&amp;gt; &amp;#39;value2&amp;#39;&lt;/span&gt;
&lt;span class="x"&gt;    )&lt;/span&gt;
&lt;span class="x"&gt;));&lt;/span&gt;
&lt;span class="x"&gt;// Send the request &amp;amp; save response to $resp&lt;/span&gt;
&lt;span class="x"&gt;$resp = curl_exec($curl);&lt;/span&gt;
&lt;span class="x"&gt;// Close request to clear up some resources&lt;/span&gt;
&lt;span class="x"&gt;curl_close($curl);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;到这里，你就拥有了这样的一个POST请求：它将产生和上面GET请求一样的效果，并且把返回数据到脚本中，这样你就可以随便使用它们了。&lt;/p&gt;
&lt;h5&gt;8 错误&lt;/h5&gt;
&lt;p&gt;尽管我们讨厌错误，但是你还是得注意使用cURL时可能出现的情形。因为你最终无法控制你所发送请求的网站，也无法保证该站点的响应结果将会是你预想的那种方式以及这个站点一直都会是正常状态。&lt;/p&gt;
&lt;p&gt;这里提供了两个可以用来处理错误的函数：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;curl_error() - 返回一个字符串错误信息（当请求正常返回时，其值为空）
curl_errno() - 返回cURL的错误数目，然后你可以查看这个包含错误代码的页面。
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;例如，你可以如下示例使用：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(!&lt;/span&gt;&lt;span class="nt"&gt;curl_exec&lt;/span&gt;&lt;span class="o"&gt;($&lt;/span&gt;&lt;span class="nt"&gt;curl&lt;/span&gt;&lt;span class="o"&gt;))&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;die&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Error: &amp;quot;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="n"&gt;curl_error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;curl&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;quot; - Code: &amp;#39;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="n"&gt;curl_errno&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;curl&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;如果你想要任何HTTP响应代码都大于400来产生一个错误，而不是返回整个HTML页面，那么你可以把CURLOPT_FAILONERROR设置为true。cURL是一个“庞然大物”，并且还有很多很多的可能。有些网站可能为一些用户代理提供服务页面，当使用API接口时，它们可能会要求你传送一个特别的用户代理，这些都是我们需要注意的。如果你还想了解一些cURL请求，为何不尝试去oAuth with Instagram看看呢？&lt;/p&gt;
&lt;h5&gt;9 附录：PHP中的CURL函数库&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="x"&gt;curl_close — 关闭一个curl会话&lt;/span&gt;
&lt;span class="x"&gt;curl_copy_handle — 拷贝一个curl连接资源的所有内容和参数&lt;/span&gt;
&lt;span class="x"&gt;curl_errno — 返回一个包含当前会话错误信息的数字编号&lt;/span&gt;
&lt;span class="x"&gt;curl_error — 返回一个包含当前会话错误信息的字符串&lt;/span&gt;
&lt;span class="x"&gt;curl_exec — 执行一个curl会话&lt;/span&gt;
&lt;span class="x"&gt;curl_getinfo — 获取一个curl连接资源句柄的信息&lt;/span&gt;
&lt;span class="x"&gt;curl_setopt — 为一个curl设置会话参数&lt;/span&gt;
&lt;span class="x"&gt;CURLOPT_HEADER — 如果你想把一个头包含在输出中，设置这个选项为一个非零值(curl_setopt(&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;ch&lt;/span&gt;&lt;span class="x"&gt;, CURLOPT_HEADER, false))&lt;/span&gt;
&lt;span class="x"&gt;CURLOPT_REFERER — 在HTTP请求中包含一个”referer”头的字符串&lt;/span&gt;
&lt;span class="x"&gt;curl_init — 初始化一个curl会话&lt;/span&gt;
&lt;span class="x"&gt;curl_multi_add_handle — 向curl批处理会话中添加单独的curl句柄资源&lt;/span&gt;
&lt;span class="x"&gt;curl_multi_close — 关闭一个批处理句柄资源&lt;/span&gt;
&lt;span class="x"&gt;curl_multi_exec — 解析一个curl批处理句柄&lt;/span&gt;
&lt;span class="x"&gt;curl_multi_getcontent — 返回获取的输出的文本流&lt;/span&gt;
&lt;span class="x"&gt;curl_multi_info_read — 获取当前解析的curl的相关传输信息&lt;/span&gt;
&lt;span class="x"&gt;curl_multi_init — 初始化一个curl批处理句柄资源&lt;/span&gt;
&lt;span class="x"&gt;curl_multi_remove_handle — 移除curl批处理句柄资源中的某个句柄资源&lt;/span&gt;
&lt;span class="x"&gt;curl_multi_select — Get all the sockets associated with the cURL extension, which can then be &amp;quot;selected&amp;quot;&lt;/span&gt;
&lt;span class="x"&gt;curl_setopt_array — 以数组的形式为一个curl设置会话参数&lt;/span&gt;
&lt;span class="x"&gt;curl_version — 获取curl相关的版本信息&lt;/span&gt;

&lt;span class="x"&gt;curl_init()函数的作用初始化一个curl会话，curl_init()函数唯一的一个参数是可选的，表示一个url地址。&lt;/span&gt;
&lt;span class="x"&gt;curl_exec()函数的作用是执行一个curl会话，唯一的参数是curl_init()函数返回的句柄。&lt;/span&gt;
&lt;span class="x"&gt;curl_close()函数的作用是关闭一个curl会话，唯一的参数是curl_init()函数返回的句柄。&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Sun, 01 Sep 2013 18:34:00 +0800</pubDate><guid>tag:typecodes.com,2013-09-01:web/phpcurlrequestsample.html</guid><category>php curl</category></item><item><title>WordPress使用淘宝IP地址库的API显示评论者的位置信息（三）</title><link>https://typecodes.com/web/wptaoiplibapithree.html</link><description>&lt;h5&gt;1 PHP版本的淘宝IP地址库接口说明&lt;/h5&gt;
&lt;p&gt;在上一篇文章&lt;a href="https://typecodes.com/web/wptaoiplibapitwo.html" title="《WordPress使用淘宝IP地址库的API显示评论者的位置信息（二）》"&gt;《WordPress使用淘宝IP地址库的API显示评论者的位置信息（二）》&lt;/a&gt;中，vfhky使用了jQuery来获取淘宝的API接口返回的数据。那么这篇文章就接着写如何直接使用PHP实现WordPress调用淘宝IP地址库的API显示评论者的位置信息。相比上一个jQuery的版本，这个PHP版本的代码就简单得多了用。只需两步就可以实现。&lt;/p&gt;


&lt;h5&gt;2.1 在主题functions.php添加API调用函数&lt;/h5&gt;
&lt;p&gt;在主题文件目录下的functions.php文件中添加如下代码，其作用是拼接调用淘宝API的请求URL地址并获取返回的jQuery数据信息。&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="x"&gt;/************&lt;/span&gt;
&lt;span class="x"&gt; *** @Function：PHP获取淘宝IP地址库API返回的信息&lt;/span&gt;
&lt;span class="x"&gt; *** @Author：vfhky http://vfhky.sinaapp.com 20130825&lt;/span&gt;
&lt;span class="x"&gt; *** @param string $ip   IP地址     &lt;/span&gt;
&lt;span class="x"&gt; *** @return string &amp;quot;中国江苏南京 电信&amp;quot;&lt;/span&gt;
&lt;span class="x"&gt;************/&lt;/span&gt;
&lt;span class="x"&gt;function ipdata($ip)&lt;/span&gt;
&lt;span class="x"&gt;{&lt;/span&gt;
&lt;span class="x"&gt;  //prevent the sql-injection（From：http://vfhky.sinaapp.com/web/php/20.html）&lt;/span&gt;
&lt;span class="x"&gt;  $ip = trim($ip);&lt;/span&gt;
&lt;span class="x"&gt;  $ip = strip_tags($ip,&amp;quot;&amp;quot;);&lt;/span&gt;
&lt;span class="x"&gt;  $ip = str_replace(&amp;quot;\n&amp;quot;, &amp;quot;&amp;quot;, str_replace(&amp;quot; &amp;quot;, &amp;quot;&amp;quot;, $ip));&lt;/span&gt;
&lt;span class="x"&gt;  $ip = str_replace(&amp;quot;\t&amp;quot;,&amp;quot;&amp;quot;,$ip);&lt;/span&gt;
&lt;span class="x"&gt;  $ip = str_replace(&amp;quot;\r\n&amp;quot;,&amp;quot;&amp;quot;,$ip);&lt;/span&gt;
&lt;span class="x"&gt;  $ip = str_replace(&amp;quot;\r&amp;quot;,&amp;quot;&amp;quot;,$ip);&lt;/span&gt;
&lt;span class="x"&gt;  $url=&amp;quot;http://ip.taobao.com/service/getIpInfo.php?ip=&amp;quot;;&lt;/span&gt;
&lt;span class="x"&gt;  $data=json_decode(file_get_contents($url.$ip));&lt;/span&gt;

&lt;span class="x"&gt;  //建议不启用debug模式，即默认$data-&amp;gt;code的值为0，淘宝API正常响应。（测试时可以考虑$data-&amp;gt;code为1的情况）&lt;/span&gt;
&lt;span class="x"&gt;  $ipdata=$data-&amp;gt;data;&lt;/span&gt;
&lt;span class="x"&gt;  return $ipdata-&amp;gt;country.$ipdata-&amp;gt;region.$ipdata-&amp;gt;city.$ipdata-&amp;gt;isp;&lt;/span&gt;
&lt;span class="x"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h5&gt;2.2 在WP主题评论者信息的相应位置调用函数&lt;/h5&gt;
&lt;p&gt;在WordPress主题的评论者信息的相应位置调用上面的函数即可显示由淘宝IP地址库返回来的API数据。简单示例：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="x"&gt;//&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;ipaddress&lt;/span&gt;&lt;span class="x"&gt;是从数据库中查找出评论者的IP地址&lt;/span&gt;
&lt;span class="x"&gt;echo ipdata(&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;ipaddress&lt;/span&gt;&lt;span class="x"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;3 后记&lt;/h5&gt;
&lt;p&gt;两步就搞定了，而且代码简单得很！所以，PHP版本的《WordPress使用淘宝IP地址库的API显示评论者的位置信息（三）》很适合PV量不是很大的blog使用，响应速度估计可能比jQuery版本的还要快一些。不过，淘宝的这个API是有请求频率限制的：为了保障服务正常运行，每个用户的访问频率需小于10qps。什么是QPS？博主网上查找了一些资料，整理如下，算是给自己的一个科普。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;QPS每秒查询率(Query Per Second)
每秒查询率QPS是对一个特定的查询服务器在规定时间内所处理流量多少的衡量标准，在因特网上，作为域名系统服务器的机器的性能经常用每秒查询率来衡量。

术语说明：
QPS = req/sec = 请求数/秒

【QPS计算PV和机器的方式】

QPS统计方式 [一般使用 http_load 进行统计]
QPS = 总请求数 / ( 进程总数 * 请求时间 )
QPS: 单个进程每秒请求服务器的成功次数

单台服务器每天PV计算
公式1：每天总PV = QPS * 3600 * 6
公式2：每天总PV = QPS * 3600 * 8

服务器计算
服务器数量 = ceil( 每天总PV / 单台服务器每天总PV )

【峰值QPS和机器计算公式】

原理：每天80%的访问集中在20%的时间里，这20%时间叫做峰值时间
公式：( 总PV数 * 80% ) / ( 每天秒数 * 20% ) = 峰值时间每秒请求数(QPS)
机器：峰值时间每秒QPS / 单台机器的QPS = 需要的机器

问：每天300w PV 的在单台机器上，这台机器需要多少QPS？
答：( 3000000 * 0.8 ) / (86400 * 0.2 ) = 139 (QPS)

问：如果一台机器的QPS是58，需要几台机器来支持？
答：139 / 58 = 3
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Sun, 01 Sep 2013 15:49:00 +0800</pubDate><guid>tag:typecodes.com,2013-09-01:web/wptaoiplibapithree.html</guid><category>wordpress淘宝ip库</category></item><item><title>WordPress使用淘宝IP地址库的API显示评论者的位置信息（二）</title><link>https://typecodes.com/web/wptaoiplibapitwo.html</link><description>&lt;h5&gt;1 淘宝IP地址库的接口说明&lt;/h5&gt;
&lt;p&gt;在上一篇文章&lt;a href="https://typecodes.com/web/wptaoiplibapione.html" title="查看详情"&gt;《WordPress使用淘宝IP地址库的API显示评论者的位置信息（一）》&lt;/a&gt;中，vfhky使用了新浪工具提供的这个IP接口显示博客评论者的位置信息。那么这篇文章就接着写在WordPress中使用淘宝IP地址库的API显示评论者的位置信息。这个功能的实现需要储备一些jQuery、json等基础知识，所以如果说上一篇是jQuery版本的新浪IP地址库的API应用，那么这篇文章就是jQuery版本的淘宝IP地址库的API应用。淘宝IP地址库的接口说明文档地址是：&lt;a href="http://ip.taobao.com/instructions.php" title="淘宝IP地址库的接口说明文档地址"&gt;http://ip.taobao.com/instructions.php&lt;/a&gt;，大家可以去参考下。下面是在WP博客中如何利用淘宝IP地址库实现评论者位置详情的显示。&lt;/p&gt;


&lt;p&gt;&lt;img alt="wordpress评论使用淘宝IP地址库的API" src="https://o3cex9zsl.qnssl.com/2013/09/taobao_api_ipaddress.png" title="wordpress评论使用淘宝IP地址库的API" /&gt;&lt;/p&gt;
&lt;h6&gt;2.1 修改主题评论WEB结构(functis.php)&lt;/h6&gt;
&lt;p&gt;正如上一篇文章提到的，我们首先需要找到评论信息显示列表的那个文件（博主的是functions.php），在相应的位置加上如下代码。其作用是在jQuery获取IP信息之前，显示“正在查询……”的字样。代码中的waiting.gif是上面省略号的动态图片，这个看个人喜好来决定需不需要用；$ip代表从数据查询出来的评论者的IP数据。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;vfhkyipquery&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;data-ip=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;#39; . $ip . &amp;#39;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;正在查询&lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;#39; . get_bloginfo(&amp;#39;template_url&amp;#39;) . &amp;#39;/images/waiting.gif&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;...&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;vertical-align:baseline;&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h6&gt;2.2 修改JS文件&lt;/h6&gt;
&lt;p&gt;找到主题文件目录下的一个js文件，然后添加以下代码（注意该js文件一定要是会在文章页面加载的哦！）最终的显示效果会类似于：中国江苏南京 电信。&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cm"&gt;/************&lt;/span&gt;
&lt;span class="cm"&gt; *** @Function：jQuery获取淘宝IP地址库API返回的信息&lt;/span&gt;
&lt;span class="cm"&gt; *** @Author：vfhky http://vfhky.sinaapp.com 20130825&lt;/span&gt;
&lt;span class="cm"&gt; *** @param string GhpcyBpcy94db71979d35aBhIGV4YW1wbGUd7ebf4317e0de919     由Jquery传送过来的IP地址     &lt;/span&gt;
&lt;span class="cm"&gt; *** @return string &amp;quot;&amp;lt;span class=ipinfo&amp;gt;中国江苏南京 电信&amp;lt;/span&amp;gt;&amp;quot;&lt;/span&gt;
&lt;span class="cm"&gt;************/&lt;/span&gt;
&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;ready&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
 &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
  &lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;.vfhkyipquery&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;each&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
   &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;trim&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;data-ip&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="nx"&gt;h&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;http://vfhky.sinaapp.com/MTBkN2ViZjQzMTdlMGR.php?GhpcyBpcy94db71979d35aBhIGV4YW1wbGUd7ebf4317e0de919=&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="o"&gt;+=&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getJSON&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="nx"&gt;h&lt;/span&gt;&lt;span class="o"&gt;+=&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;country&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;h&lt;/span&gt;&lt;span class="o"&gt;+=&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;region&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;h&lt;/span&gt;&lt;span class="o"&gt;+=&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;city&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;h&lt;/span&gt;&lt;span class="o"&gt;+=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;h&lt;/span&gt;&lt;span class="o"&gt;+=&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;h&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;h&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/省/g&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;h&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;h&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/市/g&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;replaceWith&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;lt;span class=ipinfo&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;h&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;lt;/span&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;

 &lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
  &lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
 &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h6&gt;2.3 新建一个任意命名的PHP文件&lt;/h6&gt;
&lt;p&gt;新建一个平PHP文件，任意命名（但尽量复杂点），例如MTBkN2ViZjQzMTdlMGR.php。然后把这个文件放在博客的FTP根目录或者主题目录下面，只要记录这个文件的路径就行了，因为待会在jQuery中会用到它。这个PHP文件的主要功能是接收由Jquery文件传送过来的IP参数，然后拼接成一个淘宝IP库的API标准请求URL并读取接口返回的所有数据信息。具体代码如下所示：&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
 &lt;span class="sd"&gt;/*********&lt;/span&gt;
&lt;span class="sd"&gt;  *** @Filename：MTBkN2ViZjQzMTdlMGR.php&lt;/span&gt;
&lt;span class="sd"&gt;  *** @Function：淘宝API的标准get请求报文&lt;/span&gt;
&lt;span class="sd"&gt;  *** @Author：vfhky http://vfhky.sinaapp.com 20130825&lt;/span&gt;
&lt;span class="sd"&gt;  *** @param string GhpcyBpcy94db71979d35aBhIGV4YW1wbGUd7ebf4317e0de919     其值代表由Jquery传送过来的IP地址     &lt;/span&gt;
&lt;span class="sd"&gt;  *** @return string $data  淘宝API返回的数据（包括Json格式的IP地址信息详情）&lt;/span&gt;
&lt;span class="sd"&gt; **********/&lt;/span&gt;

 &lt;span class="c1"&gt;//prevent load this file directly&lt;/span&gt;
 &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;HTTP_REFERER&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nb"&gt;strpos&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;HTTP_REFERER&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;HTTP_HOST&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="k"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;

 &lt;span class="nv"&gt;$c572bd935510d7ebf4317e0de91994db71979d35a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;trim&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_GET&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;GhpcyBpcy94db71979d35aBhIGV4YW1wbGUd7ebf4317e0de919&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;

 &lt;span class="c1"&gt;//check if the ip address is ipv4&lt;/span&gt;
 &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nb"&gt;filter_var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$c572bd935510d7ebf4317e0de91994db71979d35a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;FILTER_VALIDATE_IP&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;FILTER_FLAG_IPV4&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="k"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;

 &lt;span class="c1"&gt;//if the ip address is ipv4 then&lt;/span&gt;
 &lt;span class="nv"&gt;$ip&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;explode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$c572bd935510d7ebf4317e0de91994db71979d35a&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

 &lt;span class="c1"&gt;//check if the $ip is legel&lt;/span&gt;
 &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nb"&gt;count&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$ip&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
 &lt;span class="p"&gt;{&lt;/span&gt;  
   &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$ip&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;  
    &lt;span class="k"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
   &lt;span class="p"&gt;}&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;

 &lt;span class="c1"&gt;//prevent the sql-injection（From：http://vfhky.sinaapp.com/web/php/20.html）&lt;/span&gt;
 &lt;span class="nv"&gt;$c572bd935510d7ebf4317e0de91994db71979d35a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;trim&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$c572bd935510d7ebf4317e0de91994db71979d35a&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
 &lt;span class="nv"&gt;$c572bd935510d7ebf4317e0de91994db71979d35a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;strip_tags&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$c572bd935510d7ebf4317e0de91994db71979d35a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
 &lt;span class="nv"&gt;$c572bd935510d7ebf4317e0de91994db71979d35a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str_replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;str_replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$c572bd935510d7ebf4317e0de91994db71979d35a&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
 &lt;span class="nv"&gt;$c572bd935510d7ebf4317e0de91994db71979d35a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str_replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$c572bd935510d7ebf4317e0de91994db71979d35a&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
 &lt;span class="nv"&gt;$c572bd935510d7ebf4317e0de91994db71979d35a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str_replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\r\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$c572bd935510d7ebf4317e0de91994db71979d35a&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
 &lt;span class="nv"&gt;$c572bd935510d7ebf4317e0de91994db71979d35a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str_replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\r&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$c572bd935510d7ebf4317e0de91994db71979d35a&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

 &lt;span class="c1"&gt;//request for TAOBAO API to get data-infomation&lt;/span&gt;
 &lt;span class="nv"&gt;$url572bd935510d7ebf4317e0de91994db71979d35a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;http://ip.taobao.com/service/getIpInfo.php?ip=&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;$c572bd935510d7ebf4317e0de91994db71979d35a&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
 &lt;span class="nv"&gt;$data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;file_get_contents&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$url572bd935510d7ebf4317e0de91994db71979d35a&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

 &lt;span class="c1"&gt;//output the return data from TAOBAO API including json-data（Format：http://ip.taobao.com/instructions.php）&lt;/span&gt;
 &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h5&gt;3 后记&lt;/h5&gt;
&lt;p&gt;三步就搞定了，也不是很难吧！那么这篇《WordPress使用淘宝IP地址库的API显示评论者的位置信息（二）》就算是jQuery版本的淘宝IP地址库的API调用。当然大家可能想到了，直接用PHP就可以实现了嘛。于是，下一篇文章就是PHP版本的&lt;a href="https://typecodes.com/web/wptaoiplibapithree.html" title="《WordPress使用淘宝IP地址库的API显示评论者的位置信息（三）》"&gt;《WordPress使用淘宝IP地址库的API显示评论者的位置信息（三）》&lt;/a&gt;。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Sun, 01 Sep 2013 15:03:00 +0800</pubDate><guid>tag:typecodes.com,2013-09-01:web/wptaoiplibapitwo.html</guid><category>wordpress淘宝ip库</category></item><item><title>调试API接口的利器——获取返回数据中的信息提示字段</title><link>https://typecodes.com/web/testapiedgetoolreturnmessage.html</link><description>&lt;h5&gt;1 调试腾讯开放平台QQ登录API&lt;/h5&gt;
&lt;p&gt;最近博主在测试腾讯开放平台的QQ登录API时，遇到了一个棘手问题。根据腾讯官方API文档，vfhky写了一个调用 &lt;a href="http://wiki.connect.qq.com/get_info" title="查看腾讯官方关于get_info的API文档"&gt;get_info&lt;/a&gt; 接口的程序。该接口能够获取QQ登录用户的微博信息，例如用户的出身日期、教育信息、FANS数目、微博内容等。具体大家也可以看看官方给出的API接口信息，地址是 http://wiki.connect.qq.com/get_info。&lt;/p&gt;
&lt;p&gt;&lt;img alt="腾讯后台API管理" src="https://o3cex9zsl.qnssl.com/2013/08/QQAPI_Oauth.png" title="腾讯后台API管理" /&gt;&lt;/p&gt;


&lt;h5&gt;2 调用 get_info 接口的程序&lt;/h5&gt;
&lt;p&gt;根据OAuth2.0协议，很容易写出调用get_info接口的程序，下面是vfhky测试程序的部分代码。由于还是在测试阶段，所以在好几API的调用代码段中都对返回数据是否合法加以判断。&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="x"&gt;//1、拼接请求URI，调用get_info接口    &lt;/span&gt;
&lt;span class="x"&gt;$getuser_info_url =  &amp;quot;https://graph.qq.com/user/get_info?access_token=&amp;quot;.$params[&amp;#39;access_token&amp;#39;].&amp;quot;&amp;amp;oauth_consumer_key=&amp;quot;.$app_id.&amp;quot;&amp;amp;openid=&amp;quot;.$user-&amp;gt;openid .&amp;quot;&amp;amp;format=json&amp;quot; ;&lt;/span&gt;

&lt;span class="x"&gt;/*************************************************&lt;/span&gt;
&lt;span class="x"&gt;****由于代码较多，先略去获取API返回的数据步骤*****&lt;/span&gt;
&lt;span class="x"&gt;****下面是官方API提供的返回的数据（Json格式）*****&lt;/span&gt;
&lt;span class="x"&gt;**************************************************&lt;/span&gt;
&lt;span class="x"&gt;Content-type: text/html; charset=utf-8&lt;/span&gt;
&lt;span class="x"&gt;{&lt;/span&gt;
&lt;span class="x"&gt;&amp;quot;errcode&amp;quot;:0,&lt;/span&gt;
&lt;span class="x"&gt;&amp;quot;msg&amp;quot;:&amp;quot;ok&amp;quot;,&lt;/span&gt;
&lt;span class="x"&gt;&amp;quot;ret&amp;quot;: 0,&lt;/span&gt;
&lt;span class="x"&gt;&amp;quot;data&amp;quot;:&lt;/span&gt;
&lt;span class="x"&gt;{&lt;/span&gt;
&lt;span class="x"&gt; &amp;quot;birth_day&amp;quot;:8,&lt;/span&gt;
&lt;span class="x"&gt; &amp;quot;birth_month&amp;quot;:8,&lt;/span&gt;
&lt;span class="x"&gt; &amp;quot;birth_year&amp;quot;:1987,&lt;/span&gt;
&lt;span class="x"&gt; &amp;quot;city_code&amp;quot;:&amp;quot;1&amp;quot;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;quot;comp&amp;quot;:null,&lt;/span&gt;
&lt;span class="x"&gt; &amp;quot;country_code&amp;quot;:&amp;quot;1&amp;quot;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;quot;edu&amp;quot;:[&lt;/span&gt;
&lt;span class="x"&gt; {&lt;/span&gt;
&lt;span class="x"&gt;         &amp;quot;departmentid&amp;quot;:5319,&lt;/span&gt;
&lt;span class="x"&gt;         &amp;quot;id&amp;quot;:24037,&lt;/span&gt;
&lt;span class="x"&gt;         &amp;quot;level&amp;quot;:4,&lt;/span&gt;
&lt;span class="x"&gt;         &amp;quot;schoolid&amp;quot;:10428,&lt;/span&gt;
&lt;span class="x"&gt;         &amp;quot;year&amp;quot;:2007&lt;/span&gt;
&lt;span class="x"&gt; }],&lt;/span&gt;
&lt;span class="x"&gt; &amp;quot;exp&amp;quot;:730,&lt;/span&gt;
&lt;span class="x"&gt; &amp;quot;fansnum&amp;quot;:64,&lt;/span&gt;

&lt;span class="x"&gt; ****略去其它字段*****&lt;/span&gt;
&lt;span class="x"&gt;}&lt;/span&gt;
&lt;span class="x"&gt;*************************************************/&lt;/span&gt;

&lt;span class="x"&gt;//2、根据API，从json数据中取得想要的字段&lt;/span&gt;
&lt;span class="x"&gt;$tag =  $getuser_info_results-&amp;gt;tag ;        //取得个性标签&lt;/span&gt;

&lt;span class="x"&gt;//3、数据返回前台页面显示&lt;/span&gt;
&lt;span class="x"&gt;echo  &amp;quot;[生日：]&amp;quot;. $getuser_info_results-&amp;gt;birth_year . $getuser_info_results-&amp;gt;birth_month. $getuser_info_results-&amp;gt;birth_day;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h5&gt;3 DEBUG无任何结果&lt;/h5&gt;
&lt;p&gt;结果很郁闷的是：无论如何debug，总是一片空白，无法在前台显示对应的数据。上周末问了腾讯开放平台的工作人员，仍没得到结果。说是技术支持人员不是，让我上官方论坛提问。结果一上论坛，小伙伴们惊得目瞪口呆，广告和僵尸问题几乎占满了所有帖子。这场景让我想起了前几年的动易论坛，不知现在怎么样了……好吧，有问题还得自己扛住！&lt;/p&gt;
&lt;p&gt;晚上回来仔细再琢磨了下API文档，发现返回的数据可能是xml格式也可能是json格式的，那么上面的程序应该也没错。问题出在哪呢？无意间，突然注意到了“错误返回示例”中提到了一个“msg”字段，对应的数据表示数据返回的信息提示。于是，立马，把上面的第3个步骤改成。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="x"&gt;echo  &amp;quot;[生日：]&amp;quot;. &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;getuser_info_results&lt;/span&gt;&lt;span class="x"&gt;-&amp;gt;msg;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;4 曙光：获取返回数据中的信息提示字段&lt;/h5&gt;
&lt;p&gt;&lt;img alt="前台显示msg返回的信息" src="https://o3cex9zsl.qnssl.com/2013/08/QQAPI_errormsg.png" title="前台显示msg返回的信息" /&gt;&lt;/p&gt;
&lt;p&gt;结果终于出来了，如上图所示。提示信息为“this api without user authorization”，意思是“该API接口没有取得用户授权”。估计是由于先前在获取Authorization Code时，没有加入scope授权列表字段造成的。虽然说问题暂时还没解决，但是一个错误提示让博主看到了希望！激动不已，是以速成该文。所以在大家测试API接口的时候，千万不要忘了这把利器——获取返回数据中的信息提示字段！&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Thu, 29 Aug 2013 21:03:00 +0800</pubDate><guid>tag:typecodes.com,2013-08-29:web/testapiedgetoolreturnmessage.html</guid><category>腾讯开放平台api</category><category>api调试</category></item><item><title>Wordpress使用淘宝IP地址库的API显示评论者的位置信息（一）</title><link>https://typecodes.com/web/wptaoiplibapione.html</link><description>&lt;h5&gt;1 跟风API&lt;/h5&gt;
&lt;p&gt;最近各种云平台很是火爆，博主也跟了一把风。之前博客主题的评论列表信息栏处，调用的是&lt;a href="http://int.dpool.sina.com.cn/iplookup/iplookup.php" title="查看详情"&gt;新浪IP地址查询接口&lt;/a&gt;。新浪的这个IP接口早在2009年就开放了，不过貌似查询的结果准确性不是很高，不像纯真的IP库更新得那么及时。所以，vfhky寻思换个其它的IP查询接口提高博客的评论信息准确度。&lt;/p&gt;


&lt;h5&gt;2 选择淘宝IP地址库&lt;/h5&gt;
&lt;p&gt;网上查看了下资料，提供IP查询接口的有这么几个：腾讯、搜狐、淘宝和有道。不过，腾讯已经把接口（http://fw.qq.com/ipaddress）封掉了，只限企鹅自家使用。题外话：对于腾讯的做法咱们习惯就好，早已无力吐槽了。相对于搜狐和有道的IP接口，淘宝肯定具有优势。谁都不能低估淘宝帝国对于掌握用户信息深度的强烈渴望和决心，而IP地址就是用户的足迹线所在。在查看了淘宝IP地址库的API官方资料（地址【&lt;a href="http://ip.taobao.com/accurancy.php"&gt;http://ip.taobao.com/accurancy.php&lt;/a&gt;】），vfhky毅然决定把新浪的IP查询接口改成淘宝的IP查询接口。&lt;/p&gt;
&lt;p&gt;&lt;img alt="淘宝IP地址库的API接口" src="https://o3cex9zsl.qnssl.com/2013/08/TaobaoIP_API.png" /&gt;&lt;/p&gt;
&lt;h5&gt;3 需要考虑的问题&lt;/h5&gt;
&lt;p&gt;博客主题评论列表的IP信息是通过Jquery加载的，而淘宝提供的API接口返回的数据是Json格式。相对于直接通过PHP获取Json数据而言，这种Ajax交互方式比较难一点。博主就先卖个关子，具体的实现代码将在下一篇文章贴出。这里贴出之前用新浪IP地址查询接口获取IP信息的代码，评论列表的IP信息同样是通过Jquery加载处理后的新浪IP查询接口返回的JS数据。&lt;/p&gt;
&lt;h5&gt;4.1 修改functions.php文件&lt;/h5&gt;
&lt;p&gt;找到评论信息显示列表的那个文件（博主的是functions.php），在相应的位置加上如下代码。其作用是在jQuery获取IP信息之前，显示“正在查询……”的字样。代码中的waiting.gif是上面的省略号动态图片，这个看个人喜好来决定需不需要用；$ip代表从数据查询出来的评论者的IP数据。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;vfhkyipquery&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;data-ip=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;#39; . $ip . &amp;#39;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;正在查询&lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;#39; . get_bloginfo(&amp;#39;template_url&amp;#39;) . &amp;#39;/images/waiting.gif&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;...&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;vertical-align:baseline;&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;4.2 修改JS文件&lt;/h5&gt;
&lt;p&gt;在主题的一个js文件中添加以下代码，注意该js文件一定要是会在文章页面加载的哦！最终的效果会类似于：中国广东深圳 电信。&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nx"&gt;jQuery&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;ready&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;vfhkyipquery&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
        &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;.vfhkyipquery&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;each&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
            &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;trim&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;data-ip&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt;&lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getScript&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;http://int.dpool.sina.com.cn/iplookup/iplookup.php?format=js&amp;amp;ip=&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;remote_ip_info&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ret&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
                    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;h&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;remote_ip_info&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;country&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;f&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;remote_ip_info&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;province&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;remote_ip_info&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;city&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;g&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;remote_ip_info&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                    &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+=&lt;/span&gt;&lt;span class="nx"&gt;h&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                    &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+=&lt;/span&gt;&lt;span class="nx"&gt;f&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;f&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                    &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+=&lt;/span&gt;&lt;span class="nx"&gt;g&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;未知IP地址&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;replaceWith&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;lt;span class=&amp;quot;ipinfo&amp;quot;&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;lt;/span&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;})&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;&lt;span class="nx"&gt;vfhkyipquery&lt;/span&gt;&lt;span class="p"&gt;()})&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h5&gt;5 后记&lt;/h5&gt;
&lt;p&gt;搞定，很简单吧！由此可见，新浪IP地址查询接口返回的js数据很容易通过jQuery加载到PHP文件中去。&lt;a href="https://typecodes.com/web/wptaoiplibapitwo.html" title="《WordPress使用淘宝IP地址库的API显示评论者的位置信息（二）》"&gt;下一篇&lt;/a&gt;文章将会贴出如何使用淘宝IP地址库的API接口在wordpress中显示评论者的位置信息。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Mon, 26 Aug 2013 23:20:00 +0800</pubDate><guid>tag:typecodes.com,2013-08-26:web/wptaoiplibapione.html</guid><category>wordpress淘宝ip库</category></item><item><title>细数国内五个大型的云开放平台</title><link>https://typecodes.com/mix/domesticfivecloudplatform.html</link><description>&lt;h5&gt;1 发展历程&lt;/h5&gt;
&lt;p&gt;自从2007年5月24日脸谱Facebook推出自己的API应用接口后，Google、Twitter等IT巨头也纷纷推出了自己的开放平台，例如目前国内很多开发人员都在使用GAE部署自己的项目。而国内云平台的初步形成是在2008年，豆瓣、搜狐、天涯以及人人网等几个社区类型的IT企业成为了中坚力量；2009年，淘宝已经展示了巨大的发展潜力，于是也推出了自己的开放平台；而到了2010年，几大IT巨头——新浪（微博）、百度、腾讯也逐渐构建了自己的API系统。尤其是新浪微博，在开放程度上为最大。截至目前，新浪微博的API近乎100多个了；而相对的腾讯微博的接口则少的可怜，区区的十几个。在历经5年之后，到了2013年的今天，各大开放平台的体系已经较为清晰和稳定。下面列举了国内的几个博主认为比较具有人气的开放平台（排名不分先后）。&lt;/p&gt;


&lt;h5&gt;2.1 新浪微博开放平台&lt;/h5&gt;
&lt;p&gt;新浪微博开放平台创立于2010年7月，其地址是 &lt;a href="http://open.weibo.com/" title="新浪微博开放平台"&gt;http://open.weibo.com/&lt;/a&gt; 。开放平台的作用也就是三个方面：把自己内部的应用API安全开放；让外部合作伙伴把APP做出来；把更多的客户资源巩固扩大化。该平台是一个基于新浪微博客系统的开放的信息订阅、分享与交流平台。它为您提供了海量的微博信息、粉丝关系、以及随时随地发生的信息裂变式传播渠道。新浪微博作为国内最大的类Twitter网站，占据着独天得厚的客户优势。所以，作为开发人员需要重点解决的是如何利用这些资源达到“现金化”。&lt;/p&gt;
&lt;p&gt;&lt;img alt="新浪微博开放平台" src="https://o3cex9zsl.qnssl.com/2013/08/opensina.png" title="新浪微博开放平台" /&gt;&lt;/p&gt;
&lt;h5&gt;2.2 百度开放平台&lt;/h5&gt;
&lt;p&gt;成立于2010年9月的百度开放平台，其地址是 &lt;a href="http://open.baidu.com/" title="百度开放平台"&gt;http://open.baidu.com/&lt;/a&gt; 。百度开放平台主要以Web应用、内容开放为主。目前百度开放平台主要由三部分构成：百度框计算、百度开放云以及百度站长、百度百科等开放资源。相信大家接触的比较多的是百度开放云中的百度开发者中心，也即常说的BAE平台。现在在百度搜索“计算器”等词，你会发现百度首页第一条会展示百度网页应用的产品。这些APP都是基于百度开发平台开发而成的。不过，在博主看来，百度开放平台还是缺乏类似于新浪微博、QQ等具有大量黏性用户的资源，所以普通的开发者很难从他们的API中做出有价值的产品。&lt;/p&gt;
&lt;p&gt;&lt;img alt="百度开放平台" src="https://o3cex9zsl.qnssl.com/2013/08/openbaidu.png" title="百度开放平台" /&gt;&lt;/p&gt;
&lt;h5&gt;2.3 腾讯开放平台&lt;/h5&gt;
&lt;p&gt;同样是在2010年，腾讯开放平台逐渐形成，其地址是 &lt;a href="http://open.qq.com/" title="腾讯开放平台"&gt;http://open.qq.com/&lt;/a&gt; 。截止至目前，腾讯开放平台逐步建立了基于QZONE以及QQ校友等社区类型的开放平台、基于Web（例如Discuz论坛）的腾讯WebQQ开放平台、基于Q+的腾讯Q+开放平台以及腾讯财付通开放平台等等子系列平台。拥有比新浪微博更具黏性的客户资源，腾讯通过Web应用、客户端、无线应用、搜索、游戏等打造多维度平台。随着“腾讯帝国”时代的来临，腾讯为了进一步扩大产品优势，推出了开放平台达到21个。不过，相对于新浪微博开放平台的丰富的API接口，腾讯开放平台似乎有所顾虑或者说是保守。例如，近段时间博主在折腾QQ互联的API，发现里面的接口只能获取基础的数据以及相应的基本操作。而且有些接口不是很完善，例如使用接口读取用户的地址，返回的数据只是代表地区的数字，开发人员还需进一步转换才能正常显示位置。&lt;/p&gt;
&lt;p&gt;&lt;img alt="腾讯开放平台" src="https://o3cex9zsl.qnssl.com/2013/08/openqq.png" title="腾讯开放平台" /&gt;&lt;/p&gt;
&lt;h5&gt;2.4 淘宝开放平台&lt;/h5&gt;
&lt;p&gt;早在2009年6月，淘宝就建立了自己的开放平台，其地址是 &lt;a href="http://open.taobao.com/" title="淘宝开放平台"&gt;http://open.taobao.com/&lt;/a&gt; 。开发人员可通过淘宝API来获取淘宝用户、淘宝商品、淘宝店铺、淘宝交易明细、淘宝商品管理等信息，并建立相应的电子商务应用。在博主看来，淘宝开放平台拥有较之其他平台最清晰的平台模式，而且开放了几乎可以对所有店铺操作的API权限，这就大大降低了开发成本。随着淘宝各产品线的扩大化，相信淘宝开放平台会给纵多开发者带来更多的惊喜和福利！&lt;/p&gt;
&lt;p&gt;&lt;img alt="淘宝开放平台" src="https://o3cex9zsl.qnssl.com/2013/08/opentaobao.png" title="淘宝开放平台" /&gt;&lt;/p&gt;
&lt;h5&gt;2.5 360开放平台&lt;/h5&gt;
&lt;p&gt;360开放平台算是“半路出家”，其地址是 &lt;a href="http://open.360.cn/" title="360开放平台"&gt;http://open.360.cn/&lt;/a&gt; 。从360开放平台的首页可以看到，它包含了360手机助手、360软件、360游戏、360浏览器、360应用等众多子系列开放平台。这些平台基本包含了360的所有产品线。依托360浏览器和360卫士的用户群体，开发人员可以开发出包括游戏、视频、小说、新闻资讯、音乐、购物、娱乐、生活健康、工具等互联网应用。但是在博主看来，对于普通开发人员来说，这些API接口似乎不太具有吸引力。类似于百度开放平台，360还是缺乏像腾讯、新浪微博的客户资源。&lt;/p&gt;
&lt;p&gt;&lt;img alt="360开放平台" src="https://o3cex9zsl.qnssl.com/2013/08/open360.png" title="360开放平台" /&gt;&lt;/p&gt;
&lt;h5&gt;3 结语&lt;/h5&gt;
&lt;p&gt;随着越来越多的IT企业迈向“云时代”的进程中，云开放平台肯定会越来越多的，而且API接口肯定也会越来越完善。但是，博主觉得只有做到了下面三步的云开放平台才能够真正吸引众多的开发者。一，拥有庞大的流量（百度流）或者庞大的用户（腾讯流）；二，拥有完善的用户体系，从而实现共享用户数据；三，清晰的平台架构和开发模式，规则透明和公平。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Sun, 25 Aug 2013 23:32:00 +0800</pubDate><guid>tag:typecodes.com,2013-08-25:mix/domesticfivecloudplatform.html</guid><category>云开放平台</category></item><item><title>jQuery引起Wordpress评论快捷提交时的一个BUG</title><link>https://typecodes.com/web/wpjquerycommentbug.html</link><description>&lt;h5&gt;1 缘由：&lt;/h5&gt;
&lt;p&gt;上周六博主一直在纠结是否设置没有Gravatar头像的用户不能在博客发表评论，权衡利弊后，最终还是决定实施这个想法。主要考虑两个因素：最大可能避免那些发广告的人、提升博客评论的整体质量。因为一般的广告Spamer都不会有Gravatar头像，所以禁止掉这个用户群体后能尽量避免博客的垃圾评论；其次，博客之前会为无头像用户默认随机生成一张NBA球队的图片作为头像（方法见&lt;a href="https://typecodes.com/web/againwpgravatarcache.html" title="再议Gravatar头像缓存至本地服务器"&gt;《再议Gravatar头像缓存至本地服务器》&lt;/a&gt;），但这类用户的评论大多“含金量”不高。综上两方面，博主毅然选择了禁止。虽然这样可能会损失部分用户，例如纵多无觅的使用者等。&lt;/p&gt;


&lt;h5&gt;2 实现代码：&lt;/h5&gt;
&lt;p&gt;其实在之前那篇&lt;a href="https://typecodes.com/mix/commentlinksitecertification.html"&gt;《关于博客评论的链接审查、网站认证的声明》&lt;/a&gt;文章中，@Teddysun 就提到这个想法，现在终于实施了。其实代码也很简单，需要改动两个地方。&lt;/p&gt;
&lt;h6&gt;2.1 修改主题comments-ajax.php文件&lt;/h6&gt;
&lt;p&gt;目前，大部分的Wordpress主题的评论程序用的都是Willin Kan大神写的。所以找到主题根目录下面的comment-ajax.php文件，然后在大约91行的地方增加一个elseif语句，具体如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="x"&gt;if ( !&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;user&lt;/span&gt;&lt;span class="x"&gt;-&amp;gt;ID ) &lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;  if ( 6 &amp;gt; strlen(&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;comment_author_email&lt;/span&gt;&lt;span class="x"&gt;) || &amp;#39;&amp;#39; == &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;comment_author&lt;/span&gt;&lt;span class="x"&gt; )&lt;/span&gt;
&lt;span class="x"&gt;    err( __(&amp;#39;提示：必须填写昵称及邮件。&amp;#39;) ); // 将 wp_die 改为错误提示&lt;/span&gt;
&lt;span class="x"&gt;  elseif ( !is_email(&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;comment_author_email&lt;/span&gt;&lt;span class="x"&gt;))&lt;/span&gt;
&lt;span class="x"&gt;    err( __(&amp;#39;提示：请输入一个有效的电子邮件地址。&amp;#39;) );// 将 wp_die 改为错误提示&lt;/span&gt;
&lt;span class="x"&gt;  elseif (vfhky_checkgravatar(&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;comment_author_email&lt;/span&gt;&lt;span class="x"&gt;) == 0)&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;    err( __(&amp;#39;请使用Gravatar头像留言。&amp;#39;) );  //无头像用户无法提交评论&lt;/span&gt;
&lt;span class="x"&gt;  }&lt;/span&gt;
&lt;span class="x"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h6&gt;2.2 修改主题functions.php文件&lt;/h6&gt;
&lt;p&gt;在主题的functions.php文件中添加vfhky_checkgravatar函数，其功能是判断用户是否具有Gravatar头像。因为博主在其它文件中还会用到这个函数，所以把它写进了functions.php中。当然也可以直接在comments-ajax.php文件中添加这个函数。&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="x"&gt;//check of gravatar&lt;/span&gt;
&lt;span class="x"&gt;function vfhky_checkgravatar($email){&lt;/span&gt;
&lt;span class="x"&gt;  $hashemail = md5(strtolower(trim($email)));&lt;/span&gt;
&lt;span class="x"&gt;  $checkuri = &amp;#39;http://www.gravatar.com/avatar/&amp;#39; . $hashemail . &amp;#39;?d=404&amp;#39;;&lt;/span&gt;
&lt;span class="x"&gt;  $headers = @get_headers($checkuri);&lt;/span&gt;
&lt;span class="x"&gt;  if (!preg_match(&amp;quot;|200|&amp;quot;, $headers[0])) {&lt;/span&gt;
&lt;span class="x"&gt;    return 0;&lt;/span&gt;
&lt;span class="x"&gt;  }&lt;/span&gt;
&lt;span class="x"&gt;  else {return 1;}&lt;/span&gt;
&lt;span class="x"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h5&gt;3 测试时产生BUG：&lt;/h5&gt;
&lt;p&gt;接下来就是在本地环境测试，当在评论框的“邮箱”一栏中随意填写一个邮箱时（此时右边显示默认的Gravatar头像）。在点击“提交”按钮后可以看到如下图中的文字提示。但是当使用快捷键“Ctrl+Enter”时，竟然没有出现上面的提示内容而是直接跳转到了wp-comments-post.php文件。好吧，BUG来临……&lt;/p&gt;
&lt;p&gt;&lt;img alt="没有Gravatar头像时无法提交警告" src="https://o3cex9zsl.qnssl.com/2013/08/comment_erro.png" title="没有Gravatar头像时无法提交警告" /&gt;&lt;/p&gt;
&lt;p&gt;甚是奇怪，为什么表单提交后会跳转到跳转的文件呢？这个测试结果只能说明comments.php中的添加的代码没有执行。可是在检查了comments-ajax.php这个文件程序后，还是没发现任何错误。好吧，为了解决这个问题周六折腾了一天还是没解决。&lt;/p&gt;
&lt;h5&gt;4 解决方案：&lt;/h5&gt;
&lt;p&gt;星期天早上起来，硬着头皮决定把整个主题整理一下，看看能不能找到一些头绪。当整理到js文件目录时，突然想到这些开源js应该更新了。于是上jQuery官网看了下，果然jquery.min.js更新到了2.0.3了。而博客所用到的这个压缩js还只是1.6的版本，立马更换掉。再打开博客首页看看有没有异常，结果发现首页的幻灯片竟然错位了。好吧，当看到官网下面图片的时候蛋都碎了一地。这不是又折腾兼容么，无力吐槽！那只能按版本从高到低一路测试下来，到1.8.3版本的时候，IE和搜狗都显示正常了。&lt;/p&gt;
&lt;p&gt;&lt;img alt="jquery2.x不支持IE9以下的浏览器" src="https://o3cex9zsl.qnssl.com/2013/08/jquery2.x.png" title="jquery2.x不支持IE9以下的浏览器" /&gt;&lt;/p&gt;
&lt;p&gt;完后，又回到了周六的“BUG”：评论快捷键提交后直接跳转到wp-comments-post.php。不过，在vfhky重新测试时，惊奇的发现评论框下出现了“请使用Gravatar头像留言。”的提示。尼玛，原来都是jQuery惹的祸！&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Sun, 25 Aug 2013 00:40:00 +0800</pubDate><guid>tag:typecodes.com,2013-08-25:web/wpjquerycommentbug.html</guid><category>wordpress jquery bug</category></item><item><title>3百大战又将开启？看360和百度的云盘纷争</title><link>https://typecodes.com/mix/360baiduyunpanwar.html</link><description>&lt;h5&gt;1 起由：360云盘的360G活动&lt;/h5&gt;
&lt;p&gt;本月20日晚上，博主打开360云盘官网，惊奇发现360正在为推广其PC和移动终端的云盘客户端而发起的一项活动。用户只需在自己的PC上安装最新的360云盘客户端，并成功登录后就可在官网上领取360G的云盘空间。不过，该活动已于昨日晚间时候结束。
&lt;img alt="3百大战" src="https://o3cex9zsl.qnssl.com/2013/08/fight.jpg" title="3百大战" /&gt;&lt;/p&gt;


&lt;h5&gt;2 加重：百度云盘的1T活动&lt;/h5&gt;
&lt;p&gt;而在本月22日，借机百度世界大会，百度云盘则针锋相对，于00:31时刻推出“百度云1T永久空间”活动。同样是为了推广其PC和移动终端的云盘客户端以及异常低调的“百付宝”。用户只需在PC端安装其云盘客户端，即可领取100G的免费空间；在手机移动端安装客户端，还可领取360G的免费空间；而如果再用“百付宝”支付1元的话，还可以免费领取564G的空间。面对如此诱惑，相信众多网盘拥簇者都难以招架。截止至目前，该活动仍在进行，大家可以点击 &lt;a href="http://yun.baidu.com/1t?=wenzi" title="百度云盘1T免费空间活动"&gt;http://yun.baidu.com/1t?=wenzi&lt;/a&gt; 参与领取活动。&lt;/p&gt;
&lt;p&gt;&lt;img alt="百度云盘1T免费空间活动" src="https://o3cex9zsl.qnssl.com/2013/08/baidu.png" title="百度云盘1T免费空间活动" /&gt;&lt;/p&gt;
&lt;h5&gt;3 不服：360云盘的1T活动&lt;/h5&gt;
&lt;p&gt;面对百度的无声“宣言”，360云盘随即回击百度云推出“1T空间免费送”活动。先不说各自云盘客户端的用户体验如何，至少不能在气势上落后对手半分。人家一出手就是1T，如果自己还抱着小小的360G岂不显得小家子气？于是，立马上攻城师搞起来！从下图的360云盘的新浪官方微博的发言可以看到，从上午09:51时刻开始，360云盘已经着手“对抗事宜”。&lt;/p&gt;
&lt;p&gt;&lt;img alt="360云盘新浪官方微博" src="https://o3cex9zsl.qnssl.com/2013/08/360weibo.png" title="360云盘新浪官方微博" /&gt;&lt;/p&gt;
&lt;p&gt;先是从转发该条微博的用户中抽取用户作为活动对象，紧接着在下午14:05实施全面的升级活动。在活动的同时，还高喊“无需1块钱，无需繁琐的支付过程，1T空间你直接拿走。”的空号。截止至目前，该活动同样仍在进行中，用户可通过点击 &lt;a href="http://yunpan.360.cn/" title="360云盘1T免费空间活动"&gt;http://yunpan.360.cn/&lt;/a&gt; 参与领取活动。&lt;/p&gt;
&lt;p&gt;&lt;img alt="360云盘1T免费空间活动" src="https://o3cex9zsl.qnssl.com/2013/08/360.png" title="360云盘1T免费空间活动" /&gt;&lt;/p&gt;
&lt;h5&gt;4 分析：移动布局之争&lt;/h5&gt;
&lt;p&gt;在这场云盘的纷争中，用户虽然暂时未遭受像“3Q大战”般的损失，反而好像是受益方。如此“疯狂”的免费空间，相信谁也不曾想到过。然而在博主看来，这场纷争只是两个IT江湖大佬们在移动端布局抢地盘的必然结果。之前的“3Q大战”和“3百大战”肯定也让百度见识到了客户端的重要性，把窝筑在“云”上始终是不安全的。不着地的话，一不小心就会被对手扔出用户的视野，永远也别想回来了。&lt;/p&gt;
&lt;p&gt;所以，加快抢占移动客户端新资源，就能掌握未来“决战”的制高点。于是百度近期频频出招，从百度杀毒、百度浏览器等客户端，件件都是直插360的后方。如此，360还能坐以待毙吗？显然，红衣大炮肯定是不会的。那么云盘显然是一个PC和移动端资源沟通共享的重要渠道，大佬们也自然不会轻易放过。&lt;/p&gt;
&lt;h5&gt;5 结束：新一轮的“3百大战”&lt;/h5&gt;
&lt;p&gt;众所周知，目前云盘用户多集中在百度、360、金山等网络虚拟空间提供商。面对360和百度的疯狂“军备竞赛”，众多“云盘先锋”——115、盛大、华为等网盘早已疲惫不堪并且无力反抗。截止至目前，百度和360暂时沉默ing，不知二者是在继续酝酿后续升级动作，还是在考虑是否直接放大招——重启“3百大战”。但是，博主相信沉默过后必将又是一场“暴风雨”……&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Thu, 22 Aug 2013 19:35:00 +0800</pubDate><guid>tag:typecodes.com,2013-08-22:mix/360baiduyunpanwar.html</guid><category>三百大战</category></item><item><title>Linux进程之alarm()信号传送闹钟函数</title><link>https://typecodes.com/linux/linuxalarmknockfunc.html</link><description>&lt;p&gt;最近在学习Linux系统编程遇到了一个很有意思的函数：alarm()，它是一个用来设置信号传送的闹钟函数。网上找了一些资料，结合自己的学习体会，现在Mark一下。&lt;/p&gt;
&lt;h5&gt;1 alarm()函数说明&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[1] 引用头文件：#include &amp;lt;unistd.h&amp;gt;;

[2] 函数标准式：unsigned int alarm(unsigned int seconds);

[3] 功能与作用：alarm()函数的主要功能是设置信号传送闹钟，即用来设置信号SIGALRM在经过参数seconds秒数后发送给目前的进程。如果未设置信号SIGALARM的处理函数，那么alarm()默认处理终止进程。

[4] 函数返回值：如果在seconds秒内再次调用了alarm函数设置了新的闹钟，则后面定时器的设置将覆盖前面的设置，即之前设置的秒数被新的闹钟时间取代；当参数seconds为0时，之前设置的定时器闹钟将被取消，并将剩下的时间返回。
&lt;/pre&gt;&lt;/div&gt;




&lt;h5&gt;2 alarm()闹钟函数的测试&lt;/h5&gt;
&lt;p&gt;了解了alarm()函数的功能特性和返回值的特性后，我们就可以对其测试。测试方向有两个：其一，测试常规只单独存在一个闹钟函数alarm()的程序；其二，测试程序中包含多个alarm()闹钟函数。因此整理了下面几个程序，通过比较学习更有助于理解。测试环境是RedHat Linux5.3，GCC编译调试。&lt;/p&gt;
&lt;h5&gt;2.1 alarm()测试1.1&lt;/h5&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;#include &amp;lt;unistd.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;stdlib.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;signal.h&amp;gt;&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;sig_alarm&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; 
&lt;span class="p"&gt;{&lt;/span&gt; 
  &lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;argc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[])&lt;/span&gt; 
&lt;span class="p"&gt;{&lt;/span&gt; 
  &lt;span class="n"&gt;signal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SIGALRM&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sig_alarm&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
  &lt;span class="n"&gt;alarm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
  &lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
  &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Hello World!&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;&lt;img alt="alarm()信号传送闹钟函数测试1" src="https://o3cex9zsl.qnssl.com/2013/08/alarm_test1.png" title="alarm()信号传送闹钟函数测试1" /&gt;&lt;/p&gt;
&lt;p&gt;程序分析：在文件test1.c中，定义了一个时钟alarm(10)，它的作用是让信号SIGALRM在经过10秒后传送给目前main()所在进程；接着又定义了sleep(15)，它的作用是让执行挂起15秒的时间。所以当main()程序挂起10秒钟时，signal函数调用SIGALRM信号的处理函数sig_alarm，并且sig_alarm执行exit(0)使得程序直接退出。因此，printf("Hello World!\n")语句是没有被执行的。&lt;/p&gt;
&lt;h5&gt;2.2 alarm()测试1.2&lt;/h5&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;#include &amp;lt;unistd.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;stdlib.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;signal.h&amp;gt;&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;sig_alarm&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; 
&lt;span class="p"&gt;{&lt;/span&gt; 
  &lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt; 
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;argc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[])&lt;/span&gt; 
&lt;span class="p"&gt;{&lt;/span&gt; 
  &lt;span class="n"&gt;signal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SIGALRM&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sig_alarm&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
  &lt;span class="n"&gt;alarm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
  &lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
  &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Hello World!&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;&lt;img alt="alarm()信号传送闹钟函数测试2" src="https://o3cex9zsl.qnssl.com/2013/08/alarm_test2.png" title="alarm()信号传送闹钟函数测试2" /&gt;&lt;/p&gt;
&lt;p&gt;程序分析：与test1.c文件不同的是，在文件test2.c中延时函数为sleep(5)，即执行挂起5秒的时间。所以当main()程序挂起5秒钟时，由于还没到达设置的闹钟10秒，那么main就执行下面的printf("Hello World!\n")语句；紧接着又执行下面的return 0语句，从而直接退出程序。因此，整个test2.c文件输出的内容为：Hello World!。&lt;/p&gt;
&lt;h5&gt;2.3 alarm()测试2&lt;/h5&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;#include &amp;lt;unistd.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;stdlib.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;signal.h&amp;gt;&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;handler&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;hello&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;signal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SIGALRM&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;handler&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;alarm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;sleep %d ...&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;&lt;img alt="alarm()信号传送闹钟函数测试3" src="https://o3cex9zsl.qnssl.com/2013/08/alarm_test3.png" title="alarm()信号传送闹钟函数测试3" /&gt;&lt;/p&gt;
&lt;p&gt;程序分析：在文件test3.c中，定义时钟alarm(5)，而main()函数中主要是一个for循环输出语句。当main函数执行到i=5时，for循环先执行printf("sleep %d ...\n", 5)语句输出"sleep 5 ..."，然后执行sleep(1)语句。此时已经到达闹钟时间5秒，因此会把信号SIGALRM传送给当前main()函数进程；接着调用SIGALRM信号的处理函数handler，从而输出"hello"，然后又返回到sleep(1)这个点；最后for循环执行i=6，输出"sleep 6"，最终延时1秒后结束整个程序。&lt;/p&gt;
&lt;p&gt;以上三个程序都只包含一个alarm()闹钟函数，下面两个程序包含两个alarm()。并且为了更为真切的观察包含alarm()闹钟函数的程序的执行过程，程序通过调用系统打印输出当前时间，通过时间差来进一步理解。&lt;/p&gt;
&lt;h5&gt;2.4 alarm()测试3.1&lt;/h5&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;#include &amp;lt;unistd.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;stdlib.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;signal.h&amp;gt;&lt;/span&gt;

&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;sig_alrm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;signo&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;signal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SIGALRM&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;sig_alrm&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;system&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;date&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;alarm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%d&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;alarm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
  &lt;span class="n"&gt;pause&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;sig_alrm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;signo&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
  &lt;span class="n"&gt;system&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;date&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;&lt;img alt="alarm()信号传送闹钟函数测试4" src="https://o3cex9zsl.qnssl.com/2013/08/alarm_test4.png" title="alarm()信号传送闹钟函数测试4" /&gt;&lt;/p&gt;
&lt;p&gt;程序分析：在test4.c的main()函数中，先设置了一个闹钟函数alarm(20)，即在20秒时将SIGALRM信号传送送给当前进程；然后又定义了一个延时函数sleep(5)，接着又定义了一个闹钟函数alarm(15)，它的作用是清除前面设置的闹钟alarm(20)并返回剩余的时间20-5=15秒。所以，程序先执行system("date")语句输出当前时间；然后进程休眠5秒后，程序执行输出语句printf("%d\n",alarm(15))，由于alarm(15)先返回15秒，即打印输出15；接着程序执行pause()函数，使当前进程处于挂起状态，直到捕捉到一个信号；当再过15秒后，SIGALARM信号的处理函数sig_alrm执行system("date")语句输出当前时间；最后pause终止进程。因此，整个程序执行的时间为5+15=20秒。&lt;/p&gt;
&lt;h5&gt;2.5 alarm()测试3.2&lt;/h5&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;#include &amp;lt;unistd.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;stdlib.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;signal.h&amp;gt;&lt;/span&gt;

&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;sig_alrm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;signo&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;signal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SIGALRM&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;sig_alrm&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;system&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;date&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;alarm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%d&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;alarm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
  &lt;span class="n"&gt;pause&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;sig_alrm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;signo&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
  &lt;span class="n"&gt;system&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;date&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;&lt;img alt="alarm()信号传送闹钟函数测试5" src="https://o3cex9zsl.qnssl.com/2013/08/alarm_test5.png" title="alarm()信号传送闹钟函数测试5" /&gt;&lt;/p&gt;
&lt;p&gt;程序分析：与test4.c文件不同的是，在文件test5.c中闹钟函数为alarm(5)。因此，整个程序执行的时间为5+5=10秒。值得注意的是，&lt;code&gt;alarm(0)&lt;/code&gt;表示清除之前设置的闹钟信号，并返回0。因为，如果这里把alarm(5)改成alarm(0)，那么整个程序执行的时间为5+0=5秒。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Wed, 14 Aug 2013 22:09:00 +0800</pubDate><guid>tag:typecodes.com,2013-08-14:linux/linuxalarmknockfunc.html</guid><category>alarm信号</category><category>信号</category></item><item><title>博客必须养成的良好习惯：数据库备份</title><link>https://typecodes.com/mix/blogdatabackup.html</link><description>&lt;p&gt;常说“有备无患”，指的是在生活中要提前做好准备，那么就能在未知的境遇面前不至于慌了手脚。昨天vfhky就小小的感受了一把，发觉这句话还真神：确实能做到让博客起死回生的作用！&lt;/p&gt;
&lt;p&gt;WP3.6应该是在前一周就发布出来了，由于工作的原因，vfhky没及时更新。因为每次升级WP程序之前，我都会把整个主题程序、数据库以及其它几个重要文件备份一遍，这些都需要时间。所以只好等到周末才升级，顺便惯例性的写两篇文章。于是，昨天中午把主题、数据库等都备份好后，博主就迫不及待的把WP3.5升级到了最新的3.6版本。升级完后，发现themes文件夹下多了一个thirteen的主题文件夹。尼玛，不带这样的吧？升个级还要装个主题……记得以前wordpress升级不会安装官方自带的主题的吧，果断删之！&lt;/p&gt;


&lt;p&gt;&lt;img alt="MySQL数据库备份" src="https://o3cex9zsl.qnssl.com/2013/08/MySQL.jpg" title="MySQL数据库备份" /&gt;&lt;/p&gt;
&lt;p&gt;接着再检查下博客的页面是否和升级前一样正常，不正常的话就可以用之前备份好的主题程序以及其它相关文件替换一下。完后就是到其它机油博客逛了一圈，顺便留几个爪子卖个萌啥的。下午老赵童鞋来博客看了篇关于SEO的文章，顺道踩了几个脚印，挺聊得来的。晚上9点左右，开始写文章了，主题关于下午自己给博客弄的一个乌龙——用安全联盟检测博客程序，接着博客就受到了安全联盟的“模拟攻击”，然后就是自己瞎折腾了一番。&lt;/p&gt;
&lt;p&gt;在UE里面写完后，就贴到博客后台的文章写作栏目去发表了。然后去前台页面看了下，发觉有几个地方不太合适，所以就到服务器的控制面板里面去修改了下。结果，不知道咋就手贱，竟然点了“恢复MySql数据库”按钮边上的“清空MySql数据库”。顿时石化……&lt;/p&gt;
&lt;p&gt;慌乱中突然记起了中午备份过数据库，哈哈，老天不负苦心人呐，有救了！遂以雷霆万钧之势关闭主机，然后马不停蹄地把备份的数据库导入到phpmyadmin中，接着果断重启主机服务。虽然说下午的一部分数据（留言、文章浏览数统计）丢失了一部分，但损失还算不大，也算是“起死回生”咯！&lt;/p&gt;
&lt;p&gt;所以说，做博客必须要养成的一个好习惯：备份数据库。当然对于喜欢折腾的童鞋来说，咱们还得在备份数据库的同时把主题程序也备份一下。这两个步骤做到了，也就是IT银中传说的“数据备份”。其实备份也不是很麻烦，打包压缩-下载-删包，也就三个步骤而已。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Mon, 12 Aug 2013 20:32:00 +0800</pubDate><guid>tag:typecodes.com,2013-08-12:mix/blogdatabackup.html</guid><category>mysql备份</category></item><item><title>Linux问题两连击：桥接模式无法上网、ping域名失败</title><link>https://typecodes.com/linux/linuxbridgepingnot.html</link><description>&lt;p&gt;问题一：Linux能ping通ip但不能ping通域名；&lt;/p&gt;
&lt;p&gt;问题二：Linux桥接模式能与宿主机Windows通信互访但无法访问互联网。&lt;/p&gt;
&lt;p&gt;上面两个问题都是由Linux中的DNS配置不正确导致的，因为DNS的作用就是将某个域名解析到相对应的IP上。当DNS无法正常把IP和域名相对应起来的时候就出现了上面两种常见的情况。所以，当虚拟机中的Linux系统能够正常和宿主通信，且能ping通外部IP地址，却无法ping通域名。&lt;/p&gt;


&lt;p&gt;那么我们就需要配置Linux的DNS，登录root用户，然后找到/etc/目录下的resolv.conf文件，然后修改DNS。这样就解决了Linux系统中桥接模式无法上网、能ping通ip但不能ping通域名的问题。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@localhost ~]# ping baidu.com
ping: unknown host baidu.com

[root@localhost ~]# vi /etc/resolv.conf
#search localdomain
nameserver 202.102.3.144
nameserver 202.102.3.141
[root@localhost ~]# service network restart
Shutting down interface eth0:  [  OK  ]
Shutting down loopback interface:  [  OK  ]
Bringing up loopback interface:  [  OK  ]
Bringing up interface eth0:  RTNETLINK answers: Invalid argument
[  OK  ]
[root@localhost ~]# ping baidu.com
PING baidu.com (123.125.114.144) 56(84) bytes of data.
64 bytes from 123.125.114.144: icmp_seq=1 ttl=49 time=31.2 ms
64 bytes from 123.125.114.144: icmp_seq=2 ttl=49 time=30.0 ms
……
[root@localhost ~]# firefox typecodes.com
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Sun, 04 Aug 2013 01:14:00 +0800</pubDate><guid>tag:typecodes.com,2013-08-04:linux/linuxbridgepingnot.html</guid><category>linux桥接模式</category></item><item><title>Oracle数据库SQL操作语句报错的解决</title><link>https://typecodes.com/database/oraclesqlerror.html</link><description>&lt;p&gt;最近在小红帽里面用GCCC编译含Oracle数据库SQL操作语句的C程序时候遇到了下面的7个报错信息，现整理出来Mark一下。&lt;/p&gt;
&lt;h5&gt;1 错误信息&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;[-1400][ORA-01400: cannot insert NULL into (&amp;quot;CARDMAIN&amp;quot;.&amp;quot;CLR_SFTC000BLOCK0&amp;quot;.&amp;quot;SE]&lt;/span&gt;
&lt;span class="err"&gt;&amp;lt;!--&lt;/span&gt;
&lt;span class="err"&gt;描述：CARDMAIN数据库用户，CLR_SFTC000BLOCK0数据表，SE表字段&lt;/span&gt;

&lt;span class="err"&gt;原因：Oracle数据库对于特定类型的非空字段无法区分空值和空字符串&lt;/span&gt;

&lt;span class="err"&gt;解决：明确数据源中的空值类型，并且在INSERT和UPDATE中必须插入一个值，不能将某个值修改为NULL。&lt;/span&gt;
&lt;span class="err"&gt;--&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;




&lt;h5&gt;2 错误信息&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;[-12899][ORA-12899: value too large for column &amp;quot;CARDMAIN&amp;quot;.&amp;quot;CLR_SFTC000BLOCK0&amp;quot;.&amp;quot;]&lt;/span&gt;
&lt;span class="err"&gt;&amp;lt;!--&lt;/span&gt;
&lt;span class="err"&gt;原因：SQL语句中对于某个字段列中的值类型不符合。例如将int类型的值插入到char类型的数据库字段中。&lt;/span&gt;

&lt;span class="err"&gt;解决：检查字段类型。&lt;/span&gt;
&lt;span class="err"&gt;--&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;3 错误信息&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;[ORA-00984: column not allowed here]&lt;/span&gt;
&lt;span class="err"&gt;&amp;lt;!--&lt;/span&gt;
&lt;span class="err"&gt;原因：一般出现在SQL插入数据时，值引号使用没有成对；又或者应该char类型的字段在插入值时被当做int等类型不加单引号。&lt;/span&gt;

&lt;span class="err"&gt;解决：当数据以char的形式存在时,应加单引号,则插入数据库就不会出现类似错误。例如当数据以char的形式存在时，应加单引号；又或者在SQL插入语句中出现数组不加单引号，直接执行的话就会出现这个错误。&lt;/span&gt;
&lt;span class="err"&gt;--&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;4 错误信息&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[-1756][ORA-01756: quoted string not properly terminated
&amp;lt;!--
原因：SQL语句不完整或有语法错误，例如SQL语句引号内的字符串没有正常结束（即不成对）；

解决：检查SQL语句，例如相邻之间的数据是否漏掉了一个单引号。
--&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;5 错误信息&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[-1008][ORA-01008: not all variables bound] 
&amp;lt;!--
原因/解决：SQL插入语句中漏掉了某个必须字段的值。
--&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;6 错误信息&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;[-1][ORA-00001: unique constraint (CARDMAIN.pk_clr_sftc000block0) violated]&lt;/span&gt;
&lt;span class="err"&gt;&amp;lt;!--&lt;/span&gt;
&lt;span class="err"&gt;原因：违反唯一约束，即在INSERT和UPDATE语句中指定值不能已存在于表中，不过允许存在多个NULL值。&lt;/span&gt;

&lt;span class="err"&gt;解决：原来的oracle数据库中已近存在主键值相同的行了，那么如果插入主键值相同的数据就会造成主键冲突。&lt;/span&gt;
&lt;span class="err"&gt;--&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Sun, 04 Aug 2013 00:04:00 +0800</pubDate><guid>tag:typecodes.com,2013-08-04:database/oraclesqlerror.html</guid><category>oracle</category></item><item><title>PHP获取两个时间相差的年数、月数和天数</title><link>https://typecodes.com/web/phptimegap.html</link><description>&lt;p&gt;今天在查看博客的统计栏时，发现那个“安全运行”的时间只显示了当前时间距离博客的建立时间相差的天数。这样看起来不怎么舒服：要是再过几年后，运行了七八百天，那是不是用户还得估算一下是几年了啊。因此，vfhky觉得还是把具体相差的年月日都写出来，这样才符合用户体验。&lt;/p&gt;
&lt;p&gt;那么，如何获取两个不同时间相差几年几月几日呢？比如当前时间距离2008年08月08日的北京奥运会有几年几月几日了？晚上琢磨了下，实现效果如下图所示（也可以点击右侧栏的“博客统计”栏目查看效果）。&lt;/p&gt;
&lt;p&gt;&lt;img alt="PHP获取两个时间相差的年数、月数和天数" src="https://o3cex9zsl.qnssl.com/2013/07/Time_gap.gif" title="PHP获取两个时间相差的年数、月数和天数" /&gt;&lt;/p&gt;


&lt;p&gt;代码如下，需要说明的是：1、定义一年为360天，一个月为30天；2、代码中86400=24*60*60，代表一天中共有多少秒；3、这两个时间都要规范的写成类似2013-07-28的形式；4、推广到所有的PHP程序，可以把Get_option('swt_builddate')这个wordpress获取后台数据的参数改成需要比较的时间参数。&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6
7
8
9&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
  &lt;span class="c1"&gt;//Get detail gap of year,month and days between two different time by vfhky 20130728&lt;/span&gt;
  &lt;span class="nv"&gt;$common&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;time&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nb"&gt;strtotime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;get_option&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;swt_builddate&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)));&lt;/span&gt;
  &lt;span class="nv"&gt;$a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;floor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$common&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;86400&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;360&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;    &lt;span class="c1"&gt;//整数年&lt;/span&gt;
  &lt;span class="nv"&gt;$b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;floor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$common&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;86400&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nv"&gt;$a&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;//整数月&lt;/span&gt;
  &lt;span class="nv"&gt;$c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;floor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$common&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;86400&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nv"&gt;$a&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;360&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nv"&gt;$b&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;   &lt;span class="c1"&gt;//整数日&lt;/span&gt;
  &lt;span class="nv"&gt;$d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;floor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$common&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;86400&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;    &lt;span class="c1"&gt;//总的天数&lt;/span&gt;
  &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$a&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;年&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;$b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;月&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;$c&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;日（共计&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;$d&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;天）&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Mon, 29 Jul 2013 00:19:00 +0800</pubDate><guid>tag:typecodes.com,2013-07-29:web/phptimegap.html</guid><category>php时间相差</category></item><item><title>PHP版网页随机音乐自动播放器（Wordpress通用）</title><link>https://typecodes.com/web/phpwpmusicplayer.html</link><description>&lt;p&gt;最近想在博客的NBA专栏添加一个功能，那就是背景音乐。如果每次进入页面的时候都播放相同的音乐，次数多了就腻了，所以就想整个随机播放的。网上看了下相关的教程，都是用JS写的。由于JS的加载进度会影响整个网页的加载速度，所以放弃了JS，那就用PHP来解决吧。另外，所用到的music.swf文件已经放到博客的百度网盘里面了，大家可以下载来试试看。&lt;/p&gt;
&lt;p&gt;&lt;img alt="PHP版网页随机音乐自动播放器" src="https://o3cex9zsl.qnssl.com/2013/07/random_player.png" title="PHP版网页随机音乐自动播放器" /&gt;&lt;/p&gt;


&lt;p&gt;不多说，直接上代码。需要注意的是：这段网页随机音乐自动播放器代码，也可以用在除了Wordpress程序外的其它PHP系统。功能当然是先能够随机加载多首歌曲，然后随机播放，其次是类似于背景音乐的自动播放功能。具体大家可以在博客首页右上侧点击博客的“NBA”专栏，然后随便进入一个图片集就有“视听效果”了。另外，代码中只选择了4个skydrive的MP3外链文件，数量可以自己决定；对于随机排序的话，大家也可以自由排序组合，例如可以通过增加一个else if来丰富随机播放。&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt; 
&lt;span class="cm"&gt;/* Create function vfhky_music()&lt;/span&gt;
&lt;span class="cm"&gt; * @Autor：vfhky&lt;/span&gt;
&lt;span class="cm"&gt; * @Para：$autostart(defaultl:yes)&lt;/span&gt;
&lt;span class="cm"&gt; * @Created：20130727&lt;/span&gt;
&lt;span class="cm"&gt; * @Modified：20131027 14:40&lt;/span&gt;
&lt;span class="cm"&gt; * @Thanks：@stelos&lt;/span&gt;
&lt;span class="cm"&gt; */&lt;/span&gt;

&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;vfhky_music&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$autostart&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;yes&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
  &lt;span class="nv"&gt;$random&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;intval&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;mt_rand&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
  &lt;span class="nv"&gt;$random_1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;http://storage.live.com/items/4054252DDEB2E987!268?a.mp3&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nv"&gt;$random_2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;http://storage.live.com/items/4054252DDEB2E987!266?a.mp3&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nv"&gt;$random_3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;http://storage.live.com/items/4054252DDEB2E987!265?a.mp3&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nv"&gt;$random_4&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;http://storage.live.com/items/4054252DDEB2E987!267?a.mp3&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$random&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;&lt;span class="c1"&gt;//3,1,2,4 &lt;/span&gt;
    &lt;span class="nv"&gt;$content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;$random_3&lt;/span&gt;&lt;span class="s2"&gt;|&lt;/span&gt;&lt;span class="si"&gt;$random_1&lt;/span&gt;&lt;span class="s2"&gt;|&lt;/span&gt;&lt;span class="si"&gt;$random_2&lt;/span&gt;&lt;span class="s2"&gt;|&lt;/span&gt;&lt;span class="si"&gt;$random_4&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$random&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;&lt;span class="c1"&gt;//1,4,3,2&lt;/span&gt;
    &lt;span class="nv"&gt;$content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;$random_1&lt;/span&gt;&lt;span class="s2"&gt;|&lt;/span&gt;&lt;span class="si"&gt;$random_4&lt;/span&gt;&lt;span class="s2"&gt;|&lt;/span&gt;&lt;span class="si"&gt;$random_3&lt;/span&gt;&lt;span class="s2"&gt;|&lt;/span&gt;&lt;span class="si"&gt;$random_2&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$random&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;&lt;span class="c1"&gt;//2,3,4,1&lt;/span&gt;
    &lt;span class="nv"&gt;$content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;$random_2&lt;/span&gt;&lt;span class="s2"&gt;|&lt;/span&gt;&lt;span class="si"&gt;$random_3&lt;/span&gt;&lt;span class="s2"&gt;|&lt;/span&gt;&lt;span class="si"&gt;$random_4&lt;/span&gt;&lt;span class="s2"&gt;|&lt;/span&gt;&lt;span class="si"&gt;$random_1&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="c1"&gt;//4,2,1,3&lt;/span&gt;
    &lt;span class="nv"&gt;$content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;$random_4&lt;/span&gt;&lt;span class="s2"&gt;|&lt;/span&gt;&lt;span class="si"&gt;$random_2&lt;/span&gt;&lt;span class="s2"&gt;|&lt;/span&gt;&lt;span class="si"&gt;$random_1&lt;/span&gt;&lt;span class="s2"&gt;|&lt;/span&gt;&lt;span class="si"&gt;$random_3&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;lt;embed src=&amp;quot;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;get_bloginfo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;template_url&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/music.swf&amp;quot; flashvars=&amp;quot;mp3=&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;$content&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;amp;autostart=&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;$autostart&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;quot; type=&amp;quot;application/x-shockwave-flash&amp;quot; wmode=&amp;quot;transparent&amp;quot; width=&amp;quot;240&amp;quot; height=&amp;quot;20&amp;quot;&amp;gt;&amp;lt;/embed&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;上面的函数可以放在公共页面中，例如wordpress程序中的functions.php，然后在其它页面调用即可。通过控制形参$autostart的值来决定播放器是否自动播放。&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt; 
&lt;span class="cm"&gt;/* Call function vfhky_music()&lt;/span&gt;
&lt;span class="cm"&gt; * @Para：$autostart(defaultl:yes)&lt;/span&gt;
&lt;span class="cm"&gt; * @Description: music player in web using php&lt;/span&gt;
&lt;span class="cm"&gt; */&lt;/span&gt;

  &lt;span class="c1"&gt;//this two forms below will be played automatically&lt;/span&gt;
  &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nx"&gt;vfhky_music&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nx"&gt;vfhky_music&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;yes&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c1"&gt;//this will not be played automatically&lt;/span&gt;
  &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nx"&gt;vfhky_music&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;no&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Sun, 28 Jul 2013 00:05:00 +0800</pubDate><guid>tag:typecodes.com,2013-07-28:web/phpwpmusicplayer.html</guid><category>php音乐播放器</category></item><item><title>近期博客遭受后台攻击</title><link>https://typecodes.com/mix/blogsufferattack.html</link><description>&lt;p&gt;和很多wordpress博主一样，vfhky也遭遇了博客后台的攻击。先不多说了，直接上图：&lt;/p&gt;
&lt;p&gt;&lt;img alt="不止160多次的轰炸" src="https://o3cex9zsl.qnssl.com/2013/07/1.jpg" /&gt;&lt;/p&gt;


&lt;p&gt;&lt;img alt="系统后台警告" src="https://o3cex9zsl.qnssl.com/2013/07/2.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;第一张图是博客在昨天凌晨4点钟被攻击时，博客后台自动发过来的警告邮件。大概有160封左右，而这只是截取的一部分，还有第二页……好吧，吐槽不是博主的风格。不想多说，博客只是一枚24K纯屌丝的IT自娱地，内容完全安全无公害。看了不会使人产生三鹿的效果，也不知道如何放只熊猫在您的电脑上膜拜下，反而说不定您会被博主的一些二逼行为逗乐呢！所以各位糕富帅还请高抬贵手，放过小站，vfhky感激不尽！&lt;/p&gt;
&lt;p&gt;说归说，咱还是得紫薇一下吧。在第二张图片中我们可以看到，这个“国外”攻击者使用的后台登录名为admin，这是默认安装wordpress时可能使用的管理员账号。所以，你懂得，赶快删掉吧！&lt;/p&gt;
&lt;p&gt;很搞笑的是，这次博客遭受的攻击，使用的密码都是一些简单的，例如6个8，6个6，甚至还有123456的……所以，你懂得，密码得改吧。&lt;/p&gt;
&lt;p&gt;当然，一般博主前面两条应该都做得没问题的。所以，咱们得升级一下、伪装一下，嘿嘿&lt;/p&gt;
&lt;p&gt;怎么升级？vfhky觉得首先是博客使用的wordpress主题一定要官方版的。有些主题会使用加密恶意代码，更高级点的可能会使用复杂的程序把一些恶意跳转的链接予以分拆在主题的一些模块中，这个就比较难发现。&lt;/p&gt;
&lt;p&gt;其次，注意插件的安全性。博主在之前使用过一款wp-codebox的代码高亮插件，后来爆出了http拆分响应漏洞。即使是wp官网上，一些插件都比较长的时间没更新了，所以在选择插件的时候也得注意一下。&lt;/p&gt;
&lt;p&gt;第三，巩固了自身的问题，那么我们还需要知道敌人的进攻招数，这样才能“百战不殆”。对于wordpress而言，出了常规的保持升级之外，BZ觉得最需要注意的就是穷举破解。也就是常常谈到的暴库，这个asp程序最常见（mdb数据库本身的弱点），当然其它程序如果不加防范也是存在这个风险的。好吧，这个网络上都疯传着一款神级插件：Better WP Security。它能提供系统安全状态、后台登陆限制、数据库备份、SSL安全访问及日志记录等全面又强大功能，具体情况vfhky就不多说了，有我度娘和GG呢。&lt;/p&gt;
&lt;p&gt;第四，除了插件之外，我们还可以自己动手，丰衣足食。这里只列出博主用到并且比较推荐的方法，具体怎么做？有我度娘和GG呢！首先，把wp-config.php文件设置为444权限，当然还有主题中所有文件的权限最多为544。作用是什么？有我度娘和GG呢！；其次，.htaccess是神器，具体怎么做？嘿嘿，你懂的。如果你有固定IP的话，那配置好.htaccess后就可以真正高枕无忧了！再次，在wp-config.php中添加wordpress官方提供的一组唯一的随机私密密钥，生成地址：http://codex.wordpress.org/WordPress.org_API。&lt;/p&gt;
&lt;p&gt;第五，比较重要的一点：后台登陆限制。方法有很多，.htaccess限制（wp-admin文件以及登陆IP等）、修改登陆地址、修改wp-config.php文件、插件等等。怎么做？度娘+GG无解！&lt;/p&gt;
&lt;p&gt;尼玛，又到凌晨了，唉，晚安各位筒子们！&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Sat, 27 Jul 2013 01:13:00 +0800</pubDate><guid>tag:typecodes.com,2013-07-27:mix/blogsufferattack.html</guid><category>博客攻击</category></item><item><title>虚惊一场，一大波攻击来袭</title><link>https://typecodes.com/mix/lotsofblogattack.html</link><description>&lt;p&gt;又是一个周末，清晨11点起床。老规矩，先打开电脑再去洗漱神马的。唉，天气热得不行了，估计这会儿出门会立马给红烧的节奏。。。不过，饭还是要吃滴。于是，随便找了条球裤就出门了。幸亏边上的快餐店不远，走了5分钟的样子就到了。叫了碗牛肉拉面，味道还真不错，吃完后精神多了。这家面馆是一家西北人开的，看老板娘头上戴的那个头巾应该是新疆人。&lt;/p&gt;
&lt;p&gt;回到宿舍，逛了一圈博客，整改了下程序，突然发觉好久没给博客做个安全体检了。目前，国内能免费提供比较专业的WEB漏洞检测的也就那么几个网站。一个是 &lt;a href="http://webscan.360.cn/"&gt;360网站安全检测&lt;/a&gt; ，一个是百度站长平台和加速乐一起绑定战车的 &lt;a href="http://www.anquan.org/"&gt;安全联盟&lt;/a&gt; 。&lt;/p&gt;
&lt;p&gt;安全老大360的检测结果老是有点恐吓的意思，比如你在博客贴个代码什么的，如果没贴好给浏览器解析了，那么就会误报为源码泄露。至于这个安全联盟，网上传说一旦你的网站给它列入黑名单之后，那就需要money来解封了。国外像&lt;a href="http://www.siteadvisor.com/sites/typecodes.com"&gt;迈克菲&lt;/a&gt;、&lt;a href="http://safeweb.norton.com/report/show?url=http%3A%2F%2Ftypecodes.com"&gt;诺顿&lt;/a&gt; 只会提供最终的检测结果，不会有具体的检测报告。所以即使检测出为不安全，但是也无法知晓是那种漏洞造成的。&lt;/p&gt;


&lt;p&gt;由于用安全联盟检测需要一段时间，所以就打开360网站卫士瞅瞅博客的运行状态咋样了，结果尼玛又是“一大波”攻击来袭……&lt;/p&gt;
&lt;p&gt;&lt;img alt="博客的攻击记录" src="https://o3cex9zsl.qnssl.com/2013/08/safe_detail_report.png" title="博客的攻击记录" /&gt;&lt;/p&gt;
&lt;p&gt;从图中可以看到攻击类型、IP地址、攻击目标URL等信息。要想找出漏洞肯定要看被攻击的URL，正所谓苍蝇不叮无缝的蛋嘛！看了一下，攻击者首先想到的目标是config文件，不过纳闷了。WP程序的配置文件是wp-config.php，那么这个攻击者为啥老是攻击类似/config.php、/linux/config.php、/j-series/config.php、/life/config.php等根本不存在的页面呢？这不显得很不专业吗？但是再仔细一看攻击者的攻击类型，尼玛，这功夫怎叫一个丰富全面了得！从基本的暴露文件路径，到高级点的SQL注入再到XSS跨站。除了瘫痪网站的CC攻击之外的手段几乎全用到了。顿时心中那捏一把汗，太强悍了吧，而且攻击了500多次，这也需要超强耐心啊……好吧，选了几个不同类型的攻击来看，发现博客的程序不存在相应的漏洞，基本放心了。&lt;/p&gt;
&lt;p&gt;那看看在安全联盟检测的结果，图中显示了SCANV、百度安全检测和这个什么安赛科技的评测都为正常。好吧，终于放心了。再看看上面360网站卫士的攻击统计列表，发现都是来自北京、天津的两个IP地址。仿然大悟，估计是刚才用安全联盟检测博客时，模拟尝试攻击被360网站卫士记录下来了。。。&lt;/p&gt;
&lt;p&gt;&lt;img alt="安全联盟检测的结果" src="https://o3cex9zsl.qnssl.com/2013/08/safe_list.png" title="安全联盟检测的结果" /&gt;&lt;/p&gt;
&lt;p&gt;哈哈，又是虚惊一场！不过，偶稀饭这份周末的“惊喜”！&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Sat, 27 Jul 2013 01:13:00 +0800</pubDate><guid>tag:typecodes.com,2013-07-27:mix/lotsofblogattack.html</guid><category>博客攻击</category></item><item><title>关于博客评论的链接审查、网站认证的声明</title><link>https://typecodes.com/mix/commentlinksitecertification.html</link><description>&lt;p&gt;本来不打算写这篇文章的，一来没什么真正有用的价值，二来对普通童鞋也没什么实际影响。但是这几天接二连三的带广告链接的垃圾评论，让vfhky很是无奈。虽然博客的评论设置需要填写算术验证码，在一定程度上避免了广告机器人的ad，但是还是没有阻挡那些广告黑手的热情……好吧，只能幸苦你们又是填写邮箱又是在加减运算后填写验证码，博主写文章都没这么高的兴趣，像你们致敬！&lt;/p&gt;
&lt;p&gt;其实在上一份威少的主题中，vfhky对博客评论广告链接的“封杀”想了很多。所以，在这次博客的新主题中集成了 “访问安全提示” 和 “网站安全认证” 的功能。&lt;/p&gt;


&lt;p&gt;首先，对于 “访问安全提示” 功能的实现原理如下：vfhky通过对博客评论者留下的链接地址进行审查，然后把该地址添加到库文件中去，最后在前台页面读取出来。在审查时，如果发现是广告链接OR恶意软件链接等不良地址，那么会在前台给出红色警告的标志；如果发现是优质网站（例如包子、威少、小鬼哥、醉风云等等博客），vfhky会免费将其标识为绿色安全的访问提示，并推荐给读者。&lt;/p&gt;
&lt;p&gt;由于设置了访问Referrer限制，所以大家无法直接通过输入 http://vfhky.sinaapp.com/go.php?url=http://www.ebeta.org （这里以 小鬼哥 的博客链接地址作为例子，勿怪^^）来得到系统相应的网站安全检查的结果，只能通过点击评论者留下的链接地址来获取。下图分别是访问优质网站和不良网站时给出的不同提示：&lt;/p&gt;
&lt;p&gt;&lt;img alt="外链安全访问提示" src="https://o3cex9zsl.qnssl.com/2013/07/URL_CHECK1.jpg" title="外链安全访问提示" /&gt;&lt;/p&gt;
&lt;p&gt;其次，对于 “网站安全认证” 功能，它其实是系统建立的一份评论者链接的“黑白名单”。效果如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img alt="网站安全认证" src="https://o3cex9zsl.qnssl.com/2013/07/siteverify.png" title="网站安全认证" /&gt;&lt;/p&gt;
&lt;p&gt;PS：本来博主不打算公开 网站安全认证 页面的，考虑到发广告人的生活也不容易。但是，某些广告者直接填完广告链接和验证码后，随便写几句无关文章主题的评论就提交了。于是，我做了一个艰难的决定……&lt;/p&gt;
&lt;p&gt;PPS：希望大家一如既往的支持博客，支持vfhky……另外，博客开设的专注于编程的QQ群：24385396，欢迎大家的加入（可以通过点击首页右上侧的图片快捷加群方式）！&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Sun, 21 Jul 2013 21:47:00 +0800</pubDate><guid>tag:typecodes.com,2013-07-21:mix/commentlinksitecertification.html</guid><category>博客成长录</category></item><item><title>Oracle数据库出现ORA-01034、ORA-27101错误解决</title><link>https://typecodes.com/database/oracleora0103427101.html</link><description>&lt;p&gt;最近在虚拟机中操作Oracle数据库SQL语句时，出现了以下两种报错：&lt;/p&gt;
&lt;h5&gt;1 ORA-27101: shared memory realm does not exist&lt;/h5&gt;
&lt;p&gt;具体的错误信息如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;ORA-01034: ORACLE not available
ORA-27101: shared memory realm does not exist
Linux Error: 2: No such file or directory
&lt;/pre&gt;&lt;/div&gt;




&lt;h5&gt;2 ORA-01034: ORACLE not available&lt;/h5&gt;
&lt;p&gt;具体的错误信息如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[oracle@localhost ~]$ sqlplus / as sysdba
SQL*Plus: Release 11.2.0.1.0 Production on Wed Mar 27 05:58:45 2013
Copyright (c) 1982, 2009, Oracle.  All rights reserved.
Connected to an idle instance.
SQL&amp;gt; show parameter session
ORA-01034: ORACLE not available
Process ID: 0
Session ID: 0 Serial number: 0
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;3 Oracle报错原因和解决办法&lt;/h5&gt;
&lt;p&gt;原因：db已经异常关闭！也就是Oracle数据库已经关闭了，那么在执行SQL语句的时候就会报错。&lt;/p&gt;
&lt;p&gt;解决办法：重启Oracle。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[oracle@localhost ~]$ sqlplus /nolog
SQL*Plus: Release 11.2.0.1.0 Production on Wed Mar 27 06:02:19 2013
Copyright (c) 1982, 2009, Oracle.  All rights reserved.
SQL&amp;gt; conn /as sysdba
Connected to an idle instance.
SQL&amp;gt; startup
ORACLE instance started.
Total System Global Area  422670336 bytes
Fixed Size                  1336960 bytes
Variable Size             285215104 bytes
Database Buffers          130023424 bytes
Redo Buffers                6094848 bytes
Database mounted.
Database opened.
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Sun, 21 Jul 2013 20:55:00 +0800</pubDate><guid>tag:typecodes.com,2013-07-21:database/oracleora0103427101.html</guid><category>ora-01034</category><category>ora-27101</category></item><item><title>Wordpress文章复制自动添加博客链接的JS脚本（兼容IE、Firefox和Chrome）</title><link>https://typecodes.com/web/wpcopywithbloglink.html</link><description>&lt;p&gt;这次博客在改用新主题的时候，曾经尝试过给博客的文章页面添加一个小功能：在复制文字时自动在文字后面加入文章的链接地址。当然保护文章版权的方法也有很多，例如给博文中的图片添加水印，在文章中多次增加内链，也有通过禁用右键复制功能来实现等等。但是还是vfhky觉得添加水印有碍图片的阅览，可以增加文字内链也麻烦，而禁止右键的复制又显得小气，所以试了试采用自动在复制的文字后面添加文章出处的链接。后来又觉得比较无聊，于是又删掉了，还是自然的好！下面给出兼容IE、Firefox和Chrome的javascript脚本代码，仅供参考。&lt;/p&gt;


&lt;p&gt;使用方法：直接在Wordpress文章输出单页single.php中 &lt;code&gt;&amp;lt;?php the_content('Read more...'); ?&amp;gt;&lt;/code&gt; 后面添加即可。如果还想在实现这个功能的同时尽量不影响文章页面的载入速度，那么可以把这段代码加在&lt;code&gt;&amp;lt;?php get_footer(); ?&amp;gt;&lt;/code&gt;的后面。&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;Sys&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{};&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;ua&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;userAgent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toLowerCase&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ActiveXObject&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;oncopy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;returnValue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;selection&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createRange&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;本文来自：&amp;lt;?php bloginfo(&amp;#39;name&amp;#39;); ?&amp;gt; &amp;lt;?php echo get_settings(&amp;#39;home&amp;#39;); ?&amp;gt; ； 原文链接：&amp;lt;?php the_permalink() ?&amp;gt; 。&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="nx"&gt;clipboardData&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setData&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Text&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;\r\n&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;addLink&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;body_element&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementsByTagName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;body&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
            &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;selection&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="nx"&gt;selection&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getSelection&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;pagelink&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;lt;br /&amp;gt; 本文来自: &amp;lt;?php bloginfo(&amp;#39;name&amp;#39;); ?&amp;gt; &amp;lt;?php echo get_settings(&amp;#39;home&amp;#39;); ?&amp;gt; ；原文链接：&amp;lt;a href=&amp;#39;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;href&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;#39;&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;href&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;lt;/a&amp;gt; 。&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

            &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;copytext&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;selection&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;pagelink&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;newdiv&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;div&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="nx"&gt;newdiv&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;position&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;absolute&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="nx"&gt;newdiv&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;left&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;-99999px&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="nx"&gt;body_element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;appendChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;newdiv&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="nx"&gt;newdiv&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;copytext&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="nx"&gt;selection&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;selectAllChildren&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;newdiv&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setTimeout&lt;/span&gt;
            &lt;span class="p"&gt;(&lt;/span&gt;
                &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
                &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="nx"&gt;body_element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;removeChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;newdiv&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
            &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;oncopy&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;addLink&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;/script&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Mon, 15 Jul 2013 22:42:00 +0800</pubDate><guid>tag:typecodes.com,2013-07-15:web/wpcopywithbloglink.html</guid><category>复制自动添加链接</category></item><item><title>启用CMS类型的博客主题，vfhky再次回归</title><link>https://typecodes.com/mix/cmsblogwithvfhkyreturn.html</link><description>&lt;p&gt;由于种种原因，原定于5月底更换的主题未能正常上线。本以为最迟应该可以在6月份完成的，但是毕业设计、毕业旅行、回家……种种的种种，让我不得不停下来；本以为毕业后时间还很长，就像刚进大学时候觉得大学四年会很漫长，结果就是后知后觉了。好吧，不罗嗦了，直接进入主题：&lt;/p&gt;


&lt;h5&gt;1 主题变更缘由&lt;/h5&gt;
&lt;p&gt;博客从12年6月12开始至今，一直用的是&lt;a href="http://www.weisay.com/blog/wordpress-theme-weisay-simple.html" title="点击查看 威少官方主题 "&gt;威少的主题weisaysimple&lt;/a&gt;，简洁明了，很适合IT类的博客。但是随着博客主要内容的拓展，感觉还是将这种博客类型的wordpress主题改成CMS系列的主题比较合适。在今年4月份博客申请huangkeye.com、huangkeye.cn两个域名备案期间，vfhky测试过很多CMS类型的wordpress主题，最后选择了 huishao 的 &lt;a href="http://www.zuifengyun.com/fengyun-2-1.html" title="查看 风云时代主题 "&gt;风云时代主题&lt;/a&gt;。在CMS类型的博客主题中，huishao的这款也是很简洁明了，因此vfhky也特别中意。都是很优秀的两款wordpress主题，威少和huishao的设计真心不错，再次感谢两位！&lt;/p&gt;
&lt;h5&gt;2 主题源程序改进&lt;/h5&gt;
&lt;p&gt;huishao的这款风云时代主题主程序比较庞大，比如主程序和include两个文件夹中有较多的代码是可以合并、删除、简化的。另外后台功能，例如：博客、cms风格的选择以及视频功能等，也是可以删掉的。vfhky所做的主要是两个方面，一个是代码的精简优化，另一个是功能的丰富、便捷以及实用化。这中间参考了vfhky之前改进后的威少的这款主题以及自己动手实现的几个功能。那么接下来就说说vfhky对这款主题几个比较重要的个性化改进的具体过程。&lt;/p&gt;
&lt;h6&gt;2.1 主题代码的精简&lt;/h6&gt;
&lt;p&gt;代码的优化改进，其目的还是更好的用户体验。页面的快速加载、使用的便捷清晰以及功能的丰富实用化等等，这些都是奔着用户体验去的。当然，代码的简化直观的体现可以从程序文件看出来。原先风云时代的程序共有191个文件（包括程序和文件）和12个文件夹，经过精简优化后，减少了近30个文件。另外，程序的体积也大大减小，源程序共有721K，优化后只有461K了。&lt;/p&gt;
&lt;h6&gt;2.2.1 功能改进之搜索&lt;/h6&gt;
&lt;p&gt;原主题采用后台设置使用博客自带的搜索还是使用谷歌自定义搜索功能。考虑到若是使用博客自带的搜索，会增加服务器的负担，再者自带的搜索功能也不是很精准，因此决定采用“谷歌自定义搜索+百度站内搜索”结合的模式。一来可以减轻服务器的负担，二来可以使搜索功能更强大，改善用户体验。另外对搜索的样式也采用jquery优化，应该比之前好看些吧？嘿嘿&lt;/p&gt;
&lt;h6&gt;2.2.2 功能改进之右侧栏&lt;/h6&gt;
&lt;p&gt;原主题会在后台设置很多小工具的选项，但是vfhky在使用的过程中总是需要对照着huishao的主题说明来拖拽小工具，这与喜欢清晰简洁风格的我不太合口味。因此，通过对functions.php和theme_options.php和widget.php等文件的修改，删掉一些不需要的功能。然后新建一个php文件，把一些需要用到的小功能整合在一起。于是形成了右侧栏的两个jquery自动从左向右滚动的TAB栏目。另外对”最新评论“也采用了jquery功能实现滚动浏览，方便用户浏览。&lt;/p&gt;
&lt;h6&gt;2.2.3 功能改进之广告加载&lt;/h6&gt;
&lt;p&gt;原主题对广告采用了直接加载模式，但是如今的广告都是通过外部加载JS来实现的。然而WEB的加载模式一般是按顺序来加载的，因此，当网络状况较差的时候会导致广告内容一直在加载而博客内容却无法加载的情况。因此，新建一个addelay.php文件来决定在不同页面加载不同广告以及在文本内容加载完后才加载广告（大体思路是：通过wordpress页面判断函数以及用javascript在footer.php末尾加载广告JS代码）。&lt;/p&gt;
&lt;h6&gt;2.2.4 功能改进之评论列表&lt;/h6&gt;
&lt;p&gt;摒弃使用WP-UserAgent插件来显示评论者的所属国家、操作系统、浏览器、ISP服务商等信息，通过在functions.php添加相关代码实现。其中，ISP服务商的显示是通过JS调用新浪IP库并延迟加载实现的，减少网页的整体载入速度。&lt;/p&gt;
&lt;h6&gt;2.2.5 功能改进之评论框&lt;/h6&gt;
&lt;p&gt;增加评论验证码来防止机器人评论；通过jquery增加评论框的编辑器功能，插入表情、插入图片更为方便，同时读者能更便捷的编辑自己的评论内容；最大限度开放评论HTML标签功能，通过span style标签能实现很多功能哟。&lt;/p&gt;
&lt;h6&gt;2.2.6 功能改进之正文代码显示&lt;/h6&gt;
&lt;p&gt;原先vfhky改进的威少的主题在正文中贴代码是通过wp-codebox插件实现的。这个国产插件体积比较庞大（当然功能确实是杠杠的），所以为了加快页面载入速度，决定摒弃代码高亮插件，采用google code pretty实现。&lt;/p&gt;
&lt;h6&gt;2.2.7 功能改进之内链审查&lt;/h6&gt;
&lt;p&gt;相信很多博客都遭遇过一些无聊spamer在评论中写一些广告或者其它无关文章主题的内容。他们目的当然是增加自己的广告或者而已软件的曝光率，但是对博主来说来说这些带有外部广告链接的评论信息会大大降低博客的整体形象，对来访的用户造成不良印象。所以，vfhky决定对外链进行审核认证，最终对广大读者公开显示这些链接信息的审核认证的结果。所以希望那些发广告的童鞋要还是好好读一下文章，广告可以发专门的广告论坛嘛！当然，希望那些优质的IT、社区空间、程序设计类的站点提交自己的站点给大家分享分享哦！&lt;/p&gt;
&lt;p&gt;&lt;img alt="外链安全访问提示" src="https://o3cex9zsl.qnssl.com/2013/07/URL_CHECK.jpg" title="外链安全访问提示" /&gt;&lt;/p&gt;
&lt;h5&gt;3 后续&lt;/h5&gt;
&lt;p&gt;本次主题的界面CSS优化改进是基于1366 * 768屏幕分辨率+IE9+FF22.0+360极速（基于Chrome26.0）+Chromium28.0浏览器测试的，所有页面均显示正常（IE7及以下的浏览器不作考虑）。当然，由于vfhky对界面CSS不太熟悉，所以也不敢说解决了浏览器的兼容问题。因此，推荐大家在访问博客时使用Google Chrome 26.0（及以上的版本）+1366 * 768的屏幕分辨率来获取最佳体验。另外，考虑到博客的安全性问题，决定不采用在线投稿的功能了，但是vfhky特别希望大家给黄克业的博客投稿。投稿方式可以通过注册博客的会员（评论时会出现博客的认证图标），也可以通过邮件vfhky@qq.com投稿。当然投稿内容需要符合博客的整体风格，但一定要是原创性的文章（特别稀饭编程技术类的原创文章）。投稿可以保留作者的一切权利，包括文章的外部链接等。&lt;/p&gt;
&lt;h5&gt;4 结语&lt;/h5&gt;
&lt;p&gt;从4月备案通过、做301域名跳转huangkeye.com到huangkeye.cn，到今天博客启用新主题，整整3个月了。这之间没怎么写文章，百度的收录也骤降，但是GG的收录还是挺好的。后面的话，vfhky会在周末定期更新文章。最后，希望广大读者对在博客阅览时遇到的Bug予以反馈，我会及时修复更正，先谢谢咯！&lt;/p&gt;
&lt;h5&gt;5 另附：威少主题改进终极版&lt;/h5&gt;
&lt;p&gt;之前博客用的威少的主题，经过vfhky的几次修改，提供终结版下载，新主题中用到了这里面较多的源代码，有兴趣的童鞋可以参考下。下载地址是：&lt;/p&gt;
&lt;p&gt;http://pan.baidu.com/share/link?shareid=164552794&amp;amp;uk=1879910561&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Sun, 14 Jul 2013 22:12:00 +0800</pubDate><guid>tag:typecodes.com,2013-07-14:mix/cmsblogwithvfhkyreturn.html</guid><category>博客成长录</category></item><item><title>解决Windows中PLSQL连接虚拟机中Oracle缓慢的问题</title><link>https://typecodes.com/database/plsqlconnvmwareoracleslow.html</link><description>&lt;p&gt;博主上周末在自己的Windows宿主机中，用PL/SQL连接虚拟机中的oracle数据库时，出现了大概需要等待10多秒的时间才能登录成功的问题。很奇怪的现象，因为我在Windows中ping虚拟机中的oracle服务器IP地址，响应时间都在1ms内。在网上GG了下，没找到答案。后经我搭档指点，原来是Linux系统中的DNS解析在寻址的时候出现“错误”。这个跟我在用桥接模式连接网络的时候，错误配置了“Network Configuration”中的DNS有关（在用Bridged模式联网时，可以不用配置DNS）。&lt;/p&gt;
&lt;p&gt;&lt;img alt="桥接模式错误配置DNS" src="https://o3cex9zsl.qnssl.com/2013/04/error-dns.png" title="桥接模式错误配置DNS" /&gt;&lt;/p&gt;


&lt;p&gt;解决方法：编辑Linux系统中DNS域名解析的配置文件，注释或者删掉nameserver项即可。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@localhost etc]# vi resolv.conf
#search localdomain

#nameserver 221.228.255.1    //DNS服务器对应的IP
#nameserver 218.2.135.1
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Sun, 21 Apr 2013 00:00:00 +0800</pubDate><guid>tag:typecodes.com,2013-04-21:database/plsqlconnvmwareoracleslow.html</guid><category>wordpress自动保存</category></item><item><title>取消WordPress的日志自动保存、修订版本、历史版本和文章不连续</title><link>https://typecodes.com/web/cancelwpautosave.html</link><description>&lt;p&gt;首先声明，这篇文章来源于我大百度，博主只是整理了一下，另外测试了一些bug，所以不负也付不起版权责任^^。开个玩笑，相信很多Wordpress用户在后台写文章的时候都会被文本框下面的自动保存当前文章为草稿的提示所困扰。另外，文章不多，但是文章链接地址中的ID却真的是“围起来可以绕地球一圈”了。再者，臃肿的数据库、后台修改文章的时候会让你从好几个历史版本中选择一个，等等这些真的很让人蛋疼。好吧，不罗嗦了，相信看这篇文章的都懂的，直接来过程。&lt;/p&gt;


&lt;h5&gt;1 配置wp-config.php&lt;/h5&gt;
&lt;p&gt;打开Wordpress根目录下面的wp-config.php文件，在代码中添加下面代码：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;//取消Wordpress自动修订
define(&amp;#39;WP_POST_REVISIONS&amp;#39;,false);
//取消Wordpress自动保存
define(&amp;#39;AUTOSAVE_INTERVAL&amp;#39;, false);
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;2 修改post.php和post-new.php文件&lt;/h5&gt;
&lt;p&gt;打开wp-admin目录下的post.php和post-new.php，然后注释掉wp_enqueue_script( 'autosave' );&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="x"&gt;//wp_enqueue_script( &amp;#39;autosave&amp;#39; );在post-new.php的第49行&lt;/span&gt;
&lt;span class="x"&gt;//if ( &amp;#39;attachment&amp;#39; !== &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;post_type&lt;/span&gt;&lt;span class="x"&gt; )在post.php的第173行&lt;/span&gt;
&lt;span class="x"&gt;//wp_enqueue_script(&amp;#39;autosave&amp;#39;);在post.php的第174行&lt;/span&gt;
&lt;span class="x"&gt;//网上写的只注释掉174行而不注释掉173行就会造成文章发布时的Bug，楼主亲测，版本是3.5.1！！！&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;3 修改default-filters.php&lt;/h5&gt;
&lt;p&gt;打开wp-includes目录下的default-filters.php，注释掉第252行：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;//add_action( &amp;#39;pre_post_update&amp;#39;, &amp;#39;wp_save_post_revision&amp;#39;);
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;4 【选做】来源于天朝外的代码&lt;/h5&gt;
&lt;p&gt;测试的Wp版本是3.3.2，改代码声称支持所有3.0+的版本。做法如下：在主题中的 functions.php 文件加入如下代码。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nx"&gt;remove_action&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;pre_post_update&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;wp_save_post_revision&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;add_action&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;wp_print_scripts&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;disable_autosave&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;disable_autosave&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;wp_deregister_script&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;autosave&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;但是这个方法会产生一个小小的不便——后台编辑文章或者附件时，预览功能是不能用的，必须保存为草稿才能预览 。不过我经常都是用“文本”模式编辑，基本没用预览。&lt;/p&gt;
&lt;h5&gt;5 后记+文章不连续的问题&lt;/h5&gt;
&lt;p&gt;其实前面三个步骤完成再在后台装个“WP Cleaner”插件（用于删除已经存在的历史版本）就已经比较完美的解决WordPress的日志自动保存、修订版本和历史版本的问题了。另外，网上有用delete-revision插件的，经博主测试效果还是不如WP Cleaner。至于如果不想用插件删除历史版本的话，可以看看这篇文章 &lt;a href="https://typecodes.com/web/phpsolvewparticleid.html" title="PHP程序解决WordPress重新排列不连续的文章ID"&gt;《PHP程序解决WordPress重新排列不连续的文章ID》&lt;/a&gt; 。这个既可以删除历史版本，还可以解决文章ID不连续的问题，并且效果要比网络上的类似于以下的“粗暴”删除代码好，能做到安全不会误删wordpress有用的信息。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;DELETE a,b,c FROM wp_posts a LEFT JOIN wp_term_relationships b ON (a.ID = b.object_id) LEFT JOIN wp_postmeta c ON (a.ID = c.post_id) WHERE a.post_type = &amp;#39;revision&amp;#39;;
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Sat, 20 Apr 2013 23:53:00 +0800</pubDate><guid>tag:typecodes.com,2013-04-20:web/cancelwpautosave.html</guid><category>wordpress自动保存</category></item><item><title>虚拟机VMWare中Linux用桥接方式连接实例</title><link>https://typecodes.com/linux/vmwarelinuxbrigedmode.html</link><description>&lt;h5&gt;1 虚拟机网络模式介绍与说明&lt;/h5&gt;
&lt;p&gt;我们在安装完虚拟机VMWare后，会发现在我们的宿主机Windows系统中多出了两个虚拟网卡：VMware Network Adapter VMnet1 和 VMware Network Adapter VMnet8 。因此，我们在使用虚拟机VMWare时，会利用这两个网卡中的一个来进行网络通信服务。具体可以分为如下三种网络工作模式： bridged(桥接模式)、NAT(网络地址转换模式 )和host-only(主机模式)。在VMware的网络模型中，VMware有如下几个虚拟设备：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;VMnet0：这是VMware用于虚拟桥接网络下的虚拟交换机；
VMnet1：这是VMware用于虚拟Host-Only网络下的虚拟交换机；
VMnet8：这是VMware用于虚拟NAT网络下的虚拟交换机；
VMware Network Adapter VMnet1：这是Host用于与Host-Only虚拟网络进行通信的虚拟网卡；
VMware Network Adapter VMnet8：这是Host用于与NAT虚拟网络进行通信的虚拟网卡；
&lt;/pre&gt;&lt;/div&gt;




&lt;p&gt;如果你想利用VMWare在局域网内新建一个虚拟服务器，为局域网用户提供网络服务，就应该选择桥接模式。&lt;/p&gt;
&lt;p&gt;在这种模式下，主要是使用VMnet0虚拟交换机来进行通信。此时， VMWare虚拟出来的操作系统就像是局域网中的一台独立的主机，和宿主机Windows一样，拥有一个独立的IP地址。正如下图所示，A，A1，A2，B是可以互访的。下面就以博主的小红帽RHEL5.3系统为例，演示在虚拟机VMWare中如何用桥接方式连接网络（Use bridged networking）。&lt;/p&gt;
&lt;p&gt;&lt;img alt="使用桥接模式Use bridged networking" src="https://o3cex9zsl.qnssl.com/2013/04/Use-bridged-networking.jpeg" title="使用桥接模式Use bridged networking" /&gt;&lt;/p&gt;
&lt;h5&gt;2 查找宿主机Windows的ip配置信息&lt;/h5&gt;
&lt;p&gt;在宿主Windows中打开CMD命令，输入ipconfig，可以看到我的win7连接的无线网络的IP地址是192.168.1.100，子网掩码（subnetmask）是255.255.255.0，默认网关是192.168.1.1。记下这3个信息，下面会用到。&lt;/p&gt;
&lt;p&gt;&lt;img alt="宿主机Windows中的所有IP" src="https://o3cex9zsl.qnssl.com/2013/04/ipconfig.jpg" title="宿主机Windows中的所有IP" /&gt;&lt;/p&gt;
&lt;h5&gt;3 虚拟机中Linux的网络配置&lt;/h5&gt;
&lt;p&gt;打开虚拟机VM，右键Linux，选择“Settings……”，然后选择“Bridged”。&lt;/p&gt;
&lt;p&gt;&lt;img alt="Linux网络设置为桥接模式" src="https://o3cex9zsl.qnssl.com/2013/04/set-network.jpg" title="Linux网络设置为桥接模式" /&gt;&lt;/p&gt;
&lt;h5&gt;4 Linux系统etho设置为Statically set IP addresses，即静态设置的IP地址&lt;/h5&gt;
&lt;p&gt;在linux左上角的导航菜单中，单击“System”，“Administation”，“Network”，“Editor”。然后依次设置Address（只要和windows主机的IP192.168.1.100在同一网段即可），子网掩码Subnet mask和默认网关Default gateway address都设置成windows主机的子网掩码、默认网关。&lt;/p&gt;
&lt;p&gt;&lt;img alt="Linux系统eth0设置为Statically set IP addresses" src="https://o3cex9zsl.qnssl.com/2013/04/set-eth0.jpg" title="Linux系统eth0设置为Statically set IP addresses" /&gt;&lt;/p&gt;
&lt;p&gt;当然，上面是GUI操作模式。其实，我们也可以用Linux命令行实现，二者是等价的。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="n"&gt;localhost&lt;/span&gt; &lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;sysconfig&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;network&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;scripts&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="n"&gt;localhost&lt;/span&gt; &lt;span class="n"&gt;network&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;scripts&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="n"&gt;vi&lt;/span&gt; &lt;span class="n"&gt;ifcfg&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;eth0&lt;/span&gt;

&lt;span class="cp"&gt;# Advanced Micro Devices [AMD] 79c970 [PCnet32 LANCE]&lt;/span&gt;
&lt;span class="n"&gt;DEVICE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;eth0&lt;/span&gt;            &lt;span class="c1"&gt;//由eth0来启动&lt;/span&gt;
&lt;span class="n"&gt;BOOTPROTO&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;none&lt;/span&gt;         &lt;span class="c1"&gt;//dhcp自动获取IP，static是固定IP，none是手动&lt;/span&gt;
&lt;span class="n"&gt;HWADDR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mo"&gt;00&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="nl"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;29&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;75&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="nl"&gt;C0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;     &lt;span class="c1"&gt;//网卡的物理地址&lt;/span&gt;
&lt;span class="n"&gt;ONBOOT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;yes&lt;/span&gt;             &lt;span class="c1"&gt;//启动时网络接口是否有效&lt;/span&gt;
&lt;span class="n"&gt;TYPE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Ethernet&lt;/span&gt;
&lt;span class="n"&gt;USERCTL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;no&lt;/span&gt;
&lt;span class="n"&gt;IPV6INIT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;no&lt;/span&gt;
&lt;span class="n"&gt;PEERDNS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;yes&lt;/span&gt;
&lt;span class="n"&gt;NETMASK&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;255.255.255.0&lt;/span&gt;           &lt;span class="c1"&gt;//子网掩码&lt;/span&gt;
&lt;span class="n"&gt;IPADDR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;192.168.1.125&lt;/span&gt;            &lt;span class="c1"&gt;//IP地址&lt;/span&gt;
&lt;span class="n"&gt;GATEWAY&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;192.168.1.250&lt;/span&gt;           &lt;span class="c1"&gt;//默认网关&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;（四）就这么简单，over！&lt;/h5&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Sat, 20 Apr 2013 14:58:00 +0800</pubDate><guid>tag:typecodes.com,2013-04-20:linux/vmwarelinuxbrigedmode.html</guid><category>虚拟机桥接模式</category></item><item><title>如何在Windows宿主机中安装PL/SQL管理虚拟机中的Oracle</title><link>https://typecodes.com/database/windowsplsqlmanageoracle.html</link><description>&lt;p&gt;和微软SQL server一样，要想远程管理数据库，那么本地的windows主机中就需要安装sql server的客户端。而在Windows宿主机中管理虚拟机中的Oracle数据库，那么我们也需要安装Oracle数据库的客户端（当然是windows版本）。&lt;/p&gt;
&lt;p&gt;这是常规的做法，但是oracle出产的软件一向遵守庞大臃肿的传统，Oracle11.2.0.2.0的Windows版本竟然和SQL server一样有2G多了。作为一个远程管理工具，我们没有必要在windows中安装一个完整的Oracle。类似于SQL server的Express版本，甲骨文也考虑到了这点，所以精简版的instantclient就应运而生了。下面就是具体的如何在Windows宿主机中安装PL/SQL管理虚拟机中的Oracle数据库步骤：&lt;/p&gt;


&lt;h5&gt;（一）下载instantclient-basic&lt;/h5&gt;
&lt;p&gt;进入 &lt;a href="http://www.oracle.com/technetwork/topics/winsoft-085727.html" title="进入Oracle官网下载instantclient"&gt;Oracle官网&lt;/a&gt; 下载合适的instantclient-basic压缩包，例如博主的虚拟机中的oracle数据库版本是11.2.0.1.0（可以通过[root@localhost ~]# sqlplus /nolog查看），那么我下载的是instantclient-basic-win32-11.2.0.1.0.zip。把下载好的.zip文件包解压到windows宿主机中任意分区，例如D:\11.2.0。&lt;/p&gt;
&lt;h5&gt;（二）配置instantclient&lt;/h5&gt;
&lt;p&gt;在虚拟机中的oracle数据库安装目录中找到tnsnames.ora文件，例如博主的oracle是/home/oracle/app/oracle/product/11.2.0/dbhome_1/network/admin/tnsnames.ora，然后在windows中新建目录（例如：D:\11.2.0\network\admin），最后把这个文件放在这个目录下。&lt;/p&gt;
&lt;h5&gt;（三） tnsnames.ora文件说明&lt;/h5&gt;
&lt;p&gt;tnsnames.ora文件的一般形式是：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;# tnsnames.ora Network Configuration File: /home/oracle/app/oracle/product/11.2.0/dbhome_1/network/admin/tnsnames.ora
# Generated by Oracle configuration tools.

ORCL =
  (DESCRIPTION =
    (ADDRESS = (PROTOCOL = TCP)(HOST = 192.168.1.125)(PORT = 1521))
    (CONNECT_DATA =
      (SERVER = DEDICATED)
      (SERVICE_NAME = orcl)
    )
  )
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;其中，ORCL 是远程数据库的实例名（在安装oracle数据库的时候填写）；&lt;/p&gt;
&lt;p&gt;PROTOCOL 是连接的协议；&lt;/p&gt;
&lt;p&gt;HOST 是远程数据库的IP地址（ 若登录出现ORA-12170： TNS:Connect timeout occurred的时候 ，可能是IP地址错误，在windows中无法ping通）；&lt;/p&gt;
&lt;p&gt;PORT 端口（同样，也可能是虚拟机中的linux系统的防火墙问题，可使用service iptables stop命令关闭）；&lt;/p&gt;
&lt;h5&gt;（四）配置PL/SQL&lt;/h5&gt;
&lt;p&gt;打开PL/SQL，在菜单栏选择Tools-Preference-Connection，然后如下图配置，配置完后退出重新登录即可。&lt;/p&gt;
&lt;p&gt;&lt;img alt="pl_sql配置" src="https://o3cex9zsl.qnssl.com/2013/04/pl_sql.png" title="pl_sql配置" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="pl_sql默认登录" src="https://o3cex9zsl.qnssl.com/2013/04/pl_sqllogin1.png" title="pl_sql默认登录" /&gt;&lt;/p&gt;
&lt;h5&gt;（五）说明一&lt;/h5&gt;
&lt;p&gt;其实，第二、三步骤也可以省略，它的作用是在PL/SQL登录的时候，Database自动选择oracle的数据库实例orcl。如果省略二、三步骤，那么在登录的时候，你就需要在Dtabase中手动输入“HOST/实例名”，如下图所示。&lt;/p&gt;
&lt;p&gt;&lt;img alt="pl_sql带IP和实例名登录" src="https://o3cex9zsl.qnssl.com/2013/04/pl_sqllogin.png" title="pl_sql带IP和实例名登录" /&gt;&lt;/p&gt;
&lt;h5&gt;（六）说明二&lt;/h5&gt;
&lt;p&gt;在PL/SQL登录时，出现"NLS_LANG is not defined on the client"的错误，这个是Oracle服务器端和客户端的字符集不一致造成的。服务端的字符集可以在PL/SQL中通过select userenv("language") from dual查看（博主的显示为AMERICAN_AMERICA.ZHS16GBK）。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Sat, 20 Apr 2013 11:16:00 +0800</pubDate><guid>tag:typecodes.com,2013-04-20:database/windowsplsqlmanageoracle.html</guid><category>plsql</category></item><item><title>千里佳音，竟然收到百度的一份GIFT</title><link>https://typecodes.com/mix/getbaidugift.html</link><description>&lt;p&gt;周一下午3点多，俺突然接到一个区号010的电话。好家伙，不是96121，不是911也不是110，是010！俺还从没给010的号码骚扰过啊，于是就斗胆接了。接通后，手机那边传来的是一个年轻伙计的声音，自称是百度用户体验部的。我靠，竟然还能收到度哥的电话！俺当时心里那个鸡冻啊，差点就按捺不住了，嘿嘿。心里在琢磨着，该不会是度娘看中俺了？要这样的话，那俺也就将就将就从了吧。&lt;/p&gt;
&lt;p&gt;那哥们还没等哥yy完，就噼里啪啦的说了下去，原来是百度知道用户体验部的问卷反馈调查。这时俺想起来了，前段时间在百度知道上填了一个关于百度知道的产品体验调查表，没想到就中奖了。然后那哥们向我确认了礼品的寄送地址，俺当然是认认真真的重复了一遍。好吧，度娘是没了，不过有个礼品安慰，咱也就不计较了。&lt;/p&gt;


&lt;p&gt;后来，那哥们向我问些关于百度知道的问题。例如对新版知道的感觉如何，介个不用想，当然是越来越好！上百度知道的频率，介个也不用想，当然是天天关注！会不会乐意回答别人的问题，介个更不用想，当然是一百个乐意！一般回答一个问题所花费的时间是多少，介个要稍微想想，咱实事求是的告诉他，基本上每次都是查找很多资料来保证回答的权威性，所以花的时间比较多。然后，然后我也记不太清了，俺还在猜测着这到底是个啥礼物呢。&lt;/p&gt;
&lt;p&gt;&lt;img alt="百度gift" src="https://o3cex9zsl.qnssl.com/2013/04/giftbaidu1.jpg" title="百度gift" /&gt;&lt;/p&gt;
&lt;p&gt;快结束的时候，俺听到了一个比较前瞻性的信息，那就是百度知道可能会开辟一个疑难问题专区，用户要想这个区域提问的话，那就需要支付一定的money。这个money具体是多少，估计百度也在讨论中，因为那哥们问我假如让我去回答这样一个疑难问题，那么我觉得应该要得到多少报酬合适。俺当时就琢磨着，百度好不容易有这么一个好的人气平台，不会又要向用户下手了吧（虽然这money最后是付给问题的最后采纳者）。&lt;/p&gt;
&lt;p&gt;那哥们见俺没给出具体说法，就引导着说：1角、5角、1元、2元怎么样？其实，很多回答问题的人在乎的是那个虚拟的等级（好吧，俺也中枪鸟），付费的话作用不是很大。不过，有些提问者有时也极不负责地草草写几句，这让别人都不想去回答了。俺就把上面的意思说了下，那哥们也没给结论，就说他们会认真考虑这个情况的。后来，就没后来了。。。&lt;/p&gt;
&lt;p&gt;最后，晒一下前天收到的礼物。竟然是一个可以挂钥匙的钱包，囧……&lt;/p&gt;
&lt;p&gt;&lt;img alt="百度gift" src="https://o3cex9zsl.qnssl.com/2013/04/giftbaidu2.jpg" title="百度gift" /&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Fri, 19 Apr 2013 21:19:00 +0800</pubDate><guid>tag:typecodes.com,2013-04-19:mix/getbaidugift.html</guid><category>百度</category></item><item><title>博客历程一二 – 近期规划碎碎念</title><link>https://typecodes.com/mix/blogexperience.html</link><description>&lt;h5&gt;（一）Wordpress主题规划&lt;/h5&gt;
&lt;p&gt;博客从建立开始就定位于IT软件类博客，而且vfhky个人也比较偏爱简洁明了类型的wp主题，所以在众多主题当中就选择了&lt;a href="http://www.weisay.com/blog/wordpress-theme-weisay-simple.html" title="点击查看 威少官方主题 "&gt;威少的主题&lt;/a&gt;。从12年的6月份开始到现在，将近一年的时间了，博客的一直使用威少的这款weisaysimple。精炼的页面设计，让博客的内容主次分明，详略得当，真的是让人爱不释手。当然，我也对weisaysimple修改了N多次，做了很多代码优化和个性化需求的定制和改进。&lt;/p&gt;


&lt;p&gt;例如，博客右上角的综合谷歌自定义搜索和百度搜索为一体的博客站内搜索，博客右侧栏的Jquery滚动公告，右侧栏的Jquery滚动最新评论和样式设计，评论列表的改进，邮件通知的改进，博客整站的avatar个性头像缓存等等。还有很多代码的精简优化可能无法从博客界面直接体现出来，但是每次的优化都直奔用户体验。目前，vfhky正在筹划博客的新主题，界面风格类似于CMS，不过简洁明了风格依然不变！这款主题计划在5月底完成，一来是由于工作比较繁忙，二来是vfhky对界面CSS设计把握性不强，所以需要时间来不断地调整、优化和改进。&lt;/p&gt;
&lt;h5&gt;（二）博客写作更新规划&lt;/h5&gt;
&lt;p&gt;由于工作比较繁忙，所以调整博客内容更新时间，如果没有重要的更新内容，博客将于每周周六和周日准时更新。内容方面将倾向于Linux+C+Oracle，当然偶尔也会发点小牢骚，嘿嘿。&lt;/p&gt;
&lt;h5&gt;（三）关于现阶段博客SEO信息&lt;/h5&gt;
&lt;p&gt;&lt;img alt="博客的SEO信息" src="https://o3cex9zsl.qnssl.com/2013/04/blogseo.png" title="博客的SEO信息" /&gt;](https://o3cex9zsl.qnssl.com/2013/04/blogseo.png)&lt;/p&gt;
&lt;p&gt;由于博客先前的主机位于国外，在3月份的时候，博客的访问速度有时慢到几乎打不开，外加寒假期间博主未更新任何内容，所以百度的收录一直不高。而从3月20号到4月3号期间，vfhky下决心把主机迁回国内并备案，所以关闭了博客，导致现在百度的收录为0（谷歌、搜狗、搜搜、360还是正常收录）。&lt;/p&gt;
&lt;p&gt;在备案期间，像&lt;a href="http://sparrowwei.com/" title="点击查看 四道风"&gt;sparrowwei&lt;/a&gt;、&lt;a href="http://yusky.me/" title="点击查看 yusky的博客 "&gt;yusky&lt;/a&gt;、 &lt;a href="http://blog.foreverlove.us/" title="点击查看  翟子博客 "&gt;翟子&lt;/a&gt; 这些好基友从未撤过博客的链接（虽然在备案前我也挨个通知了它们），在此一并感谢！鉴于百度的收录情况，大家在博客中可以根据博客顶部的菜单导航栏、右侧栏的读者推荐、热评文章以及博客右上角强大的谷歌搜索找到自己想要的文章。相信，这段时间百度的收录会回归正常的。&lt;/p&gt;
&lt;h5&gt;（四）关于博客域名&lt;/h5&gt;
&lt;p&gt;由于博客域名huangkeye.com只注册了一年，5月底也会到期，到底续费还没确定。因为vfhky已入手了huangkeye.cn的域名，期限为10年，所以很可能在.com的到期后转到.cn域名上来。&lt;/p&gt;
&lt;h5&gt;（五）其它碎碎念&lt;/h5&gt;
&lt;p&gt;【建议】近来有网友@我说博客的内容太过单一了，代码一段段的，看着后怕啊，写点娱乐多好啊。好吧，vfhky也只能表示遗憾，俺也只能做到这了。&lt;/p&gt;
&lt;p&gt;【交流】当前博客所用的主题仍在优化中，将会在5月底也即博客的新主题启用时对外开源，届时想尝鲜试试或者需要部分代码的童鞋可以到博客的三个公开资源共享区下载。&lt;/p&gt;
&lt;p&gt;【捉急】博客广告收入还没破百肿么办？众位童鞋给点力啊。右点点（右侧栏广告），下点点（文章底部广告），不尽感谢！&lt;/p&gt;
&lt;p&gt;【推荐】本篇文章的兄弟文章： &lt;a href="https://typecodes.com/mix/growthrecordafteroffer.html" title="点击查看详情"&gt;《博客成长录——暨收到工作offer后，博主的正式回归》&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;【剧透】新主题在wp-codebox代码显示有所改进；添加“读者投稿”单页；新增……好吧，观众让不让再说下去鸟……&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Sat, 13 Apr 2013 23:42:00 +0800</pubDate><guid>tag:typecodes.com,2013-04-13:mix/blogexperience.html</guid><category>博客成长录</category></item><item><title>再谈wordpress评论验证码——Willin Kan大神开的一个“玩笑”</title><link>https://typecodes.com/web/againwpmathverifycode.html</link><description>&lt;h5&gt;（一）问题描述&lt;/h5&gt;
&lt;p&gt;最近在筹划博客的新主题中，遇到了一个问题，那就是在调用先前vfhky写的&lt;a href="https://typecodes.com/web/wpmathverifycode.html" title="点击查看原文"&gt;《博客优化第二波(三)：wordpress评论添加算术验证码》&lt;/a&gt;文中的spam_provent_math函数时，如果用户错误的输入了验证码，那么在提交的时候网页就会变形。昨天，来哥在用这段代码的时候也提到了 页面框架变形的问题 ，所以觉得有必要把解决方案提出来，免得误导了大家。&lt;/p&gt;


&lt;p&gt;网上查找了资料，大多说是因为在提交评论的时候，由于调用ajax评论JS代码导致在输出错误提示的时候评论页面变形（一般的wp主题评论都回调用的Willin Kan编写的jQuery-Ajax-Comments v1.3），这该不会是Willin大神故意开玩笑吧？？？&lt;/p&gt;
&lt;p&gt;&lt;img alt="wordpress评论框变形" src="https://o3cex9zsl.qnssl.com/2013/04/change-shape.png" title="wordpress评论框变形" /&gt;&lt;/p&gt;
&lt;h5&gt;（二）网络解决方法&lt;/h5&gt;
&lt;p&gt;那么，我们找到 comments-ajax.js 中的第43-47行：&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;#loading&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;slideUp&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;#error&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;slideDown&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;html&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;lt;img src=&amp;quot;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;pic_no&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;quot; style=&amp;quot;vertical-align:middle;&amp;quot; alt=&amp;quot;&amp;quot;/&amp;gt; &amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;responseText&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;$submit&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;disabled&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;fadeTo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;slow&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;#error&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;slideUp&lt;/span&gt;&lt;span class="p"&gt;();},&lt;/span&gt; &lt;span class="mi"&gt;3000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;这段代码也就是在出现error的时候执行的语句，也就是wordpress评论框变形的“罪魁祸首”！网上的解决方法是：在第45行的代码后面添加正则表达式，过滤掉上面代码产生的常见的html标签代码，具体如下&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;$(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;#error&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="nc"&gt;.slideDown&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt;&lt;span class="nc"&gt;.html&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;lt;img src=&amp;quot;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nt"&gt;pic_no&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;quot; style=&amp;quot;vertical-align:middle;&amp;quot; alt=&amp;quot;&amp;quot;/&amp;gt; &amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nt"&gt;request&lt;/span&gt;&lt;span class="nc"&gt;.responseText.replace&lt;/span&gt;&lt;span class="o"&gt;(/&amp;lt;&lt;/span&gt; &lt;span class="o"&gt;(?!&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="o"&gt;).*?&amp;gt;(?:.*?&amp;lt;&lt;/span&gt; &lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="o"&gt;/.*?&amp;gt;)?/&lt;/span&gt;&lt;span class="nt"&gt;gi&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;（三）遗留问题&lt;/h5&gt;
&lt;p&gt;但是经过vfhky的测试，改进后的代码虽然避免了wordpress评论页面的变形，但是会输出很多浏览器无法解析的源代码，图就不贴出来了，大家可以自己测试一下。没办法，博主就小小研究了下comments-ajax.php，发现里面的出错提示语句用的是&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;err(__(&amp;#39;Sorry, comments are closed for this item.&amp;#39;));
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;而不是用常规的echo函数输出，所以我把spam_provent_pre($spam_result)函数中的 两个we_die函数全都替换成err 。修改后，vfhky进行了测试，结果显示即使用户错误的输入验证码也不会使评论框页面变形了，它会像用户没有输入邮箱号码而直接提交评论那样在评论框的底部以温馨的小字提示用户应该输入正确的验证码！&lt;/p&gt;
&lt;h5&gt;（四）结语&lt;/h5&gt;
&lt;p&gt;看来bug只能是偶们这小菜鸟产生的，膜拜Willin Kan大神啦！&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Fri, 12 Apr 2013 22:10:00 +0800</pubDate><guid>tag:typecodes.com,2013-04-12:web/againwpmathverifycode.html</guid><category>wordpress验证码</category></item><item><title>新手如何做好个人独立博客——SEO经验谈</title><link>https://typecodes.com/mix/personalblogseoexp.html</link><description>&lt;p&gt;从2012年6月12日，博客已经度过了大半年的时光。vfhky之前也做过一些其它的站点，像DZ论坛、动易织梦门户神马的也弄过，但都没用心经营，所以后来也不了了之。这个博客的建立，有点无心插柳的味道——刚临近找工作那段时间，好友BZ给我买了个姓名域名，正好他那里还有个国外空间，于是就拿过来“借鸡生蛋”了。&lt;/p&gt;
&lt;p&gt;回到正题，关于SEO，vfhky认为归根到底是流量。做好SEO就是提高流量，所以博主接下来主要说说新手应该如何做好个人独立博客，提高博客的流量。&lt;/p&gt;


&lt;h5&gt;（一）一个速度并且稳定的空间&lt;/h5&gt;
&lt;p&gt;&lt;img alt="seo" src="https://o3cex9zsl.qnssl.com/2013/03/seo_thumb1.jpg" title="seo" /&gt;&lt;/p&gt;
&lt;p&gt;为什么我把这个放在第一位呢？道理很简单，一个坚实的地基才能承载一栋厚实的楼房；地基未撘牢，楼房建的再华丽也是白搭。相对谷歌来说，百度对空间稳定性可是很挑剔的。空间的访问速度与稳定性，对SEO影响很大。因为绝大多数博客是通过百度引来流量，固定的用户不多，要是百度把你K了，后果你懂得。博主就深深体会过，由于自己的空间访问速度比较慢，虽然已经发布的文章不少，但是百度到目前为也仅仅收录了15篇，索引量只有107。&lt;/p&gt;
&lt;h5&gt;（二）选择合适的博客程序，合理的网页布局结构&lt;/h5&gt;
&lt;p&gt;目前，主流的Web语言是PHP，而独立博客用的比较多的是Wordpress程序。虽然Z-blog、Emlog等CMS做的也不错，但Wordpress以其强大的BBS社区力量（插件、模板）占据了独立博客程序的制高点。很多博主在用过Z-blog等cms后，还是转到了Wordpress阵营，足见其强大的魅力！丰富的插件和模板以及精巧却又强悍的写作功能，让你的博客变得随心所欲。选好了博客的程序，在个人独立博客的初期，我们需要规划好博客的页面结构和布局。良好的页面结构和布局框架，不至于让来访的蜘蛛引擎转的“晕头转向”，也能让你的访客短时间内找到自己需要的东西。 &lt;/p&gt;
&lt;h5&gt;（三）确立博客的写作范围，做某一个领域的“专家”&lt;/h5&gt;
&lt;p&gt;为什么称为博客而不是门户，区别就是二者关注领域的范围不同。一个能够瞬间抓住读者心灵的博客，必须能在短时间内展示出自己对某个领域独到而深刻的见解。否则，千篇一律的东西，嚼之乏味。很多新手博主一开通博客就到网上找一些热门词，然后发表一些伪原创的东西。久而久之，你的博客就成了一个别人的货架，上面摆满了别人的“作品”，而你也就成了别人意见的推销者。专注于自己擅长的领域才能做到有话可说、有东西可写、有读者喜欢！前段时间发生的百度K站行为，就是消灭一些没有原创内容或者原创性不佳的垃圾站点；而谷歌蜘蛛已经能够做到判断文章的来路，是否为原创。大家可以参考vfhky写那篇 &lt;a href="https://typecodes.com/web/crlfloophole.html"&gt;《小议网站HTTP响应拆分漏洞》&lt;/a&gt;，虽然有很多人直接拿过去改了些内容，但是搜索http拆分响应漏洞，谷歌还是把它排第一位。 &lt;/p&gt;
&lt;h5&gt;（四）内容原创为王、用户体验至上&lt;/h5&gt;
&lt;p&gt;如何做好一个独立博客的SEO？如何提高个人博客的流量？vfhky总结为至关重要的一句话：内容原创为王、用户体验至上。内容原创，这就又回到了第三个要点，专注于自己擅长的领域。为什么月光博客、卢松松的博客能做得那么好，大家都乐意去看呢？专注于自己的领域！月光博客把自己定位于IT互联网领域，除了一些出彩的技术文章博得众多程序员的喜爱之外，它里面的资讯也是最新的。面对这样一份精心烹制的营养大餐，用户自然会成为你的回头客和最廉价的推销员。再说到用户体验，说穿了就是页面UI设计。这个让我想到了我们的企鹅帝国，虽然其自主开发的产品屈指可数，但为什么能够几乎霸占了国内所有的电脑桌面？一个重要的原因就是它的出彩UI设计。相信大家都用过QQ通信、QQ空间、QQ游戏等等，对这些产品，大家都无法质疑它的用户体验，相当精致细腻、周到便捷。然后“温水煮青蛙“，通过其它手段慢慢收刮用户价值。对独立博客而言，道理也是如此。选择合适的博客主题（当然这只是UI很小的一块），例如IT类的可以选择简洁类的；文艺类的可以选择清新类的。vfhky认为最损害用户体验却又普遍存在的问题就是：动不动就弄得博客广告满天飞，更有甚者，用户只要点击网页中的文字就会跳转到广告，这样的站点估计用户不会去第二次。所以请记住，你给用户什么样的体验用户也会给你什么样的脸面！ &lt;/p&gt;
&lt;h5&gt;（五）周期性的更新&lt;/h5&gt;
&lt;p&gt;没有耐心和毅力，是做不好独立博客的。因为你会急于求成，无法踏踏实实的写你的文章。很多博客的初学者，急于求高pr，虎头蛇尾，文章不能持续性地按周期更新，这会给博客带来慢性伤害。博主就经历过这样的事情，由于寒假回家没有网络，所以博客将近1个半月没更新，结果造成百度的收录不知不觉中的下降了（谷歌比较人性，没大开杀戒）。周期性的更新的好处就是，为百度、谷歌的蜘蛛准时提供美味大餐，让它们记得按时来自己的博客转转，这也是为什么人家的博客能够保持比较新的百度快照的原因。有了蜘蛛，你的博客的流量还会少么！ &lt;/p&gt;
&lt;h5&gt;（六）良好的互动，只发少数优质外链&lt;/h5&gt;
&lt;p&gt;博客不是一个封闭的”一言堂“，这样也失去了它存在的意义。人是需要交流的，常到其它兄弟博客去看看，或多或少的说几句，别人会记住你的。当然，留言的时候记得把博客的链接加上去，这个就不用说了吧。一来二去，你的博客的流量不高都没天理啊（小提示，去gravatar注册个通用的博客头像，这样你到别人的博客留言的时候也能够留个面）。另外，vfhky认为在初期可以适当的在其它大型bbs等社区发布一些自己原创性的优质文章，这也就是大家常提到的外链。外链不在多，而在于优质。可能以前很多人都说群发外链神马的，这个大家要注意了。近段时间，百度已经在其站长工具中内测拒绝外链工具，目标锁定为购买链接、群发外链、挂黑链等试图操作搜索引擎排序的作弊行为。其它外链手法，比如说要是能在百度百科发布一些文章，你的博客会受到百度蜘蛛的热情关照！另外，可以通过博客的同步插件把文章同步到腾讯、新浪微博（个人经验感觉同步到腾讯微博的SEO效果要好于新浪微博）。目前，百度空间和新浪博客的外链效果已经大不如以前了，大家不用过多关注。 &lt;/p&gt;
&lt;h5&gt;（七）结语&lt;/h5&gt;
&lt;p&gt;说来说去，其实SEO没有太多的技巧，对新手来说，要做好个人的独立博客，还得从内容出发，从用户体验出发，实实在在的打造自己内在的核心竞争力才是真王道！&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Wed, 20 Mar 2013 00:01:00 +0800</pubDate><guid>tag:typecodes.com,2013-03-20:mix/personalblogseoexp.html</guid><category>博客seo</category></item><item><title>Redhat/CentOS通过yum安装与配置vsFTPd的详细步骤</title><link>https://typecodes.com/linux/cmdvsftpdinteraction.html</link><description>&lt;p&gt;上一篇文章&lt;a href="https://typecodes.com/linux/linuxyuminstallvsftpd.html" title="Redhat/CentOS通过yum安装与配置vsFTPd的详细步骤"&gt;《Redhat/CentOS通过yum安装与配置vsFTPd的详细步骤》&lt;/a&gt;介绍了如何在vmware8中的redhat5.3中安装vsftpd软件，那么这篇文章就继续说说如何在windows系统中，通过vsftpd服务实现虚拟机vmware中的文件上传和下载等简单功能。&lt;/p&gt;
&lt;p&gt;测试环境是在windows中用cmd连接虚拟机中的linux主机服务器，当然更简单的方式是直接在windows中用常见的ftp客户端软件进行文件的上传与下载。只是BZ觉得既然学习了linux，就要把shell命令学好，所以总结了下面这篇教程。&lt;/p&gt;


&lt;h5&gt;1 在windows中通过CMD命令测试能否连接上远端ftp主机服务&lt;/h5&gt;
&lt;p&gt;&lt;img alt="cmd命令ping主机" src="https://o3cex9zsl.qnssl.com/2013/03/7.png" /&gt;&lt;/p&gt;
&lt;h5&gt;2 在windows中通过CMD命令登录远端服务器&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;C:\Users\vfhky&amp;gt;ftp 192.168.198.128
连接到 192.168.198.128。
220 (vsFTPd 2.0.5)
用户(192.168.198.128:(none)): oracle  （测试的RHEL本地账户为oracle）
331 Please specify the password.
密码:
230 Login successful.
ftp&amp;gt; pwd
257 &amp;quot;/home/oracle&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;3 实现文件的下载&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;ftp&amp;gt; ls  （列出/home/oracle文件夹下面的目录）
200 PORT command successful. Consider using PASV.
150 Here comes the directory listing.
Desktop
LOG_cat_owb.TXT
app
database
install2013-03-13_07-26-25.log
linux_11gR2_database_1of2.zip
linux_11gR2_database_2of2.zip
oraInventory
oradiag_oracle
show
226 Directory send OK.
ftp&amp;gt; get LOG_cat_owb.TXT（下载文件）
200 PORT command successful. Consider using PASV.
150 Opening BINARY mode data connection for LOG_cat_owb.TXT (354 bytes).
226 File send OK.
ftp: 收到 354 字节，用时 0.01秒 44.25千字节/秒。
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这个时候我们已经把LOG_cat_owb.TXT下载到了C:\Users\vfhky（这个是当前cmd终端的所在位置）中了。&lt;/p&gt;
&lt;h5&gt;4 单个文件的上传（put）&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;ftp&amp;gt; put c:/users/vfhky/desktop/1.jpg
200 PORT command successful. Consider using PASV.
150 Ok to send data.
226 File receive OK.
ftp: 发送 42814 字节，用时 0.02秒 2038.76千字节/秒。
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;5 多个文件的上传（mput）&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;ftp&amp;gt; mput c:/users/vfhky/desktop/*.rpm （把所有以.rpm结尾的软件包上传）
mput c:/users/vfhky/desktop/gcc-4.1.2-44.el5.i386.rpm?
200 PORT command successful. Consider using PASV.
150 Ok to send data.
226 File receive OK.
ftp: 发送 5478116 字节，用时 0.06秒 99602.11千字节/秒。
mput c:/users/vfhky/desktop/gcc-c++-4.1.2-44.el5.i386.rpm?
200 PORT command successful. Consider using PASV.
150 Ok to send data.
226 File receive OK.
ftp: 发送 3593724 字节，用时 0.04秒 89843.10千字节/秒。
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;或者&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;ftp&amp;gt; mput c:/users/vfhky/desktop/gcc-4.1.2-44.el5.i386.rpm c:/users/vfhky/deskto
p/gcc-c++-4.1.2-44.el5.i386.rpm
mput c:/users/vfhky/desktop/gcc-4.1.2-44.el5.i386.rpm?
200 PORT command successful. Consider using PASV.
150 Ok to send data.
226 File receive OK.
ftp: 发送 5478116 字节，用时 0.06秒 85595.56千字节/秒。
mput c:/users/vfhky/desktop/gcc-c++-4.1.2-44.el5.i386.rpm?
200 PORT command successful. Consider using PASV.
150 Ok to send data.
226 File receive OK.
ftp: 发送 3593724 字节，用时 0.05秒 73341.31千字节/秒。
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;6 在vsftpd上传/下载过程中可能出现的错误&lt;/h5&gt;
&lt;h6&gt;6.1 在windows中能够ping通主机，但是无法连接远端ftp。&lt;/h6&gt;
&lt;p&gt;这个可能是linux中防火墙的缘故，可以通过[root@localhost ~]# service iptables stop关闭redhat中的防火墙。&lt;/p&gt;
&lt;h6&gt;6.2 出现类似以下的错误提示&lt;/h6&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;ftp&amp;gt; put c:/users/vfhky/desktop/1.jpg /
200 PORT command successful. Consider using PASV.
553 Could not create file.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;原因：SELinux对vsftpd服务的限制，SELinux ftp daemon policy is customizable based on least access required. So by default SElinux does not allow users to login and read their home directories. If you are setting up this machine as a ftpd server and wish to allow users to access their home directorories, you need to set the ftp_home_dir boolean（SELinux的ftp守护进程的策略是基于最少访问需求权限定制的。因此，通过默认的SELinux不允许用户登录并读取它们的主目录。如果你设置这台机器作为一个ftpd服务器，并希望允许用户访问他们的home目录，你需要设置ftp_home_dir为布尔值。）所以要关闭SELinux对vsftpd的保护，以root用户在终端输入指令：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@localhost ~]# setsebool -P ftpd_disable_trans 1
或者[root@localhost ~]# setsebool -P ftp_home_dir=1
或者[root@localhost ~]# setsebool -P ftpd_disable_trans on
或者[root@localhost ~]# setsebool -P ftp_home_dir on
[root@localhost ~]# service vsftpd restart
&lt;/pre&gt;&lt;/div&gt;


&lt;h6&gt;6.3 出现类似的错误提示&lt;/h6&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;500 OOPS: cannot change directory:/root
500 OOPS: child died
Connection closed
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这类的500 OOPS错误的解决方法同2，或者最终极的方法是关闭selinux：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@localhost ~]# vi /etc/selinux/config
SELINUX=disabled
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Sun, 17 Mar 2013 17:19:00 +0800</pubDate><guid>tag:typecodes.com,2013-03-17:linux/cmdvsftpdinteraction.html</guid><category>linux vsftpd</category></item><item><title>Redhat/CentOS通过yum安装与配置vsFTPd的详细步骤</title><link>https://typecodes.com/linux/linuxyuminstallvsftpd.html</link><description>&lt;p&gt;由于需要在RHEL5.3中安装oracle数据库，所以博主得把window7中的oracle软件上传到wm8中的linux系统中去。众所周知，对于如何实现vm与windows系统的互通，可以使用vmtools实现。&lt;/p&gt;
&lt;p&gt;但是对于一些类似于oracle这种大文件的话，直接从桌面或者其它硬盘拖动到linux中去的话是非常慢的。因此，我们一款轻巧快捷，安全易用的软件把它实现，这就是vsFTPd。下面就介绍下如何在linux系统Redhat/CentOS下简单安装和配置vsFTPd这个服务软件。&lt;/p&gt;


&lt;p&gt;如果在使用yum安装时出现“Redhat Linux5 yum出现This system is not registered with RHN”错误提示的话，请移步至博客上一篇文章 &lt;a href="https://typecodes.com/linux/linuxnotregisteredrhn.html" title="解决Redhat Linux5 yum出现This system is not registered with RHN"&gt;《解决Redhat Linux5 yum出现This system is not registered with RHN》&lt;/a&gt;。&lt;/p&gt;
&lt;h5&gt;1 检查当前Linux系统是否安装了vsftp&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@localhost ~]#rpm -qa|grep vsftpd
//若没有任何输出内容，则表示当前linux系统未安装vsftp。
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;2 安装vsftpd服务器&lt;/h5&gt;
&lt;p&gt;从redhat或者centos的安装镜像包的server/文件夹中提取出rpm包。（RHEL5.3中的是vsftpd-2.0.5-12.el5.i386.rpm，通过vmtools把它复制到root's home中去，然后执行如下命令：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@localhost ~]#rpm -ivh vsftpd-2.0.5-10.el5.i386.rpm
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;3 配置vsftpd服务器&lt;/h5&gt;
&lt;p&gt;vsftp相关的配置文件都在/etc/vsftpd目录中，如何查看它的默认文件：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@localhost ~]# ll /etc/vsftpd
total 40
-rw-r--r-- 1 root root 6 Mar 14 01:28 chroot_list
-rw------- 1 root root 125 Dec 13 2007 ftpusers
-rw------- 1 root root 361 Dec 13 2007 user_list
-rw-r--r-- 1 root root 6 Mar 14 23:21 user.list
-rw------- 1 root root 4392 Mar 15 01:07 vsftpd.conf
-rwxr--r-- 1 root root 338 Dec 13 2007 vsftpd_conf_migrate.sh
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;其中，vsftpd.conf是vsftp的核心配置文件，user.list是允许的用户列表，而ftpusers是禁止的用户列表（如root账户），这个大家有个大概了解就行，下面是配置vsftpd服务器的具体步骤。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@localhost ~]# vi /etc/vsftpd/vsftpd.conf
//里面有很多配置点，我们只需检查
anonymous_enable=YES（是否允许匿名用户anonymous在不用输密码的情况下登录FTP）
local_enable=YES（是否允许本地用户登录。什么是本地用户？例如在安装linux的时候会让你填写一个账号，博主的是vfhky）
write_enable=YES（开放本地用户的写权限）
//其它可选项：
chroot_list_enable=YES
chroot_list_file=/etc/vsftpd/chroot_list
//如果启动这项功能，则所有的本地账户登入FTP后均可进入自己根目录之外的其他目录。除了在/etc/vsftpd.chroot_list文件指定的使用者之外，默认值为NO，这里选择YES。
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;4 添加ftp账户test1&lt;/h5&gt;
&lt;p&gt;使其指向目录/home/wwwroot/ftpuser1，并且禁止登录SSH权限：在/home/中新建wwwroot/ftpuser1的文件夹，然后&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@localhost ~]# userdel -r test1
[root@localhost ~]# useradd -d /home/wwwroot/ftpuser1 -g ftp -s /sbin/nologin test1 （表示限制test1只能在/home/wwwroot/ftpuser1中）
[root@localhost ~]# passwd test1 （设置密码）
Changing password for user test1.
New UNIX password:
BAD PASSWORD: it is too short
Retype new UNIX password:
passwd: all authentication tokens updated successfully.
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;5 配置防火墙&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@localhost ~]# vi /etc/sysconfig/iptables
//在REJECT行之前添加如下代码：
-A RH-Firewall-1-INPUT -m state –state NEW -m tcp -p tcp –dport 21 -j ACCEPT //（因为FTP的默认端口是21）
//保存和关闭文件，重启防火墙
[root@localhost ~]# service iptables restart
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;6 管理vsftpd服务的相关命令&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;查看vsftpd状态：[root@localhost ~]# service vsftpd stauts
停止vsftpd服务：[root@localhost ~]# service vsftpd stop
重启vsftpd服务：[root@localhost ~]# service vsftpd restart
设置vsftpd开机启动：[root@localhost ~]# ntsysv 或者
[root@localhost ~]# chkconfig --level 35 vsftpd on
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;7 在当前Linux系统测试vsftpd：&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@localhost ~]# cd /etc/vsftpd
[root@localhost ~]# cd /etc/vsftpd
[root@localhost vsftpd]# ftp 192.168.198.128 （填写FTP主机地址，可以通过[root@localhost ~]# ifconfig 获知）
Connected to 192.168.198.128.
220 (vsFTPd 2.0.5)
530 Please login with USER and PASS.
530 Please login with USER and PASS.
KERBEROS_V4 rejected as an authentication type
Name (192.168.198.128:root): test1
331 Please specify the password.
Password:
230 Login successful.（登录成功）
Remote system type is UNIX.
Using binary mode to transfer files.
ftp&amp;gt; pwd
257 &amp;quot;/home/wwwroot/ftpuser1&amp;quot;
ftp&amp;gt; mkdir ftp_data
550 Create directory operation failed.（因为当时新建ftpuser1文件夹时用的是root登录账户，所以无法test1身份创建，所以把ftpuser1改为test1所有，即可显示如下命令）
ftp&amp;gt; mkdir ftp_data
257 &amp;quot;/home/wwwroot/ftpuser1/ftp_data&amp;quot; created
ftp&amp;gt; cd /usr/local
250 Directory successfully changed.
ftp&amp;gt; pwd
257 &amp;quot;/usr/local&amp;quot;
ftp&amp;gt; by
221 Goodbye.
[root@localhost vsftpd]# su - test1
This account is currently not available.（这里的test1是虚拟用户，因此无法登录系统）
[root@localhost vsftpd]# cd /
[root@localhost /]# cd ~
[root@localhost ~]# ftp 192.168.198.128
Connected to 192.168.198.128.
220 (vsFTPd 2.0.5)
530 Please login with USER and PASS.
530 Please login with USER and PASS.
KERBEROS_V4 rejected as an authentication type
Name (192.168.198.128:root): test1
331 Please specify the password.
Password:
230 Login successful.（登录成功）
Remote system type is UNIX.
Using binary mode to transfer files.
ftp&amp;gt; pwd
257 &amp;quot;/home/wwwroot/ftpuser1&amp;quot;
ftp&amp;gt; mkdir test1
257 &amp;quot;/home/wwwroot/ftpuser1/test1&amp;quot; created
ftp&amp;gt; cd /usr/local
250 Directory successfully changed.
ftp&amp;gt; pwd
257 &amp;quot;/usr/local&amp;quot;
ftp&amp;gt; by
221 Goodbye.
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;8 在windows系统测试vsftpd：&lt;/h5&gt;
&lt;p&gt;Win+R打开cmd命令，然后输入&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;C:\Users\vfhky&amp;gt;ftp 192.168.198.128
连接到 192.168.198.128。
220 (vsFTPd 2.0.5)
用户(192.168.198.128:(none)): test1
331 Please specify the password.
密码:
230 Login successful.（登录成功）
ftp&amp;gt; pwd
257 &amp;quot;/home/wwwroot/ftpuser1&amp;quot;
ftp&amp;gt; ls
200 PORT command successful. Consider using PASV.
150 Here comes the directory listing.
ftp_data
test
test1
226 Directory send OK.
ftp: 收到 23 字节，用时 0.00秒 23000.00千字节/秒。
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;9 如果出现500 OOPS的错误提示&lt;/h5&gt;
&lt;p&gt;若出现500 OOPS:cannot change directory:/home/wwwroot/ftpuser1的错误提示，可以通过以下命令关闭SELinux的保护设置即可解决。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@localhost ~]# setsebool -P ftpd_disable_trans 1
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;完成上面的工作后说明已经成功了，那么具体如何使用ftp命令进行上传或者下载请参照下一篇文章&lt;a href="https://typecodes.com/linux/cmdvsftpdinteraction.html" title="在windows系统中通过CMD命令实现VSFTPD的上传下载"&gt;《windows系统中通过CMD命令实现VSFTPD的上传下载》&lt;/a&gt;。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Fri, 15 Mar 2013 22:54:00 +0800</pubDate><guid>tag:typecodes.com,2013-03-15:linux/linuxyuminstallvsftpd.html</guid><category>linux vsftpd</category></item><item><title>解决Redhat Linux5 yum出现This system is not registered with RHN</title><link>https://typecodes.com/linux/linuxnotregisteredrhn.html</link><description>&lt;p&gt;最近博主在学习Linux，菜鸟级别的的选手连装个Chrome都觉得难，悲了个催的……百度了很多教程，大多是类似的。博主的配置是在VM8下搭建的RHEL5.3 (Tikanga)版本，不知道什么原因，每次在输入yum install google-chrome-stable之后就会出现“This system is not registered with RHN”的错误提示，蛋疼不已。百度无果后，GG大神帮上忙了（搜索Redhat This system is not registered with RHN，会冒出很多国外大牛的文章）。&lt;/p&gt;
&lt;p&gt;出现这个错误的原因是你的Linux木有花钱在红帽网络上注册^^，所以无法下载谷歌Chrome的软件包，解决方案可以使用从Redhat演化而来的免费Linux版本CentOS，通过CentOS的yum更新源来实现RHEL5的YUM功能。下面博主结合GG到的国外文章谈谈How to Install CentOS YUM on Redhat Linux RHEL5，以此来解决This system is not registered with RHN的问题。&lt;/p&gt;


&lt;h5&gt;1 check what yum package installed&lt;/h5&gt;
&lt;p&gt;查看RHEL是否安装了yum，若是安装了，那么又有哪些yum包：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@localhost ~]# rpm -qa |grep yum
yum-metadata-parser-1.0-8.fc6
yum-3.0.1-5.el5
yum-rhn-plugin-0.4.3-1.el5
yum-updatesd-3.0.1-5.el5
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;2 remove all installed yum packages&lt;/h5&gt;
&lt;p&gt;卸载上面显示的所有yum包：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@localhost ~]# rpm -qa|grep yum|xargs rpm -e --nodeps（不检查依赖，直接删除rpm包）
再用
[root@localhost ~]# rpm -qa |grep yum查看，无信息显示表示已经卸载完成。
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;3 download the centos packages from website&lt;/h5&gt;
&lt;p&gt;下载 CentOS YUM包，首先我们需要找到CentOS YUM的更新源，推荐的有（前三个适用于Redhat Linux5版本，最后一个适用于RHEL6的64位版本，当然不管是RHEL5还是RHEL6等等都可以从下面四个镜像网站中下载）：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;1.国外镜像源http://ftp.heanet.ie/pub/centos/5/os/i386/CentOS/
2.中国科技大学http://centos.ustc.edu.cn/centos/5/os/i386/CentOS/
3.网易开源镜像http://mirrors.163.com/centos/5/os/i386/CentOS/
4.搜狐开源镜像http://mirrors.ustc.edu.cn/centos/6/os/x86_64/Packages/
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;接着我们就需要在终端里面输入以下命令进行下载（以博主的RHEL5.3为例，从中国科大下载镜像，下载的目录如果没设置的话就会默认是[root@localhost ~]# pwd显示的路径）&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@localhost ~]# wget http://centos.ustc.edu.cn/centos/5/os/i386/CentOS/yum-
fastestmirror-1.1.16-21.el5.centos.noarch.rpm
[root@localhost ~]# wget http://centos.ustc.edu.cn/centos/5/os/i386/CentOS/yum-
metadata-parser-1.1.2-4.el5.i386.rpm
[root@localhost ~]# wget http://centos.ustc.edu.cn/centos/5/os/i386/CentOS/yum-
3.2.22-40.el5.centos.noarch.rpm
[root@localhost ~]# wget http://centos.ustc.edu.cn/centos/5/os/i386/CentOS/
python-iniparse-0.2.3-6.el5.noarch.rpm
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;4 安装这所下载的四个包&lt;/h5&gt;
&lt;p&gt;注意:单个的安装包可能会依赖其它包（例如yum和yum-fastestmirror会相互依赖），所以我们可以把所有这些包放在一起，用一行命令将它们同时安装即可：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@localhost ~]# rpm -ivh  yum-fastestmirror-1.1.16-21.el5.centos.noarch.rpm 
yum-metadata-parser-1.1.2-4.el5.i386.rpm 
yum-3.2.22-40.el5.centos.noarch.rpm 
yum-3.2.22-40.el5.centos.noarch.rpm
//或者
[root@localhost ~]# rpm –ivh yum-*
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;5 download configure file&lt;/h5&gt;
&lt;p&gt;下载CentOS-Base.repo到/etc/yum.repos.d/文件夹里：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@localhost ~]# wget  http://docs.linuxtone.org/soft/lemp/CentOS-Base.repo 
-O /etc/yum.repos.d/CentOS-Base.repo
[root@localhost ~]# wget  http://huangkeye-blog.googlecode.com/files/CentOS-Base.repo 
-O /etc/yum.repos.d/CentOS-Base.repo（以上这两个适用于RHEL版本5）
[root@localhost ~]# wget  http://my-project-huangkeye.googlecode.com/files/CentOS-Base.repo 
-O /etc/yum.repos.d/CentOS-Base.repo（这个适用于RHEL版本6)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;也可以直接进入vim修改该文件为以下内容：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;[base]&lt;/span&gt;
&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;CentOS-5 - Base&lt;/span&gt;
&lt;span class="na"&gt;baseurl&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;http://centos.ustc.edu.cn/centos/5/os/$basearch/&lt;/span&gt;
&lt;span class="na"&gt;gpgcheck&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;1&lt;/span&gt;
&lt;span class="na"&gt;gpgkey&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;http://mirror.centos.org/centos/RPM-GPG-KEY-CentOS-5&lt;/span&gt;

&lt;span class="c1"&gt;#released updates&lt;/span&gt;
&lt;span class="k"&gt;[update]&lt;/span&gt;
&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;CentOS-5 - Updates&lt;/span&gt;
&lt;span class="na"&gt;baseurl&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;http://centos.ustc.edu.cn/centos/5/updates/$basearch/&lt;/span&gt;
&lt;span class="na"&gt;gpgcheck&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;1&lt;/span&gt;
&lt;span class="na"&gt;gpgkey&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;http://mirror.centos.org/centos/RPM-GPG-KEY-CentOS-5&lt;/span&gt;

&lt;span class="c1"&gt;#packages used/produced in the build but not released&lt;/span&gt;
&lt;span class="k"&gt;[addons]&lt;/span&gt;
&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;CentOS-5 - Addons&lt;/span&gt;
&lt;span class="na"&gt;baseurl&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;http://centos.ustc.edu.cn/centos/5/addons/$basearch/&lt;/span&gt;
&lt;span class="na"&gt;gpgcheck&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;1&lt;/span&gt;
&lt;span class="na"&gt;gpgkey&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;http://mirror.centos.org/centos/RPM-GPG-KEY-CentOS-5&lt;/span&gt;
&lt;span class="c1"&gt;#additional packages that may be useful&lt;/span&gt;
&lt;span class="k"&gt;[extras]&lt;/span&gt;
&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;CentOS-5 - Extras&lt;/span&gt;
&lt;span class="na"&gt;baseurl&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;http://centos.ustc.edu.cn/centos/5/extras/$basearch/&lt;/span&gt;
&lt;span class="na"&gt;gpgcheck&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;1&lt;/span&gt;
&lt;span class="na"&gt;gpgkey&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;http://mirror.centos.org/centos/RPM-GPG-KEY-CentOS-5&lt;/span&gt;

&lt;span class="c1"&gt;#additional packages that extend functionality of existing packages&lt;/span&gt;
&lt;span class="k"&gt;[centosplus]&lt;/span&gt;
&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;CentOS-5 - Plus&lt;/span&gt;
&lt;span class="na"&gt;baseurl&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;http://centos.ustc.edu.cn/centos/5/centosplus/$basearch/&lt;/span&gt;
&lt;span class="na"&gt;gpgcheck&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;1&lt;/span&gt;
&lt;span class="na"&gt;enabled&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;0&lt;/span&gt;
&lt;span class="na"&gt;gpgkey&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;http://mirror.centos.org/centos/RPM-GPG-KEY-CentOS-5&lt;/span&gt;

&lt;span class="c1"&gt;#contrib - packages by Centos Users&lt;/span&gt;
&lt;span class="k"&gt;[contrib]&lt;/span&gt;
&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;CentOS-5 - Contrib&lt;/span&gt;
&lt;span class="na"&gt;baseurl&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;http://centos.ustc.edu.cn/centos/5/contrib/$basearch/&lt;/span&gt;
&lt;span class="na"&gt;gpgcheck&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;1&lt;/span&gt;
&lt;span class="na"&gt;enabled&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;0&lt;/span&gt;
&lt;span class="na"&gt;gpgkey&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;http://mirror.centos.org/centos/RPM-GPG-KEY-CentOS-5&lt;/span&gt;

&lt;span class="c1"&gt;#packages in testing&lt;/span&gt;
&lt;span class="k"&gt;[testing]&lt;/span&gt;
&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;CentOS-5 - Testing&lt;/span&gt;
&lt;span class="na"&gt;baseurl&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;http://centos.ustc.edu.cn/centos/5/testing/$basearch/&lt;/span&gt;
&lt;span class="na"&gt;gpgcheck&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;1&lt;/span&gt;
&lt;span class="na"&gt;enabled&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;0&lt;/span&gt;
&lt;span class="na"&gt;gpgkey&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;http://mirror.centos.org/centos/RPM-GPG-KEY-CentOS-5&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;6 [选做]clear cache and rebuild&lt;/h5&gt;
&lt;p&gt;需要清除和重建cache：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@localhost ~]# yum clean metadata
[root@localhost ~]# yum clean dbcache
[root@localhost ~]# yum makecache
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;7 installation has been completed, testing&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;//安装成功，开始测试：
[root@localhost ~]# yum update
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;8 Yum百科 ：&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;RHEL安装软件包管理器Yum（全称为 Yellow dog Updater, Modified）是一个在Fedora和RedHat以及SUSE、CentOS中的Shell前端软件包管理器。基于RPM包管理，能够从指定的服务器自动下载RPM包并且安装，可以自动处理依赖性关系，并且一次安装所有依赖的软件包，无须繁琐地一次次下载、安装。
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Fri, 08 Mar 2013 14:04:00 +0800</pubDate><guid>tag:typecodes.com,2013-03-08:linux/linuxnotregisteredrhn.html</guid><category>registered with rhn</category></item><item><title>解决XAMPP的phpmyadmin平台修改mysql的root密码无法登陆的问题</title><link>https://typecodes.com/web/xamppmysqlrootloginerr.html</link><description>&lt;p&gt;由于在Netbeans中用到了php开发，所以接触到了XAMPP。但是，它和phpnow是有比较大的区别的。php是cmd命令安装，在安装过程就会提示用户设置root的密码，而非安装版的xampp是手动启动的，默认的localhost主机的用户root的密码为空。所以，一旦在xampp的phpmyadmin平台修改mysql数据库用户的密码，就会造成与原来phpmyadmin配置文件xampp/phpMyAdmin/config.inc.php设置的密码（为空）冲突，从而使得用户无法登陆（在电脑为重新启动前能登录phpmyadmin，但是一旦机器重启后就无法登录了）。&lt;/p&gt;
&lt;p&gt;&lt;img alt="phpmyadmin无法登录" src="https://o3cex9zsl.qnssl.com/2013/01/error2.png" title="phpmyadmin无法登录" /&gt;&lt;/p&gt;


&lt;p&gt;解决办法也很简单：&lt;/p&gt;
&lt;h5&gt;1 修改xampp中关于phpmyadmin的配置文件&lt;/h5&gt;
&lt;p&gt;进入xampp的安装目录，修改xampp/phpMyAdmin/config.inc.php文件，找到并设置开始修改的密码，例如$cfg['Servers'][$i]['password'] = '8888';&lt;/p&gt;
&lt;p&gt;&lt;img alt="修改密码" src="https://o3cex9zsl.qnssl.com/2013/01/revise.png" title="修改密码" /&gt;&lt;/p&gt;
&lt;h5&gt;2 清除浏览器缓存，重新登录http://127.0.0.1/phpmyadmin/即可&lt;/h5&gt;
&lt;p&gt;另外，我们点击“权限”后可以看到整个数据库的用户如下，可以点击“操作”再次修改用户密码，相应地修改config.inc.php。&lt;/p&gt;
&lt;p&gt;&lt;img alt="数据库用户" src="https://o3cex9zsl.qnssl.com/2013/01/users.png" title="数据库用户" /&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Sun, 13 Jan 2013 12:03:00 +0800</pubDate><guid>tag:typecodes.com,2013-01-13:web/xamppmysqlrootloginerr.html</guid><category>xampp phpmyadmin</category></item><item><title>XAMPP+XDebug完美配置NetBeans IDE中的PHP开发环境</title><link>https://typecodes.com/web/netbeansphpdevenv.html</link><description>&lt;p&gt;先吐槽一下Eclipse：博主前两三天一直在尝试用Eclipse juno+CDT8.1.1+MinGW配置C++的开发环境，各种出错，然后各种调试看文档，然后再出错，然后……现在算是基本把它配置成功了。总结一下，其实配置思路跟用NB完全版+Cygwin配置C++环境时一样的。很关键的一点就是CDT环境变量的设置（反正网上教程各种版本，不过多比较找出相同的那三个变量设置就行了）。至此，博主还是决定放弃Eclipse转投到NB这边来（菜鸟观点，大神勿喷）。&lt;/p&gt;
&lt;p&gt;好了，不废话了，下面就说说如何用NB完整版配置PHP环境（当然你也可以先下载NB的java se版本，然后下载安装PHP插件）。步骤如下：（由于NB完整版已经自带了PHP插件，所以我们需要进入NB“激活”该插件，然后进行后续操作。）&lt;/p&gt;


&lt;h5&gt;（一）需要的软件：&lt;/h5&gt;
&lt;h6&gt;1.1 WAMP环境：推荐使用&lt;a href="http://www.apachefriends.org/zh_cn/xampp-windows.html" title="下载XAMPP1.8.1"&gt;XAMPP&lt;/a&gt;，尤其是64bit的计算机&lt;/h6&gt;
&lt;p&gt;博主先前特喜欢用PHPnow，不过最新版的PHPnow是1.5.6更新于2010-09-22，它所支持的PHP版本为5.2.14。但是由于要用到&lt;a href="http://www.xdebug.org/download.php" title="下载Xdebug"&gt;Xdebug&lt;/a&gt;调试器，而从Xdebug 2.0.0到Xdebug 2.2.1，支持PHP5.2的都是32bit的计算机，没有64bit的支持版本，所以博主只好放弃了PHPnow。其实XAMPP功能也挺强大的，非安装版的还支持手动开启Apache和mysql，比phpnow自动启动好，节省资源。&lt;/p&gt;
&lt;h6&gt;1.2 下载XDebug调试器（一个.dll文件）&lt;/h6&gt;
&lt;p&gt;如果下载的是XAMPP 1.7.1 (PHP 5.2) 而不是XAMPP 1.7.2 (PHP 5.3)以上的版本，那么我们就需要下载XDebug调试器。然后我们要根据计算机操作系统的位数（32bit OR 64bit?）、WAMP中的PHP版本来决定下载具体的XDebug版本，。博主的64位系统、XAMPP1.81附带的PHP版本是PHP 5.4.7，所以博主下载Xdebug 2.2.1中的&lt;a href="http://www.xdebug.org/files/php_xdebug-2.2.1-5.4-vc9-nts-x86_64.dll" title="下载php_xdebug-2.2.1-5.4-vc9-nts-x86_64.dll"&gt;PHP 5.4 VC9 (64 bit) (MD5: 5ef86c46d386c50079c721c0e336e303)&lt;/a&gt;。&lt;/p&gt;
&lt;h5&gt;（二）配置php.ini信息：&lt;/h5&gt;
&lt;h6&gt;2.1 由于XAMPP1.8.1捆绑了相应的Xdebug.dll文件，只需配置php.ini即可使用该文件：&lt;/h6&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;[XDebug]&lt;/span&gt;
&lt;span class="na"&gt;zend_extension&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;\xampp\php\ext\php_xdebug.dll&amp;quot;&lt;/span&gt;
&lt;span class="c1"&gt;;xdebug.profiler_append = 0&lt;/span&gt;
&lt;span class="c1"&gt;;xdebug.profiler_enable = 1  ;打开效能监测器&lt;/span&gt;
&lt;span class="c1"&gt;;xdebug.profiler_enable_trigger = 0&lt;/span&gt;
&lt;span class="c1"&gt;;xdebug.profiler_output_dir = &amp;quot;\xampp\tmp&amp;quot;   ;设定效能监测信息输出文件的路径&lt;/span&gt;
&lt;span class="c1"&gt;;xdebug.profiler_output_name = &amp;quot;cachegrind.out.%t-%s&amp;quot;&lt;/span&gt;
&lt;span class="na"&gt;xdebug.remote_enable&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;1   ;是否调试&lt;/span&gt;
&lt;span class="na"&gt;xdebug.remote_handler&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;dbgp&amp;quot;    ;选择协议&lt;/span&gt;
&lt;span class="na"&gt;xdebug.remote_host&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;127.0.0.1&amp;quot;&lt;/span&gt;
&lt;span class="na"&gt;xdebug.remote_port&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;9000   ;调试端口&lt;/span&gt;
&lt;span class="c1"&gt;;xdebug.trace_output_dir = &amp;quot;\xampp\tmp&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h6&gt;2.2 XAMPP 1.7.2版本&lt;/h6&gt;
&lt;p&gt;XAMPP 1.7.2版本需要把下载的XDebug文件放在XAMPP目录中的/php/ext中，然后在php.ini中注释掉所有关于Zend_的代码，最后添加上面的代码。&lt;/p&gt;
&lt;h6&gt;2.3 查看安装是否成功&lt;/h6&gt;
&lt;p&gt;运行 XAMPP Control Panel Application（XAMPP 控制面板应用程序）并重新启动 Apache 服务器。打开127.0.0.1然后选择phpinfo()可以看到关于xdebug的详细信息。&lt;/p&gt;
&lt;h5&gt;（三）配置完成，新建一个PHP工程吧……&lt;/h5&gt;
&lt;p&gt;如果在php调试的时候，出现如图错误提示，请再次检查步骤（二）中的操作是否正确。&lt;/p&gt;
&lt;p&gt;&lt;img alt="XDebug配置错误" src="https://o3cex9zsl.qnssl.com/2013/01/error.png" title="XDebug配置错误" /&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Sun, 13 Jan 2013 01:07:00 +0800</pubDate><guid>tag:typecodes.com,2013-01-13:web/netbeansphpdevenv.html</guid><category>netbeans</category></item><item><title>一位资深开发人员10年的心得总结</title><link>https://typecodes.com/mix/seniordevelopersum.html</link><description>&lt;p&gt;毕业了，心里总有种失落的感觉，不知道为什么。不知道是不是感伤于身边的东西即将不属于自己了，感伤于以后还有没机会、有没有时间、有没有那种饥渴的感觉跑图书馆借书、去篮球场上拼搏，感伤于那张凌乱却忠实陪伴了自己大学四年的书桌和床即将属于别人了，感伤于那些可爱的面孔自己是否还能看得见，好多好多……&lt;/p&gt;


&lt;p&gt;我想每段人生都会有一个转折点，高考进入大学是人生较大的一个点，大一我觉得更是一个要点——迷惘或是寻找被高考压抑住的内心深处真正的渴望？大二是继续迷惘还是改变+坚持？大三基本上已经成型——你找到了真正的自己了吗？还是人云亦云亦或是逃避？大三可以说是一个人走向基本成熟的转折点。大四——考研VS工作，这个时候怎样选择应该不是问题了，因为前面的三年已经告诉你了你应该做出的选择。如果你还在犹豫不决（不管是来自自己的原因，又或者是外在力量），那么我敢肯定前面的三年可以等号为0。但是到了考研过后、工作找到之后，另一个转折点又出现了。那就是接下来的一段人生，自己是否也能做出正确的选择。&lt;/p&gt;
&lt;p&gt;闲逛的时候看到这么一篇心得文章，创作于一位资深开发人员之手。先保存先来，迷惘之时，可以借鉴。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;眼看自己大学毕业后都快12年了，也快2个孩子的爸爸了，但是有时候还是会有不少不安全的感觉产生。都快奔35了，技术也过得去，收入其实也很稳定，但是偶尔还是会有迷茫的时候，最近有几个朋友，也发QQ聊天信息，同样有类似的感觉。也稍微揣摩了一下，为啥会有这样的感觉产生？
年轻时候的1,2,3：

01：年轻时，目标很简单，就是学技术，当时学PHP前后耗费了1-2年，接着学C#，SQLServer，Oracle耗费了前后10年接近了，有目标的人就不迷茫，就是一个字想学习知识。

02：年轻时，欲望比较少，一个月能赚5000元的工资就很开心，生活没任何压力身体也很壮实，就也不会有啥负担，一心还是想着学好技术，找好单位，拿高薪。

03：年轻时，可以有很多空想，就是狗屁不是，也可以抱有很多美好的理想，也可以做白日梦。

年纪大了后的1,2,3,4,5,6,7,8：

01：打工总会有一个瓶颈，好单位也不是天天招聘，他们的业务也是有瓶颈，等你水平提高了，年龄也太大了，没啥竞争优势了，当初想进入的单位都不会招聘40岁的老头了。

02：年纪大了，身体也开始不行了，要成家立业，养孩子，养老婆，父母年纪也大了，可能身体也更不行了，很可能也需要赡养了，生活的各种开支，不是小几千能搞定的。

03：学了一大堆知识后未必都能转换成RMB，不转换成RMB，你的很多需求是得不到满足，你看很多人开着好车，住着豪宅，身边女人多多，一看自己也快奔40了，2手空空。

04：很多年轻时的梦想实现了也未必能变成RMB，以前想架构一个完美的开发框架，结果努力了10年，想出售也很难遇到各种困难，就这么耗费掉了10年了。

05：10年里会发现很多曾经的朋友成功了，但是你可能还是一个默默无闻的打工者，甚至能看到一直到到老的时候会怎么样？很可能打工一辈子。

06：做技术的失业了就真失业了，啥也没了，没人给按时发工资了，连社保都都没了，不干活了就很可能没任何稳定收入了，没任何安全感了。

07：有些行业越老越值钱，客户也越来越多，技术人员的客户都是老板的，越老越容易走下坡路，精力，能力都会下降，干劲更容易下降。

08：老板也不是印钞机，老板也需要成本控制，所以尽量不会雇佣预算很高的员工，宁可雇佣在预算范围内的员工，谁都想拿10万一个与，但是老板赚不来那么多客户的钱。

年轻到年长，我们要增加的是对自己、对人生的一种领悟和升华，积极调整心态：

01：人绝大部分是庸俗的普通人，不是每个人都能出人头地，1%不到的人相对能得到成功，99%甚至更多的人，是普通人一辈子。

02：一般牛人的才华35岁前就体现出来了，35过了也是俗人的，再过几年就爆发不来，也很少，性格已经成型了，基本上可以过的安稳的日子就可以了。

03：不要总是跟成功人士比，偶尔也向下看看，看看扫地的，看看服务员，看看人民公仆，多少心里会有一些安慰。

04：人活着不只是为了赚钱，身体好，家庭幸福，感情顺利，孩子健康，父母健康，同事关系和睦，都是宝贵的财富。

05：人生其实很短暂的，一晃10年就过去了，学会好好过生活，调节好每一天，想想要解放生活在水深火热中韩国的朝鲜人民军队，吃不饱饭，我们也幸福很多了。

事实：

01：年轻的时候没付出，年纪大了也有好的收成是很难的，除非你购买彩票中奖了，但是你最起码为了买彩票也得付出一些劳动，所以没有白来的成功白来的收获。

02：世界很大社会在发展，到处需要技术服务，我们做技术的就是为社会技术需要做辛苦劳动而已，所以只要社会安定团结，我们就不用太愁没饭吃。

03：每个人都想成功，做医生的难道不想巨大成功？做老师的难道不想巨大成功？谁都想有巨大的成功，但是，只有一个院长，一个校长，其他都是普通人。

04：水平没有，让你当个部门经理，没几天也得被大家罢免，水平没有，给你1000个人公司，第2个月，你就发不出工资，1年不到就倒闭。

05：人都很迷茫，迷茫的时候千万别吸毒、别赌博，别沉溺与网络游戏，迷茫的时候适当的调节一下心里，看看健康的电影，听听音乐，找几个朋友聊聊天。

扫地最厉害的人是谁？很可能顶多是扫地组的组长，例如杭州西湖区环境保护临时工中的小组长，种地种最厉害的？炒菜炒最厉害的？那一样，写程序最厉害的，很可能就是项目组组长，人嘛都想老板，但是都不想付出老板的艰辛。

真想巨大成功，就走出来自己干，就知道有多难打工还是很舒服每个月按时发工资，压力也是大家一起承担，周末还可以休息，晚上可能也不用加班。

迷茫的时候，看看我的博客，就会好很多了。

幸福有很多种类：

1：你有年轻漂亮的老婆。

2：你有健康聪明的小宝宝。

3：你有一个强壮的身体。

4：你会唱歌跳舞讲笑话，你多多才多艺。

5：你喜欢打球、钓鱼。

6：吉日嘎拉喜欢写几篇软文，看看别人的回复就其乐无穷，偶尔看看网络上美女图片，看看美国大片，都是其乐无穷的事情，偶尔鼓励一下小朋友，跟老朋友聚聚，吃吃喝喝都是很快乐很幸福的。

人人都想当比尔盖茨，可惜你没那样的妈妈（IBM的高级主管？），也没那样的爸爸（纽约著名律师？），今天也考不上那样的大学（哈佛很好考吗？），更不可能支付那么高的费用去购买别人的软件产品（按当时的美元计算，当年一个月工资多少，现在多少，按当年的汇率折算，30-40年后现在让你支付这些费用，也很可能买不起当年的DOS什么的版权）。

成功很多时候不是偶然的，很多是必然的，有几个国家领导人是普通老百姓？都是高干子女居多。

从农村的大山沟里能爬出来到中国的人间天堂定居生活也知足了，知足常乐，不能跟自己过不去。
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Mon, 07 Jan 2013 00:40:00 +0800</pubDate><guid>tag:typecodes.com,2013-01-07:mix/seniordevelopersum.html</guid><category>生活</category></item><item><title>再议Gravatar头像缓存至本地服务器</title><link>https://typecodes.com/web/againwpgravatarcache.html</link><description>&lt;p&gt;在&lt;a href="https://typecodes.com/web/wpgravatarcache.html" title="点击查看"&gt;《WordPress中Gravatar头像缓存至本地服务器——暨博客的优化实录》&lt;/a&gt;一文中，vfhky谈到了Gravatar头像本地服务器缓存技术。遗憾的是，由于当时考虑得不够周到，使用这里面的代码造成了一个比较严重的问题：那就是从default文件夹随机取出的头像在超过5天的时间后，也会随着拥有gravatar真实头像的用户的头像一起更新。&lt;/p&gt;


&lt;p&gt;但是gravatar用户的头像在更新时，由于$default的值是空的，那么更新时$g的值就是类似于&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;http://www.gravatar.com/avatar/eefdd735a45efc514936a0d0ca7e2511?s=40?d=?r=G
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;然而没有gravatar头像的“default用户”，他们的头像更新的时候，$g的值就是类似于&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;http://www.gravatar.com/avatar/eefdd735a45efc514936a0d0ca7e2511?s=30&amp;amp;d=/home4/jinrongi/public_html/hky/wp-content/themes/weisaysimple/avatar/default/default10.jpg&amp;amp;r=G
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这个是无法访问的，从而造成了应该显示头像的地方无法正常显示。&lt;/p&gt;
&lt;p&gt;&lt;img alt="gravatar头像缓存错误" src="https://o3cex9zsl.qnssl.com/2012/12/gravatar_error.png" /&gt;&lt;/p&gt;
&lt;h5&gt;—————————————解决方案—————————————&lt;/h5&gt;
&lt;p&gt;把原文中的代码改成下面的代码。需要说明的是&lt;code&gt;filesize($e) == 2637&lt;/code&gt;是通过  http://www.gravatar.com/avatar/  访问得到的头像的size值，用它来判断是否是gravatar用户。&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="x"&gt;//gravatar cache by vfhky 1&lt;/span&gt;
&lt;span class="x"&gt;function vfhky_avatar( $email, $size, $default , $alt) {&lt;/span&gt;
&lt;span class="x"&gt;  // $alt = (false === $alt) ? &amp;#39;&amp;#39; : esc_attr( $alt );&lt;/span&gt;
&lt;span class="x"&gt;  $alt = (&amp;#39;&amp;#39; == $alt) ? &amp;#39;&amp;#39; :  $alt ;//用于设置当鼠标移到头像上显示提示文字&lt;/span&gt;
&lt;span class="x"&gt;  $f = md5( strtolower( $email ) );//根据email的值来生成一个md5变量值，作为本地.jpg头像的名字&lt;/span&gt;
&lt;span class="x"&gt;  $a = get_bloginfo(&amp;#39;wpurl&amp;#39;) . &amp;#39;/avatar/&amp;#39; . $f. &amp;#39;.jpg&amp;#39;;//需要在根目录下面新建一个avatar文件夹&lt;/span&gt;
&lt;span class="x"&gt;  $e = ABSPATH .&amp;#39;avatar/&amp;#39;. $f. &amp;#39;.jpg&amp;#39;;//缓存的头像的绝对路径&lt;/span&gt;
&lt;span class="x"&gt;  $default_random_abs = ABSPATH .&amp;#39;wp-content/themes/vfhky/avatardefault/&amp;#39;;//在avatar文件夹下新建一个default文件夹，用于保存博客预先自定义的头像&lt;/span&gt;
&lt;span class="x"&gt;  $default_random = array(&amp;#39;default1.jpg&amp;#39;, &amp;#39;default2.jpg&amp;#39;,&amp;#39;default3.jpg&amp;#39;,&amp;#39;default4.jpg&amp;#39;,&amp;#39;default5.jpg&amp;#39;,&amp;#39;default6.jpg&amp;#39;,&amp;#39;default7.jpg&amp;#39;,&amp;#39;default8.jpg&amp;#39;,&amp;#39;default9.jpg&amp;#39;,&amp;#39;default10.jpg&amp;#39;); //在default文件夹下添加18个自己喜欢的头像，作为没有gravatar头像的人使用&lt;/span&gt;
&lt;span class="x"&gt;  $default_random_num = array_rand($default_random, 1);  //随机从上面18张头像中选出一张&lt;/span&gt;
&lt;span class="x"&gt;  $t = 1296000; //单位s，设置更新时间为15天&lt;/span&gt;
&lt;span class="x"&gt;  if ( empty($default) ) $default = $default_random_abs.$default_random[$default_random_num];//设置默认头像&lt;/span&gt;
&lt;span class="x"&gt;  if ( (time() - filemtime($e)) &amp;gt; $t ){ //不是第一次留言留言且留言时间超过5天就更新头像&lt;/span&gt;
&lt;span class="x"&gt;    //$g = sprintf( &amp;quot;http://%d.gravatar.com&amp;quot;, ( hexdec( $f{0} ) % 2 ) ). &amp;#39;/avatar/&amp;#39;. $f&lt;/span&gt;
&lt;span class="x"&gt;    // wp 3.0 的服务器&lt;/span&gt;
&lt;span class="x"&gt;    $g = &amp;#39;http://www.gravatar.com/avatar/&amp;#39;. $f; // 旧服务器 (哪个快就开哪个)&lt;/span&gt;
&lt;span class="x"&gt;    copy($g, $e); //将$g代表的网络图片复制到$e代表的本地服务器中&lt;/span&gt;
&lt;span class="x"&gt;    if (filesize($e) == 2637 ){&lt;/span&gt;
&lt;span class="x"&gt;      copy($default_random_abs.$default_random[$default_random_num], $a);&lt;/span&gt;
&lt;span class="x"&gt;    }&lt;/span&gt;
&lt;span class="x"&gt;    //如果该E-mail未在gravatar官网设置头像，则把官网默认的头像$e改成default中的随机一张图片&lt;/span&gt;
&lt;span class="x"&gt;    else {$a = esc_attr($g);}&lt;/span&gt;
&lt;span class="x"&gt;  }&lt;/span&gt;
&lt;span class="x"&gt;  //如果是第一次留言并且没有官网头像，则直接用default中的随机一张图片替代&lt;/span&gt;
&lt;span class="x"&gt;  if (!is_file($e) || filesize($e) == 2637  ){&lt;/span&gt;
&lt;span class="x"&gt;    copy($default_random_abs.$default_random[$default_random_num], $e);&lt;/span&gt;
&lt;span class="x"&gt;  }&lt;/span&gt;
&lt;span class="x"&gt;  echo &amp;quot;&amp;lt;img title=&amp;#39;{$alt}&amp;#39; alt=&amp;#39;{$alt}&amp;#39; src=&amp;#39;{$a}&amp;#39; class=&amp;#39;avatar avatar-{$size} photo&amp;#39; height=&amp;#39;{$size}&amp;#39; width=&amp;#39;{$size}&amp;#39; /&amp;gt;&amp;quot;;&lt;/span&gt;
&lt;span class="x"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Sun, 30 Dec 2012 01:58:00 +0800</pubDate><guid>tag:typecodes.com,2012-12-30:web/againwpgravatarcache.html</guid><category>wordpress</category><category>gravatar头像缓存</category></item><item><title>完美配置NetBeans IDE中的C/C++开发环境</title><link>https://typecodes.com/cseries/netbeanscdevenv.html</link><description>&lt;p&gt;目前众多C/C++开发人员使用的开发工具都是微软VC6.0、VC08、VS之类的IDE，那么对于需要进行C/C++开发的java程序猿们是否也要安装这些大块头呢？答案是否定的，因为目前java主要的两大开源IDE——Eclipse和NetBeans都是扩展性很好的开发平台，它们能够利用开源社区贡献的插件灵活地加入PHP、C/C++等开发环境。&lt;/p&gt;
&lt;p&gt;而相对于Eclipse，博主还是比较中意NetBeans。所以在本文中，博主用的是NetBeans7.2.1作为实例演示。在配置C/C++之前，博主也在网上查了很多资料，基本上写得比较乱，所以自己整理了一份完整的NetBeans中配置C/C++开发环境的方案。在具体的演示之前，大家需要明白的几个问题。&lt;/p&gt;


&lt;h6&gt;问题1、在下载安装NetBeans的时候，我选的是NetBeans IDE的完整包（支持PHP、C/C++等技术），并且在NetBeans中也激活了C/C++，那为什么无法使用C/C++进行开发呢？&lt;/h6&gt;
&lt;p&gt;答：NetBeans只是一个Integrated Development Environment，即集成开发环境，那么它提供的是一个开发平台。如果想用C/C++进行编译、连接、调试最终获得执行结果，那么你就需要相关的编译(Compile)和调试(Debugging)工具。而这个工具NetBeans是没有默认安装的，所以需要我们自己下载并配置安装。可以这么理解，NetBeans相当于Office，它提供了ppt、word等环境，如果最终想要得到一份图文并茂的.word文档，那么就需要相关的工具去实现！&lt;/p&gt;
&lt;h6&gt;问题2、目前，NetBeans的C/C++模块可以和Cygwin编译器或者MinGW编译器配合使用（当然二者也可以同时安装使用）。&lt;/h6&gt;
&lt;p&gt;因此，我们可以选择下载&lt;a href="http://www.cygwin.com/" title="下载Cygwin编译器"&gt;Cygwin编译器&lt;/a&gt;或者&lt;a href="http://sourceforge.net/projects/mingw/files/latest/download?source=files" title="下载MinGW编译器"&gt;MinGW编译器&lt;/a&gt;。这里以Cygwin编译器为例子，也有很多人用Netbeans+MinGW+MSYS搭建的，就不举例了。&lt;/p&gt;
&lt;h6&gt;问题3、Cygwin编译器主要元素如下（这几个在安装Cygwin的时候一定要选上）：&lt;/h6&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Cygwin gcc-core ( C 编译器) 3.4.4
Cygwin gcc-c++ ( C++ 编译器) 3.4.4
Cygwin gdb ( GNU 调试器) 7.5.50
Cygwin make 3.82.90
&lt;/pre&gt;&lt;/div&gt;


&lt;h6&gt;问题4、如果你下载的NetBeans没包含C/C++模块，可以通过单机Tools &amp;gt; Plugins &amp;gt; Available Plugins &amp;gt; C/C++进行安装；如果下载的完整的NetBeans IDE，只需在NetBeans中激活C/C++模块后就可以直接进行下面的操作了。&lt;/h6&gt;
&lt;p&gt;接下来是配置NetBeans IDE中的C/C++开发环境的具体操作步骤：&lt;/p&gt;
&lt;h5&gt;（一）下载Cygwin：&lt;/h5&gt;
&lt;p&gt;进入&lt;a href="http://cygwin.com/install.html" title="Cygwin下载"&gt;Cygwin官网&lt;/a&gt;，下载setup.exe后点击运行。然后一直选择默认和NEXT，在“Choose A Download Site”选项中，我们可以选择任意的网站地址进行下载。例如，选择国内的http://mirrors.163.com，国外的http://cygwin.mirrors.pair.com等等。&lt;/p&gt;
&lt;p&gt;&lt;img alt="下载Cygwin" src="https://o3cex9zsl.qnssl.com/2012/12/22.png" title="下载Cygwin" /&gt;&lt;/p&gt;
&lt;h5&gt;（二）在线安装所需要的Cygwin元素：&lt;/h5&gt;
&lt;p&gt;在“Select Packages”中，我们需要选择Cygwin的主要元素。正如前面第三个问题中提到的，在点击“Devel”左边的加号后，我们必须选上gcc-core: C compiler、gcc-g++: C++ compiler、gdb: The GNU Debugger 和 make: the GNU version of the 'make' utility，博主还选上了binutils、cmake、gcc以及gcc-mingw-**备用。&lt;/p&gt;
&lt;p&gt;&lt;img alt="安装所需要的Cygwin元素" src="https://o3cex9zsl.qnssl.com/2012/12/32.png" title="安装所需要的Cygwin元素" /&gt;&lt;/p&gt;
&lt;h5&gt;（三）将使Cygwin编译器整合到NetBeans IDE中，使之能够找到该工具集：&lt;/h5&gt;
&lt;p&gt;途径一：设置计算机系统的环境变量，将Cygwin编译器目录添加到 Path 变量中。XP系统通过依次点击“控制面板 &amp;gt; 系统 &amp;gt; 高级 &amp;gt; 环境变量 &amp;gt; 系统变量 &amp;gt; Path &amp;gt; 编辑 &amp;gt; ”
，而在WIN7、WIN8中依次点击“控制面板 &amp;gt; 系统和安全 &amp;gt; 系统 &amp;gt; 高级系统设置 &amp;gt; 环境变量 &amp;gt; 系统变量 &amp;gt; Path &amp;gt; 编辑 &amp;gt; ”，在“变量值”的最后面最后输入Cygwin的安装目录，例如博主的是“;D:\cygwin\bin”，千万不能把“;”漏掉了！！！&lt;/p&gt;
&lt;p&gt;&lt;img alt="设置系统的环境变量" src="https://o3cex9zsl.qnssl.com/2012/12/41.png" title="设置系统的环境变量" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="编辑PATH的变量值" src="https://o3cex9zsl.qnssl.com/2012/12/51.png" title="编辑PATH的变量值" /&gt;&lt;/p&gt;
&lt;p&gt;途径二：进入NetBeans，依次点击“工具 &amp;gt; 选项 &amp;gt; C/C++ &amp;gt; 添加 &amp;gt; 浏览选择Cygwin的安装目录”。最终显示如下图所示的界面，则表示已经在NetBeans7.2中的完美配置好了C/C++的开发环境。&lt;/p&gt;
&lt;p&gt;&lt;img alt="C/C++配置界面" src="https://o3cex9zsl.qnssl.com/2012/12/11.jpg" title="C/C++配置界面" /&gt;&lt;/p&gt;
&lt;h5&gt;（四）另外也可以通过点击Cygwin的快捷方式“Cygwin Terminal”，输入如下命令查看Cygwin编译器是否完整安装好了。&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cygcheck -c cygwin
gcc --version
g++ --version
make --version
gdb --version
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Sat, 29 Dec 2012 01:09:00 +0800</pubDate><guid>tag:typecodes.com,2012-12-29:cseries/netbeanscdevenv.html</guid><category>netbeans</category><category>c/c++</category></item><item><title>博客优化第二波(四)：wordpress头部文件的清理</title><link>https://typecodes.com/web/wpcleanheaderfile.html</link><description>&lt;p&gt;前几天跟sparrowwei聊天，讨论博客空间访问速度的问题。一经比较，发觉自己的博客一些程序文件存在很多冗余信息，这些影响了博客的加载速度。遂下决心，彻底整理下博客，提高访问速度，于是开启了博客优化第二波进程。现将整个清理过程记录如下（主要还是头部文件的清理，产生这些冗余信息的是wp_head()函数）：&lt;/p&gt;
&lt;h5&gt;（一）选择sinaapp的jQuery库，合并JS文件&lt;/h5&gt;


&lt;p&gt;1、在 &lt;a href="https://typecodes.com/web/wpaddrollnotice.html" title="点击查看"&gt;wordpress添加滚动（单条或多条）公告&lt;/a&gt; 一文中提到了使用谷歌的jQuery库，但是你懂得，所以改用新浪开放平台的了；&lt;/p&gt;
&lt;p&gt;2、合并&lt;a href="https://typecodes.com/web/wpquotecomments.html" title="如何给wordpress的回复添加引用功能"&gt;评论引用&lt;/a&gt;quote.js和&lt;a href="https://typecodes.com/web/wpatcommentauthor.html" title="如何在wordpress回复内容前面添加@方式"&gt;评论前面加@&lt;/a&gt;的reply.js为quote_reply.js，减少请求次数；合并&lt;a href="https://typecodes.com/web/wpaddrollnotice.html" title="wordpress添加滚动（单条或多条）公告"&gt;滚动公告notice.js&lt;/a&gt;到主题weisay.js。然后根据页面的需要，通过is_singular函数判断是否加载quote_reply.js（因为它们只会在博客需要评论的地方出现），而整合notice.js的weisay.js需要在任何页面都加载，因为每个页面都会用到右侧栏的公告栏。&lt;/p&gt;
&lt;h5&gt;（二）重点：整理header.php，去掉多余的信息&lt;/h5&gt;
&lt;p&gt;经过sparrowwei的提醒，看下自己的&lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt;之间的信息，确实存在问题：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;link&lt;/span&gt; &lt;span class="nx"&gt;rel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;alternate&amp;quot;&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;application/rss+xml&amp;quot;&lt;/span&gt; &lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;TypeCodes RSS Feed&amp;quot;&lt;/span&gt; &lt;span class="nx"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;https://typecodes.com/?feed=rss2&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;link&lt;/span&gt; &lt;span class="nx"&gt;rel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;alternate&amp;quot;&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;application/atom+xml&amp;quot;&lt;/span&gt; &lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;TypeCodes Atom Feed&amp;quot;&lt;/span&gt; &lt;span class="nx"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;https://typecodes.com/?feed=atom&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;link&lt;/span&gt; &lt;span class="nx"&gt;rel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;pingback&amp;quot;&lt;/span&gt; &lt;span class="nx"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;https://typecodes.com/xmlrpc.php&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;link&lt;/span&gt; &lt;span class="nx"&gt;rel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;EditURI&amp;quot;&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;application/rsd+xml&amp;quot;&lt;/span&gt; &lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;RSD&amp;quot;&lt;/span&gt; &lt;span class="nx"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;https://typecodes.com/xmlrpc.php?rsd&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;link&lt;/span&gt; &lt;span class="nx"&gt;rel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;wlwmanifest&amp;quot;&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;application/wlwmanifest+xml&amp;quot;&lt;/span&gt; &lt;span class="nx"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;https://typecodes.com/wp-includes/wlwmanifest.xml&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt; 
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;meta&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;generator&amp;quot;&lt;/span&gt; &lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;WordPress 3.4.0&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;

&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;WP&lt;/span&gt;&lt;span class="err"&gt;官方解决代码&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//wordpress.org/support/topic/remove-feed-from-wp_head)如下：在functions.php中添加如下代码&lt;/span&gt;

&lt;span class="c1"&gt;//sorted by vfhky&lt;/span&gt;
&lt;span class="nx"&gt;remove_action&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;wp_head&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;feed_links_extra&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//去除评论feed&lt;/span&gt;
&lt;span class="nx"&gt;remove_action&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;wp_head&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;feed_links&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//去除文章feed&lt;/span&gt;
&lt;span class="nx"&gt;remove_action&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;wp_head&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;rsd_link&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//针对Blog的远程离线编辑器接口&lt;/span&gt;
&lt;span class="nx"&gt;remove_action&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;wp_head&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;wlwmanifest_link&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//Windows Live Writer接口&lt;/span&gt;
&lt;span class="nx"&gt;remove_action&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;wp_head&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;index_rel_link&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//移除当前页面的索引&lt;/span&gt;
&lt;span class="nx"&gt;remove_action&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;wp_head&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;parent_post_rel_link&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//移除后面文章的url&lt;/span&gt;
&lt;span class="nx"&gt;remove_action&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;wp_head&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;start_post_rel_link&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//移除最开始文章的url&lt;/span&gt;
&lt;span class="nx"&gt;remove_action&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;wp_head&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;wp_shortlink_wp_head&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="c1"&gt;//自动生成的短链接&lt;/span&gt;
&lt;span class="nx"&gt;remove_action&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;wp_head&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;adjacent_posts_rel_link&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;///移除相邻文章的url&lt;/span&gt;
&lt;span class="nx"&gt;remove_action&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;wp_head&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;wp_generator&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// 移除版本号&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;函数说明：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nx"&gt;remove_action&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$tag&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;$function_to_remove&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;$priority&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;$accepted_args&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;tag变量表示将要被删除的函数所连接到的动作hook&lt;/span&gt;&lt;span class="err"&gt;；&lt;/span&gt;
&lt;span class="nx"&gt;function_to_remove变量表示将要被删除函数的名称&lt;/span&gt;&lt;span class="err"&gt;；&lt;/span&gt;
&lt;span class="nx"&gt;priority变量表示函数优先级&lt;/span&gt;&lt;span class="err"&gt;（&lt;/span&gt;&lt;span class="nx"&gt;在函数最初连接时定义&lt;/span&gt;&lt;span class="err"&gt;，&lt;/span&gt;&lt;span class="nx"&gt;默认为10&lt;/span&gt;&lt;span class="err"&gt;；&lt;/span&gt;
&lt;span class="nx"&gt;accepted_args变量表示函数所接受参数的数量&lt;/span&gt;&lt;span class="err"&gt;，&lt;/span&gt;&lt;span class="nx"&gt;默认为1&lt;/span&gt;&lt;span class="err"&gt;。&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;（三）严重失误：&lt;/h5&gt;
&lt;p&gt;把博客的ping功能去掉了，直接导致博客发布文章后没及时通知百度搜索……于是，重新在header.php中添加上代码&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;link&lt;/span&gt; &lt;span class="nx"&gt;rel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;pingback&amp;quot;&lt;/span&gt; &lt;span class="nx"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt; &lt;span class="nx"&gt;bloginfo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;pingback_url&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="o"&gt;?/&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot; /&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Thu, 13 Dec 2012 00:58:00 +0800</pubDate><guid>tag:typecodes.com,2012-12-13:web/wpcleanheaderfile.html</guid><category>wordpress</category><category>wordpress头部文件</category></item><item><title>博客优化第二波(三)：wordpress评论添加算术验证码</title><link>https://typecodes.com/web/wpmathverifycode.html</link><description>&lt;p&gt;虽然说前面通过前面通过采用&lt;a href="https://typecodes.com/web/antiwpspamplugorno.html" title="屏蔽wordpress垃圾评论的方法（插件和非插件）"&gt;《屏蔽wordpress垃圾评论的方法（插件和非插件）》&lt;/a&gt;的方法来拦截那些spam，效果非常不错。但是博主对这些垃圾评论不会直接删除，而是先经过非插件方法：Anti-Spam程序的处理，自动把他们列入黑名单，然后在wp后台手动删除。每天都要删半箩筐的垃圾评论，蛋疼不已。&lt;/p&gt;


&lt;p&gt;于是博主做了一个艰难的决定，那就是填写验证码后才能发表评论，幸苦发表评论的筒子们了。之前写过一篇关于PHP验证码的文章——&lt;a href="https://typecodes.com/web/phpverificationcode.html" title="PHP中验证码的设计"&gt;《PHP中验证码的设计》&lt;/a&gt;，主要是JS弹窗进行验证。这样的好处是整个过程在客户端进行，不用提交到服务器，减轻了服务器的负担；缺点是安全性不佳，要是用户禁用了浏览器的javascript，那么弹窗是不起作用的。那么除了图片验证码之外，我们也可以使用简单的数字验证码，即简单的算术运算来完成验证工作。&lt;/p&gt;
&lt;p&gt;效果如下图示:&lt;/p&gt;
&lt;p&gt;&lt;img alt="wordpress算术验证码验证码" src="https://o3cex9zsl.qnssl.com/2012/12/yzm.png" title="wordpress算术验证码验证码" /&gt;&lt;/p&gt;
&lt;p&gt;不罗嗦了，直接贴出代码：&lt;/p&gt;
&lt;h5&gt;（一）在主题目录的functions.php添加如下代码：&lt;/h5&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="x"&gt;//算术验证码by vfhky&lt;/span&gt;
&lt;span class="x"&gt;function spam_provent_math(){&lt;/span&gt;
&lt;span class="x"&gt;  $a=rand(5,15);&lt;/span&gt;
&lt;span class="x"&gt;  $b=rand(5,15);&lt;/span&gt;
&lt;span class="x"&gt;  echo &amp;quot;&amp;amp;lt;input type=&amp;#39;text&amp;#39; name=&amp;#39;sum&amp;#39; id=&amp;#39;sum&amp;#39;  size=&amp;#39;22&amp;#39; tabindex=&amp;#39;3&amp;#39; value=&amp;#39;动手又动脑，哦也 ！&amp;#39; onfocus=&amp;#39;if (this.value != \&amp;quot;\&amp;quot;) {this.value = \&amp;quot;\&amp;quot;;}&amp;#39; onblur=&amp;#39;if (this.value == \&amp;quot;\&amp;quot;) {this.value = \&amp;quot;动手又动脑，哦也 ！\&amp;quot;;}&amp;#39; /&amp;amp;gt; = $a + $b （&amp;amp;lt;font color=&amp;#39;#0088DD&amp;#39;&amp;amp;gt;防止机器人评论&amp;amp;lt;/font&amp;amp;gt;）&amp;quot; .&amp;quot;&amp;amp;lt;input type=&amp;#39;hidden&amp;#39; name=&amp;#39;a&amp;#39; value=&amp;#39;$a&amp;#39;/&amp;amp;gt;&amp;quot; .&amp;quot;&amp;amp;lt;input type=&amp;#39;hidden&amp;#39; name=&amp;#39;b&amp;#39; value=&amp;#39;$b&amp;#39;/&amp;amp;gt;&amp;quot;;&lt;/span&gt;
&lt;span class="x"&gt;}&lt;/span&gt;
&lt;span class="x"&gt;function spam_provent_pre($spam_result){&lt;/span&gt;
&lt;span class="x"&gt;  $sum=$_POST[&amp;#39;sum&amp;#39;];&lt;/span&gt;
&lt;span class="x"&gt;  switch($sum){&lt;/span&gt;
&lt;span class="x"&gt;    case $_POST[&amp;#39;a&amp;#39;]+$_POST[&amp;#39;b&amp;#39;]:break;&lt;/span&gt;
&lt;span class="x"&gt;    case null:wp_die(&amp;#39;亲，算个结果撒&amp;#39;);break;&lt;/span&gt;
&lt;span class="x"&gt;    default:wp_die(&amp;#39;算错啦⊙﹏⊙b汗&amp;#39;);&lt;/span&gt;
&lt;span class="x"&gt;  }&lt;/span&gt;
&lt;span class="x"&gt;  return $spam_result;&lt;/span&gt;
&lt;span class="x"&gt;}&lt;/span&gt;
&lt;span class="x"&gt;//注册用户or管理员则不需要验证&lt;/span&gt;
&lt;span class="x"&gt;if(!is_user_logged_in() &amp;amp;&amp;amp; $comment_data[&amp;#39;comment_type&amp;#39;]==&amp;#39;&amp;#39;){&lt;/span&gt;
&lt;span class="x"&gt;  add_filter(&amp;#39;preprocess_comment&amp;#39;,&amp;#39;spam_provent_pre&amp;#39;);&lt;/span&gt;
&lt;span class="x"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h5&gt;（二）在主题目录下的comments.php(不同的主题可能评论框的位置不同，有的主题可能在functions.php里面)中调用上述代码：&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;//根据是否是管理员来决定是否显示验证码
&amp;lt;php if(!is_user_logged_in())spam_provent_math();?&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;Update 2013.03.09 00:26&lt;/h5&gt;
&lt;p&gt;感谢 @Teddysun 指出本代码的BUG——普通评论者在初次留言后，如果继续留言的话就需要点击“更改”按钮，否则直接留言的话会被程序视为未登录者而调用spam_provent_math()函数，从而造成BUG。问题出在is_user_logged_in()函数身上，先给出解决方案：&lt;/p&gt;
&lt;p&gt;在wp官方论坛也有人遇到了类似问题：&lt;a href="http://wordpress.org/support/topic/is_user_logged_in-not-working-as-expected" title="查看 wordpress论坛中的类似问题 "&gt;is_user_logged_in not working as expected&lt;/a&gt;。其中，有两位大牛的回答我觉得还是有见地的。&lt;/p&gt;
&lt;h6&gt;Asbj?rn Ulsberg的解释是：&lt;/h6&gt;
&lt;p&gt;他在查看了is_user_logged_in()的底层函数之后发觉内部调用wp_parse_auth_cookie()会返回false。因为根据var_dump($_COOKIE)打印输出的变量$_COOKIE的值可以揭示wp_parse_auth_cookie()正在查找的cookies是完全不存在的。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="x"&gt;I&amp;#39;ve dug into the underlying code of is_user_logged_in() and found that the inner call to wp_parse_auth_cookie() returns false. A var_dump(&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;_COOKIE&lt;/span&gt;&lt;span class="x"&gt;) reveals that there&amp;#39;s actually no cookies named anything like what wp_parse_auth_cookie() is looking for.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h6&gt;rhysgoodwin的个人博客解释是：&lt;/h6&gt;
&lt;p&gt;wp_signon()函数可能出于某些原因使得$current_user之类的全局变量在页面刷新前是无法存储的,而且调用get_currentuserinfo()也无法产生。而is_user_logged_in()也是返回false，因此认为是cookie的认证过程出了什么问题引起的。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nx"&gt;The&lt;/span&gt; &lt;span class="nx"&gt;wp_signon&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;logs&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nx"&gt;but&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;some&lt;/span&gt; &lt;span class="nx"&gt;reason&lt;/span&gt; &lt;span class="nx"&gt;after&lt;/span&gt; &lt;span class="nx"&gt;doing&lt;/span&gt; &lt;span class="nx"&gt;so&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;global&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="nx"&gt;variables&lt;/span&gt; &lt;span class="nx"&gt;such&lt;/span&gt; &lt;span class="nx"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;$current_user&lt;/span&gt; &lt;span class="nx"&gt;and&lt;/span&gt; &lt;span class="nx"&gt;$user_ID&lt;/span&gt; &lt;span class="nx"&gt;are&lt;/span&gt; &lt;span class="nx"&gt;not&lt;/span&gt; &lt;span class="nx"&gt;populated&lt;/span&gt; &lt;span class="nx"&gt;until&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;page&lt;/span&gt; &lt;span class="nx"&gt;is&lt;/span&gt; &lt;span class="nx"&gt;refreshed&lt;/span&gt; &lt;span class="nx"&gt;and&lt;/span&gt; &lt;span class="nx"&gt;calling&lt;/span&gt; &lt;span class="nx"&gt;get_currentuserinfo&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="nx"&gt;doesn&lt;/span&gt;&lt;span class="err"&gt;’&lt;/span&gt;&lt;span class="nx"&gt;t&lt;/span&gt; &lt;span class="nx"&gt;populate&lt;/span&gt; &lt;span class="nx"&gt;them&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;The&lt;/span&gt; &lt;span class="nx"&gt;is_user_logged_in&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;also&lt;/span&gt; &lt;span class="nx"&gt;returns&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;  &lt;span class="nx"&gt;I&lt;/span&gt; &lt;span class="nx"&gt;think&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;problem&lt;/span&gt; &lt;span class="nx"&gt;has&lt;/span&gt; &lt;span class="nx"&gt;something&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="kd"&gt;with&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;cookie&lt;/span&gt; &lt;span class="nx"&gt;authentication&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h6&gt;（三）我们也不去深入考究上面两位大牛的具体，结合博客先前评论遇到的实际BUG，有一点是可以确定的：is_user_logged_in()只能“一次性”使用，一旦页面刷新就无法起作用了。所以我把步骤(二)中的调用代码改成&lt;/h6&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nb"&gt;isset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_COOKIE&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;comment_author_email_&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;COOKIEHASH&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;&lt;span class="nx"&gt;spam_provent_math&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;经博主的验证测试木有出现上面的BUG了，问题解决！！！&lt;/p&gt;
&lt;h5&gt;Update 2013.04.12 22:10&lt;/h5&gt;
&lt;p&gt;感谢 @来哥 指出本代码的BUG——用户在错误输入验证码结果后会导致博客布局错乱、页面变形。解决方案见&lt;a href="https://typecodes.com/web/againwpmathverifycode.html" title="再谈wordpress评论验证码——Willin Kan大神开的一个“玩笑”"&gt;《再谈wordpress评论验证码——Willin Kan大神开的一个“玩笑”》&lt;/a&gt;。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Wed, 12 Dec 2012 16:17:00 +0800</pubDate><guid>tag:typecodes.com,2012-12-12:web/wpmathverifycode.html</guid><category>wordpress</category><category>wordpress验证码</category></item><item><title>博客优化第二波(二)：wordpress评论表情图片路径修改的两种方法</title><link>https://typecodes.com/web/wpcommentfacepicpath.html</link><description>&lt;p&gt;wordpress评论框上的22个表情的图片默认是放在wp-include/images/smilies路径中的，这样做的好处是能够比较快的读取图片，安全性也好；缺点是每次遇到wp程序升级，你精心设计的这22个表情图标（BZ设计了两套表情图标，&lt;a href="http://pan.baidu.com/share/link?shareid=78704&amp;amp;uk=1879910561" title="wordpress表情包"&gt;点击下载&lt;/a&gt;）就会被覆盖成wp默认的那些图标，所以我想把它整到博客的主题images/smilies/中去。具体步骤如下：&lt;/p&gt;
&lt;h5&gt;（一）获取smiley.php文件&lt;/h5&gt;


&lt;p&gt;以我使用的威少的主题为例，这22个表情是通过comments.php调用主题目录中includes文件夹下的smiley.php显示的。如果你的博客没有评论表情的话，可以下载威少主题中的&lt;a href="http://pan.baidu.com/share/link?shareid=78704&amp;amp;uk=1879910561" title="smiley.php"&gt;smiley.php&lt;/a&gt;放在自己主题目录下的includes文件夹中(当然也可以自定义路径，只要把comments.php中的引用路径写对就行)，然后在comments.php的合适位置添加调用即可。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt; &lt;span class="k"&gt;include&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;TEMPLATEPATH&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;/includes/smiley.php&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;（二）修改smiley.php文件&lt;/h5&gt;
&lt;p&gt;但威少的这份smiley.php文件没给每个表情图标上添加title和alt信息（这样不利于SEO，并且鼠标移上去也没相应提示文字），所以你还得给它加上这些信息;另外，大家还可以可以把这些表情定义到一个div层中，然后设置与主题相吻合的样式(相应修改style.css)。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nf"&gt;#smilelink&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="k"&gt;cursor&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="k"&gt;pointer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;width&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;540px&lt;/span&gt;&lt;span class="p"&gt;;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;（三）不推荐的方法:&lt;/h5&gt;
&lt;p&gt;威少主题smiley.php中表情图片路径都类似于 &amp;lt;img src="/wp-includes/images/smilies/icon_question.gif" title="汗" alt="汗" /&amp;gt; 所以我们只要把/wp-includes/images/smilies/改成自己主题下面的表情路径就行了。但这只能在评论框上显示你自定义的表情图片，当留言者点击这些表情图标然后连同评论内容一起显示在你的留言板上的时候，你看到的还是/wp-includes/images/smilies/中的表情图标！&lt;/p&gt;
&lt;h5&gt;（三）推荐方法:&lt;/h5&gt;
&lt;p&gt;如果不想用上面推荐的修改路径的方法，那么我们可以在functions.php中添加如下代码，调用自己主题下面的表情图标。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;//评论框的表情包调用&lt;/span&gt;
&lt;span class="nx"&gt;add_filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;smilies_src&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;custom_smilies_src&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;custom_smilies_src&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$img_src&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;$img&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;$siteurl&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;get_bloginfo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;template_directory&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/images/smilies/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;$img&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;（四）完结，以后博客再怎么升级都不怕了！&lt;/h5&gt;
&lt;p&gt;&lt;img alt="评论表情" src="https://o3cex9zsl.qnssl.com/2012/12/biaoqing.png" title="评论表情" /&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Wed, 12 Dec 2012 15:29:00 +0800</pubDate><guid>tag:typecodes.com,2012-12-12:web/wpcommentfacepicpath.html</guid><category>wordpress</category><category>wordpress评论表情</category></item><item><title>博客优化第二波(一)：同时使用谷歌自定义搜索和百度站内搜索</title><link>https://typecodes.com/web/googlecustbaidusearch.html</link><description>&lt;p&gt;之前我写过一篇关于谷歌自定义搜索的文章：&lt;a href="https://typecodes.com/web/googlecustomsearch.html" title="查看原文"&gt;《如何把自己的站内搜索改用强大的谷歌搜索》&lt;/a&gt;。使用自定义的谷歌搜索引擎，完全满足任何一个站点的搜索，更何况是区区一个wordpress程序。某大会召开之前，谷歌.HK还是可以用的，而且借助谷歌goagent和Proxy SwitchySharp插件，博客的站内搜索体验效果还不错。之后，.HK果断给Qiang了……&lt;/p&gt;


&lt;p&gt;尝试同时使用谷歌自定义搜索和百度站内搜索。概念如下：博客优先使用谷歌搜索（考虑到一些VPN用户或者说不定哪天TC不玩河蟹了），若5秒内谷歌没自动显示出结果，说明仍被Qiang中；这时，用户只需要在百度的搜索框中输入要搜索的内容，点击搜索按钮之后就可以使用百度进行站内搜索了。效果如下面三幅图片所示，当然大家可以在博客的右上角亲自动手试一试！&lt;/p&gt;
&lt;p&gt;&lt;img alt="敢进入搜索页面" src="https://o3cex9zsl.qnssl.com/2012/12/11.png" title="刚进入搜索页面" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="5秒内谷歌没显示搜索结果" src="https://o3cex9zsl.qnssl.com/2012/12/21.png" title="5秒内谷歌没显示搜索结果" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="谷歌搜索正常显示结果" src="https://o3cex9zsl.qnssl.com/2012/12/31.png" title="谷歌搜索正常显示结果" /&gt;&lt;/p&gt;
&lt;p&gt;不多说了，代码如下（为了方便理解，大家可以结合博客中的搜索页面进行比较查看）&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;&amp;lt;!--开始调用谷歌站内搜索--&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;p&amp;gt;&amp;lt;br/&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;br&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;font&lt;/span&gt; &lt;span class="na"&gt;color=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;#FF0000&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;face=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;微软雅黑&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;size=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;4px&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;搜索&lt;span class="nt"&gt;&amp;lt;/font&amp;gt;&amp;lt;font&lt;/span&gt; &lt;span class="na"&gt;color=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;#0000FF&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;face=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;微软雅黑&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;“&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt; &lt;span class="nx"&gt;the_search_query&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;”&lt;span class="nt"&gt;&amp;lt;/font&amp;gt;&lt;/span&gt;的结果
&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;cse&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;width: 100%;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;&lt;span class="c"&gt;&amp;lt;!--开始调用百度站内搜索--&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;form&lt;/span&gt; &lt;span class="na"&gt;action=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://www.baidu.com/baidu&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;table&lt;/span&gt; &lt;span class="na"&gt;bgcolor=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;#C78DCC&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;font-size:10pt;margin: 30px auto;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;tr&lt;/span&gt; &lt;span class="na"&gt;height=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;60&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;td&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;word&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;width: 405px;height: 32px;font: 16px/22px arial;background: white;outline: none;-webkit-appearance: none;background: url(&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt; &lt;span class="nx"&gt;bloginfo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;template_directory&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="o"&gt;?/&amp;gt;/&lt;/span&gt;&lt;span class="nx"&gt;images&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;bdsearch&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;png&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;no&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;repeat&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;304&lt;/span&gt;&lt;span class="nx"&gt;px&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;  onfocus=&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot; onblur=&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;谷歌努力搜索中……若5秒内无结果，请换百度&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot; value=&amp;quot;&lt;/span&gt;&lt;span class="nx"&gt;谷歌努力搜索中……若5秒内无结果，请换百度&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;gt;&lt;/span&gt;
&lt;span class="s2"&gt;                    &amp;lt;span style=&amp;quot;&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;96&lt;/span&gt;&lt;span class="nx"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;33&lt;/span&gt;&lt;span class="nx"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nx"&gt;display&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;inline&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nx"&gt;background&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;?&lt;/span&gt;&lt;span class="nx"&gt;php&lt;/span&gt; &lt;span class="nx"&gt;bloginfo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;template_directory&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="s"&gt;/images/bdsearch.png) no-repeat -202px 0;z-index: 0;vertical-align: top;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                        &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;submit&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;百度试试&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;width:&lt;/span&gt; &lt;span class="err"&gt;95px;height:&lt;/span&gt; &lt;span class="err"&gt;32px;padding-top:&lt;/span&gt; &lt;span class="err"&gt;2px;font-size:&lt;/span&gt; &lt;span class="err"&gt;14px;background:&lt;/span&gt; &lt;span class="err"&gt;#DDD&lt;/span&gt; &lt;span class="err"&gt;url(&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt; &lt;span class="nx"&gt;bloginfo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;template_directory&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="o"&gt;?/&amp;gt;/&lt;/span&gt;&lt;span class="nx"&gt;images&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;bdsearch&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;png&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="nx"&gt;cursor&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;pointer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;gt;&lt;/span&gt;
&lt;span class="s2"&gt;                    &amp;lt;/span&amp;gt;&lt;/span&gt;
&lt;span class="s2"&gt;                    &amp;lt;input name=tn type=hidden value=&amp;quot;&lt;/span&gt;&lt;span class="nx"&gt;bds&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/&amp;gt;&lt;/span&gt;
&lt;span class="s2"&gt;                    &amp;lt;input name=cl type=hidden value=&amp;quot;&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/&amp;gt;&lt;/span&gt;
&lt;span class="s2"&gt;                    &amp;lt;input name=ct type=hidden value=&amp;quot;&lt;/span&gt;&lt;span class="mi"&gt;2097152&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/&amp;gt;&lt;/span&gt;
&lt;span class="s2"&gt;                    &amp;lt;input name=si type=hidden value=&amp;quot;&lt;/span&gt;&lt;span class="nx"&gt;typecodes&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;com&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/&amp;gt;&lt;/span&gt;
&lt;span class="s2"&gt;                &amp;lt;/td&amp;gt;&lt;/span&gt;
&lt;span class="s2"&gt;            &amp;lt;/tr&amp;gt;&lt;/span&gt;
&lt;span class="s2"&gt;        &amp;lt;/table&amp;gt;&lt;/span&gt;
&lt;span class="s2"&gt;    &amp;lt;/form&amp;gt;&amp;lt;!--结束调用百度站内搜索--&amp;gt;&lt;/span&gt;
&lt;span class="s2"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="s2"&gt;&amp;lt;font color=&amp;quot;&lt;/span&gt;&lt;span class="c1"&gt;#FF0000&amp;quot; face=&amp;quot;微软雅黑&amp;quot; size=&amp;quot;4px&amp;quot;&amp;gt;搜索&amp;lt;/font&amp;gt;&amp;lt;font color=&amp;quot;#0000FF&amp;quot; face=&amp;quot;微软雅黑&amp;quot;&amp;gt;“&amp;lt;?php the_search_query(); ?&amp;gt;”&amp;lt;/font&amp;gt;的结果&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;!--&lt;/span&gt;&lt;span class="nx"&gt;结束调用谷歌站内搜索&lt;/span&gt;&lt;span class="o"&gt;--&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;下面这段JS代码是从谷歌自定义搜索中复制的，它的作用就是显示搜索结果。&lt;/h5&gt;
&lt;p&gt;大家可以把它放在自己的搜索页面的最后面，以便加快载入速度。例如，黄克业的博客中的站内搜索search.php就把它放在 &amp;lt;?php get_footer(); ?&amp;gt; 的后面。search.php的下载地址见文章的末尾处。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;script&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://www.google.com.hk/jsapi&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;script&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; 
  google.load(&amp;#39;search&amp;#39;, &amp;#39;1&amp;#39;, {language : &amp;#39;zh-CN&amp;#39;, style : google.loader.themes.BUBBLEGUM});
  google.setOnLoadCallback(function() {
    var customSearchOptions = {};
    var orderByOptions = {};
    orderByOptions[&amp;#39;keys&amp;#39;] = [{label: &amp;#39;相关性&amp;#39;, key: &amp;#39;&amp;#39;},{label: &amp;#39;日期&amp;#39;, key: &amp;#39;date&amp;#39;}];
    customSearchOptions[&amp;#39;enableOrderBy&amp;#39;] = true;
    customSearchOptions[&amp;#39;orderByOptions&amp;#39;] = orderByOptions;
    var imageSearchOptions = {};
    imageSearchOptions[&amp;#39;layout&amp;#39;] = google.search.ImageSearch.LAYOUT_POPUP;
    customSearchOptions[&amp;#39;enableImageSearch&amp;#39;] = true;
    customSearchOptions[&amp;#39;imageSearchOptions&amp;#39;] = imageSearchOptions;  var customSearchControl = new google.search.CustomSearchControl(
      &amp;#39;009679826070314366499:n0657hze3po&amp;#39;, customSearchOptions);
    customSearchControl.setResultSetSize(google.search.Search.FILTERED_CSE_RESULTSET);
    var options = new google.search.DrawOptions();
    options.setAutoComplete(true);
    options.enableSearchResultsOnly(); 
    customSearchControl.draw(&amp;#39;cse&amp;#39;, options);
    function parseParamsFromUrl() {
      var params = {};
      var parts = window.location.search.substr(1).split(&amp;#39;\x26&amp;#39;);
      for (var i = 0; i &lt;span class="nt"&gt;&amp;lt; parts.length&lt;/span&gt;&lt;span class="err"&gt;;&lt;/span&gt; &lt;span class="err"&gt;i++)&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;
        &lt;span class="err"&gt;var&lt;/span&gt; &lt;span class="na"&gt;keyValuePair =&lt;/span&gt; &lt;span class="s"&gt;parts[i].split(&amp;#39;=&amp;#39;);&lt;/span&gt;
        &lt;span class="err"&gt;var&lt;/span&gt; &lt;span class="na"&gt;key =&lt;/span&gt; &lt;span class="s"&gt;decodeURIComponent(keyValuePair[0]);&lt;/span&gt;
        &lt;span class="err"&gt;params[key]&lt;/span&gt; &lt;span class="err"&gt;=&lt;/span&gt; &lt;span class="err"&gt;keyValuePair[1]&lt;/span&gt; &lt;span class="err"&gt;?&lt;/span&gt; &lt;span class="err"&gt;decodeURIComponent(keyValuePair[1].replace(/\+/g,&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;))&lt;/span&gt; &lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="err"&gt;keyValuePair[1];&lt;/span&gt;
      &lt;span class="err"&gt;}&lt;/span&gt;
      &lt;span class="err"&gt;return&lt;/span&gt; &lt;span class="err"&gt;params;&lt;/span&gt;
    &lt;span class="err"&gt;}&lt;/span&gt;

    &lt;span class="err"&gt;var&lt;/span&gt; &lt;span class="na"&gt;urlParams =&lt;/span&gt; &lt;span class="s"&gt;parseParamsFromUrl();&lt;/span&gt;
    &lt;span class="err"&gt;var&lt;/span&gt; &lt;span class="na"&gt;queryParamName =&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;s&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;;&lt;/span&gt;
    &lt;span class="err"&gt;if&lt;/span&gt; &lt;span class="err"&gt;(urlParams[queryParamName])&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;
      &lt;span class="err"&gt;customSearchControl.execute(urlParams[queryParamName]);&lt;/span&gt;
    &lt;span class="err"&gt;}&lt;/span&gt;
  &lt;span class="err"&gt;},&lt;/span&gt; &lt;span class="err"&gt;true);&lt;/span&gt;
&lt;span class="err"&gt;&amp;lt;/script&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;style&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/css&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;//设置搜索结果显示的样式，大家可以自己修改
  .gsc-control-cse {
    font-family: Arial, sans-serif;
    border-color: #C78DCC;
    background-color: #fafafa;
  }
  .gsc-control-cse .gsc-table-result {
    font-family: Arial, sans-serif;
  }
  .gsc-tabHeader{   font-size:20px;}
  .gsc-tabHeader.gsc-tabhInactive {

    border-color: #DECAFF;
    background-color: #DECAFF;
  }
  .gsc-tabHeader.gsc-tabhActive {
    border-color: #C78DCC;
    background-color: #C78DCC;
  }
  .gsc-tabsArea {
    border-color: #C78DCC;
  }
  .gsc-webResult.gsc-result,
  .gsc-results .gsc-imageResult {
    border-color: #C78DCC;
    background-color: #F9F5FF;
        margin:0px 0px 15px 0px ;
  }
  .gsc-webResult.gsc-result:hover,
  .gsc-imageResult:hover {
    border-color: #DECAFF;
    background-color: #FFFFFF;
  }
  .gsc-webResult.gsc-result.gsc-promotion:hover {
    border-color: #DECAFF;
    background-color: #FFFFFF;
  }
  .gs-webResult.gs-result a.gs-title:link,
  .gs-webResult.gs-result a.gs-title:link b,
  .gs-imageResult a.gs-title:link,
  .gs-imageResult a.gs-title:link b {
    color: #0066CC;
  }
  .gs-webResult.gs-result a.gs-title:visited,
  .gs-webResult.gs-result a.gs-title:visited b,
  .gs-imageResult a.gs-title:visited,
  .gs-imageResult a.gs-title:visited b {
    color: #0066CC;
  }
  .gs-webResult.gs-result a.gs-title:hover,
  .gs-webResult.gs-result a.gs-title:hover b,
  .gs-imageResult a.gs-title:hover,
  .gs-imageResult a.gs-title:hover b {
    color: #0066CC;
  }
  .gs-webResult.gs-result a.gs-title:active,
  .gs-webResult.gs-result a.gs-title:active b,
  .gs-imageResult a.gs-title:active,
  .gs-imageResult a.gs-title:active b {
    color: #0066CC;
  }
  .gsc-cursor-page {
    color: #0066CC;
  }
  a.gsc-trailing-more-results:link {
    color: #0066CC;
  }
  .gs-webResult .gs-snippet,
  .gs-imageResult .gs-snippet,
  .gs-fileFormatType {
    color: #000000;
  }
  .gs-webResult div.gs-visibleUrl,
  .gs-imageResult div.gs-visibleUrl {
    color: #009933;
  }
  .gs-webResult div.gs-visibleUrl-short {
    color: #009933;
  }
  .gs-webResult div.gs-visibleUrl-short {
    display: none;
  }
  .gs-webResult div.gs-visibleUrl-long {
    display: block;
  }
  .gs-promotion div.gs-visibleUrl-short {
    display: none;
  }
  .gs-promotion div.gs-visibleUrl-long {
    display: block;
  }
  .gsc-cursor-box {
    border-color: #F9F5FF;
  }
  .gsc-results .gsc-cursor-box .gsc-cursor-page {
    border-color: #DECAFF;
    background-color: #F9F5FF;
    color: #0066CC;
  }
  .gsc-results .gsc-cursor-box .gsc-cursor-current-page {
    border-color: #C78DCC;
    background-color: #C78DCC;
    color: #0066CC;
  }
  .gsc-webResult.gsc-result.gsc-promotion {
    border-color: #DECAFF;
    background-color: #F0E9FF;
  }
  .gsc-completion-title {
    color: #0066CC;
  }
  .gsc-completion-snippet {
    color: #000000;
  }
  .gs-promotion a.gs-title:link,
  .gs-promotion a.gs-title:link *,
  .gs-promotion .gs-snippet a:link {
    color: #0066CC;
  }
  .gs-promotion a.gs-title:visited,
  .gs-promotion a.gs-title:visited *,
  .gs-promotion .gs-snippet a:visited {
    color: #0066CC;
  }
  .gs-promotion a.gs-title:hover,
  .gs-promotion a.gs-title:hover *,
  .gs-promotion .gs-snippet a:hover {
    color: #0066CC;
  }
  .gs-promotion a.gs-title:active,
  .gs-promotion a.gs-title:active *,
  .gs-promotion .gs-snippet a:active {
    color: #0066CC;
  }
  .gs-promotion .gs-snippet,
  .gs-promotion .gs-title .gs-promotion-title-right,
  .gs-promotion .gs-title .gs-promotion-title-right *  {
    color: #000000;
  }
  .gs-promotion .gs-visibleUrl,
  .gs-promotion .gs-visibleUrl-short {
    color: #CC7A9F;
  }
  &lt;span class="nt"&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;search.php的下载地址:&lt;/h5&gt;
&lt;p&gt;http://pan.baidu.com/share/link?shareid=78704&amp;amp;uk=1879910561&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Tue, 11 Dec 2012 23:33:00 +0800</pubDate><guid>tag:typecodes.com,2012-12-11:web/googlecustbaidusearch.html</guid><category>谷歌自定义搜索</category><category>百度站内搜索</category></item><item><title>宏碁笔记本恢复出厂系统记（二）</title><link>https://typecodes.com/mix/acerrestorefactorysystwo.html</link><description>&lt;p&gt;在&lt;a href="https://typecodes.com/mix/acerrestorefactorysysone.html" title="查看原文"&gt;《宏碁笔记本恢复出厂系统记（一）》&lt;/a&gt;一文中，记述了我的宏碁Aspire 4752G在用“ALT+F10”恢复出厂系统无效（因为该出厂系统被我损坏了）的情况下自己用宏碁官方的原镜像文件自己制作一个恢复系统，那么这篇文章就是具体的方法，需要准备的工具有：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;AcronisDiskDirector或者DiskGenius分区工具
Acer官方系统镜像（recovery1.iso，recovery2.iso，recovery3.iso，recovery4.iso。下载完后要用MD5校验软件进行校验，以确定镜像的完整性）
Bootice启动制作工具
ACER.rar宏碁的系统的启动文件
&lt;/pre&gt;&lt;/div&gt;




&lt;h5&gt;下面是具体步骤：&lt;/h5&gt;
&lt;p&gt;1、用AcronisDiskDirector或者DiskGenius在 硬盘的第一个分区的开头部分 建立一个14G的分区，设置为活动分区，命名卷标为PQSERVICE，然后将recovery1.iso的所有文件解压到该目录下，然后提取提取recovery2.iso，recovery3.iso，recovery4.iso里面的PATCH文件夹合并到PQSERVICE下的PATCH文件夹中(开始会遇到合并的情况，点击确定合并，当要替换的时候就选择替换，其实要替换的文件是一样的)。&lt;/p&gt;
&lt;p&gt;&lt;img alt="DiskGenius建立分区" src="https://o3cex9zsl.qnssl.com/2012/12/1.png" title="DiskGenius建立分区" /&gt;&lt;/p&gt;
&lt;p&gt;如图，最左边的14G是PQSERVICE活动分区，此时处于未激活状态，C盘也是主分区，处于活动状态( 一个正常运行的系统只能有一个活动分区 )。扩展分区下面本来没有划分出如图中的5个逻辑分区的，这5个分区是恢复系统以后划分出来的。&lt;/p&gt;
&lt;p&gt;2、删除PQSERVICE中的Restore.dat，下载ACER.rar并解压到PQSERVICE中。&lt;/p&gt;
&lt;p&gt;3、在PQSERVICE中新建D2D，AcerBoot，WimTemp，logs文件夹。&lt;/p&gt;
&lt;p&gt;4、从PQSERVICE中将下面图片中的所有文件复制到AcerBoot文件夹中。&lt;/p&gt;
&lt;p&gt;&lt;img alt="复制到AcerBoot文件夹中" src="https://o3cex9zsl.qnssl.com/2012/12/2.png" title="复制到AcerBoot文件夹中" /&gt;&lt;/p&gt;
&lt;p&gt;5、将PQSERVICE中的PATCH和IMAGES文件夹剪切到D2D下，同时将RCD.DAT，SWBOMPN.ini，SystemCD.dat复制到D2D中。&lt;/p&gt;
&lt;p&gt;&lt;img alt="剪切到D2D下" src="https://o3cex9zsl.qnssl.com/2012/12/3.png" title="剪切到D2D下" /&gt;&lt;/p&gt;
&lt;p&gt;6、最后将NAPPUTL里面的所有文件(夹)复制到PQSERVICE中。&lt;/p&gt;
&lt;p&gt;7、按照下图删掉多余的文件或者文件夹，从而使最后PQSERVICE中的内容如下图所示&lt;/p&gt;
&lt;p&gt;&lt;img alt="删掉多余的文件" src="https://o3cex9zsl.qnssl.com/2012/12/4.png" title="删掉多余的文件" /&gt;&lt;/p&gt;
&lt;p&gt;8、写入bootmgr引导，具体如下：打开bootice软件，出现&lt;/p&gt;
&lt;p&gt;&lt;img alt="写入bootmgr引导" src="https://o3cex9zsl.qnssl.com/2012/12/5.png" title="写入bootmgr引导" /&gt;&lt;/p&gt;
&lt;p&gt;其中目标磁盘要&lt;font color="#ff0000"&gt;选择自己电脑上的硬盘&lt;/font&gt;，如图中是我的电脑的硬盘情况。&lt;/p&gt;
&lt;p&gt;然后点击“主引导记录M”会出现&lt;/p&gt;
&lt;p&gt;&lt;img alt="点击“主引导记录M”" src="https://o3cex9zsl.qnssl.com/2012/12/6.png" title="点击“主引导记录M”" /&gt;&lt;/p&gt;
&lt;p&gt;再点击”安装/配置(s)”即可，接着点击“分区记录引导P”，会出现&lt;/p&gt;
&lt;p&gt;&lt;img alt="点击“分区记录引导P”" src="https://o3cex9zsl.qnssl.com/2012/12/7.png" title="点击“分区记录引导P”" /&gt;&lt;/p&gt;
&lt;p&gt;其中目标分区要&lt;font color="#ff0000"&gt;选择自己建的PQSERVICE&lt;/font&gt;，如图PQSERVICE在分区0，接着点击点击“安装/配置(s)”即可。&lt;/p&gt;
&lt;p&gt;9、接着打开CMD运行命令工具，输入如下命令，其中 setid=27 override 表示设置PQSERVICE分区ID=27（要想创建恢复盘就要是27）。命令输完后会出现成功的提示，如果这一步错了的话，后面的步骤就都无效了。&lt;/p&gt;
&lt;p&gt;&lt;img alt="打开CMD运行命令工具" src="https://o3cex9zsl.qnssl.com/2012/12/8.png" title="打开CMD运行命令工具" /&gt;&lt;/p&gt;
&lt;p&gt;10、再一次运行CMD，输入如下命令，其中active表示激活PQSERVICE分区。&lt;/p&gt;
&lt;p&gt;&lt;img alt="再一次运行CMD" src="https://o3cex9zsl.qnssl.com/2012/12/9.png" title="再一次运行CMD" /&gt;&lt;/p&gt;
&lt;p&gt;11、关闭CMD命令，重启电脑，over（后面会自行恢复出厂的系统，具体情形参见&lt;a href="https://typecodes.com/mix/acerrestorefactorysysone.html" title="宏碁笔记本恢复出厂系统记（一）"&gt;宏碁笔记本恢复出厂系统记（一）&lt;/a&gt;）。&lt;/p&gt;
&lt;p&gt;12、成功制作了自己的恢复系统，而且也能使用ALT+F10来重装系统了^^&lt;/p&gt;
&lt;p&gt;&lt;code&gt;温馨提示：&lt;/code&gt;大家可以用这四个镜像文件刻成四个光盘（每个光盘容量不低于4G，买的时候要注意），以后遇到恢复系统给K了的时候就用系统盘来恢复而不用下载这四个镜像文件了。&lt;/p&gt;
&lt;h5&gt;Update 2012.12.11 14:46&lt;/h5&gt;
&lt;p&gt;上传了差不多一天，泪奔啊……上述所有文件的下载地址：
http://pan.baidu.com/share/link?shareid=78704&amp;amp;uk=1879910561&lt;/p&gt;
&lt;h5&gt;Update 2013.10.16 23:46&lt;/h5&gt;
&lt;p&gt;根据网友反应这两篇宏碁笔记本系统恢复文章的图片不够清晰，现把博主之前操作的清晰图片共享到了《百度黄克业的博客资源共享区》，下载地址同上。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Thu, 06 Dec 2012 02:10:00 +0800</pubDate><guid>tag:typecodes.com,2012-12-06:mix/acerrestorefactorysystwo.html</guid><category>宏碁系统</category><category>恢复出厂系统</category></item><item><title>宏碁笔记本恢复出厂系统记（一）</title><link>https://typecodes.com/mix/acerrestorefactorysysone.html</link><description>&lt;p&gt;这篇文章是整个事件的记叙，如果想直接找安装教程，请到&lt;a href="https://typecodes.com/mix/acerrestorefactorysystwo.html" title="查看原文"&gt;《宏碁笔记本恢复出厂系统记（二）》&lt;/a&gt;中查看，适用于Acer Aspire 4752G/4750G等。&lt;/p&gt;
&lt;p&gt;在笔记本刚买回来的时候，硬盘大小为750G，系统默认划分了14G隐藏的系统恢复分区（当开机按F10+ALT的时候，就是利用这个隐藏分区来恢复出厂系统的），然后C盘设置了34G，其余都给我分成了4个逻辑分区。开始用着的时候觉得C盘空间挺足的，但随着各种软件的安装(除了一些杀毒软件、Office和输入法等最基本的软件安装到了C盘外，其余的都装到了D盘软件区)，使得C盘只有2-3G的使用空间了。要扩大空间的话，只能重新划分硬盘，系统也就没了。。。。所以只能忍了。于是每次电脑有点卡的时候果断上C盘寻找要Kill的目标，就这样凑活用着。俗话说：“夜路走多了总会遇到某某”，果不其然，前天下午在C盘删了一些文件，悲了个催的，系统就不能正常启动了……&lt;/p&gt;


&lt;p&gt;没办法，只能恢复出厂系统了。这个挺麻烦的，因为至少要花费一个半小时才能完成，而且系统装好后以前装的软件又要重新装。单单一个vs08和sql05，就够你受的，你懂的！于是琢磨这减少安装的时间，那只能删掉出厂系统中的一些默认软件的安装。立马用PE进去，根据名字把隐藏分区中的一些软件文件删除后，退出重启。崩溃的事情出现了，开机按F10+ALT，滴的一声，画面顿时卡住没反应了。几次重复还是没用，估计隐藏恢复系统给K了……当时给吓住了，这情况电脑不会挂了吧。再加上上次由于不熟悉用DiskGenius合并分区的时候把硬盘里面的备份资料和软件系统什么的格式化了，心情郁闷至极。只好到网吧去下WIN7的旗舰版系统，奋战一个下午终于下好了一个32位和64位的系统，外加vs和sql、server……都是以G做单位的大家伙。晚上用PE装了个32位的旗舰win7，64位的装不了（2G的内存只能装32位的）。装好后，一看界面，竟然跟家庭普通版的一样，音效也差的要死，以前自带的杜比音效真心不错。总之是各种不满意，而且还要更新各种驱动，又要下载各种大家伙，2M的网速带不动啊。唉，累的半死还没结果。一看时间已经深夜1点了，抵不住了，明天还要早读（此处省略一万字……）&lt;/p&gt;
&lt;p&gt;早读回来后，小憩一会儿继续工作，上网找了找看能不能恢复Acer官方的系统。各种泡论坛，终于发现了一个帖子发了Acer 4752G的系统，他是提取了隐藏分区里面的系统，总共是12.4G，分为15个iso镜像文件（其实是将4个iso镜像分割成的）。果断跑网吧。下载完后，提取出4个iso镜像。问题来了，怎么安装？要是刻盘的话，安装比较容易，但还得买4个光盘，关键是这种行径肯定不符合咱身份是吧，哈哈。。。那么PE安装的话，没有那个隐藏分区就无法像原系统一样能够通过快捷键还原到出厂系统。所以看能不能做一个隐藏分区，以后可以用来还原。&lt;/p&gt;
&lt;p&gt;于是乎，破釜沉舟，冒足勇气，进PE用DiskGenius，一气呵成，把所有的的分区格式化，当然包括刚装的win7 32旗舰系统。结果显示整个硬盘是598.6G，不知道为什么不是750G……接下来按照“宏碁恢复出厂系统记（二）”中的方法操作，结果在重启后显示“ERROR: BACKUP E:\WNAPP.INI to E:\WNAPP.INFO fail”的错误提示。真够打击人的，因为期间都是摸着石头过河的，风险大啊（要是硬盘坏了就坑了），而且AcronisDiskDirector和DiskGenius这两个工具用的也不是很熟，所以这中间的曲折自不必多说了。于是又再来，重新操作，尤其是把步骤1的分区和文件提取工作重新做了一遍。结果在步骤11完成重启后，还是那个错误……当时就想放弃了，睡觉去。&lt;/p&gt;
&lt;p&gt;下午起来想了想，可能是因为在PE中操作的缘故，要是在实际操作系统中会不会也出错呢？于是在PE中分好区（仍然按照&lt;a href="https://typecodes.com/mix/acerrestorefactorysystwo.html" title="查看原文"&gt;《碁笔记本恢复官方系统记（二）》&lt;/a&gt;中的分区方法分区）。然后把下载的win7 32位系统用PE安装到C盘，大概30分钟完成。最后完全按照“宏碁笔记本恢复出厂系统记（二）”中的其他步骤操作。终于，见证奇迹的时刻到了（图2中在99%的时候停顿了大概15分钟，当时差点以为又挂了的，结果……嘿嘿）&lt;/p&gt;
&lt;p&gt;&lt;img alt="正在恢复出厂系统" src="https://o3cex9zsl.qnssl.com/2012/12/1.jpg" title="正在恢复出厂系统" /&gt;&lt;/p&gt;
&lt;p&gt;图1、正在恢复出厂系统（激动了一把）&lt;/p&gt;
&lt;p&gt;&lt;img alt="将要完成恢复" src="https://o3cex9zsl.qnssl.com/2012/12/2.jpg" title="将要完成恢复" /&gt;&lt;/p&gt;
&lt;p&gt;图2、将要完成恢复（99%的时候停顿大概15分钟，淡定）&lt;/p&gt;
&lt;p&gt;&lt;img alt="系统正在初始化" src="https://o3cex9zsl.qnssl.com/2012/12/3.jpg" title="系统正在初始化" /&gt;&lt;/p&gt;
&lt;p&gt;图3、系统正在初始化（中间会自动重启）&lt;/p&gt;
&lt;p&gt;&lt;img alt="系统正在安装驱动和自带的软件" src="https://o3cex9zsl.qnssl.com/2012/12/4.jpg" title="系统正在安装驱动和自带的软件" /&gt;&lt;/p&gt;
&lt;p&gt;图4、系统正在安装驱动和自带的软件（中间会自动重启好几次）&lt;/p&gt;
&lt;p&gt;&lt;img alt="系统将要完成驱动和软件的安装" src="https://o3cex9zsl.qnssl.com/2012/12/5.jpg" title="系统将要完成驱动和软件的安装" /&gt;&lt;/p&gt;
&lt;p&gt;图5、系统将要完成驱动和软件的安装（中间会自动重启好几次）&lt;/p&gt;
&lt;p&gt;&lt;img alt="安装完成" src="https://o3cex9zsl.qnssl.com/2012/12/6.jpg" title="安装完成" /&gt;&lt;/p&gt;
&lt;p&gt;图6、安装完成，进入计算机的设置（激动哇！！！）&lt;/p&gt;
&lt;p&gt;&lt;img alt="计算机设置完成" src="https://o3cex9zsl.qnssl.com/2012/12/7.jpg" title="计算机设置完成" /&gt;&lt;/p&gt;
&lt;p&gt;图7、计算机设置完成后的Acer官方Win7家庭普通版界面&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Thu, 06 Dec 2012 01:40:00 +0800</pubDate><guid>tag:typecodes.com,2012-12-06:mix/acerrestorefactorysysone.html</guid><category>宏碁系统</category><category>恢复出厂系统</category></item><item><title>C/C++数据结构与算法之排序法汇总</title><link>https://typecodes.com/cseries/datastructsortingcollect.html</link><description>&lt;p&gt;数据结构与算法之各种排序法汇总——数据结构与算法是软件工程必修课程，也是找软件方面工作必先学习的知识。几乎每次笔试一些软件公司都会碰到关于算法方面的题目。&lt;/p&gt;


&lt;p&gt;当然，不同公司对这门课程的要求不同。像一些大一点的公司，例如百度、迅雷等等，它们的研发岗位的笔试就要求能用相关语言描述某种数据结构；而一些相对小一些的公司，要求可能不会那么高。一般是在填空题中让笔试者计算某段程序的时间复杂度或者直接在选择题中考某种排序法的时间复杂度。&lt;/p&gt;
&lt;p&gt;现把所有数据结构与算法中的排序方法总如下：&lt;/p&gt;
&lt;p&gt;&lt;img alt="数据结构与算法之排序法汇总" src="https://o3cex9zsl.qnssl.com/2012/12/sort.jpg" title="数据结构与算法之排序法汇总" /&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Fri, 30 Nov 2012 17:53:00 +0800</pubDate><guid>tag:typecodes.com,2012-11-30:cseries/datastructsortingcollect.html</guid><category>排序法</category></item><item><title>WordPress中Gravatar头像缓存至本地服务器——暨博客优化实录</title><link>https://typecodes.com/web/wpgravatarcache.html</link><description>&lt;p&gt;从11月24开始，博客开始进行优化。一来是博客的服务器不是很好，访问速度比较慢；二来，个人越来越倾向简洁、实用、便捷的博客主题。之前博客的界面有些地方比较繁复，比如右侧栏有两处同时实现类似“最新评论”的功能；另外，博客首页的图片过多，像右侧栏的粉丝墙和最新评论中的头像每次打开博客都需要从gravatar.com下载头像到本地的服务器，加长了响应速度，这点对用户的体验造成了很大的影响。所以，这次的优化主要就是针对这两个方面进行的。&lt;/p&gt;


&lt;h5&gt;（一）去繁存简，使用便捷&lt;/h5&gt;
&lt;p&gt;1、主要针对右侧栏的界面优化，去掉“同步微博vs公告栏”字样，修改CSS以突出订阅栏目的四个小图标。&lt;/p&gt;
&lt;p&gt;&lt;img alt="右侧栏界面优化（对比图）" src="https://o3cex9zsl.qnssl.com/2012/11/compare1.jpg" title="右侧栏界面优化（对比图）" /&gt;&lt;/p&gt;
&lt;p&gt;2、优化一些PHP程序，例如博客主题在判断后台是否开启了头像缓存功能时，使用如下代码 &amp;lt;?php if (get_option('swt_type') == 'Display') ?&amp;gt; 。我直接删除该条语句，并用接下来（二）中的方法开启gravatar头像本地服务器缓存。效果如下图所示，大家可以右键查看图片的路径是否改成了博客服务器的文件路径。&lt;/p&gt;
&lt;p&gt;&lt;img alt="右侧栏“最新评论”的头像缓存" src="https://o3cex9zsl.qnssl.com/2012/11/opt1.png" title="右侧栏“最新评论”的头像缓存" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="博客“留言吧”的头像缓存" src="https://o3cex9zsl.qnssl.com/2012/11/opt2.png" title="博客“留言吧”的头像缓存" /&gt;&lt;/p&gt;
&lt;h5&gt;（二）老生常谈，WordPress中的Gravatar头像本地服务器缓存，加快响应速度&lt;/h5&gt;
&lt;p&gt;先把下面的代码加入到主题的functions.php中，然后在需要的地方（例如，我的博客右侧栏的“读者粉丝墙”以及留言吧等等）调用这个my_avatar( )函数；然后在博客的主题下面新建一个avatar文件夹（用于保存头像），上传到空间后的权限是755。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;//头像缓存 by vfhky&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;my_avatar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;$email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;$size&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;40&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;$default&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;$alt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// $alt = (false === $alt) ? &amp;#39;&amp;#39; : esc_attr( $alt );&lt;/span&gt;
  &lt;span class="nx"&gt;$alt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nx"&gt;$alt&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt;  &lt;span class="nx"&gt;$alt&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="c1"&gt;//用于设置当鼠标移到头像上显示提示文字&lt;/span&gt;
  &lt;span class="nx"&gt;$f&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;md5&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;strtolower&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;$email&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="c1"&gt;//根据email的值来生成一个md5变量值，作为本地.jpg头像的名字&lt;/span&gt;
  &lt;span class="nx"&gt;$a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;get_bloginfo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;template_directory&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/avatar/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;$f&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;.jpg&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="c1"&gt;//需要在主题下面新建一个avatar文件夹&lt;/span&gt;
  &lt;span class="nx"&gt;$e&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;ABSPATH&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;wp-content/themes/weisaysimple/avatar/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;$f&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;.jpg&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="c1"&gt;//缓存的头像的绝对路径&lt;/span&gt;
  &lt;span class="nx"&gt;$default_random_abs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;ABSPATH&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;wp-content/themes/weisaysimple/avatar/default/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="c1"&gt;//在avatar文件夹下新建一个default文件夹，用于保存博客预先自定义的头像&lt;/span&gt;
  &lt;span class="nx"&gt;$default_random&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;default1.jpg&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;default2.jpg&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;default3.jpg&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;default4.jpg&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;default5.jpg&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;default6.jpg&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;default7.jpg&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;default8.jpg&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;default9.jpg&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;default10.jpg&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;default12.jpg&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;default13.jpg&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;default14.jpg&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;default15.jpg&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;default16.jpg&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;default17.jpg&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;default18.jpg&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//在default文件夹下添加18个自己喜欢的头像，作为没有gravatar头像的人使用&lt;/span&gt;
  &lt;span class="nx"&gt;$default_random_num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;array_rand&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$default_random&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//随机从上面18张头像中选出一张 &lt;/span&gt;
  &lt;span class="nx"&gt;$t&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;432000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;//设置头像更新时间为5天&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$default&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;$default&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;$default_random_abs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;$default_random&lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;$default_random_num&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;is_file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;time&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;filemtime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$e&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nx"&gt;gt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;$t&lt;/span&gt; &lt;span class="p"&gt;){&lt;/span&gt; &lt;span class="c1"&gt;//当头像不存在或文件不超过5天才更新&lt;/span&gt;
  &lt;span class="c1"&gt;//$g = sprintf( &amp;quot;http://%d.gravatar.com&amp;quot;, ( hexdec( $f{0} ) % 2 ) ). &amp;#39;/avatar/&amp;#39;. $f. &amp;#39;?s=&amp;#39;. $size. &amp;#39;&amp;amp;d=&amp;#39;. $default. &amp;#39;&amp;amp;r=&amp;#39;. $r; // wp 3.0 的服务器&lt;/span&gt;
  &lt;span class="nx"&gt;$g&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://www.gravatar.com/avatar/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;$f&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;?s=&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;$size&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;amp;d=&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;$default&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;amp;r=&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;$r&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// 旧服务器 (哪个快就开哪个)&lt;/span&gt;
  &lt;span class="nx"&gt;copy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$g&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;$e&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="c1"&gt;//把$g中的值（也就是从gravatar.com获取的头像）复制到$e中保存（也就是缓存到本地服务器）&lt;/span&gt;
  &lt;span class="nx"&gt;$a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;esc_attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$g&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;filesize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nx"&gt;lt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;copy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$default&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;$e&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="c1"&gt;//如果没有gravatar头像（500不能改，粗糙地判断是否有gravatar头像），那么就把把$e中的值（也就是博客预先自定义的头像）复制到$e中保存（也就是缓存到本地服务器）&lt;/span&gt;
  &lt;span class="nx"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;amp;lt;img title=&amp;#39;{$alt}&amp;#39; alt=&amp;#39;{$alt}&amp;#39; src=&amp;#39;{$a}&amp;#39; class=&amp;#39;avatar avatar-{$size} photo&amp;#39; height=&amp;#39;{$size}&amp;#39; width=&amp;#39;{$size}&amp;#39; /&amp;amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="c1"&gt;//直接输出头像&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;温馨提示：&lt;/code&gt;上述代码和预先自定义的头像我已经放到了&lt;a href="https://typecodes.com/about" title="about | TypeCodes"&gt;博客的共享资源区&lt;/a&gt;（115网盘or百度云盘or谷歌托管代码），大家可以参考下。这步完成后，我们就可以在自己需要的地方调用了。例如，我博客中的&lt;a href="https://typecodes.com/contributors" title="Contributors | TypeCodes"&gt;contributes&lt;/a&gt;里面有段代码是调用get_avatar()函数来获取gravatar.com设置的头像的。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="x"&gt;foreach (&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;wall&lt;/span&gt;&lt;span class="x"&gt; as &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;comment&lt;/span&gt;&lt;span class="x"&gt;)&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;  if( &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;comment&lt;/span&gt;&lt;span class="x"&gt;-&amp;amp;gt;comment_author_url )&lt;/span&gt;
&lt;span class="x"&gt;  &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;url&lt;/span&gt;&lt;span class="x"&gt; = &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;comment&lt;/span&gt;&lt;span class="x"&gt;-&amp;amp;gt;comment_author_url;&lt;/span&gt;
&lt;span class="x"&gt;  else &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;url&lt;/span&gt;&lt;span class="x"&gt;=&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt;&amp;quot;;&lt;/span&gt;
&lt;span class="x"&gt;  &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;r&lt;/span&gt;&lt;span class="x"&gt;=&amp;quot;rel=&amp;#39;external nofollow&amp;#39;&amp;quot;;&lt;/span&gt;
&lt;span class="x"&gt;  &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;tmp&lt;/span&gt;&lt;span class="x"&gt; = &amp;quot;&amp;amp;lt;a href=&amp;#39;&amp;quot;.&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;url&lt;/span&gt;&lt;span class="x"&gt;.&amp;quot;&amp;#39; &amp;#39;&amp;quot;.&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;r&lt;/span&gt;&lt;span class="x"&gt;.&amp;quot;&amp;#39; title=&amp;#39;&amp;quot;.&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;comment&lt;/span&gt;&lt;span class="x"&gt;-&amp;amp;gt;comment_author.&amp;quot; (留下&amp;quot;.&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;comment&lt;/span&gt;&lt;span class="x"&gt;-&amp;amp;gt;cnt.&amp;quot;个脚印)&amp;#39;&amp;amp;gt;&amp;quot;.get_avatar(&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;comment&lt;/span&gt;&lt;span class="x"&gt;-&amp;amp;gt;comment_author_email, 36).&amp;quot;&amp;amp;lt;/a&amp;amp;gt;&amp;quot;;&lt;/span&gt;
&lt;span class="x"&gt;  &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;output&lt;/span&gt;&lt;span class="x"&gt; .= &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;tmp&lt;/span&gt;&lt;span class="x"&gt;;//调用get_avatar()函数来获取gravatar.com设置的头像&lt;/span&gt;
&lt;span class="x"&gt;}&lt;/span&gt;
&lt;span class="x"&gt;echo &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;output&lt;/span&gt;&lt;span class="x"&gt; ;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;那么，现在我就可以使用刚在functions.php定义的my_avatar( )函数来获取本地服务器缓存的头像了，修改如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="x"&gt;echo my_avatar(&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;comment&lt;/span&gt;&lt;span class="x"&gt;-&amp;gt;comment_author_email, &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;size&lt;/span&gt;&lt;span class="x"&gt; = &amp;#39;36&amp;#39; ,&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;default&lt;/span&gt;&lt;span class="x"&gt; = &amp;#39;&amp;#39;,&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;alt&lt;/span&gt;&lt;span class="x"&gt;=&amp;#39;&amp;#39;);//其余代码省略，需要完整代码的话大家可以联系我&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;（三）结语：更简洁的界面、更快速的响应，更好的用户体验！&lt;/h5&gt;
&lt;p&gt;&lt;img alt="更快的响应速度，有木有！" src="https://o3cex9zsl.qnssl.com/2012/11/result.png" title="更快的响应速度，有木有！" /&gt;&lt;/p&gt;
&lt;p&gt;在把博客的“留言吧”优化后，顺势把右侧栏的“读者粉丝墙”和“最新评论”优化。完后，博客是不是更好看、更想用、更好用了呢O(∩_∩)O哈哈~&lt;/p&gt;
&lt;h5&gt;Update 2012-12-30&lt;/h5&gt;
&lt;p&gt;在（二）中谈到的Gravatar头像本地服务器缓存，上面的代码造成了一个比较严重的问题。具体解决方案见最新关于WordPress中Gravatar头像缓存至本地服务器的文章&lt;a href="https://typecodes.com/web/againwpgravatarcache.html" title="再议Gravatar头像缓存至本地服务器"&gt;《再议Gravatar头像缓存至本地服务器》&lt;/a&gt;。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Tue, 27 Nov 2012 00:45:00 +0800</pubDate><guid>tag:typecodes.com,2012-11-27:web/wpgravatarcache.html</guid><category>wordpress</category><category>gravatar头像缓存</category></item><item><title>博客成长录——暨收到工作offer后，博主的正式回归</title><link>https://typecodes.com/mix/growthrecordafteroffer.html</link><description>&lt;h5&gt;一、2012-6-12&lt;/h5&gt;
&lt;p&gt;TypeCodes 正式建立，感谢包子和意哥赞助了博客的服务器，也非常感谢“威言威语”提供weisaysimple的主题支持。                     ————&lt;a href="https://typecodes.com" title="查看详情"&gt;《 TypeCodes 》&lt;/a&gt;&lt;/p&gt;
&lt;h5&gt;二、（日子没记住1⊙﹏⊙b汗）&lt;/h5&gt;
&lt;p&gt;开始主题的修改工作，算是正式接触wordpress。当时博客的整体规划为六大部分——生活、IT互联、C#、ASP、PHP、篮球、杂合。                     ————&lt;a href="https://typecodes.com/about" title="查看详情"&gt;《关于博客》&lt;/a&gt;&lt;/p&gt;


&lt;h5&gt;三、（日子没记住2⊙﹏⊙b汗）&lt;/h5&gt;
&lt;p&gt;博客无防护“裸奔”，经常让spamer骚扰，忍无可忍只好改弃Akismet使用非插件的方法。                     ————&lt;a href="https://typecodes.com/web/antiwpspamplugorno.html" title="查看详情"&gt;《屏蔽wordpress垃圾评论的方法（插件和非插件）》&lt;/a&gt;&lt;/p&gt;
&lt;h5&gt;四、2012-07-24 13:31&lt;/h5&gt;
&lt;p&gt;在使用wordpress官方认可的插件 wp-codebox时，发现“HTTP响应拆分漏洞”，并提供了PHP程序的解决方案。先后得到了 &lt;a href="http://webscan.360.cn/vul/view/vulid/129" title="HTTP响应拆分漏洞"&gt;360网站安全检测的认证&lt;/a&gt; 和 &lt;a href="http://baike.baidu.com/view/9389721.html" title="HTTP响应拆分漏洞"&gt;百度百科&lt;/a&gt; 的收录。                     ————&lt;a href="https://typecodes.com/web/crlfloophole.html" title="查看详情"&gt;《小议网站HTTP响应拆分漏洞》&lt;/a&gt;&lt;/p&gt;
&lt;h5&gt;五、2012-09-07 20:31&lt;/h5&gt;
&lt;p&gt;有点没点的算是对wp程序有些了解了，于是写了关于wp的一些心得。                     ————&lt;a href="https://typecodes.com/web/amendwordpressloginpage.html" title="查看详情"&gt;《如何修改WordPress的后台登录界面》&lt;/a&gt;&lt;/p&gt;
&lt;h5&gt;六、2012-08-21 22:51&lt;/h5&gt;
&lt;p&gt;在帮一q友修改一个动易站点的同时，顺便开始写点自己的动易CMS系列教程。                     ————&lt;a href="https://typecodes.com/web/sfnewscontenttag.html" title="查看详情"&gt;《动易SiteFactory系列教程一:最新头条新闻带内容标签的制作》&lt;/a&gt;&lt;/p&gt;
&lt;h5&gt;七、2012-08-27 17:44&lt;/h5&gt;
&lt;p&gt;博客搜索改用强大的谷歌搜索，不过最近谷歌香港的服务器有点抽风，导致博客的搜索有时也跟着抽了。。
&lt;a href="https://typecodes.com/web/googlecustomsearch.html" title="查看详情"&gt;《如何把自己的站内搜索改用强大的谷歌搜索》&lt;/a&gt;&lt;/p&gt;
&lt;h5&gt;八、2012-09-26 14:21&lt;/h5&gt;
&lt;p&gt;由于要找工作，不得不舍弃了博客的写作。                     ————&lt;a href="https://typecodes.com/" title="查看详情"&gt;《同步微博》&lt;/a&gt;&lt;/p&gt;
&lt;h5&gt;九、2012-09-10 22:42&lt;/h5&gt;
&lt;p&gt;找工作的前奏，到处瞎逛。突然，在51CTO中发现一篇优秀心得分享，果断受用了。                     ————&lt;a href="https://typecodes.com/mix/transittoitindustry.html" title="查看详情"&gt;《给职业人士转型IT行业的一些建议》&lt;/a&gt;&lt;/p&gt;
&lt;h5&gt;十、2012-09-10 21:00&lt;/h5&gt;
&lt;p&gt;继续瞎逛，发现网上有很多人在找动易论坛的邀请码。作为一个过来人，自然懂得那种有问题却无人解答的痛苦，于是就用自己的动易号买了几多邀请码，免费供有需要的童鞋使用。&lt;a href="https://typecodes.com/mix/sfinvitationcode.html" title="查看详情"&gt;《动易官方论坛的邀请码》&lt;/a&gt;&lt;/p&gt;
&lt;h5&gt;十一、2012-10-15 13:03&lt;/h5&gt;
&lt;p&gt;为了工作，初战长沙，各种被鄙视，各种没结果。幸好，哥也不是那么脆弱滴。。。。&lt;a href="https://typecodes.com/" title="查看详情"&gt;《同步微博》&lt;/a&gt;&lt;/p&gt;
&lt;h5&gt;十二、2012-11-05 18:28&lt;/h5&gt;
&lt;p&gt;签约工作后，我也回归了。                     ————&lt;a href="https://typecodes.com/" title="查看详情"&gt;《同步微博》&lt;/a&gt;&lt;/p&gt;
&lt;h5&gt;十三、（日子没记住3⊙﹏⊙b汗）&lt;/h5&gt;
&lt;p&gt;陪一个好哥们出去找工作，完了后在学校狂打N场球，爽歪歪O(∩_∩)O哈哈~！！！&lt;/p&gt;
&lt;h5&gt;十四、2012-11-24 15:01&lt;/h5&gt;
&lt;p&gt;正式回归博客，最先开始的当然是整个博客的优化工作。                     ————&lt;a href="https://typecodes.com/" title="查看详情"&gt;《同步微博》&lt;/a&gt;&lt;/p&gt;
&lt;h5&gt;十五、2012-11-25 23:26&lt;/h5&gt;
&lt;p&gt;博客的阶段性优化结束，更为简洁的界面，更快的响应速度，更好的用户体验！                  ————&lt;a href="https://typecodes.com/" title="查看详情"&gt;《同步微博》&lt;/a&gt;&lt;/p&gt;
&lt;h5&gt;————————————Update 2012-11-28 23:26————————————&lt;/h5&gt;
&lt;h5&gt;十六、2012-11-28 23:26&lt;/h5&gt;
&lt;p&gt;博客进行了全面的改进，调整整体的规划为以下七大部分：生活、IT互联、WEB开发、CMS系统、C类编程、JAVA编程、杂合！                  ————&lt;a href="https://typecodes.com/" title="查看详情"&gt;《同步微博》&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Mon, 26 Nov 2012 00:57:00 +0800</pubDate><guid>tag:typecodes.com,2012-11-26:mix/growthrecordafteroffer.html</guid><category>博客成长录</category></item><item><title>wordpress添加滚动（单条或多条）公告</title><link>https://typecodes.com/web/wpaddrollnotice.html</link><description>&lt;p&gt;其实想给自己的博客加个公告栏好久了，但是一直都没找到比较合适的方法。对于CMS，我总有种纠结的心情。一来，CMS系统确实给开发人员带来了快捷的网站系统雏形，这点大大节省了各种资源和时间的消耗；但是，我觉得CMS又降低了开发人员自主创新的能力（一家之言^^），总是想依赖点什么。对于wordpress我也总期望官方能够发布所有我想要的功能，然后我只要copy就行了。。。结果然后就木有结果了。不罗嗦了，最终效果如下&lt;/p&gt;
&lt;p&gt;&lt;img alt="wordpress添加滚动（单条或多条）公告" src="https://o3cex9zsl.qnssl.com/2012/09/12.jpg" title="wordpress添加滚动（单条或多条）公告" /&gt;&lt;/p&gt;


&lt;p&gt;1、实现思路：借用wordpress中的一个页面，把其中的评论作为博客的公告内容。然后用jQuery实现单条或多条滚动。接下来是具体过程。&lt;/p&gt;
&lt;p&gt;2、新建一篇文章或者一个单独页面（例如，博主是用自己制作的一个模板发布了“&lt;a href="http://vfhky.sinaapp.com/notice" title="点击查看效果"&gt;同步微博&lt;/a&gt;”页面），最好设置公开度为私密（这样访客就不能评论，从而公告只显示博主的评论）。后台发布后，鼠标移到页面的标题上，可以看浏览器左下角页面id。例如post.php?post=178&amp;amp;action=edit。178就是这个页面的ID，记下来。&lt;/p&gt;
&lt;p&gt;3、在合适的位置添加公告栏，例如我把它添加在博客的侧栏，也就是在sidebar.php中添加代码&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;&amp;lt;!--notice by vfhky--&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;notice&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt; &lt;span class="k"&gt;include&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;includes/notice.php&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="c"&gt;&amp;lt;!--引入notice.php文件--&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;4、新建notice.php文件（调用评论内容），保存到自己主题文件夹下的include文件夹中&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="x"&gt;&amp;lt;h3&amp;gt;同步微博 vs 公告栏&amp;lt; ?php if ($user_ID) echo &amp;#39;&amp;amp;nbsp;&amp;amp;nbsp[&amp;lt;a href=&amp;quot;&amp;#39; . get_page_link($page_ID) . &amp;#39;#respond&amp;quot; rel=&amp;quot;nofollow&amp;quot; &amp;gt;发布公告]&amp;#39;; ?&amp;gt;&amp;lt;/h3&amp;gt;&lt;/span&gt;
&lt;span class="x"&gt;&amp;lt;ul class=&amp;quot;notice&amp;quot;&amp;gt;&lt;/span&gt;
&lt;span class="x"&gt;    &lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
        &lt;span class="nv"&gt;$page_ID&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;178&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;//用来作为公告栏的页面或者文章ID值&lt;/span&gt;
        &lt;span class="nv"&gt;$num&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;//显示公告的条数&lt;/span&gt;
        &lt;span class="nv"&gt;$announcement&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="c1"&gt;//设置变量值为空&lt;/span&gt;
        &lt;span class="nv"&gt;$comments&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;get_comments&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;number=&lt;/span&gt;&lt;span class="si"&gt;$num&lt;/span&gt;&lt;span class="s2"&gt;&amp;amp;post_id=&lt;/span&gt;&lt;span class="si"&gt;$page_ID&lt;/span&gt;&lt;span class="s2"&gt;&amp;amp;user_id=1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="c1"&gt;//获取评论（包括内容、链接等等）&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="k"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$comments&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;foreach&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$comments&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nv"&gt;$comment&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nv"&gt;$comment_result&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$comment&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;comment_content&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="c1"&gt;//获取评论内容&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;strlen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$comment_result&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;&lt;span class="nv"&gt;$comment_result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;cut_str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$comment_result&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;....&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;}&lt;/span&gt;&lt;span class="c1"&gt;//如果内容大于60，则截取60字并在后面跟上省略号&lt;/span&gt;
            &lt;span class="nv"&gt;$comm_link&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;get_comment_link&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$comment&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;comment_ID&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="c1"&gt;//获取评论链接&lt;/span&gt;
            &lt;span class="nv"&gt;$announcement&lt;/span&gt; &lt;span class="o"&gt;.=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;lt;li&amp;gt;&amp;lt;a rel=&amp;quot;nofollow&amp;quot; href=&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;$comm_link&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39; style=&amp;quot;color:#f90;font-size:1em;&amp;quot;&amp;gt;@ TypeCodes &amp;lt;/a&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;convert_smilies&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$comment_result&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39; &amp;lt;span style=&amp;quot;color:#999;&amp;quot;&amp;gt;(&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;get_comment_date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Y/m/d H:i&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$comment&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;comment_ID&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;)&amp;lt;/span&amp;gt;&amp;lt;hr style=&amp;quot;border:1px dashed #cccccc; height:1px&amp;quot;/&amp;gt;&amp;lt;/li&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;   
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="k"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$announcement&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;$announcement&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;lt;li&amp;gt;欢迎光临 TypeCodes ！&amp;lt;/li&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$announcement&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;5、这样，评论内容就变成了公告内容。接下来我们需要用jQUery让公告内容变成单条或多条滚动的形式。由于在前面几篇文章中，我已经上传了jquery.min.js（例如文章&lt;a href="http://vfhky.sinaapp.com/cms/wordpress/225.html" title="如何在wordpress回复内容前面添加@方式"&gt;如何在wordpress回复内容前面添加@方式&lt;/a&gt;），所以这个步骤我就不用做了。&lt;/p&gt;
&lt;p&gt;6、根据自己想要实现单条滚动还是多条滚动样式，选择以下jQuery代码中的一个，并命名为notice.js，然后保存到主题所在的js目录下。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cm"&gt;/* @notice单条 js by vfhky */&lt;/span&gt;
&lt;span class="nf"&gt;jQuery&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s-Atom"&gt;document&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;ready&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="nv"&gt;Begin&lt;/span&gt; &lt;span class="s-Atom"&gt;jQuery&lt;/span&gt;

    &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#notice li:not(:first)&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;css&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;display&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;none&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="s-Atom"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;B&lt;/span&gt;&lt;span class="s-Atom"&gt;=&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#notice li:last&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="s-Atom"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;C&lt;/span&gt;&lt;span class="s-Atom"&gt;=&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#notice li:first&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nf"&gt;setInterval&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="nf"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;B&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;is&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;:visible&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)){&lt;/span&gt;
    &lt;span class="nv"&gt;C&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;fadeIn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;addClass&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;in&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="nv"&gt;B&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;hide&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s-Atom"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#notice li:visible&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;addClass&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;in&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#notice li.in&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;next&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nf"&gt;fadeIn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;li.in&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;hide&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nf"&gt;removeClass&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;in&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="mi"&gt;6000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="s-Atom"&gt;//每6秒钟切换一条，你可以根据需要更改&lt;/span&gt;

&lt;span class="p"&gt;})&lt;/span&gt;  &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="nv"&gt;End&lt;/span&gt; &lt;span class="s-Atom"&gt;jQuery&lt;/span&gt;


&lt;span class="cm"&gt;/* @notice多条 js by vfhky */&lt;/span&gt;
&lt;span class="nf"&gt;jQuery&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s-Atom"&gt;document&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;ready&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="nv"&gt;Begin&lt;/span&gt; &lt;span class="s-Atom"&gt;jQuery&lt;/span&gt;

&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
&lt;span class="s-Atom"&gt;var&lt;/span&gt; &lt;span class="k"&gt;_&lt;/span&gt;&lt;span class="s-Atom"&gt;wrap=&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s-Atom"&gt;&amp;#39;ul.notice&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="s-Atom"&gt;//定义滚动区域&lt;/span&gt;
&lt;span class="s-Atom"&gt;var&lt;/span&gt; &lt;span class="k"&gt;_&lt;/span&gt;&lt;span class="s-Atom"&gt;interval&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;6000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="s-Atom"&gt;//定义滚动间隙时间&lt;/span&gt;
&lt;span class="s-Atom"&gt;var&lt;/span&gt; &lt;span class="k"&gt;_&lt;/span&gt;&lt;span class="s-Atom"&gt;moving&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="s-Atom"&gt;//需要清除的动画&lt;/span&gt;
&lt;span class="k"&gt;_&lt;/span&gt;&lt;span class="s-Atom"&gt;wrap&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;hover&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
&lt;span class="nf"&gt;clearInterval&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;_&lt;/span&gt;&lt;span class="s-Atom"&gt;moving&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="s-Atom"&gt;//当鼠标在滚动区域中时&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s-Atom"&gt;停止滚动&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="nf"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
&lt;span class="k"&gt;_&lt;/span&gt;&lt;span class="s-Atom"&gt;moving&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nf"&gt;setInterval&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
&lt;span class="s-Atom"&gt;var&lt;/span&gt; &lt;span class="k"&gt;_&lt;/span&gt;&lt;span class="s-Atom"&gt;field=&lt;/span&gt;&lt;span class="k"&gt;_&lt;/span&gt;&lt;span class="s-Atom"&gt;wrap&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s-Atom"&gt;&amp;#39;li:first&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="s-Atom"&gt;//此变量不可放置于函数起始处&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nn"&gt;li&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s-Atom"&gt;first取值是变化的&lt;/span&gt;
&lt;span class="s-Atom"&gt;var&lt;/span&gt; &lt;span class="k"&gt;_&lt;/span&gt;&lt;span class="s-Atom"&gt;h=&lt;/span&gt;&lt;span class="k"&gt;_&lt;/span&gt;&lt;span class="s-Atom"&gt;field&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;height&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;&lt;span class="s-Atom"&gt;//&lt;/span&gt;&lt;span class="nf"&gt;取得每次滚动高度&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s-Atom"&gt;多行滚动情况下&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s-Atom"&gt;此变量不可置于开始处&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s-Atom"&gt;否则会有间隔时长延时&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;_&lt;/span&gt;&lt;span class="s-Atom"&gt;field&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;animate&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nf"&gt;marginTop&lt;/span&gt;&lt;span class="o"&gt;:-&lt;/span&gt;&lt;span class="k"&gt;_&lt;/span&gt;&lt;span class="s-Atom"&gt;h+&amp;#39;px&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="mi"&gt;600&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nf"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;&lt;span class="s-Atom"&gt;//通过取负margin值&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s-Atom"&gt;隐藏第一行&lt;/span&gt;
&lt;span class="k"&gt;_&lt;/span&gt;&lt;span class="s-Atom"&gt;field&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;css&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s-Atom"&gt;&amp;#39;marginTop&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;appendTo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;_&lt;/span&gt;&lt;span class="s-Atom"&gt;wrap&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="s-Atom"&gt;//隐藏后&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s-Atom"&gt;将该行的margin值置零&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s-Atom"&gt;并插入到最后&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s-Atom"&gt;实现无缝滚动&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="k"&gt;_&lt;/span&gt;&lt;span class="s-Atom"&gt;interval&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="s-Atom"&gt;//滚动间隔时间取决于_interval&lt;/span&gt;
&lt;span class="p"&gt;}).&lt;/span&gt;&lt;span class="nf"&gt;trigger&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s-Atom"&gt;&amp;#39;mouseleave&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="s-Atom"&gt;//函数载入时&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s-Atom"&gt;模拟执行mouseleave&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s-Atom"&gt;即自动滚动&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;7、加载jQuery库：依然在主题目录中找到header.php，再找到找到 &amp;lt;?php wp_head()；?&amp;gt; ，然后在它前面添加如下代码&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;&amp;lt;!--Google CDN提供的jQuery库的地址采用了协议相对路径，它可以很好的解决https引起的一些问题--&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;script&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;//ajax.googleapis.com/ajax/libs/jquery/1.8.2/jquery.min.js&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

&lt;span class="c"&gt;&amp;lt;!--当谷歌提供的jquery都无法载入时，我们需要载入本地备份的jquery.min.js文件--&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;script&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;window.jQuery || document.write(&amp;#39;&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&amp;lt;script&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;?&lt;/span&gt; &lt;span class="nx"&gt;php&lt;/span&gt; &lt;span class="nx"&gt;bloginfo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;template_directory&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="s"&gt;/js/jquery.min.js&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;\x3C/script&amp;gt;&amp;#39;)&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;script&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;?&lt;/span&gt; &lt;span class="nx"&gt;php&lt;/span&gt; &lt;span class="nx"&gt;bloginfo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;template_directory&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="s"&gt;/js/notice.js&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;8、到这里，我们添加的公告内容就能滚动了。但是，公告内容会溢出公告栏目框。所以，我们还需要用CSS来隐藏溢出的公告内容，这样就perfect了！！！找到主题下面的style.css，然后添加&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="na"&gt;.notice&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="no"&gt;overflow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="no"&gt;hidden&lt;/span&gt;&lt;span class="err"&gt;;&lt;/span&gt;&lt;span class="no"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="no"&gt;px&lt;/span&gt;&lt;span class="err"&gt;;&lt;/span&gt;&lt;span class="no"&gt;line-height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="no"&gt;px&lt;/span&gt;&lt;span class="err"&gt;;&lt;/span&gt;&lt;span class="no"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="no"&gt;px&lt;/span&gt;&lt;span class="err"&gt;;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;9、ok，慢慢欣赏下自己的成果吧^^（PS：由于要涉及数据库的查询，网页的载入速度会变慢。所以，对于使用国外空间的童鞋们，你们自己看着办咯）&lt;/p&gt;
&lt;h6&gt;————Update 2013.02.21————&lt;/h6&gt;
&lt;p&gt;近段时间琢磨着如何提高博客网页的载入速度，所以把右侧栏的公告完善了一下。由于php中include的方法比较耗资源，所以我把公告代码修改到主题functions.php中，然后在sidebar.php中调用即可。具体做法如下：&lt;/p&gt;
&lt;p&gt;（一）在sidebar.php中添加如下代码&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;notice&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;ul&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;notice&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt; &lt;span class="nx"&gt;get_notice&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;（二）在主题functions.php中添加如下代码：&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="x"&gt;//blog notice by vfhky 0&lt;/span&gt;
&lt;span class="x"&gt;function get_notice(){&lt;/span&gt;
&lt;span class="x"&gt;    $page_ID=178; //用来作为公告栏的页面或者文章id&lt;/span&gt;
&lt;span class="x"&gt;    $num=3; //显示公告的条数&lt;/span&gt;
&lt;span class="x"&gt;    $announcement = &amp;#39;&amp;#39;;//设置变量值为空&lt;/span&gt;
&lt;span class="x"&gt;    $comments = get_comments(&amp;quot;number=$num&amp;amp;post_id=$page_ID&amp;amp;user_id=1$comment_parent=0&amp;quot;);//获取评论（包括内容、链接等等）&lt;/span&gt;
&lt;span class="x"&gt;    if ( !empty($comments) ) {&lt;/span&gt;
&lt;span class="x"&gt;        $i = 1;&lt;/span&gt;
&lt;span class="x"&gt;        foreach ($comments as $comment) {&lt;/span&gt;
&lt;span class="x"&gt;        $comment_result = mb_strimwidth($comment-&amp;gt;comment_content,0,200,&amp;quot;....&amp;quot;);&lt;/span&gt;
&lt;span class="x"&gt;        $comm_link = get_comment_link($comment-&amp;gt;comment_ID);//获取评论链接&lt;/span&gt;
&lt;span class="x"&gt;        $announcement .= &amp;#39;&amp;lt;li&amp;gt;&amp;lt;a rel=&amp;quot;nofollow&amp;quot; href=&amp;#39;.$comm_link.&amp;#39; title=&amp;quot;同步微博&amp;quot; style=&amp;quot;color:#f90;font-size:11px;&amp;quot;&amp;gt;@ TypeCodes +&amp;#39;.$i.&amp;#39;&amp;lt;/a&amp;gt;&amp;lt;font size=&amp;quot;1px&amp;quot;&amp;gt;&amp;#39;. convert_smilies($comment_result) . &amp;#39;&amp;lt;/font&amp;gt; &amp;lt;span style=&amp;quot;color:#999;font-size:10px;&amp;quot;&amp;gt;(&amp;#39; . get_comment_date(&amp;#39;Y-m-d H:i&amp;#39;,$comment-&amp;gt;comment_ID) . &amp;#39;)&amp;lt;/span&amp;gt;&amp;lt;div style=&amp;quot;width:100%;border-top:1px dashed #cccccc;&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/li&amp;gt;&amp;#39;; &lt;/span&gt;
&lt;span class="x"&gt;        $i += 1;}&lt;/span&gt;
&lt;span class="x"&gt;    }&lt;/span&gt;
&lt;span class="x"&gt;    if ( empty($announcement) ) $announcement = &amp;#39;&amp;lt;li&amp;gt;欢迎光临 TypeCodes ！&amp;lt;/li&amp;gt;&amp;#39;;&lt;/span&gt;
&lt;span class="x"&gt;    echo $announcement;&lt;/span&gt;
&lt;span class="x"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;（三）OVER&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Wed, 26 Sep 2012 13:56:00 +0800</pubDate><guid>tag:typecodes.com,2012-09-26:web/wpaddrollnotice.html</guid><category>wordpress</category><category>wordpress滚动公告</category></item><item><title>WordPress自动发送评论或回复的通知邮件</title><link>https://typecodes.com/web/wpautosendcommentmail.html</link><description>&lt;p&gt;相信很多用过wordpress的朋友都知道，只要你的服务器支持邮件函数功能，那么当有人回复你的文章的时候，wordpress会自动发送邮件通知管理员。但如果是一个人回复另一个人，那么这个被回复的人会不会收到邮箱呢？因为有些主题没有设置自动发送通知邮件，这样就影响了整个博客的吸引力。所以，我们可以自己写一个后台自动发送通知邮件的代码。而且这份代码是支持嵌套和@方式的，所以值得大家试一试。只要在自己主题的functions.php下添加如下代码就行了：&lt;/p&gt;


&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="x"&gt;//reply mail-notice by vfhky&lt;/span&gt;
&lt;span class="x"&gt;function vfhky_mail_notify($comment_id) {&lt;/span&gt;
&lt;span class="x"&gt;    $comment = get_comment($comment_id);//根据id取得评论的所有信息&lt;/span&gt;
&lt;span class="x"&gt;    $content=$comment-&amp;gt;comment_content;//取得评论的内容&lt;/span&gt;
&lt;span class="x"&gt;    //对评论内容进行匹配&lt;/span&gt;
&lt;span class="x"&gt;    $match_count=preg_match_all(&amp;#39;/&amp;lt;a href=&amp;quot;#comment-([0-9]+)?&amp;quot; rel=&amp;quot;nofollow&amp;quot;&amp;gt;/si&amp;#39;,$content,$matchs);&lt;/span&gt;
&lt;span class="x"&gt;    if($match_count&amp;gt;0){//如果匹配到了&lt;/span&gt;
&lt;span class="x"&gt;        foreach($matchs[1] as $parent_id){//对每个子匹配都进行邮件发送操作&lt;/span&gt;
&lt;span class="x"&gt;            vfhky_send_email($parent_id,$comment);//调用自定义的邮件发送函数&lt;/span&gt;
&lt;span class="x"&gt;        }&lt;/span&gt;
&lt;span class="x"&gt;    }&lt;/span&gt;
&lt;span class="x"&gt;    elseif($comment-&amp;gt;comment_parent!=&amp;#39;0&amp;#39;){//如果没匹配到，有人故意删了@回复，则通过查找父级评论id来确定邮件发送对象to&lt;/span&gt;
&lt;span class="x"&gt;        $parent_id=$comment-&amp;gt;comment_parent;&lt;/span&gt;
&lt;span class="x"&gt;        vfhky_send_email($parent_id,$comment);&lt;/span&gt;
&lt;span class="x"&gt;    }&lt;/span&gt;
&lt;span class="x"&gt;    else return;&lt;/span&gt;
&lt;span class="x"&gt;}&lt;/span&gt;
&lt;span class="x"&gt;add_action(&amp;#39;comment_post&amp;#39;, &amp;#39;vfhky_mail_notify&amp;#39;);&lt;/span&gt;
&lt;span class="x"&gt;function vfhky_send_email($parent_id,$comment){//reply mail-notice by vfhky&lt;/span&gt;
&lt;span class="x"&gt;    $adminEmail = get_option(&amp;#39;admin_email&amp;#39;); //取得博主的邮箱&lt;/span&gt;
&lt;span class="x"&gt;    $parent_comment=get_comment($parent_id);//取得被回复者的所有信息&lt;/span&gt;
&lt;span class="x"&gt;    $author_email=trim($comment-&amp;gt;comment_author_email);//取得评论者的邮箱&lt;/span&gt;
&lt;span class="x"&gt;    $to = trim($parent_comment-&amp;gt;comment_author_email);//取得被回复者的邮箱&lt;/span&gt;
&lt;span class="x"&gt;    $spam_confirmed = $comment-&amp;gt;comment_approved;&lt;/span&gt;
&lt;span class="x"&gt;    if ($spam_confirmed != &amp;#39;spam&amp;#39; &amp;amp;&amp;amp; $to != $adminEmail) {&lt;/span&gt;
&lt;span class="x"&gt;        $wp_email = &amp;#39;no-reply@&amp;#39; . preg_replace(&amp;#39;#^www\.#&amp;#39;, &amp;#39;&amp;#39;, strtolower($_SERVER[&amp;#39;SERVER_NAME&amp;#39;])); // &lt;/span&gt;
&lt;span class="x"&gt;        $subject = &amp;#39;尊敬的 &amp;#39; . trim(get_comment($parent_id)-&amp;gt;comment_author) . &amp;#39;，您在 [&amp;#39; . get_option(&amp;quot;blogname&amp;quot;) . &amp;#39;] 中的评论有了新的回复&amp;#39;;&lt;/span&gt;
&lt;span class="x"&gt;        $message = &amp;#39;&amp;lt;b&amp;gt;尊敬的：&amp;#39; . trim(get_comment($parent_id)-&amp;gt;comment_author) . &amp;#39; &amp;lt;/b&amp;gt;&amp;lt;br/&amp;gt;&lt;/span&gt;
&lt;span class="x"&gt;        &amp;lt;HR style=&amp;quot;FILTER: alpha(opacity=100,finishopacity=0,style=1)&amp;quot; width=&amp;quot;100%&amp;quot; color=#987cb9 SIZE=3&amp;gt;&lt;/span&gt;
&lt;span class="x"&gt;        &amp;lt;p&amp;gt;您之前在 [&amp;#39; . get_option(&amp;quot;blogname&amp;quot;) . &amp;#39;] 中的一篇文章《&amp;#39; . get_the_title($comment-&amp;gt;comment_post_ID) . &amp;#39;》上的评论现在有了新的回复。&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="x"&gt;        &amp;lt;p&amp;gt;&lt;/span&gt;
&lt;span class="x"&gt;        您之前所写的评论如下：&amp;lt;br/&amp;gt;&amp;#39;&lt;/span&gt;
&lt;span class="x"&gt;        . nl2br(trim(get_comment($parent_id)-&amp;gt;comment_content)). &amp;#39;&lt;/span&gt;
&lt;span class="x"&gt;        &amp;lt;/p&amp;gt;&amp;lt;br/&amp;gt;&lt;/span&gt;
&lt;span class="x"&gt;        &amp;lt;b&amp;gt;回复人：&amp;#39; . trim($comment-&amp;gt;comment_author) . &amp;#39; &amp;lt;/b&amp;gt;&amp;lt;br/&amp;gt;&lt;/span&gt;
&lt;span class="x"&gt;        &amp;lt;HR style=&amp;quot;FILTER: alpha(opacity=100,finishopacity=0,style=1)&amp;quot; width=&amp;quot;100%&amp;quot; color=#987cb9 SIZE=3&amp;gt;&amp;lt;p&amp;gt;给您的回复如下：&amp;lt;br/&amp;gt;&amp;#39;&lt;/span&gt;
&lt;span class="x"&gt;        . nl2br(trim($comment-&amp;gt;comment_content)) .&lt;/span&gt;
&lt;span class="x"&gt;        &amp;#39;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="x"&gt;        &amp;lt;p&amp;gt;您也可以通过点击以下链接查看详情：&amp;lt;br&amp;gt;&lt;/span&gt;
&lt;span class="x"&gt;        &amp;lt;a href=&amp;quot;&amp;#39; . htmlspecialchars(get_comment_link($parent_id,array(&amp;quot;type&amp;quot; =&amp;gt; &amp;quot;all&amp;quot;))) . &amp;#39;&amp;quot; target=&amp;quot;_blank&amp;quot;&amp;gt;&amp;#39; . htmlspecialchars(get_comment_link($parent_id,array(&amp;quot;type&amp;quot; =&amp;gt; &amp;quot;all&amp;quot;))) . &amp;#39;&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="x"&gt;        &amp;lt;br/&amp;gt;&lt;/span&gt;
&lt;span class="x"&gt;        &amp;lt;p&amp;gt;&amp;lt;b&amp;gt;&lt;/span&gt;
&lt;span class="x"&gt;        感谢您对 &amp;lt;a href=&amp;quot;&amp;#39; . get_option(&amp;#39;home&amp;#39;) . &amp;#39;&amp;quot; target=&amp;quot;_blank&amp;quot;&amp;gt;&amp;#39; . get_option(&amp;#39;blogname&amp;#39;) . &amp;#39;&amp;lt;/a&amp;gt; 的关注&amp;lt;br/&amp;gt;&lt;/span&gt;
&lt;span class="x"&gt;        该邮件邮系统自动发出，请勿回复，谢谢！&lt;/span&gt;
&lt;span class="x"&gt;        &amp;lt;br/&amp;gt;&lt;/span&gt;
&lt;span class="x"&gt;        如果您有任何疑问，请联系我。邮箱：&amp;lt;a href=&amp;quot;&amp;#39;.$adminEmail.&amp;#39;&amp;quot;&amp;gt;&amp;#39;.$adminEmail.&amp;#39;&amp;lt;/a&amp;gt;&amp;lt;/b&amp;gt;&amp;lt;/p&amp;gt;&amp;#39;;&lt;/span&gt;
&lt;span class="x"&gt;        $message = convert_smilies($message);&lt;/span&gt;
&lt;span class="x"&gt;        $from = &amp;quot;From: \&amp;quot;&amp;quot; . get_option(&amp;#39;blogname&amp;#39;) . &amp;quot;\&amp;quot; &amp;lt;$wp_email&amp;gt;&amp;quot;;&lt;/span&gt;
&lt;span class="x"&gt;        $headers = &amp;quot;$from\nContent-Type: text/html; charset=&amp;quot; . get_option(&amp;#39;blog_charset&amp;#39;) . &amp;quot;\n&amp;quot;;&lt;/span&gt;
&lt;span class="x"&gt;        wp_mail( $to, $subject, $message, $headers );&lt;/span&gt;
&lt;span class="x"&gt;    }&lt;/span&gt;
&lt;span class="x"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Mon, 24 Sep 2012 23:01:00 +0800</pubDate><guid>tag:typecodes.com,2012-09-24:web/wpautosendcommentmail.html</guid><category>wordpress</category><category>wordpress评论邮件通知</category></item><item><title>如何给wordpress的回复添加引用功能</title><link>https://typecodes.com/web/wpquotecomments.html</link><description>&lt;p&gt;在上一篇文章已经写了&lt;a href="https://typecodes.com/web/wpatcommentauthor.html" title="wordpress回复内容前面添加@作者样式"&gt;关于评论/回复添加@的方法&lt;/a&gt;，今天继续用jQuery添加一个在评论/回复添加引用的功能。其实，只要博客有了评论/回复的@功能，基本上用不着使用引用功能了。&lt;/p&gt;
&lt;p&gt;从那篇关于@功能的文章就知道，只要我们点击那个@某某的链接，我们就可以找到原来的评论。而引用要起的作用也差不多，类似于@，只不过相对于@有更为直观。要使用引用功能，所用原理也是类似@的（温馨提示：大家还是看一下，不然这篇文章可能有些云里雾里了^^）。即要用到jQuery，并且涉及到自己主题评论页面的web结构。不罗嗦了，最终效果如下：&lt;/p&gt;


&lt;p&gt;&lt;img alt="如何给wordpress的回复添加引用功能" src="https://o3cex9zsl.qnssl.com/2012/09/11.jpg" title="如何给wordpress的回复添加引用功能" /&gt;&lt;/p&gt;
&lt;p&gt;1、确保主题评论的web结构比较标准，和wp官方主题默认的评论结构相差不大（一般的主题都符合，只要不是那些特别风骚的主题都ok）。&lt;/p&gt;
&lt;p&gt;2、根据评论结构(主要是用jQuery获取原作者的姓名和被引用的内容)，写出如下jQuery代码并命名为quote.js 文件，保存到主题所在的js目录下（大家可以参考我的主题评论的web结构，修改author和content的值）。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;/* @quoter js by vfhky */
jQuery(document).ready(function($){ //Begin jQuery
    $(&amp;quot;a.quote&amp;quot;).click(function(){
        if($(&amp;quot;#comment&amp;quot;).length &amp;gt; 0){
            var author = $(this).prevAll().find(&amp;quot;strong:first&amp;quot;).text();//获取当前引用的姓名
            var content = $(this).parents(&amp;quot;li&amp;quot;).find(&amp;quot;.vfhky_quote&amp;quot;).html();//获取当前引用的内容
            content = content.replace(/&lt;span class="err"&gt;&amp;lt;&lt;/span&gt;\/?.+?&amp;gt;/g,&amp;quot;&amp;quot;);//js去除html代码标记
            var cmt_link = $(this).attr(&amp;quot;href&amp;quot;);
            var output = $(&amp;quot;#comment&amp;quot;).val() + &amp;quot; &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;\&amp;quot;quotescontents\&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;&amp;quot;;
            //注意下面这个div是控制引用内容的样式，你可以通过在主题style.css文件中自定义
            output += &amp;quot;&lt;span class="nt"&gt;&amp;lt;strong&amp;gt;&lt;/span&gt;引用&lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;\&amp;quot;&amp;quot;&lt;/span&gt; &lt;span class="err"&gt;+&lt;/span&gt; &lt;span class="err"&gt;cmt_link&lt;/span&gt; &lt;span class="err"&gt;+&lt;/span&gt; &lt;span class="err"&gt;&amp;quot;\&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;&amp;quot;+ author+&amp;quot;&lt;span class="err"&gt;&amp;lt;&lt;/span&gt;\/a&amp;gt;&amp;quot; +&amp;#39;原文：&amp;#39;+&amp;quot;&lt;span class="err"&gt;&amp;lt;&lt;/span&gt;\/strong&amp;gt;&amp;quot;+content+&amp;quot;&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&amp;quot;;
            $(&amp;quot;#comment&amp;quot;).val(output);
            $(&amp;quot;#comment&amp;quot;).focus();
            return false;
        } else {
            alert(&amp;quot;评论已经关闭，无法引用。&amp;quot;);
            return false;
        }
    });
})
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;3、由于在添加@功能的时候，我已经上传了jquery.min.js（见文章 &lt;a href="https://typecodes.com/web/wpatcommentauthor.html" title="wordpress回复内容前面添加@作者样式"&gt;wordpress回复内容前面添加@作者样式&lt;/a&gt; ），所以这个步骤我就不用做了。&lt;/p&gt;
&lt;p&gt;4、加载jQuery库：依然在主题目录中找到header.php，再找到找到&amp;lt;?php wp_head()； ?&amp;gt;，然后在它前面添加如下代码&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;&amp;lt;!--Google CDN提供的jQuery库的地址采用了协议相对路径，它可以很好的解决https引起的一些问题--&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;script&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;//ajax.googleapis.com/ajax/libs/jquery/1.8.2/jquery.min.js&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

&lt;span class="c"&gt;&amp;lt;!--SAE开发者中心提供的jQuery库的地址，我们也可以采用了协议相对路径--&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;script&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;//lib.sinaapp.com/js/jquery/1.8/jquery.min.js&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

&lt;span class="c"&gt;&amp;lt;!--微软提供的jQuery库的地址，我们也可以采用了协议相对路径--&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;script&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;//ajax.aspnetcdn.com/ajax/jQuery/jquery-1.8.2.min.js&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

&lt;span class="c"&gt;&amp;lt;!--当两者提供的jquery都无法载入时，我们需要载入本地备份的jquery.min.js文件--&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;script&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;window.jQuery || document.write(&amp;#39;&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&amp;lt;script&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;?&lt;/span&gt; &lt;span class="nx"&gt;php&lt;/span&gt; &lt;span class="nx"&gt;bloginfo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;template_directory&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="s"&gt;/js/jquery.min.js&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;\x3C/script&amp;gt;&amp;#39;)&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;script&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;?&lt;/span&gt; &lt;span class="nx"&gt;php&lt;/span&gt; &lt;span class="nx"&gt;bloginfo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;template_directory&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="s"&gt;/js/reply.js&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;script&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;?&lt;/span&gt; &lt;span class="nx"&gt;php&lt;/span&gt; &lt;span class="nx"&gt;bloginfo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;template_directory&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="s"&gt;/js/quote.js&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;注意：&lt;/code&gt;如果使用了@功能（即已经添加了jQuery库）的话，直接写最后那句代码，即加载quote.js。（PS：由于一些因素，Google服务在中国还是不怎么稳定，所以比较推荐新浪SAE提供的jQuery库）&lt;/p&gt;
&lt;p&gt;5、在合适的位置（一般是functions.php，和那个@功能是一样的文件）添加引用的按钮。例如我的就是&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;quote&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;#comment-&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt; &lt;span class="nx"&gt;comment_ID&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;[引用]&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;6、因为引用到原作者，所以把functions.php中的 &amp;lt;?php comment_author_link() ?&amp;gt; 
改成（同@） ，以便使用jQuery。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;strong&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt; &lt;span class="nx"&gt;comment_author_link&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/strong&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;7、把functions.php中的调用评论内容的标签 &amp;lt;?php comment_text() ?&amp;gt; 改成如下代码（同@），以便使用jQuery。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;vfhky_quote&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt; &lt;span class="nx"&gt;comment_text&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;8、搞定，有问题的话可以留言&lt;/p&gt;
&lt;h4&gt;Update 2012.09.24 20:20&lt;/h4&gt;
&lt;p&gt;1、对于WP-UserAgent的博客，如果你选择的“Display location”不是“Custom （Advanced）”的话，很可能在引用的时候把这些信息加入到了被引用的内容中去。所以建议选择“Custom （Advanced）”，然后单独使用&lt;code&gt;&amp;lt;? php useragent_output_custom(); ?&amp;gt;&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;这样就不会在引用内容中加入多余信息。我之前也是由于这个原因调试了N久，最后才找出这个原因。&lt;/p&gt;
&lt;p&gt;2、这个引用功能和@功能能够兼容额，不用担心用了这个就不能用那个了。另外它也兼容IE系列浏览器。所以推荐大家一试！！！&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Mon, 24 Sep 2012 17:10:00 +0800</pubDate><guid>tag:typecodes.com,2012-09-24:web/wpquotecomments.html</guid><category>wordpress</category><category>wordpress引用回复</category></item><item><title>wordpress如何防止访客冒充博主发表评论</title><link>https://typecodes.com/web/wpantisimulateblogger.html</link><description>&lt;p&gt;不知道大家注意没有，在wordpress的评论/回复框里面，任何访客只要填上博主的邮箱地址即可冒充博主发表/回复评论。虽然说一般很少人会无聊到这样做，还是“未雨绸缪”一下吧。万一哪天不是vfhky而是某个丑陋的spammer冒充一下帅气的哥，那岂不是损失大了^^开个玩笑，总之，我觉得有必要解决这个问题。把如下代码添加到你的博客的主题下的functs.php文件里面就行。&lt;/p&gt;


&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6
7
8
9&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="x"&gt;// 防止访客冒充博主发表评论&lt;/span&gt;
&lt;span class="x"&gt;function  users_checking($incoming_comment) {&lt;/span&gt;
&lt;span class="x"&gt;    global $user_ID;&lt;/span&gt;
&lt;span class="x"&gt;    $isSpam = 0;&lt;/span&gt;
&lt;span class="x"&gt;    if ( strtolower(trim($incoming_comment[&amp;#39;comment_author&amp;#39;])) == &amp;#39;这里填写博主你的专用昵称&amp;#39; ) $isSpam = 1;&lt;/span&gt;
&lt;span class="x"&gt;    if ( strtolower(trim($incoming_comment[&amp;#39;comment_author_email&amp;#39;])) == &amp;#39;这里填写博主你的专用邮箱&amp;#39;) $isSpam = 1;&lt;/span&gt;
&lt;span class="x"&gt;    if (!$isSpam || intval($user_ID) &amp;gt; 0) { return $incoming_comment; } else { wp_die(&amp;#39;请勿冒充博主发表评论!&amp;#39;); }&lt;/span&gt;
&lt;span class="x"&gt;}&lt;/span&gt;
&lt;span class="x"&gt;add_filter( &amp;#39;preprocess_comment&amp;#39;, &amp;#39;users_checking&amp;#39; );&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;最终效果如下：&lt;/p&gt;
&lt;p&gt;&lt;img alt="wordpress如何防止访客冒充博主发表评论" src="https://o3cex9zsl.qnssl.com/2012/09/1.jpg" title="wordpress如何防止访客冒充博主发表评论" /&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Mon, 24 Sep 2012 00:40:00 +0800</pubDate><guid>tag:typecodes.com,2012-09-24:web/wpantisimulateblogger.html</guid><category>wordpress</category><category>wordpress冒充博主</category></item><item><title>wordpress回复内容前面添加@作者样式</title><link>https://typecodes.com/web/wpatcommentauthor.html</link><description>&lt;p&gt;前一篇文章写了关于&lt;a href="https://typecodes.com/web/wpnestedcomments.html" title="完美实现wordpress评论回复无限嵌套的方法"&gt;完美实现wordpress评论回复无限嵌套的方法&lt;/a&gt;，那么当某一条评论的回复数目比较多的时候怎么办？估计初来咋到的童鞋们会看的眼花缭乱，所以我们需要在每条回复内容前面添加一个醒目的字眼来提醒这条回复是针对的哪条评论。&lt;/p&gt;
&lt;p&gt;当然，目前最时尚的方式就是像微博那样使用一个@某某，确实也很方便实用。那么这篇文章也要实现这种效果，即在wordpress回复内容前面添加@。方法如下（&lt;code&gt;终于领略了jQuery的强大&lt;/code&gt;）&lt;/p&gt;


&lt;p&gt;&lt;img alt="在wordpress回复内容前面添加@方式" src="https://o3cex9zsl.qnssl.com/2012/09/13.png" title="在wordpress回复内容前面添加@方式" /&gt;&lt;/p&gt;
&lt;p&gt;1、由于要使用到jQuery，所以要确保主题评论的web结构比较标准，与WordPress官方主题默认的评论结构相差不大（一般的主题都符合，只要不是那些特别风骚的主题都ok）。&lt;/p&gt;
&lt;p&gt;2、根据评论结构(主要是用jQuery获取链接和姓名)，写出如下jQuery代码并命名为reply.js 文件，保存到主题所在的js目录下（大家可以参考我的主题评论的web结构，修改atid和atname）。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cm"&gt;/* @replyer js by vfhky */&lt;/span&gt;
&lt;span class="n"&gt;jQuery&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;document&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;ready&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt; &lt;span class="c1"&gt;//Begin jQuery&lt;/span&gt;
    &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reply&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;click&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;var&lt;/span&gt; &lt;span class="n"&gt;atid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;#&amp;#39; + $(this).parent().attr(&amp;quot;&lt;/span&gt;&lt;span class="kt"&gt;id&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;) + &amp;#39;&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="c1"&gt;//获取当前评论的链接地址&lt;/span&gt;
    &lt;span class="n"&gt;var&lt;/span&gt; &lt;span class="n"&gt;atname&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;this&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;prevAll&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;strong:first&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;&lt;span class="c1"&gt;//获取当前评论的姓名&lt;/span&gt;
    &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;#comment&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;value&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;[@&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;atname&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;]( + atid + ) &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;focus&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cancel&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;comment&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;reply&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;click&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="c1"&gt;//点击取消回复评论清空评论框的内容&lt;/span&gt;
    &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;#comment&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;value&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;3、添加jQuery所需的另个一文件jquery.min.js，同样保存到主题所在的js目录下。由于代码比较长，所以我放到了谷歌代码里面（&lt;a href="http://huangkeye-blog.googlecode.com/files/jquery.min.js.zip"&gt;点击下载&lt;/a&gt;）。&lt;/p&gt;
&lt;p&gt;4、加载jQuery库：在header.php里面找到&lt;code&gt;&amp;lt;?php wp_head(); ?&amp;gt;&lt;/code&gt;，然后在它前面添加如下代码&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;&amp;lt;!--Google CDN提供的jQuery库的地址采用了协议相对路径，它可以很好的解决https引起的一些问题--&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;script&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;//ajax.googleapis.com/ajax/libs/jquery/1.8.2/jquery.min.js&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

&lt;span class="c"&gt;&amp;lt;!--SAE开发者中心提供的jQuery库的地址，我们也可以采用了协议相对路径--&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;script&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;//lib.sinaapp.com/js/jquery/1.8/jquery.min.js&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

&lt;span class="c"&gt;&amp;lt;!--微软提供的jQuery库的地址，我们也可以采用了协议相对路径--&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;script&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;//ajax.aspnetcdn.com/ajax/jQuery/jquery-1.8.2.min.js&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

&lt;span class="c"&gt;&amp;lt;!--当两者提供的jquery都无法载入时，我们需要载入本地备份的jquery.min.js文件--&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;script&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;window.jQuery || document.write(&amp;#39;&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&amp;lt;script&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt; &lt;span class="nx"&gt;bloginfo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;template_directory&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="s"&gt;/js/jquery.min.js&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;\x3C/script&amp;gt;&amp;#39;)&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;script&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt; &lt;span class="nx"&gt;bloginfo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;template_directory&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="s"&gt;/js/reply.js&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;注意：上面提供了3种不同的jquery库的地址，都起到了节省流量、减少服务器负载、提高访问速度的作用。但是，在写代码的时候我们只需要采用其中一种就行了。（PS：由于一些因素，Google服务在中国还是不怎么稳定，所以比较推荐新浪SAE提供的jQuery库）&lt;/p&gt;
&lt;p&gt;5、搞定，有问题的话可以留言额，大家一起来解决&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Sat, 22 Sep 2012 14:43:00 +0800</pubDate><guid>tag:typecodes.com,2012-09-22:web/wpatcommentauthor.html</guid><category>wordpress， wordpress回复@</category></item><item><title>完美实现wordpress评论回复无限嵌套的方法</title><link>https://typecodes.com/web/wpnestedcomments.html</link><description>&lt;p&gt;一般wordpress的主题中的评论回复是可以嵌套使用的，但是一旦某一个人的回复或者评论下面有很多人跟帖的话，那么这种无限嵌套的方法很可能导致网页错位的问题，或多或少也会影响网页的美观。有人可能会想，要是我设置每个评论后面最多跟6个回复，多余的就让它成为新的评论，这样不就解决了吗？是的，本篇文章用的就是这个思想。方法如下：&lt;/p&gt;
&lt;p&gt;&lt;img alt="完美实现wordpress评论回复无限嵌套的方法" src="https://o3cex9zsl.qnssl.com/2012/09/12.png" title="完美实现wordpress评论回复无限嵌套的方法" /&gt;&lt;/p&gt;


&lt;h5&gt;1、后台设置最多嵌套层数（例如为6）&lt;/h5&gt;
&lt;h5&gt;2、修改评论回调函数comment_reply_link()&lt;/h5&gt;
&lt;p&gt;打开主题目录中的functions.php，找到评论回调函数comment_reply_link()，一般类似于以下代码：&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
  &lt;span class="nx"&gt;comment_reply_link&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;array_merge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="nx"&gt;reply_text&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;回复&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="nx"&gt;add_below&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="nv"&gt;$add_below&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="nx"&gt;depth&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$depth&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="nx"&gt;max_depth&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$args&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="nx"&gt;max_depth&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])));&lt;/span&gt; 
&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;把上面关于这个函数的代码改成&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6
7
8&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt; 
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$depth&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nx"&gt;get_option&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="nx"&gt;thread_comments_depth&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;   &amp;lt;!-- 如果评论深度等于后台设置的层数 --&amp;gt;&lt;/span&gt;
&lt;span class="x"&gt;    &amp;lt;!-- 将第二个参数改为父一级评论的id --&amp;gt;&lt;/span&gt;
&lt;span class="x"&gt;    &amp;lt;a onclick=&amp;quot;return addComment.moveForm( &amp;#39;&amp;#39;comment-&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt; &lt;span class="nx"&gt;comment_ID&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&amp;#39;&amp;#39;,&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt; &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$comment&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;comment_parent&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&amp;#39;&amp;#39;, &amp;#39;&amp;#39;respond&amp;#39;&amp;#39;,&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt; &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$comment&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;comment_post_ID&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&amp;#39;&amp;#39; )&amp;quot; href=&amp;quot;?replytocom=&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt; &lt;span class="nx"&gt;comment_ID&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;#respond&amp;quot; class=&amp;quot;comment-reply-link&amp;quot; rel=&amp;quot;nofollow&amp;quot;&amp;gt;回复&amp;lt;/a&amp;gt;&lt;/span&gt;

&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;   &amp;lt;!-- 正常情况 --&amp;gt;&lt;/span&gt;
&lt;span class="x"&gt;  &amp;lt;a onclick=&amp;quot;return addComment.moveForm( &amp;#39;&amp;#39;comment-&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt; &lt;span class="nx"&gt;comment_ID&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&amp;#39;&amp;#39;,&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt; &lt;span class="nx"&gt;comment_ID&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&amp;#39;&amp;#39;, &amp;#39;&amp;#39;respond&amp;#39;&amp;#39;,&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt; &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$comment&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;comment_post_ID&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&amp;#39;&amp;#39; ) &amp;quot; href=&amp;quot;?replytocom=&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt; &lt;span class="nx"&gt;comment_ID&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;#respond&amp;quot; class=&amp;quot;comment-reply-link&amp;quot; rel=&amp;quot;nofollow&amp;quot;&amp;gt;回复&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt; &lt;span class="k"&gt;endif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h5&gt;PS：还有惊喜哟&lt;/h5&gt;
&lt;p&gt;如果觉得某条评论的回复太多的话，可以考虑给每个回复前面加上@评论人，那么回复就更清晰明了了。方法见下一篇文章：&lt;a href="https://typecodes.com/web/wpatcommentauthor.html" title="wordpress回复内容前面添加@作者样式"&gt;wordpress回复内容前面添加@作者样式&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Sat, 22 Sep 2012 14:41:00 +0800</pubDate><guid>tag:typecodes.com,2012-09-22:web/wpnestedcomments.html</guid><category>wordpress</category><category>wordpress嵌套评论</category></item><item><title>如何为自己的搜索引擎添加语音搜索功能</title><link>https://typecodes.com/web/voicesearchengine.html</link><description>&lt;p&gt;&lt;img alt="为自己的搜索引擎添加语音搜索" src="https://o3cex9zsl.qnssl.com/2012/09/14.png" title="为自己的搜索引擎添加语音搜索" /&gt;&lt;/p&gt;
&lt;p&gt;谷歌率先在自己的搜索google.com上添加了这项功能，然后国内移动浏览器UC也应用了这项功能，紧接着国内浏览器巨头360浏览器在自己的搜索框架内也添加了这项语音搜索功能。渐渐地，语音搜索在互联网也流行开了。那么如何让自己的搜索引擎也实现语音搜索功能呢？&lt;/p&gt;


&lt;p&gt;其实，要实现这项功能还是很简单的，只需要添加如下一行代码：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&amp;lt;input type=&amp;quot;text&amp;quot; x-webkit-speech /&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;也就是只需要在平常的输入框代码内添加x-webkit-speech属性就可以了。但是这个属性只能在Chrome 11版本以上的浏览器上才能实现。因为，从这个属性的命名可以看出，它是一个webkit内核浏览器的私有属性，所以只能在Chrome浏览器来实现。因此，我们可以分别用IE和谷歌Chrome两种不同内核浏览器打开博客首页地址https://typecodes.com查看效果。而其实x-webkit-speech是HTML5的speech 功能的API，Google对HTML5、CSS3的新技术标准支持比较快。&lt;/p&gt;
&lt;p&gt;所以，我们可以在Chrome上体验到这种新奇好玩的功能。虽然说现在语音识别技术效果还是不怎么令人满意，尤其是国内的一些语音搜索应用对英语的支持还是比价差的，中文由于各种方言的存在也不是很令人满意。但是我还是相信随着HTML5的各种标准和技术的成熟，未来我们的搜索引擎肯定会更加个性化和人性化的。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Thu, 13 Sep 2012 19:02:00 +0800</pubDate><guid>tag:typecodes.com,2012-09-13:web/voicesearchengine.html</guid><category>google</category><category>语音搜索</category></item><item><title>屏蔽wordpress垃圾评论的方法（插件和非插件）</title><link>https://typecodes.com/web/antiwpspamplugorno.html</link><description>&lt;p&gt;相信很多wordpress使用者都有相同的经历，那就是在博客初期，可能不会有一些莫名的文章评论，而且写的内容貌似还比较符合文章的主题。但是，随着网站内容的丰富，相信会得到更多的spam评论。这些一般都是由一些机器人发出的，也不排除一些别有用心的人打算往你的博客里面注入点什么东东来获取点数据。所以屏蔽这些spam垃圾还是很有必要的。一般采取插件和非插件的方式：&lt;/p&gt;


&lt;h5&gt;（一）采用wordpress官方自带的防spam 插件：Akismet&lt;/h5&gt;
&lt;p&gt;WordPress自带的spam过滤插件Akismet，非常强大，可以过滤掉大部分垃圾评论。Akismet会对评论者、评论内容的关键字、评论者邮箱、链接地址做判断，从而确定是否要将评论列为待审批对象。虽然功能强大，但是也存在误判的情况，但是它最大的优点是“智能学习”。也就是当出现误判的时候，只要博主在后台将这条评论回复成正常即可，那么Akismet下次就不会过滤了。&lt;/p&gt;
&lt;h5&gt;（二）采用非插件方法：Anti-Spam&lt;/h5&gt;
&lt;p&gt;这个是由Willin Kan写的小墙工具，理论上可以100% 屏蔽机器人发出的spam；而如果是自然人提交评论，小墙会在评论提交表单中加一个hidden变量， 如果后台检测不到这个变量，则认定为spam，可以选择需要审核， 也可以直接过滤掉。在你的主题下面的functions.php里面添加如下代码即可&lt;/p&gt;
&lt;p&gt;&lt;img alt="后台查看垃圾评论" src="https://o3cex9zsl.qnssl.com/2012/09/11.png" title="后台查看垃圾评论" /&gt;&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="x"&gt;// 单独使用禁止全英文评论代码&lt;/span&gt;
&lt;span class="x"&gt;function scp_comment_post( $incoming_comment ) {&lt;/span&gt;
&lt;span class="x"&gt;    $pattern = &amp;#39;/[一-龥]/u&amp;#39;;   //验证是否为中文&lt;/span&gt;

&lt;span class="x"&gt;    if(!preg_match($pattern, $incoming_comment[&amp;#39;comment_content&amp;#39;])) {&lt;/span&gt;
&lt;span class="x"&gt;    wp_die( &amp;quot;You should type some Chinese word (like \&amp;quot;你好\&amp;quot;) in your comment to pass the spam-check, thanks for your patience! 您的评论中必须包含中文!&amp;quot; );&lt;/span&gt;
&lt;span class="x"&gt;    }&lt;/span&gt;
&lt;span class="x"&gt;    return( $incoming_comment );&lt;/span&gt;
&lt;span class="x"&gt;}&lt;/span&gt;
&lt;span class="x"&gt;add_filter(&amp;#39;preprocess_comment&amp;#39;, &amp;#39;scp_comment_post&amp;#39;);&lt;/span&gt;

&lt;span class="x"&gt;//综合使用&amp;lt; &amp;lt;小牆&amp;gt;&amp;gt; Anti-Spam v1.84 by Willin Kan. &lt;/span&gt;
&lt;span class="x"&gt;class anti_spam {&lt;/span&gt;
&lt;span class="x"&gt;  function anti_spam() {&lt;/span&gt;
&lt;span class="x"&gt;    if ( !current_user_can(&amp;#39;read&amp;#39;) ) {&lt;/span&gt;
&lt;span class="x"&gt;      add_action(&amp;#39;template_redirect&amp;#39;, array($this, &amp;#39;w_tb&amp;#39;), 1);&lt;/span&gt;
&lt;span class="x"&gt;      add_action(&amp;#39;init&amp;#39;, array($this, &amp;#39;gate&amp;#39;), 1);&lt;/span&gt;
&lt;span class="x"&gt;      add_action(&amp;#39;preprocess_comment&amp;#39;, array($this, &amp;#39;sink&amp;#39;), 1);&lt;/span&gt;
&lt;span class="x"&gt;    }&lt;/span&gt;
&lt;span class="x"&gt;  }&lt;/span&gt;
&lt;span class="x"&gt;  // 設欄位&lt;/span&gt;
&lt;span class="x"&gt;  function w_tb() {&lt;/span&gt;
&lt;span class="x"&gt;    if ( is_singular() ) {&lt;/span&gt;
&lt;span class="x"&gt;      // 非中文語系&lt;/span&gt;
&lt;span class="x"&gt;      if ( stripos($_SERVER[&amp;#39;HTTP_ACCEPT_LANGUAGE&amp;#39;], &amp;#39;zh&amp;#39;) === false ) {&lt;/span&gt;
&lt;span class="x"&gt;        add_filter( &amp;#39;comments_open&amp;#39;, create_function(&amp;#39;&amp;#39;, &amp;quot;return false;&amp;quot;) ); // 關閉評論&lt;/span&gt;
&lt;span class="x"&gt;      } else {&lt;/span&gt;
&lt;span class="x"&gt;        ob_start(create_function(&amp;#39;$input&amp;#39;,&amp;#39;return preg_replace(&amp;quot;#textarea(.*?)name=([\&amp;quot;\&amp;#39;])comment([\&amp;quot;\&amp;#39;])(.+)/textarea&amp;amp;gt;#&amp;quot;,&lt;/span&gt;
&lt;span class="x"&gt;        &amp;quot;textarea$1name=$2w$3$4/textarea&amp;amp;gt;&amp;amp;lt;textarea name=\&amp;quot;comment\&amp;quot; cols=\&amp;quot;100%\&amp;quot; rows=\&amp;quot;4\&amp;quot; style=\&amp;quot;display:none\&amp;quot;&amp;amp;gt;/textarea&amp;amp;gt;&amp;quot;,$input);&amp;#39;) );&lt;/span&gt;
&lt;span class="x"&gt;      }&lt;/span&gt;
&lt;span class="x"&gt;    }&lt;/span&gt;
&lt;span class="x"&gt;  }&lt;/span&gt;
&lt;span class="x"&gt;  // 檢查&lt;/span&gt;
&lt;span class="x"&gt;  function gate() {&lt;/span&gt;
&lt;span class="x"&gt;    $w = &amp;#39;w&amp;#39;;&lt;/span&gt;
&lt;span class="x"&gt;    if ( !empty($_POST[$w]) &amp;amp;&amp;amp; empty($_POST[&amp;#39;comment&amp;#39;]) ) {&lt;/span&gt;
&lt;span class="x"&gt;      $_POST[&amp;#39;comment&amp;#39;] = $_POST[$w];&lt;/span&gt;
&lt;span class="x"&gt;    } else {&lt;/span&gt;
&lt;span class="x"&gt;$request = $_SERVER[&amp;#39;REQUEST_URI&amp;#39;];&lt;/span&gt;
&lt;span class="x"&gt;      $referer = isset($_SERVER[&amp;#39;HTTP_REFERER&amp;#39;])         ? $_SERVER[&amp;#39;HTTP_REFERER&amp;#39;]         : &amp;#39;隱瞞&amp;#39;;&lt;/span&gt;
&lt;span class="x"&gt;      $IP      = isset($_SERVER[&amp;quot;HTTP_X_FORWARDED_FOR&amp;quot;]) ? $_SERVER[&amp;quot;HTTP_X_FORWARDED_FOR&amp;quot;] . &amp;#39; (透過代理)&amp;#39; : $_SERVER[&amp;quot;REMOTE_ADDR&amp;quot;];&lt;/span&gt;
&lt;span class="x"&gt;      $way     = isset($_POST[$w]) ? &amp;#39;手動操作&amp;#39; : &amp;#39;未經評論表格&amp;#39;;&lt;/span&gt;
&lt;span class="x"&gt;      $spamcom = isset($_POST[&amp;#39;comment&amp;#39;]) ? $_POST[&amp;#39;comment&amp;#39;] : &amp;#39;&amp;#39;;&lt;/span&gt;
&lt;span class="x"&gt;      $_POST[&amp;#39;spam_confirmed&amp;#39;] = &amp;quot;請求: &amp;quot;. $request. &amp;quot;\n來路: &amp;quot;. $referer. &amp;quot;\nIP: &amp;quot;. $IP. &amp;quot;\n方式: &amp;quot;. $way. &amp;quot;\n內容: &amp;quot;. $spamcom. &amp;quot;\n -- 記錄成功 --&amp;quot;;&lt;/span&gt;
&lt;span class="x"&gt;    }&lt;/span&gt;
&lt;span class="x"&gt;  }&lt;/span&gt;
&lt;span class="x"&gt;  // 處理&lt;/span&gt;
&lt;span class="x"&gt;  function sink( $comment ) {&lt;/span&gt;
&lt;span class="x"&gt;    // 不管 Trackbacks/Pingbacks&lt;/span&gt;
&lt;span class="x"&gt;    if ( in_array( $comment[&amp;#39;comment_type&amp;#39;], array(&amp;#39;pingback&amp;#39;, &amp;#39;trackback&amp;#39;) ) ) return $comment;&lt;/span&gt;
&lt;span class="x"&gt;    // 已確定為 spam&lt;/span&gt;
&lt;span class="x"&gt;    if ( !empty($_POST[&amp;#39;spam_confirmed&amp;#39;]) ) {&lt;/span&gt;
&lt;span class="x"&gt;      // 方法一: 直接擋掉, 將 die(); 前面兩斜線刪除即可.&lt;/span&gt;
&lt;span class="x"&gt;      //die();&lt;/span&gt;
&lt;span class="x"&gt;      // 方法二: 標記為 spam, 留在資料庫檢查是否誤判.&lt;/span&gt;
&lt;span class="x"&gt;      add_filter(&amp;#39;pre_comment_approved&amp;#39;, create_function(&amp;#39;&amp;#39;, &amp;#39;return &amp;quot;spam&amp;quot;;&amp;#39;));&lt;/span&gt;
&lt;span class="x"&gt;      $comment[&amp;#39;comment_content&amp;#39;] = &amp;quot;[ 小牆判斷這是Spam! ]\n&amp;quot;. $_POST[&amp;#39;spam_confirmed&amp;#39;];&lt;/span&gt;
&lt;span class="x"&gt;      $this-&amp;amp;gt;add_black( $comment );&lt;/span&gt;
&lt;span class="x"&gt;    } else {&lt;/span&gt;
&lt;span class="x"&gt;      // 檢查頭像&lt;/span&gt;
&lt;span class="x"&gt;      $f = md5( strtolower($comment[&amp;#39;comment_author_email&amp;#39;]) );&lt;/span&gt;
&lt;span class="x"&gt;      $g = sprintf( &amp;quot;http://%d.gravatar.com&amp;quot;, (hexdec($f{0}) % 2) ) .&amp;#39;/avatar/&amp;#39;. $f .&amp;#39;?d=404&amp;#39;;&lt;/span&gt;
&lt;span class="x"&gt;      $headers = @get_headers( $g );&lt;/span&gt;
&lt;span class="x"&gt;      if ( !preg_match(&amp;quot;|200|&amp;quot;, $headers[0]) ) {&lt;/span&gt;
&lt;span class="x"&gt;        // 沒頭像的列入待審(即当第一次留言时，需要审核)&lt;/span&gt;
&lt;span class="x"&gt;        add_filter(&amp;#39;pre_comment_approved&amp;#39;, create_function(&amp;#39;&amp;#39;, &amp;#39;return &amp;quot;0&amp;quot;;&amp;#39;));&lt;/span&gt;
&lt;span class="x"&gt;        //$this-&amp;amp;gt;add_black( $comment );&lt;/span&gt;
&lt;span class="x"&gt;        }&lt;/span&gt;
&lt;span class="x"&gt;    }&lt;/span&gt;
&lt;span class="x"&gt;    return $comment;&lt;/span&gt;
&lt;span class="x"&gt;  }&lt;/span&gt;
&lt;span class="x"&gt;  // 列入黑名單&lt;/span&gt;
&lt;span class="x"&gt;  function add_black( $comment ) {&lt;/span&gt;
&lt;span class="x"&gt;    if (!($comment_author_url = $comment[&amp;#39;comment_author_url&amp;#39;])) return;&lt;/span&gt;
&lt;span class="x"&gt;    if ($pos = strpos($comment_author_url, &amp;#39;//&amp;#39;)) $comment_author_url = substr($comment_author_url, $pos + 2);&lt;/span&gt;
&lt;span class="x"&gt;    if ($pos = strpos($comment_author_url, &amp;#39;/&amp;#39;))  $comment_author_url = substr($comment_author_url, 0, $pos);&lt;/span&gt;
&lt;span class="x"&gt;    $comment_author_url = strtr($comment_author_url, array(&amp;#39;www.&amp;#39; =&amp;amp;gt; &amp;#39;&amp;#39;));&lt;/span&gt;
&lt;span class="x"&gt;    if (!wp_blacklist_check(&amp;#39;&amp;#39;, &amp;#39;&amp;#39;, $comment_author_url, &amp;#39;&amp;#39;, &amp;#39;&amp;#39;, &amp;#39;&amp;#39;)) update_option(&amp;#39;blacklist_keys&amp;#39;, $comment_author_url . &amp;quot;\n&amp;quot; . get_option(&amp;#39;blacklist_keys&amp;#39;));&lt;/span&gt;
&lt;span class="x"&gt;  }&lt;/span&gt;
&lt;span class="x"&gt;}&lt;/span&gt;
&lt;span class="x"&gt;$anti_spam = new anti_spam();&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;最后记得把代码$2w$3$4中间的w和$w = 'w'的w改成其它英文字母(但是二者要一致)，比如$2wc$3和$w = 'wc'等等，千万不要让spam发现额^^&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Wed, 12 Sep 2012 23:03:00 +0800</pubDate><guid>tag:typecodes.com,2012-09-12:web/antiwpspamplugorno.html</guid><category>wordpress垃圾评论</category></item><item><title>给职业人士转型IT行业的一些建议</title><link>https://typecodes.com/mix/transittoitindustry.html</link><description>&lt;p&gt;最近在51CTO博客里面看到tonyxiaohome写的一篇解答关于职业人士转型IT行业的文章，我读了好几遍，觉得写得真的非常好。不是单纯的说教式的解答，也不是那种近乎流水账式的记述，这篇文章显得格外亲切和贴近现实，就像跟一位学识、经验丰富的长者跟你聊天一样。也许这篇文章算是我的博客里面唯一的一篇“抄袭”文章吧，虽然我挺讨厌那种直接copy别人的知识来伪装自己的人。由于整片文章比较长，我就选取了一些点睛字段。&lt;/p&gt;


&lt;h5&gt;（一）求助信件&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;老师，您好！
    我不是做IT的，但有看到您的一些文章，感觉您挺厉害，人也蛮好，虽然并没有见过您。

    我32了，在外打工十来年了。在这期间，大部分时间都是做销售，没有学到什么东西，曾经的理想早已烟消云散。总的来说，没有赚到什么钱，相当一部分被我乱花掉了。时间对谁都是一样的，不管你上进还是不上进，它都一直悄无声息的溜走。现在已结婚生子，小孩一岁多了，很可爱，老婆也很好。自己对自己说应该让他们母子过优质的生活。但现在的境况让我感觉有很大的危机感和紧迫感。我性格比较内向，总觉得自己不适合创业，但现在没有技术，年龄慢慢大了，感觉有技术在身才比较有安全感。

    这段时间一直想学点什么，自己想学网络。虽然对网络并不懂，也没有基础。期间也到了一些培训学校咨询，在网上查网络工程师的前景等等。在一家培训学校咨询了思科的CCNA和CCNP培训，培训加考试一共一万二千多。金钱不是主要的，最重要的是有一定的顾虑：年纪这么大了，又没有基础，没有实际操作经验，到底能不能学到真本事；学了之后缺乏经验，很可能也找不到工作。因为现在年强人太多了，有经验技术的人太多了。

    之所以打扰您就是希望您能在闲暇之余能够帮我指点迷津，32了，没有基础，学网络有前景吗？如果学，学哪方面比较好呢？

    真有点不好意思，您像我这么大的时候已经是高手了，而我还没有找好自己的路。不过不管怎么样我会努力，一定要让家人生活的好些。

    一个迷茫的人渴望得到您的指点，谢谢!!
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;（二）回复信件&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;这类回答多了，我发现一个问题，就是这类职业方向问题其实也要细分需求。以前呢，我面对学校里面的学生娃娃多点，他们的需求很简单，就是目前什么经验都没有，但是急于找份工作，所以当时我的回答给了很多短平快的建议。

但是，近一两年，我慢慢面对的职业人士更多一点，他们呢，有自己的工作和收入，但是不满足于现状，又或者缺乏职业安全感，需要改变自己。这些朋友很多并不是IT业的，又或者，和IT业沾点边，但不深入，不过他们都希望进到IT行业里面找饭吃，所以产生出第二类需求，就是职业转型的需求。这和学生显然不一样。所以，我发现自己以前的回答有点偏差，需要调整。

其实真要是细分，这里面也还可以分好几种，有的是不满足现状，想获得更高的收入，觉得IT业不错，想进来。有的是别的行业风险太高，比如销售行业，富的富死，穷的穷死，希望学门技术，比如今天这位朋友，以后呢，可以稳定一点，养家糊口。

不过呢，这种问题还真不好回答，原因很简单，这些朋友和学生不一样，他们已经有了工作，有了一定的收入和社会地位，心中难免有患得患失之心，假如真的进入IT行业，肯定会和以前的职业比较，如果比的好还罢了，如果还不如以前职业，呵呵，我贸然建议转行，那不把我骂死。所以我想了一下，还是慎重点提建议吧，好的坏的都说，请朋友们看看，如果觉得有理，就参考一下，如果觉得说得不好呢，笑笑就好了，自己选择一条道路，也许更恰当。

嗯，我算老IT了，对于IT行业有一些了解，我们先说说IT这个职业吧。

IT这个职业，我的感觉，不算坏，也不算好。算是目前社会上一个被大家公认的，还算是正当的职业，说出去去不丢人，但是也还没到可以到处显摆的地步，大家平常心看待较好，大家觉得呢？

说不好呢，这个行业技术背景要求高，学历要求高，一般说来，在这个行业混的，都不算笨人，属于人精扎堆的行业，自然呢，竞争力也就远高于其他行业。还有就是，技术更新快，新知识很快就会过时，其他行业大学毕业几十年吃老本的情况在这个行业是看不到的，人得不断自学，更新自己的知识体系，这个比较累，也很痛苦。

IT本质是信息产业，信息是最快的，互联网天生就是为IT业服务的，信息太过于灵通了呢，不可避免的就没有国界的划分了，因此，IT业要想搞点什么，动不动就是全球竞争，可能某个县城里面自学了几天的一个小程序员，随便写段代码，发到网上，就被美国人看上了，要么买下，要么竞争，总之啊，在IT业，很难低调做点事情，这个压力可有点大。

另外IT行业属于新兴产业，产业布局不合理，好公司，大公司一般在大中型城市，小地方不好找工作，虽然可以考虑互联网创业，但是，竞争压力大，信息闭塞，也很难在小地方创业成功。而到了大中型城市，远离家人，空虚寂寞，工作、生活压力大，这些，都是IT业不好的一面。

不过呢，好处也不少。相对传统行业，IT业充满活力，也就是说，条条框框少，只要你有真货，敢于竞争，在竞争中可能迅速获取优势，做好了，赶英超美也不是什么难事，反正这个行业就那么新，你会的我也会，就看谁想到了，有时候，一个点子就能成就一家公司。

IT业普遍薪水比其他行业还算高的，收入上不算太丢人，比上不足，比下还是有余的。这也是合理的，毕竟这一行的人，要付出比其他行业多几倍的辛苦和努力，社会多回报一点，也是合理的。IT业新知识多，其实也是新点子多，机会多，全球竞争之外，其实还有全球合作嘛，开源社区比较流行，只要有互联网，再自己用点心，学习上倒不缺资料，因此，IT业要想突破一点新发现，新发明，其概率比其他行业要高。

没错，现在做IT业主要到大城市，不过，一个行业的产业布局，总的来说会越来越趋于合理，也许有一天，我们在大城市攒够了经验和资金，回到家乡开设自己的企业，其实也很不错，大家说是吧。所以，我评价IT业，就是风险与机遇并存，看个人自己把握。

因此，如果说上面这位朋友，目的是为了求稳，求安逸要进入IT业呢，我的建议是要慎重，IT业什么都不缺，就是缺乏稳定和安逸。大家说是吧？不过呢，如果说上面这位朋友的目的是希望转型为技术人员，求个一技之长，以不变应万变，最终通过自身的技术实力来保障家庭收入和生活呢，我觉得这是好事，IT业正好适合你。

原因很简单，我仔细分析了一下，发现我自己恰好就是走的这条路线。这其实已经在讨论一个更高阶的话题了，就是什么样的稳定叫做稳定？在一个单位一呆几十年，按部就班，不用学习，工作也不会丢，这算一种稳定。不过我不喜欢。

拥有强悍的技术，不强求在一个单位呆几十年（当然能呆得住更好），但是，无论到哪个单位应聘工作，都很容易，而且薪资收入还不低，这我认为也是一种稳定。

我觉得，真正的“铁饭碗”，不是“这辈子在一个地方吃一辈子饭，而是这辈子走到哪里都有饭吃”！

嗯，从这个角度讲，我还是鼓励这位朋友走出这一步的。但是怎么走，可就讲究了。职业人士，尤其是有了家庭、孩子，我的建议是一定要慎重，轻易不动，动就要做好充足的准备工作，力争一次成功，因为生活给你们犯错误的机会已经不多了。不说多了，有个三五年家庭收入不稳定，孩子的教育肯定受影响，这可是影响他一辈子的事情，所以，尽量别犯错。

我想我说到重点了，进入IT业，需要准备哪些？钱我认为是必须的，IT行业和其他行业差不多，刚入行的新人，收入不会很高，非得是你在公司里面做出事情来了，有了成绩，薪资才会慢慢调高，真要到这一步，一般也需要三五年的时间。所以，给自己储备一点资金是必须的。还有时间，IT业竞争压力大，工作时间长，加班是家常便饭，出差也很多，要有心理准备，也要请家人有心理准备，不说这事合理，但是这事行业特征，加入这一行，就要有这个觉悟。但是最重要的，我觉得还是要进行技术储备。

IT业里面也细分啊，高高低低都有，像北京中关村，二十几年了，我看那帮小摊贩还那样，卖计算机和卖鱼没两样，他们区别货的好坏仅仅根据上家给他的进价，其他什么都不懂，这种人在IT业不少，也能赚得到钱，不过，大家想不想做？我想大多数有追求的朋友，还是希望以技术身份切入IT行业，哪怕以后做IT老板，也还是一个技术型老板嘛。

所以，进入IT业要进行技术储备。怎么储备？上培训班，买书自己看都可以，这对学校里面的学生，我一般建议他们这样。但是职业人士，我觉得这不够

职业人士我的理解，对未来职位是有期待的，希望能走得高，走得远，而这两个目标，靠仅仅几个月的培训班是不够的，如果以前大学里面学的不是计算机相关专业的话，我建议这些朋友最好去正儿八经上个学，无论如何，系统地学习个几年，比起培训班的短平快是好很多的。这中间主要需要储备的就是数学知识，我现在越来越发现IT业需要数学，无论是开发、技术还是销售。另外就是英语，无论如何，英语好在IT行业是占很多便宜的。所以，不止这位朋友，我最近接到的很多咨询转型信件，我的建议是，去考一个自考，甚至上个研究生。

其实这里面也有另外一个意思，这是一个测试，职业转型在人的一辈子生涯中是一件大事，必须要有很强的恒心和毅力才能做到，这中间要吃很多苦，我的本意是，如果一个朋友连自考都坚持不下来，那么还是算了，因为他很难坚持到转型成功。这不算什么错事，因为毕竟这个社会大多数人都是坚持一条人生轨迹走下去的，转型毕竟是少数人的事情，只能说不太适合罢了。

其实不仅仅是IT行业，即使想转其他行业，大家说要不要先学习？勿以浮沙筑高台，这话是我在侯捷老师的书里面看到的，觉得说得很贴切，因此，这里顺便就带出来了，其实核心思想就是，职业人士的转型，其实比学生更困难，因为顾虑多，风险高，万事以慎重为主。

当然，只要大家有恒心和毅力，坚持打好基础，做好准备，谨慎地走好每一步，那我想不仅仅是IT行业，其实他想做任何事都是可以的。
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Mon, 10 Sep 2012 22:42:00 +0800</pubDate><guid>tag:typecodes.com,2012-09-10:mix/transittoitindustry.html</guid><category>it</category></item><item><title>动易官方论坛的邀请码</title><link>https://typecodes.com/mix/sfinvitationcode.html</link><description>&lt;p&gt;动易CMS一直坚守着它的“封闭王国”，连个官方论坛都不对广大群众完全开放。所以当很多动易新手在遇到麻烦的时候，他们无法在论坛发帖求助。虽然说动易官方论坛一直都很冷，基本上发帖求助也没几个人回复。但是也不否定有一些好心人会伸手帮你一把，所以我想发布一些动易论坛的邀请码。这些邀请码都是我用自己的动易论坛账号购买的（用的是动易论坛里面的金币，还好动易没强制让我们用米米……），希望对大家有所帮助。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;667f5fd0-e4de-46d8-bfa4-939a8da8b07a
147c5fd0-29fb-4d2c-8a93-d6e5c547b9c1
0bd87aba-4075-457a-87b9-3d012cbf21cf
d88a7d68-78d7-468f-8d66-7e108c0b7f86
1ac0c1e4-ab0a-4b4d-8703-fc063c2cdfd3
&lt;/pre&gt;&lt;/div&gt;




&lt;h6&gt;温馨提示：当你发现上面的动易论坛邀请码失效的时候（说明已经被其他人使用了），可以留言通知BZ。&lt;/h6&gt;
&lt;h6&gt;Update 2012.09.26&lt;/h6&gt;
&lt;p&gt;亲，博客将会有很长一段时间不再更新了。最后一次为大家做点贡献……&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;9866a835-1b99-4da8-9009-e29b00056e27
7301359c-36a1-43b8-955a-33682be4c827
867ff230-1742-4cfc-a469-5be89289012d
3868b993-e510-4b1c-9a5e-5df7385e763a
bcccc4c3-6ccf-43b4-857d-d00a59dee35a
e233ca71-a8d8-4174-9a8b-d3d3065ed9c8
0a062e08-a94e-466b-be80-37798d44d604
91fcae04-fd43-42b0-bdab-f4f435761f84
5ed84843-8e89-4d09-ac35-cce59f7a6deb
54fde589-4197-4791-ad96-b364d8468a00
3aa96d6a-1e1e-4ced-b923-6bc81a11b9db
b5c09cac-898d-4d5a-98c8-7e99cd43199d
&lt;/pre&gt;&lt;/div&gt;


&lt;h6&gt;Update 2012.10.11&lt;/h6&gt;
&lt;p&gt;亲，上述邀请码已用完，需要的请主动联系我。&lt;/p&gt;
&lt;h6&gt;Update 2012.10.31&lt;/h6&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;留言的人太多，只能再放出一批邀请码。。。
8d026552-efb8-414d-bdae-383153e42fde
b76979b8-f21b-4756-8064-a9d483966b84
babf41ec-52d8-427b-9a75-8f9850cff7d7
f1021f0d-ec78-4131-955c-ada349ed304e
55ba9d91-8f3f-45ba-891a-bd4ab2acbbbe
4ed4e987-d0b1-4c73-87ac-371fee1633aa
c14aede8-f0b8-45d2-aadc-4b2cf7aef1e9
7ce593a2-c2fa-4937-8a0c-989d92d84114
426e5f0f-9f9f-4767-9289-29625e2890ba
&lt;/pre&gt;&lt;/div&gt;


&lt;h6&gt;Update 2012.11.12&lt;/h6&gt;
&lt;p&gt;鉴于大家的急切需求，放出最后一批邀请码。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;2b79cfc0-6960-41b1-8f39-c87996604e9e
29b91e72-4b5f-4a4a-8507-6d05e01de727
8d026552-efb8-414d-bdae-383153e42fde
b76979b8-f21b-4756-8064-a9d483966b84
4ed4e987-d0b1-4c73-87ac-371fee1633aa
c14aede8-f0b8-45d2-aadc-4b2cf7aef1e9
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Mon, 10 Sep 2012 21:00:00 +0800</pubDate><guid>tag:typecodes.com,2012-09-10:mix/sfinvitationcode.html</guid><category>动易邀请码</category></item><item><title>如何修改WordPress的后台登录界面</title><link>https://typecodes.com/web/amendwordpressloginpage.html</link><description>&lt;p&gt;和很多CMS一样，网站一经升级就会把你先前修改的一些图片或者样式什么的都替换为CMS自己的内容。Wordpress也一样，每次官方发布新版本升级后的后台管理都会被恢复为官方内容。所以很是麻烦，我们要做的就是想办法“一劳永逸”地解决这个问题。要修改的内容包括：替换登录Logo图片、替换Logo上的链接和提示文字。最终的效果如下图所示，&lt;/p&gt;
&lt;p&gt;&lt;img alt="修改wordpress后台登陆界面" src="https://o3cex9zsl.qnssl.com/2012/09/1.png" title="修改wordpress后台登陆界面" /&gt;&lt;/p&gt;


&lt;h5&gt;方法1：直接修改安装目录下的wp-login.php文件（这种方法比较直接，但是不推荐）&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="nt"&gt;is_multisite&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;login_header_url&lt;/span&gt;   &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;network_home_url&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;login_header_title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;current_site&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;site_name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nt"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;login_header_url&lt;/span&gt;   &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://wordpress.org/&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;login_header_title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Powered by WordPress&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;如果没有开启多站点功能的话，那么链接地址及其标题提示就是WordPress的内容；否则，就是网络站点的地址与站点名称。把else里面的内容修改即可。&lt;/p&gt;
&lt;h5&gt;方法2：修改自己的主题中的functions.php文件（一劳永逸的方法，推荐）&lt;/h5&gt;
&lt;h6&gt;1、修改Logo上的链接&lt;/h6&gt;
&lt;p&gt;在functions.php中添加代码：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nx"&gt;add_filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;login_headerurl&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;create_function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;return get_bloginfo( &amp;#39;siteurl&amp;#39; );&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h6&gt;2、修改Logo上的提示文字&lt;/h6&gt;
&lt;p&gt;在functions.php中添加如下代码：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nx"&gt;add_filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;login_headertitle&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;create_function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;return get_bloginfo( &amp;#39;description&amp;#39; );&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h6&gt;3、修改由CSS控制显示的链接图片&lt;/h6&gt;
&lt;p&gt;在functions.php中添加如下代码：&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="x"&gt;add_action(&amp;#39;login_head&amp;#39;, &amp;#39;my_custom_login_logo&amp;#39;);&lt;/span&gt;
&lt;span class="x"&gt;function my_custom_login_logo() {&lt;/span&gt;
&lt;span class="x"&gt;    echo &amp;#39;&amp;lt;style type=&amp;quot;text/css&amp;quot;&amp;gt;&lt;/span&gt;
&lt;span class="x"&gt;        h1 a { background-image:url(&amp;#39;.get_bloginfo(&amp;#39;template_directory&amp;#39;).&amp;#39;/images/wordpress-logo.png) !important; }&lt;/span&gt;
&lt;span class="x"&gt;    &amp;lt;/style&amp;gt;&amp;#39;;&lt;/span&gt;
&lt;span class="x"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;然后在你的主题文件夹下的images文件夹中放置自己的LOGO 图片wordpress-logo.png。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Fri, 07 Sep 2012 20:31:00 +0800</pubDate><guid>tag:typecodes.com,2012-09-07:web/amendwordpressloginpage.html</guid><category>wordpress</category></item><item><title>you can be just the one you want to be</title><link>https://typecodes.com/mix/beyouwanttobe.html</link><description>&lt;div class="highlight"&gt;&lt;pre&gt;Have any of you seen the film &amp;quot;Rudy&amp;quot;?
I first saw it when I was 15 or 16. The story gave me the biggest jolt of inspiration of any film I have ever seen.

If Rudy could accomplish that without being blessed with the physical talent to play...
football at that level, then what could I accomplish if I worked as hard as he did? After watching that movie, I decided that I would always work as if I&amp;#39;m the last man on the team that had everything to prove. From that point to this day I have been doing exactly that.

I met the real Rudy by chance last season on the court prior to a road game vs Sacramento. His daughter just so happen to be singing the national anthem that night. He had no clue what an inspiration he has been for me over the years. It was great to finally meet him and share with him what a great influence his story has had on me.

This morning I received a copy of his book. It dives even deeper into his journey. I share this with you in hopes that it might ignite in you a similar passion as it did for me. It doesn&amp;#39;t matter if you play sports or not. Determination, belief, perseverance, passion etc.. Will elevate you to your goal no matter what the goal may be.

Mamba out.
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Tue, 04 Sep 2012 21:06:00 +0800</pubDate><guid>tag:typecodes.com,2012-09-04:mix/beyouwanttobe.html</guid><category>life</category></item><item><title>如何把自己的站内搜索改用强大的谷歌搜索</title><link>https://typecodes.com/web/googlecustomsearch.html</link><description>&lt;p&gt;一个优秀的网站必须有一个强大搜索引擎，这是毋庸置疑的。你可以想象一下，如果京东商城没有了搜索，新浪门户没有了搜索，虎扑篮球网没有了搜素……那将是让人奔溃的事情。这些大型网站都有这海量的数据库内容，一旦失去了搜索功能，那么用户要想找到自己想要的资源，简直是大海捞针。而一般网站自带的搜索功能，因为没有比较优秀的存储检索机制，当数据库内容越大，搜索用户越多，造成大量的数据库运算而占用服务器资源。&lt;/p&gt;
&lt;p&gt;使用谷歌自定义搜索可以有以下优势：首先是提高了站点的搜索速度；其次是减少服务器的压力，节省资源；另外，谷歌精准、快速和灵活且全面的搜索特性，完全满足我们网站的需求。接下来就为大家演示具体的步骤：（温馨提示：整个过程都需要谷歌Gmail账号）&lt;/p&gt;


&lt;h5&gt;1.申请&lt;a href="http://www.google.com/cse/"&gt;Google自定义搜索&lt;/a&gt;&lt;/h5&gt;
&lt;p&gt;&lt;img alt="申请Google自定义搜索" src="https://o3cex9zsl.qnssl.com/2012/08/11.jpg" title="申请Google自定义搜索" /&gt;&lt;/p&gt;
&lt;h5&gt;2.填写Google自定义搜索相关信息，方便以后管理&lt;/h5&gt;
&lt;p&gt;&lt;img alt="填写Google自定义搜索相关信息" src="https://o3cex9zsl.qnssl.com/2012/08/27.png" title="填写Google自定义搜索相关信息" /&gt;&lt;/p&gt;
&lt;h5&gt;3.选择Google自定义搜索的样式（不满意的话，后面还可以修改）&lt;/h5&gt;
&lt;p&gt;&lt;img alt="选择Google自定义搜索的样式" src="https://o3cex9zsl.qnssl.com/2012/08/37.png" title="选择Google自定义搜索的样式" /&gt;&lt;/p&gt;
&lt;h5&gt;4.点击“control panel”对Google自定义搜索进行配置和管理&lt;/h5&gt;
&lt;p&gt;&lt;img alt="对Google自定义搜索进行配置和管理" src="https://o3cex9zsl.qnssl.com/2012/08/46.png" title="对Google自定义搜索进行配置和管理" /&gt;&lt;/p&gt;
&lt;h5&gt;5.点击“look and feel”选择“results only”(即使用网站自带的搜索框架，只调用谷歌的搜索结果)，最后点击“Save&amp;amp;GetCode”&lt;/h5&gt;
&lt;p&gt;&lt;img alt="选择“results only”" src="https://o3cex9zsl.qnssl.com/2012/08/55.png" title="选择“results only”" /&gt;&lt;/p&gt;
&lt;h5&gt;6.选择“Switch to Search Element V1 code”，其余选项保持默认即可&lt;/h5&gt;
&lt;p&gt;&lt;img alt="选择“Switch to Search Element V1 code”" src="https://o3cex9zsl.qnssl.com/2012/08/64.png" title="选择“Switch to Search Element V1 code”" /&gt;&lt;/p&gt;
&lt;h5&gt;7.把代码复制出来&lt;/h5&gt;
&lt;p&gt;&lt;img alt="复制代码" src="https://o3cex9zsl.qnssl.com/2012/08/74.png" title="复制代码" /&gt;&lt;/p&gt;
&lt;h5&gt;8.由于在第5步，我们选择只需要调用谷歌的搜索结果，所以根据自己网站的搜索结果页面来修改。&lt;/h5&gt;
&lt;p&gt;比如，我博客的搜索结果页面是search.php，那么我只需把第7步复制的代码覆盖原文件的输出结果的代码行即可。注意，谷歌自定义搜索的大小、宽度可以自适应网站的相应位置，无需做更多的调整。&lt;/p&gt;
&lt;h5&gt;9.与此同时，我们还可以申请Google AdSense添加网站广告并以此获得收入。&lt;/h5&gt;
&lt;p&gt;最后的测试结果，大家可以点击博客右上角的搜索框进行测试&lt;/p&gt;
&lt;p&gt;&lt;img alt="博客测试" src="https://o3cex9zsl.qnssl.com/2012/08/83.png" title="博客测试" /&gt;&lt;/p&gt;
&lt;p&gt;另外，大家还可以尝试应用谷歌搜索的另一种方式Google AJAX Search API，它的灵活性更强。由于马上要找工作了，我也就没做过多的研究了，期待大家更多的给力开发支持！&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Mon, 27 Aug 2012 17:44:00 +0800</pubDate><guid>tag:typecodes.com,2012-08-27:web/googlecustomsearch.html</guid><category>谷歌自定义搜索</category></item><item><title>网页自动刷新技术</title><link>https://typecodes.com/web/webpageautorefresh.html</link><description>&lt;p&gt;网站的自动刷新技术对一个网站来说还是很有用处的，省去了多余的点击操作步骤，却能到达我们想要到达的页面，这是多么惬意的事情啊。像本站的404页面，当访问者访问了某一无效页面，就会自动转到这个404错误页面。然后通过这个页面的自动刷新技术，在8秒后跳转到博客的首页。所以说，这种设计还是挺人性化的。下面我就列举三种制作自动刷新网页页面的方法：&lt;/p&gt;
&lt;h5&gt;1 PHP中的自动刷新&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt; 
    &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;$name&lt;/span&gt;&lt;span class="s2"&gt;.登录成功！&amp;quot;&lt;/span&gt;&lt;span class="nx"&gt;；&lt;/span&gt;
    &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;lt;meta http-equiv=&lt;/span&gt;&lt;span class="se"&gt;\&amp;quot;&lt;/span&gt;&lt;span class="s2"&gt;Refresh&lt;/span&gt;&lt;span class="se"&gt;\&amp;quot;&lt;/span&gt;&lt;span class="s2"&gt; content=&lt;/span&gt;&lt;span class="se"&gt;\&amp;quot;&lt;/span&gt;&lt;span class="s2"&gt;8;url=index.php &lt;/span&gt;&lt;span class="se"&gt;\&amp;quot;&lt;/span&gt;&lt;span class="s2"&gt;&amp;gt; 8秒后回到 TypeCodes&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;




&lt;h5&gt;2 HTML的自动刷新&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;http-equiv=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;refresh&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;8;url=index.php&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/meta&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;3 JavaScript手动点击刷新&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;javascript:location.reload()&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;target=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;_self&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;点击刷新&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Sun, 26 Aug 2012 15:02:00 +0800</pubDate><guid>tag:typecodes.com,2012-08-26:web/webpageautorefresh.html</guid><category>网页自动刷新</category></item><item><title>PHP中验证码的设计</title><link>https://typecodes.com/web/phpverificationcode.html</link><description>&lt;p&gt;验证码是网站的重要组成部分，不管是在注册、登录又或者是留言页面，都需要注册码来验证当前操作者的合法性。很多情况下，我们的一些数据库会被那些垃圾广告软件发送大量的垃圾信息，这个是我们不愿看到的。更有甚者，一些非法用户会通过不断提交信息企图得到数据库的内容，或者造成网站的堵塞。所以，网站的验证码还是非常有必要的。&lt;/p&gt;


&lt;p&gt;而随着验证码的使用，很多不法分子“跟进”了它们的技术，所以当前很多门户网站的验证码都做了相应的改进。于是出现了文字长度变长，汉字夹杂数字或者字母的情况.&lt;/p&gt;
&lt;p&gt;&lt;img alt="PHP中的验证码设计" src="https://o3cex9zsl.qnssl.com/2012/08/110.png" title="PHP中的验证码设计" /&gt;&lt;/p&gt;
&lt;h5&gt;1 一个简单的验证码实例&lt;/h5&gt;
&lt;h6&gt;1.1 显示验证码的图片&lt;/h6&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6
7&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt; 
    &lt;span class="nv"&gt;$num&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;intval&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;mt_rand&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;9999&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;lt;img src=img/yzm/&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;substr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;strval&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$num&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;.gif/&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h6&gt;1.2 验证过程&lt;/h6&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="x"&gt;if (strval($inputyzm)!=strval($num))&lt;/span&gt;
&lt;span class="x"&gt;{&lt;/span&gt;
&lt;span class="x"&gt;    echo &amp;quot;&amp;lt;script&amp;gt;alert(&amp;#39;验证码错误！&amp;#39;);history.go(-1);&amp;lt;/script&amp;gt;&amp;quot;;&lt;/span&gt;
&lt;span class="x"&gt;    exit;&lt;/span&gt;
&lt;span class="x"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h5&gt;2 一个汉字的验证码实例&lt;/h5&gt;
&lt;h6&gt;2.1 显示验证码的图片&lt;/h6&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
    &lt;span class="nv"&gt;$str&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;汉&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;字&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;验&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;证&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;码&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;      &lt;span class="c1"&gt;//可以定义汉字的内容和个数&lt;/span&gt;
    &lt;span class="nv"&gt;$word&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;strlen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$str&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$num&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;rand&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$word&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nv"&gt;$img&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$img&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;lt;img src=&amp;#39;../images/yzm/&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;$num&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;.gif&amp;#39;/&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;$pic&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$pic&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;$str&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;$num&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h6&gt;2.2 将生成的随机字符串赋给一个隐藏域&lt;/h6&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;hidden&amp;quot;&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;yzm&amp;quot;&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt; &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$pic&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;?/&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h6&gt;2.3 定义一个check（）函数&lt;/h6&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="x"&gt;&amp;lt;script language=&amp;quot;javascript&amp;quot;&amp;gt;&lt;/span&gt;
&lt;span class="x"&gt;    function check(form){&lt;/span&gt;
&lt;span class="x"&gt;        if(form.yzm.value==&amp;quot;&amp;quot;){&lt;/span&gt;
&lt;span class="x"&gt;        alert(&amp;quot;请输入验证码&amp;quot;);&lt;/span&gt;
&lt;span class="x"&gt;        form.yzm.focus();&lt;/span&gt;
&lt;span class="x"&gt;        return false;&lt;/span&gt;
&lt;span class="x"&gt;    }&lt;/span&gt;
&lt;span class="x"&gt;    if(form.yzm.vale!=form.yz.value){&lt;/span&gt;
&lt;span class="x"&gt;        alert(&amp;quot;验证码错误&amp;quot;);&lt;/span&gt;
&lt;span class="x"&gt;        form.yzm.focus();&lt;/span&gt;
&lt;span class="x"&gt;        return false;&lt;/span&gt;
&lt;span class="x"&gt;    }&lt;/span&gt;
&lt;span class="x"&gt;}&lt;/span&gt;
&lt;span class="x"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Sun, 26 Aug 2012 14:56:00 +0800</pubDate><guid>tag:typecodes.com,2012-08-26:web/phpverificationcode.html</guid><category>php验证码</category></item><item><title>几个js的弹窗应用实例</title><link>https://typecodes.com/web/jspopup.html</link><description>&lt;p&gt;弹窗可以说是当前很多网站的惯用手法了，几乎成了广告泛滥的重灾区。那么，我们也可以制作自己的弹窗。当然，我们是用在“正道”上面，比如说给网站首页添加一个节日的弹窗效果，增加节日气氛；又如，发布一些网站公告，让读者对网站的近段重要活动有所了解。而且，弹窗并不只是这些作用，它还可以让我们的一些操作变的更为人性化。如何制作自己的弹窗呢？我这里用的是javascript来作为演示。&lt;/p&gt;
&lt;p&gt;&lt;img alt="bing搜索" src="https://o3cex9zsl.qnssl.com/2012/08/19.png" title="bing搜索" /&gt;&lt;/p&gt;


&lt;h5&gt;1、点击弹出“确认”对话框&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;#&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;onclik=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{if(confirm(&amp;#39;确认删除吗？&amp;#39;)){return true;}return false;}&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;点击删除&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;2、搜索表单验证弹出“警告”对话框&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&amp;lt;form name=&amp;quot;serchtitle&amp;quot; onsubmit=&amp;quot;if(serchtitle.ttt.value.length&amp;lt;1){alert(&amp;#39;搜索关键字不能为空！&amp;#39;);return false;} else {return true}&amp;quot;&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;3、搜索框中常用的形式一&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&amp;lt;input type=&amp;quot;text&amp;quot; onfocusin=&amp;#39;vbscript:serachtitle.ttt.value=&amp;quot;&amp;quot;&amp;#39; value=&amp;quot;请输入关键字&amp;quot; name=&amp;quot;ttt&amp;quot;&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;4、搜索框中常用的形式二&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&amp;lt;input type=&amp;quot;text&amp;quot; value=&amp;quot;站内搜索&amp;quot; name=&amp;quot;s&amp;quot; class=&amp;quot;s&amp;quot; onfocus=&amp;quot;if (this.value == &amp;#39;站内搜索&amp;#39;) {this.value = &amp;#39;&amp;#39;;}&amp;quot; onblur=&amp;quot;if (this.value == &amp;#39;&amp;#39;) {this.value = &amp;#39;站内搜索&amp;#39;;}&amp;quot;/&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;5、弹窗打开一个名为opennew.php的文件&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;scritpt&lt;/span&gt; &lt;span class="na"&gt;language=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;javascript&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;function open(){window.open(&amp;quot;opennew.php&amp;quot;,&amp;quot;width=200, height=100, left=50, top=200, menubar=no ,toolbar=no, location=no, scrollbar=no&amp;quot;);}&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Sun, 26 Aug 2012 14:51:00 +0800</pubDate><guid>tag:typecodes.com,2012-08-26:web/jspopup.html</guid><category>js弹窗</category></item><item><title>SQL Server2008和Visual Studio2008的安装教程</title><link>https://typecodes.com/csharp/installmssql2008vs2008.html</link><description>&lt;p&gt;SQL Server08和Visual Studio08是我们常用的数据库和编程的开发工具，那么如何快速有效、简洁不重复地安装这两个工具还是有一定的诀窍的。“快速有效简单说”就是安装成功，“简单不重复”是指避免在安装SQL Server2008的时候（因为它还会自动安装Visual Studio08的部分功能；而在安装Visual Studio08的时候它也会自动安装SQL Server2005的部分功能）。&lt;/p&gt;
&lt;p&gt;下面我主要通过截图的方式来演示它们的安装过程。再一次要强调的是SQL Server08和Visual Studio08的安装顺序：&lt;code&gt;IIS、Phpnow、Sql Server、Visual Studio&lt;/code&gt;。这个顺序最好不要改，不然会出现很多麻烦的。我以前就有过先装Visual Studio再装SQL Server的经历。那时用360强力卸载Visual Studio，总是卸载不干净，结果重装了N次系统。&lt;/p&gt;


&lt;h5&gt;（一）SQL Server2008的安装&lt;/h5&gt;
&lt;h6&gt;1.1 打开SQL Server2008安装程序&lt;/h6&gt;
&lt;p&gt;&lt;img alt="打开SQL Server2008安装程序" src="https://o3cex9zsl.qnssl.com/2012/08/18.png" title="打开SQL Server2008安装程序" /&gt;&lt;/p&gt;
&lt;h6&gt;1.2 要求没有“失败”提示，360、金山等卫士防火墙最好在安装的时候关闭&lt;/h6&gt;
&lt;p&gt;&lt;img alt="要求没有“失败”提示" src="https://o3cex9zsl.qnssl.com/2012/08/26.png" title="要求没有“失败”提示" /&gt;&lt;/p&gt;
&lt;h6&gt;1.3 第一次安装的时候尽量选择“全选”功能吧&lt;/h6&gt;
&lt;p&gt;&lt;img alt="选择“全选”功能" src="https://o3cex9zsl.qnssl.com/2012/08/36.png" title="选择“全选”功能" /&gt;&lt;/p&gt;
&lt;h6&gt;1.4 在“实例配置”选项中&lt;/h6&gt;
&lt;p&gt;如果是第一次安装就选择“默认实例”；如果已经存在实例了，那么就选择“命名实例”。&lt;/p&gt;
&lt;p&gt;&lt;img alt="选择“默认实例”" src="https://o3cex9zsl.qnssl.com/2012/08/45.png" title="选择“默认实例”" /&gt;&lt;/p&gt;
&lt;h6&gt;1.5 服务器账号选择“对所有SQL Server服务使用相同的账户(U)”&lt;/h6&gt;
&lt;p&gt;&lt;img alt="对所有SQL Server服务使用相同的账户(U)" src="https://o3cex9zsl.qnssl.com/2012/08/54.png" title="对所有SQL Server服务使用相同的账户(U)" /&gt;&lt;/p&gt;
&lt;h6&gt;1.6 注意修改“账户设置”、“FILESTREAM”&lt;/h6&gt;
&lt;p&gt;&lt;img alt="修改“账户设置”" src="https://o3cex9zsl.qnssl.com/2012/08/63.png" title="修改“账户设置”" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="修改“FILESTREAM”" src="https://o3cex9zsl.qnssl.com/2012/08/73.png" title="修改“FILESTREAM”" /&gt;&lt;/p&gt;
&lt;h6&gt;1.7 注意修改“账户设置”、“数据目录”可以保持默认&lt;/h6&gt;
&lt;p&gt;&lt;img alt="修改“账户设置”" src="https://o3cex9zsl.qnssl.com/2012/08/82.png" title="修改“账户设置”" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="修改“数据目录”" src="https://o3cex9zsl.qnssl.com/2012/08/91.png" title="修改“数据目录”" /&gt;&lt;/p&gt;
&lt;h6&gt;1.8 “Reporting Services配置”和“错误和使用情况报告”保持默认就行&lt;/h6&gt;
&lt;h6&gt;1.9 完成上述操作后，可以看到没有“失败”提示。否则后续安装也会出错&lt;/h6&gt;
&lt;p&gt;&lt;img alt="没有“失败”提示" src="https://o3cex9zsl.qnssl.com/2012/08/101.png" title="没有“失败”提示" /&gt;&lt;/p&gt;
&lt;h6&gt;1.10 安装成功&lt;/h6&gt;
&lt;p&gt;&lt;img alt="没有“失败”提示" src="https://o3cex9zsl.qnssl.com/2012/08/111.png" title="没有“失败”提示" /&gt;&lt;/p&gt;
&lt;h5&gt;（二）Visual Studio2008的安装&lt;/h5&gt;
&lt;p&gt;在安装了SQL Server08后，要是直接安装SQL Server08的话，只能选择C盘默认目录。那是因为在安装SQL Server08的同时，还自动安装了Vs2008的部分功能，导致冲突。根据那个“帮助”提示，我们把先前安装的Vs2008的三个程序卸载。而Visual Studio2008的安装相对比较容易，不用像SQL Server08那样需要一些手动设置。&lt;font color="#ff0000"&gt;需要注意的是，我们要选择“自定义安装”选项来安装Vs2008&lt;/font&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img alt="选择“自定义安装”" src="https://o3cex9zsl.qnssl.com/2012/08/121.png" title="选择“自定义安装”" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="安装成功" src="https://o3cex9zsl.qnssl.com/2012/08/131.png" title="安装成功" /&gt;&lt;/p&gt;
&lt;h5&gt;（三）其它&lt;/h5&gt;
&lt;h6&gt;3.1 SQL Server2008的密钥&lt;/h6&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;数据中心版：PTTFM-X467G-P7RH2-3Q6CG-4DMYB（最高级版本，推荐！）
开 发者 版：MC46H-JQR3C-2JRHY-XYRKY-QWPVM
企  业  版：R88PF-GMCFT-KM2KR-4R7GB-43K4B
标  准  版：B68Q6-KK2R7-89WGB-6Q9KR-QHFDW
&lt;/pre&gt;&lt;/div&gt;


&lt;h6&gt;3.2 Visual Studio2008的破解&lt;/h6&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="err"&gt;到微软官方下载&lt;/span&gt;&lt;span class="n"&gt;Visual&lt;/span&gt; &lt;span class="n"&gt;Studio2008&lt;/span&gt;&lt;span class="err"&gt;，然后用记事本或者&lt;/span&gt;&lt;span class="n"&gt;dw&lt;/span&gt;&lt;span class="err"&gt;、&lt;/span&gt;&lt;span class="n"&gt;notepad&lt;/span&gt;&lt;span class="err"&gt;等打开&lt;/span&gt;&lt;span class="n"&gt;Setup&lt;/span&gt;&lt;span class="err"&gt;文件夹里面的&lt;/span&gt;&lt;span class="n"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sdb&lt;/span&gt;&lt;span class="err"&gt;，查找&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Product&lt;/span&gt; &lt;span class="n"&gt;Key&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="n"&gt;T2CRQGDKBVW7KJR8C6CKXMW3D&lt;/span&gt;
&lt;span class="err"&gt;把它改成&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Product&lt;/span&gt; &lt;span class="n"&gt;Key&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="n"&gt;PYHYPWXB3BB2CCMV9DX9VDY8T&lt;/span&gt;    &lt;span class="err"&gt;即可。&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Sun, 26 Aug 2012 12:55:00 +0800</pubDate><guid>tag:typecodes.com,2012-08-26:csharp/installmssql2008vs2008.html</guid><category>sql server2008安装</category><category>visual studio2008安装</category></item><item><title>动易SiteFactory系列教程六:数据源标签的讲解</title><link>https://typecodes.com/web/sfdatasourcetag.html</link><description>&lt;p&gt;本篇文章主要为大家讲解动易SiteFactory中的数据源标签，同时也算是动易SiteFactory系列教程的结束篇章了。因为任何一种CMS，只要你弄清它的标签了，你就算是一个二次开发者的入门者了。好了，不多说，我用“文章_内容页”标签作为例子来解说一下动易主要的两大类标签（普通标签和数据源标签）中的数据源标签。&lt;/p&gt;
&lt;p&gt;&lt;img alt="文章_内容页 标签" src="https://o3cex9zsl.qnssl.com/2012/08/25.png" title="文章_内容页 标签" /&gt;&lt;/p&gt;


&lt;h5&gt;（一）标签内容：&lt;/h5&gt;
&lt;p&gt;数据源标签从数据源里调用了数据后，然后把数据保存在生成的XML文件中，最后从中读取相应的节点数据。下面先贴出相应的标签&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;&amp;lt;xsl:transform&lt;/span&gt; &lt;span class="na"&gt;version=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;1.0&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;xmlns:xsl=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://www.w3.org/1999/XSL/Transform&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;xmlns:pe=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;labelproc&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;exclude-result-prefixes=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;pe&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
 &lt;span class="k"&gt;&amp;lt;xsl:output&lt;/span&gt; &lt;span class="na"&gt;method=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;xml&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
 &lt;span class="k"&gt;&amp;lt;xsl:param&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;itemId&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
 &lt;span class="k"&gt;&amp;lt;xsl:template&lt;/span&gt; &lt;span class="na"&gt;match=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;root&amp;gt;&lt;/span&gt;
&lt;span class="c"&gt;&amp;lt;!--FieldTipsStart--&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;generalid&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;xsl:value&lt;/span&gt; &lt;span class="err"&gt;-of&lt;/span&gt; &lt;span class="na"&gt;select=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/NewDataSet/Table/GeneralID&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;/generalid&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;nodeid&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;xsl:value&lt;/span&gt; &lt;span class="err"&gt;-of&lt;/span&gt; &lt;span class="na"&gt;select=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/NewDataSet/Table/NodeID&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;/nodeid&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;xsl:value&lt;/span&gt; &lt;span class="err"&gt;-of&lt;/span&gt; &lt;span class="na"&gt;select=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/NewDataSet/Table/Title&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
  &lt;span class="c"&gt;&amp;lt;!--&lt;/span&gt;
&lt;span class="c"&gt;   ……&lt;/span&gt;
&lt;span class="c"&gt;   &amp;lt;字段节点&amp;gt;&lt;/span&gt;
&lt;span class="c"&gt;     &amp;lt;xsl:value -of select=&amp;quot;/NewDataSet/Table/数据库表的字段&amp;quot;/&amp;gt;&lt;/span&gt;

&lt;span class="c"&gt;   ……&lt;/span&gt;
&lt;span class="c"&gt;   --&amp;gt;&lt;/span&gt;
    &lt;span class="c"&gt;&amp;lt;!--FieldTipsEnd--&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/root&amp;gt;&lt;/span&gt;
 &lt;span class="k"&gt;&amp;lt;/xsl:template&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;&amp;lt;/xsl:transform&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;（二）调用方法：&lt;/h5&gt;
&lt;h6&gt;2.1 调用“文章_内容页”数据源标签。&lt;/h6&gt;
&lt;p&gt;其中：DataSource表示该标签是数据源标签（Label表示为普通标签）；id是做为数据源的ID（可以自定义），第二步要调用数据源节点下的数据指向ID；itemid="520"表示文章的ID是传过来的；xslt表示是否解析，true表示解析，默认为false（直接调用数据库的数据，不经过数据源标签的解析）。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;{PE.DataSource datasource=&amp;quot;文章_内容页&amp;quot; id=&amp;quot;cone&amp;quot;  itemid=&amp;quot;520&amp;quot; xslt=&amp;quot;true&amp;quot; /}
&lt;/pre&gt;&lt;/div&gt;


&lt;h6&gt;2.2 调用相应字段节点的数据。&lt;/h6&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;{PE.Field id=&amp;quot;cone&amp;quot; fieldname=&amp;quot;Title&amp;quot; /}
&lt;span class="c"&gt;&amp;lt;!---&lt;/span&gt;
&lt;span class="c"&gt;id要指向第一步调用数据源标签的ID。fieldname表示的是数据源标签里面字段，这里写Title表示的是数据源标&lt;/span&gt;
&lt;span class="c"&gt;----&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;Title&amp;gt;&lt;/span&gt;
    &lt;span class="k"&gt;&amp;lt;xsl:value-of&lt;/span&gt; &lt;span class="na"&gt;select=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/NewDataSet/Table/Title&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/Title&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;你可以按照第二步的方法调用（一）中的数据存在的任意节点。&lt;/p&gt;
&lt;h5&gt;（三）结语：&lt;/h5&gt;
&lt;p&gt;通过这8篇系列教程文章，相信你对动易SiteFactory的标签有了一定的了解。制作一个标签的大体步骤都是一样的——选择标签类型的“数据设置”，然后根据需要决定要填写的自定义参数，再后用SQL语句调用数据库的内容，接着运用XSTL语言格式生成具体的内容，最后在模板文件中的相关位置调用标签即可。当然，要想更快速的学习动易SiteFactory标签的制作，可以直接对照标签库里面的标签进行学习。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Wed, 22 Aug 2012 22:05:00 +0800</pubDate><guid>tag:typecodes.com,2012-08-22:web/sfdatasourcetag.html</guid><category>动易cms</category><category>动易数据源标签</category></item><item><title>动易SiteFactory系列教程五:默认列表标签中的optionalCond参数介绍</title><link>https://typecodes.com/web/sfdefaultoptionalCond.html</link><description>&lt;p&gt;今天为大家讲解一下动易SiteFactory标签里面的一个不常用但是会很有用的参数——optionalCond。大家可以看到，在通用信息列表、内容信息列表、内容带图片的信息列表等标签里面，都带有一个optionalCond参数（可选扩展查询约束条件），这个参数要如何使用？下面举一个例子给大家参考一下。&lt;/p&gt;
&lt;p&gt;&lt;img alt="通用信息列表标签——optionalCond参数" src="https://o3cex9zsl.qnssl.com/2012/08/17.png" title="通用信息列表标签——optionalCond参数" /&gt;&lt;/p&gt;


&lt;p&gt;optionalCond参数解释为可选扩展查询约束条件，顾名思义是用来扩展查询语句约束条件的参数。通过添加and、or等约束条件来判断自定义字段的值，达到扩展查询语句的效果。&lt;/p&gt;
&lt;p&gt;比如要将不同类别的文章推荐到模板不同的区域上，而且各个区域都需要调用所有栏目的信息。而推荐级别和优先级别只能满足把文章推荐到1-2个区域上，并不能实现多个区域的文章推荐。如果在不调整节点，不添加专题的情况下，要怎样实现这个效果呢？我们可以在文章模型中添加了一个自定义数字字段，字段名为quyu，把最小值设置为1，小数位数为0，用这个数字字段来区分推荐到不同区域的文章。然后为各个区域的列表标签添加参数 optionalCond="and UT.quyu='X'" 控制数据筛选来实现效果（X为1、2、3...N的整数）。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;//例如：
{PE.Label id=&amp;quot;通用信息列表&amp;quot; bindStyle=&amp;quot;普通式&amp;quot; outputQty=&amp;quot;5&amp;quot; titleLength=&amp;quot;40&amp;quot; nodes=&amp;quot;64,73&amp;quot; bindModel=&amp;quot;1&amp;quot; listOrderType=&amp;quot;20&amp;quot; eliteLevel=&amp;quot;100&amp;quot; optionalCond=&amp;quot;and UT.quyu=&amp;#39;1&amp;#39;&amp;quot; /}

//再如：
{PE.Label id=&amp;quot;内容带图片的信息列表&amp;quot; bindStyle=&amp;quot;流行式&amp;quot; outputQty=&amp;quot;1&amp;quot; titleLength=&amp;quot;34&amp;quot; contentLength=&amp;quot;54&amp;quot; nodes=&amp;quot;258&amp;quot; listOrderType=&amp;quot;20&amp;quot; eliteLevel=&amp;quot;100&amp;quot; optionalCond=&amp;quot;and UT.quyu=&amp;#39;2&amp;#39;&amp;quot; /}
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;代码提示：&lt;/h5&gt;
&lt;p&gt;1、需要用表名来区别字段是属于哪个表的，这里的UT是PE_U_Article的别名。&lt;/p&gt;
&lt;p&gt;2、对于通用信息列表标签和通用带图片的信息列表标签，在添加这个optionalCond参数的时候，同时需要设置bindModel参数，绑定联结的模型id，文章模型的id为1，所以 bindModel="1"。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Wed, 22 Aug 2012 20:20:00 +0800</pubDate><guid>tag:typecodes.com,2012-08-22:web/sfdefaultoptionalCond.html</guid><category>动易cms</category><category>optionalcond参数</category></item><item><title>动易SiteFactory系列教程四:如何添加一个分页标签</title><link>https://typecodes.com/web/sfaddpagenavtag.html</link><description>&lt;p&gt;通过这篇文章，我们继续学习动易SiteFactory的标签制作。相信大家在文章列表模板页面或者是下载列表页面又或者是在图片列表页面都会涉及到分页的情况。那么动易SiteFactory又是如何通过标签进行分页的呢？下面我就为大家介绍一下分页标签的具体实现过程以及调用方法。&lt;/p&gt;


&lt;h5&gt;（一）这里我只列出图片和相应标签内容设置的代码，按要求制作如下图的一个分页标签。&lt;/h5&gt;
&lt;p&gt;&lt;img alt="分页标签显示效果" src="https://o3cex9zsl.qnssl.com/2012/08/16.png" title="分页标签显示效果" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="添加分页标签-1" src="https://o3cex9zsl.qnssl.com/2012/08/24.png" title="添加分页标签-1" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="添加分页标签-2" src="https://o3cex9zsl.qnssl.com/2012/08/35.png" title="添加分页标签-2" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="添加分页标签-3" src="https://o3cex9zsl.qnssl.com/2012/08/44.png" title="添加分页标签-3" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="添加分页标签-4" src="https://o3cex9zsl.qnssl.com/2012/08/53.png" title="添加分页标签-4" /&gt;&lt;/p&gt;
&lt;h5&gt;（二）标签内容设置&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?&amp;gt;&lt;/span&gt;
    &lt;span class="k"&gt;&amp;lt;xsl:transform&lt;/span&gt; &lt;span class="na"&gt;version=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;1.0&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;xmlns:xsl=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://www.w3.org/1999/XSL/Transform&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;xmlns:pe=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;labelproc&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;exclude-result-prefixes=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;pe&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="k"&gt;&amp;lt;xsl:output&lt;/span&gt; &lt;span class="na"&gt;method=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;xml&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="k"&gt;&amp;lt;xsl:template&lt;/span&gt; &lt;span class="na"&gt;match=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;newdataset&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;xsl:for&lt;/span&gt; &lt;span class="err"&gt;-each&lt;/span&gt; &lt;span class="na"&gt;select=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;NewDataSet/Table&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;table&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;regionid&amp;gt;&lt;/span&gt;
                        &lt;span class="nt"&gt;&amp;lt;xsl:value&lt;/span&gt; &lt;span class="err"&gt;-of&lt;/span&gt; &lt;span class="na"&gt;select=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;RegionID&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;/regionid&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;country&amp;gt;&lt;/span&gt;
                        &lt;span class="nt"&gt;&amp;lt;xsl:value&lt;/span&gt; &lt;span class="err"&gt;-of&lt;/span&gt; &lt;span class="na"&gt;select=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot; Country &amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;/country&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;province&amp;gt;&lt;/span&gt;
                        &lt;span class="nt"&gt;&amp;lt;xsl:value&lt;/span&gt; &lt;span class="err"&gt;-of&lt;/span&gt; &lt;span class="na"&gt;select=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot; Province &amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;/province&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;city&amp;gt;&lt;/span&gt;
                        &lt;span class="nt"&gt;&amp;lt;xsl:value&lt;/span&gt; &lt;span class="err"&gt;-of&lt;/span&gt; &lt;span class="na"&gt;select=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot; City &amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;/city&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;area&amp;gt;&lt;/span&gt;
                        &lt;span class="nt"&gt;&amp;lt;xsl:value&lt;/span&gt; &lt;span class="err"&gt;-of&lt;/span&gt; &lt;span class="na"&gt;select=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot; Area &amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;/area&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;postcode&amp;gt;&lt;/span&gt;
                        &lt;span class="nt"&gt;&amp;lt;xsl:value&lt;/span&gt; &lt;span class="err"&gt;-of&lt;/span&gt; &lt;span class="na"&gt;select=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot; PostCode &amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;/postcode&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;areacode&amp;gt;&lt;/span&gt;
                        &lt;span class="nt"&gt;&amp;lt;xsl:value&lt;/span&gt; &lt;span class="err"&gt;-of&lt;/span&gt; &lt;span class="na"&gt;select=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot; AreaCode &amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;/areacode&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;/table&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/xsl:for&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/newdataset&amp;gt;&lt;/span&gt;
    &lt;span class="k"&gt;&amp;lt;/xsl:template&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;&amp;lt;/xsl:transform&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;（三）代码解说&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;RegionID&amp;gt;&lt;/span&gt;
    &lt;span class="k"&gt;&amp;lt;xsl:value-of&lt;/span&gt; &lt;span class="na"&gt;select=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;RegionID&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/RegionID&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;（四）标签调用&lt;/h5&gt;
&lt;p&gt;在模板页相应位置插入下面的代码。其中，fieldname是取出我们前面分页标签里面设置的节点内容；两个id=”fenye“需要一致；datasource是我们添加的标签名,id作为数据源的ID（可以自定义，它是这个标签的标识，下面要调用数据源节点下的数据指向ID；最后一行是引用不同的分页样式，由id指定，datasource填写开始定义的标签id值。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;{PE.DataSource datasource=&amp;quot;地区列表_分页3&amp;quot; id=&amp;quot;fenye&amp;quot; nodeid=&amp;quot;1&amp;quot; page=&amp;quot;true&amp;quot; pagesize=&amp;quot;10&amp;quot; urlpage=&amp;quot;true&amp;quot; span=&amp;quot;div&amp;quot; class=&amp;quot;&amp;quot; /}
 &lt;span class="nt"&gt;&amp;lt;table&amp;gt;&lt;/span&gt;
   {PE.Repeat id=&amp;quot;fenye&amp;quot; loop=&amp;quot;10&amp;quot;}
     &lt;span class="nt"&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;td&amp;gt;&lt;/span&gt;{PE.field fieldname=&amp;quot;ID&amp;quot;/}&lt;span class="nt"&gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;&lt;/span&gt;{PE.field fieldname=&amp;quot;Country&amp;quot;/}&lt;span class="nt"&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;td&amp;gt;&lt;/span&gt;{PE.field fieldname=&amp;quot;Province&amp;quot;/}&lt;span class="nt"&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;td&amp;gt;&lt;/span&gt;{PE.field fieldname=&amp;quot;City&amp;quot;/}&lt;span class="nt"&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
     &lt;span class="nt"&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
   {/PE.Repeat}
&lt;span class="nt"&gt;&amp;lt;/table&amp;gt;&lt;/span&gt;
{PE.Page id=&amp;quot;url_动易后台风格&amp;quot; datasource=&amp;quot;fenye&amp;quot; span=&amp;quot;&amp;quot;/}
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Wed, 22 Aug 2012 01:10:00 +0800</pubDate><guid>tag:typecodes.com,2012-08-22:web/sfaddpagenavtag.html</guid><category>动易cms</category><category>动易分页标签</category></item><item><title>动易SiteFactory系列教程三:最新头条新闻标签制作</title><link>https://typecodes.com/web/sfnewstag.html</link><description>&lt;p&gt;在上一篇最新头条新闻带图片标签制作的教程中，我们熟悉了动易标签制作的大体流程。那么，这篇通过文章，我们继续学习动易SiteFactory的标签制作。本篇教程的主题是以大家访问一些网站的时候经常见到的头条新闻列表来演示动易SiteFactory如何制作出这种风格的标签。&lt;/p&gt;


&lt;h5&gt;（一）这里我只列出图片和相应标签内容设置的代码，按要求制作如下图的一个最新头条新闻标签。&lt;/h5&gt;
&lt;p&gt;&lt;img alt="最新头条新闻标签制作-1" src="https://o3cex9zsl.qnssl.com/2012/08/15.png" title="最新头条新闻标签制作-1" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="最新头条新闻标签制作-2" src="https://o3cex9zsl.qnssl.com/2012/08/23.png" title="最新头条新闻标签制作-2" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="最新头条新闻标签制作-3" src="https://o3cex9zsl.qnssl.com/2012/08/34.png" title="最新头条新闻标签制作-3" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="最新头条新闻标签制作-4" src="https://o3cex9zsl.qnssl.com/2012/08/43.png" title="最新头条新闻标签制作-4" /&gt;&lt;/p&gt;
&lt;h5&gt;（二）标签内容设置&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;&amp;lt;xsl:stylesheet&lt;/span&gt; &lt;span class="na"&gt;version=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;1.0&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;xmlns:xsl=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://www.w3.org/1999/XSL/Transform&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;xmlns:pe=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;labelproc&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;exclude-result-prefixes=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;pe&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;&amp;lt;xsl:param&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;NodeID&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;&amp;lt;xsl:param&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;OutPutQty&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;&amp;lt;xsl:param&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;titlelenght&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;&amp;lt;xsl:output&lt;/span&gt; &lt;span class="na"&gt;method=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;html&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;&amp;lt;xsl:template&lt;/span&gt; &lt;span class="na"&gt;match=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/NewDataSet/Table&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;
      &lt;span class="k"&gt;&amp;lt;xsl:choose&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
         &lt;span class="k"&gt;&amp;lt;xsl:when&lt;/span&gt; &lt;span class="na"&gt;test=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;position() =1&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;      &lt;span class="c"&gt;&amp;lt;!--判断是否第一条新闻--&amp;gt;&lt;/span&gt;
           &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;listfirst&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;font-size: 16px;font-weight: bold;color:red;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;   &lt;span class="c"&gt;&amp;lt;!--是就加上相应的样式--&amp;gt;&lt;/span&gt;
               &lt;span class="nt"&gt;&amp;lt;a&amp;gt;&lt;/span&gt;
                 &lt;span class="k"&gt;&amp;lt;xsl:attribute&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;href&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;xsl:value&lt;/span&gt; &lt;span class="err"&gt;-of&lt;/span&gt; &lt;span class="na"&gt;select=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;pe:GetInfoPath(GeneralID)&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="c"&gt;&amp;lt;!--获取信息路径--&amp;gt;&lt;/span&gt;
                 &lt;span class="k"&gt;&amp;lt;/xsl:attribute&amp;gt;&lt;/span&gt;
                 &lt;span class="k"&gt;&amp;lt;xsl:attribute&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;title&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;xsl:value&lt;/span&gt; &lt;span class="err"&gt;-of&lt;/span&gt; &lt;span class="na"&gt;select=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Title&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
                 &lt;span class="k"&gt;&amp;lt;/xsl:attribute&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;xsl:value&lt;/span&gt; &lt;span class="err"&gt;-of&lt;/span&gt; &lt;span class="na"&gt;select=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;pe:CutText(Title,$titlelenght,&amp;#39;…&amp;#39;)&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="c"&gt;&amp;lt;!--由自定义的参数titlelenght截取数据表中Title字段--&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
      &lt;span class="k"&gt;&amp;lt;/xsl:when&amp;gt;&lt;/span&gt;
      &lt;span class="k"&gt;&amp;lt;xsl:otherwise&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;     &lt;span class="c"&gt;&amp;lt;!--如果不是第一条，正常输出--&amp;gt;&lt;/span&gt;
         &lt;span class="nt"&gt;&amp;lt;a&amp;gt;&lt;/span&gt;
                &lt;span class="k"&gt;&amp;lt;xsl:attribute&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;href&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                  &lt;span class="nt"&gt;&amp;lt;xsl:value&lt;/span&gt; &lt;span class="err"&gt;-of&lt;/span&gt; &lt;span class="na"&gt;select=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;pe:GetInfoPath(GeneralID)&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
                &lt;span class="k"&gt;&amp;lt;/xsl:attribute&amp;gt;&lt;/span&gt;
                &lt;span class="k"&gt;&amp;lt;xsl:attribute&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;title&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;xsl:value&lt;/span&gt; &lt;span class="err"&gt;-of&lt;/span&gt; &lt;span class="na"&gt;select=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Title&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
                &lt;span class="k"&gt;&amp;lt;/xsl:attribute&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;xsl:value&lt;/span&gt; &lt;span class="err"&gt;-of&lt;/span&gt; &lt;span class="na"&gt;select=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;pe:CutText(Title,$titlelenght,&amp;#39;…&amp;#39;)&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;  &lt;span class="c"&gt;&amp;lt;!--由自定义的参数titlelenght截取数据表中Title字段--&amp;gt;&lt;/span&gt;
         &lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
       &lt;span class="k"&gt;&amp;lt;/xsl:otherwise&amp;gt;&lt;/span&gt;
   &lt;span class="k"&gt;&amp;lt;/xsl:choose&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;&amp;lt;/xsl:template&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;&amp;lt;/xsl:stylesheet&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Tue, 21 Aug 2012 23:48:00 +0800</pubDate><guid>tag:typecodes.com,2012-08-21:web/sfnewstag.html</guid><category>动易cms</category><category>最新头条新闻标签</category></item><item><title>动易SiteFactory系列教程二:动易常用的标签</title><link>https://typecodes.com/web/sfcommontag.html</link><description>&lt;p&gt;1.显示某个栏目的标题及链接：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;{PE.Label id=&amp;quot;取得节点链接路径&amp;quot; nodeid=&amp;quot;1&amp;quot;/}&amp;#39;&lt;/span&gt; &lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;{PE.Label id=&amp;quot;取得节点名称&amp;quot; nodeid=&amp;quot;1&amp;quot;/}&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
显示“文章中心”及链接。也可以用nodes=&amp;quot;@RequestInt_Id&amp;quot;自动取值。
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;2.显示图片带标题（左边图片，右边文章标题）：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;{PE.Label id=&amp;quot;通用带图片的信息列表&amp;quot; outputQty=&amp;quot;1&amp;quot; titleLength=&amp;quot;30&amp;quot; contentLength=&amp;quot;80&amp;quot; models=&amp;quot;1&amp;quot; titleClass=&amp;quot;tv_u_thumb_title&amp;quot; imageClass=&amp;quot;tv_u_thumb&amp;quot; imageWidth=&amp;quot;160&amp;quot; imageHeight=&amp;quot;120&amp;quot; picExist=&amp;quot;true&amp;quot;/}
&lt;/pre&gt;&lt;/div&gt;




&lt;p&gt;3.显示文章中心下面的8个文章标题列表，前面带有时间，然后是显示[图文]或者[推荐]等图标，标题后面带有红色“hot”的图标。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;{PE.Label id=&amp;quot;通用信息列表&amp;quot; bindStyle=&amp;quot;普通式&amp;quot; outputQty=&amp;quot;8&amp;quot; nodes=&amp;quot;1&amp;quot; titleLength=&amp;quot;46&amp;quot; displayDateTime=&amp;quot;mm-dd&amp;quot;  displayHotSign=&amp;quot;img&amp;quot;  displayTitlePrefix = &amp;quot;true&amp;quot; /}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;4.XML语句：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;&amp;lt;xsl:when&lt;/span&gt; &lt;span class="na"&gt;test=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;TitleFontColor != &amp;#39;&amp;#39; or TitleFontType != &amp;#39;字形&amp;#39;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="c"&gt;&amp;lt;!---其中TitleFontcolor和TitleFontType是在后台设置的，它不是变量。但是---&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;&amp;lt;xsl:if&lt;/span&gt; &lt;span class="na"&gt;test=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;$displayTips = &amp;#39;true&amp;#39;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="c"&gt;&amp;lt;!---里面的$displayTips是需要在模板代码中修改的--&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;&amp;lt;/xsl:if&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;&amp;lt;/xsl:when&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;5.首页调用显示二级子栏目的标题及连接：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;{PE.Label id=&amp;quot;子栏目导航_首页左边&amp;quot; nodeId=&amp;quot;9&amp;quot; currentId=&amp;quot;0&amp;quot; class_on=&amp;quot;-2&amp;quot; /}
&amp;lt;!---
将显示招聘信息这个顶级栏目下面的所有子栏目：国内招聘、国外招聘、不限招聘等等。
样式通过自定义的标签子栏目导航_首页左边来修改。
---&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;6.显示某一栏目下面的所有底层文章/下载列表，并且不显示“Hot”图标和“new”图标：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;{PE.Label id=&amp;quot;通用信息列表&amp;quot; bindStyle=&amp;quot;普通式_首页底部&amp;quot; outputQty=&amp;quot;8&amp;quot; nodes=&amp;quot;11&amp;quot; titleLength=&amp;quot;46&amp;quot; displayDateTime=&amp;quot;yyyy/mm/dd&amp;quot;  displayHotSign=&amp;quot;0&amp;quot; displayNewSign=&amp;quot;&amp;quot; /}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;7.首页显示最新文章(内容模型为文章类型的信息，图片类型不行)的图片+标题的滚动形式：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;{PE.Label id=&amp;quot;内容带图片的信息列表&amp;quot; bindStyle=&amp;quot;普通式_首页底部&amp;quot; usePage=&amp;quot;false&amp;quot; outputQty=&amp;quot;10&amp;quot; titleLength=&amp;quot;50&amp;quot; contentLength=&amp;quot;0&amp;quot; nodes=&amp;quot;1&amp;quot; imageWidth=&amp;quot;160&amp;quot; imageHeight=&amp;quot;107&amp;quot; /}
&amp;lt;!---
则显示栏目ID为1的公司新闻的列表。因为默认的bindModel默认为1，即文章类型，所以图片类型不显示
---&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;8.首页显示最新图片(内容模型为图片类型的信息，文章类型不行)的图片+标题的滚动形式：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;{PE.Label id=&amp;quot;内容带图片的信息列表&amp;quot; bindStyle=&amp;quot;普通式_首页底部&amp;quot; usePage=&amp;quot;false&amp;quot; outputQty=&amp;quot;10&amp;quot; titleLength=&amp;quot;50&amp;quot; nodes=&amp;quot;2&amp;quot; includeChildNodes=&amp;quot;true&amp;quot; models=&amp;quot;0&amp;quot; bindModel=&amp;quot;2&amp;quot; specials=&amp;quot;0&amp;quot; items=&amp;quot;0&amp;quot; itemListOrderType=&amp;quot;1&amp;quot; imageWidth=&amp;quot;160&amp;quot; imageHeight=&amp;quot;107&amp;quot; /}
&amp;lt;!---
因为bindModel=&amp;quot;2&amp;quot;，所以显示图片类型，不显示文章类型。
注意includeChildNodes=&amp;quot;true&amp;quot;这个表示包含子栏目发表的图片。
---&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;9.SQL使用举例：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;select name from table where id in(2,3,4)
&amp;lt;!---表示寻找id=2或者3或者4的name列。所以，
SELECT NodeID,arrChildID,ItemListOrderType,ItemPageSize FROM PE_Nodes WHERE NodeID IN (@nodes)
&amp;lt;!---表示从PE_Nodes表中选取NodeID等于nodes传递过来的nodes值的一些内容---&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;10.首页的幻灯片：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;{PE.Label id=&amp;quot;通用信息焦点图&amp;quot; bindStyle=&amp;quot;普通式&amp;quot; titleLength=&amp;quot;20&amp;quot; outputQty=&amp;quot;4&amp;quot; width=&amp;quot;230&amp;quot; height=&amp;quot;170&amp;quot;/}
图片中心的幻灯片：{PE.Label id=&amp;quot;通用信息焦点图&amp;quot; nodes=&amp;quot;@RequestInt_Id&amp;quot; width=&amp;quot;226&amp;quot; height=&amp;quot;185&amp;quot; /}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;11.添加分页标签（例如在产品中心首页模板中）：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;{PE.Label id=&amp;quot;内容带图片的信息列表&amp;quot; bindStyle=&amp;quot;普通式_图中首页底部&amp;quot; usePage=&amp;quot;true&amp;quot; outputQty=&amp;quot;4&amp;quot; titleLength=&amp;quot;50&amp;quot; nodes=&amp;quot;@RequestInt_Id&amp;quot; includeChildNodes=&amp;quot;true&amp;quot; models=&amp;quot;0&amp;quot; bindModel=&amp;quot;2&amp;quot; imageWidth=&amp;quot;160&amp;quot; imageHeight=&amp;quot;107&amp;quot; /}
&amp;lt;!---其中outputQty=4是每页显示的数量。那么分页标签---&amp;gt;
{PE.Page id=&amp;quot;url_基本风格_图中首右下&amp;quot; datasource=&amp;quot;内容带图片的信息列表_普通式_图中首页底部&amp;quot; /}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;12.示例：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;&amp;lt;xsl:when&lt;/span&gt; &lt;span class="na"&gt;test=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;NewDataSet/Table/ItemPageSize &amp;gt; 0&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;xsl:value&lt;/span&gt; &lt;span class="err"&gt;-of&lt;/span&gt; &lt;span class="na"&gt;select=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;NewDataSet/Table/ItemPageSize&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;&amp;lt;/xsl:when&amp;gt;&lt;/span&gt;
&lt;span class="c"&gt;&amp;lt;!---其中ItemPageSize是数据表里面的一个字段---&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;13.XSTL标签中如何写图片的相对地址：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&amp;lt;img src=&amp;quot;{pe:InstallDir()}images/4.gif&amp;quot; /&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;14.显示首页LOGO及其链接：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{PE.SiteConfig.ApplicationPath/}&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{PE.SiteConfig.logo/}&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{PE.SiteConfig.SiteName/}&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;另附：动易常用的模板函数&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="动易常用的模板函数" src="https://o3cex9zsl.qnssl.com/2012/08/14.png" title="动易常用的模板函数" /&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Tue, 21 Aug 2012 23:27:00 +0800</pubDate><guid>tag:typecodes.com,2012-08-21:web/sfcommontag.html</guid><category>动易cms</category><category>动易常用的标签</category></item><item><title>动易SiteFactory系列教程一:最新头条新闻带内容标签的制作</title><link>https://typecodes.com/web/sfnewscontenttag.html</link><description>&lt;p&gt;如何运用cms建立一个网站？我认为，可以分为3个步骤：第一个步骤是设计好整个网站的模板页面，这个主要有前台开发人员设计；第二个是熟悉后台的各种栏目（或者频道或者节点）的设置。不能小看这个步骤，很多标签都跟栏目使用的模板有关，不能通用；第三个步骤是后台开发人员根据相应的前台设计以及相应的要求添加相应的标签，调用出数据库内容（或者一些已经设计好的静态内容）。那么，这一系列的动易CMS教程主要讲解动易Sitefactory的标签。我将通过几个制作实例来讲解相关操作.&lt;/p&gt;
&lt;p&gt;&lt;img alt="最新头条新闻带图片标签制作" src="https://o3cex9zsl.qnssl.com/2012/08/13.png" title="最新头条新闻带图片标签制作" /&gt;&lt;/p&gt;


&lt;p&gt;（一）新建一个标签，“标签分类”可以任意选择类别，最好能归入以后能后找得到的标签目录，也可以自己新建一个目录；“数据设置”因为要涉及到数据库，所以选择“系统是数据库SQL查询”；“标签模板处理方式”选择“简单XSLT解析”，涉及数据库方面的标签我们一般都选择这个。&lt;/p&gt;
&lt;p&gt;&lt;img alt="添加标签参数" src="https://o3cex9zsl.qnssl.com/2012/08/22.png" title="添加标签参数" /&gt;&lt;/p&gt;
&lt;p&gt;（二）添加标签参数，这个看自己的需要而定（也可以不填），这个参数的作用是通过这个参数可以控制下面步骤中标签的一些数据调用。这个可能表抽象，多看几个标签就明白了。&lt;/p&gt;
&lt;p&gt;&lt;img alt="标签查询设置1" src="https://o3cex9zsl.qnssl.com/2012/08/33.png" title="标签查询设置1" /&gt;&lt;/p&gt;
&lt;p&gt;（三）标签查询设置，熟悉的话直接写sql语句；不熟悉的话可以通过“标签查询设置”提示写，效果由下图看出是一样的。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;SELECT TOP 10 PE_CommonModel.*,PE_U_Article.*  FROM PE_CommonModel INNER JOIN PE_U_Article ON PE_CommonModel.GeneralID = PE_U_Article.ID  WHERE  ((PE_CommonModel.NodeID IN (0)) AND (PE_CommonModel.Status = 99))  ORDER BY PE_CommonModel.UpdateTime DESC
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;提示：信息内容保存的公共表PE_CommonModel表里面，所以我们只需要查询PE_CommonModel表；Status=99，表示审核通过的信息，其它的就不介绍了。&lt;code&gt;注意把上面SQL与剧中的(0)改成(@node)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="标签查询设置2" src="https://o3cex9zsl.qnssl.com/2012/08/42.png" title="标签查询设置2" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="标签查询设置3" src="https://o3cex9zsl.qnssl.com/2012/08/52.png" title="标签查询设置3" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="标签查询设置4" src="https://o3cex9zsl.qnssl.com/2012/08/62.png" title="标签查询设置4" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="标签查询设置5" src="https://o3cex9zsl.qnssl.com/2012/08/72.png" title="标签查询设置5" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="标签查询设置6" src="https://o3cex9zsl.qnssl.com/2012/08/81.png" title="标签查询设置6" /&gt;&lt;/p&gt;
&lt;p&gt;（四）标签内容设置：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;&amp;lt;xsl:stylesheet&lt;/span&gt; &lt;span class="na"&gt;version=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;1.0&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;xmlns:xsl=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://www.w3.org/1999/XSL/Transform&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;xmlns:pe=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;labelproc&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;exclude-result-prefixes=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;pe&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="c"&gt;&amp;lt;!--这个是我们开始定义的参数--&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;&amp;lt;xsl:param&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;NodeID&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;&amp;lt;xsl:param&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;OutPutQty&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;&amp;lt;xsl:param&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;titlelenght&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;&amp;lt;xsl:param&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;contentlenght&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;&amp;lt;xsl:output&lt;/span&gt; &lt;span class="na"&gt;method=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;html&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;&amp;lt;xsl:template&lt;/span&gt; &lt;span class="na"&gt;match=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/NewDataSet/Table&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;
 &lt;span class="k"&gt;&amp;lt;xsl:choose&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
   &lt;span class="k"&gt;&amp;lt;xsl:when&lt;/span&gt; &lt;span class="na"&gt;test=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;position() =1&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;       &lt;span class="c"&gt;&amp;lt;!--判断是否第一条信息内容--&amp;gt;&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;listfirst_title&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;font-size: 16px;font-weight: bold;color:red;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;   &lt;span class="c"&gt;&amp;lt;!--是就在标题上加上相应的样式--&amp;gt;&lt;/span&gt;
         &lt;span class="nt"&gt;&amp;lt;a&amp;gt;&lt;/span&gt;
            &lt;span class="k"&gt;&amp;lt;xsl:attribute&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;href&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
               &lt;span class="nt"&gt;&amp;lt;xsl:value&lt;/span&gt; &lt;span class="err"&gt;-of&lt;/span&gt; &lt;span class="na"&gt;select=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;pe:GetInfoPath(GeneralID)&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="c"&gt;&amp;lt;!--获取信息路径--&amp;gt;&lt;/span&gt;
            &lt;span class="k"&gt;&amp;lt;/xsl:attribute&amp;gt;&lt;/span&gt;
            &lt;span class="k"&gt;&amp;lt;xsl:attribute&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;title&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
              &lt;span class="nt"&gt;&amp;lt;xsl:value&lt;/span&gt; &lt;span class="err"&gt;-of&lt;/span&gt; &lt;span class="na"&gt;select=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Title&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="c"&gt;&amp;lt;!--获取数据库中的Title字段内容--&amp;gt;&lt;/span&gt;
                 &lt;span class="k"&gt;&amp;lt;/xsl:attribute&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;xsl:value&lt;/span&gt; &lt;span class="err"&gt;-of&lt;/span&gt; &lt;span class="na"&gt;select=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;pe:CutText(Title,$titlelenght,&amp;#39;…&amp;#39;)&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="c"&gt;&amp;lt;!--通过自定义的参数titlelength来截取Title字段的长度--&amp;gt;&lt;/span&gt;
         &lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;listfirst_content&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="c"&gt;&amp;lt;!--通过自定义的参数contentlenght来截取Content字段的长度--&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;xsl:value&lt;/span&gt; &lt;span class="err"&gt;-of&lt;/span&gt; &lt;span class="na"&gt;disable-output-escaping=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;yes&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;select=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;pe:CutText(pe:RemoveHtml(Content),$contentlenght,&amp;#39;…&amp;#39;)&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;     
 &lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
   &lt;span class="k"&gt;&amp;lt;/xsl:when&amp;gt;&lt;/span&gt;
      &lt;span class="k"&gt;&amp;lt;xsl:otherwise&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
         &lt;span class="nt"&gt;&amp;lt;a&amp;gt;&lt;/span&gt;
           &lt;span class="k"&gt;&amp;lt;xsl:attribute&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;href&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
              &lt;span class="nt"&gt;&amp;lt;xsl:value&lt;/span&gt; &lt;span class="err"&gt;-of&lt;/span&gt; &lt;span class="na"&gt;select=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;pe:GetInfoPath(GeneralID)&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
           &lt;span class="k"&gt;&amp;lt;/xsl:attribute&amp;gt;&lt;/span&gt;
           &lt;span class="k"&gt;&amp;lt;xsl:attribute&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;title&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
              &lt;span class="nt"&gt;&amp;lt;xsl:value&lt;/span&gt; &lt;span class="err"&gt;-of&lt;/span&gt; &lt;span class="na"&gt;select=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Title&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
           &lt;span class="k"&gt;&amp;lt;/xsl:attribute&amp;gt;&lt;/span&gt;
              &lt;span class="nt"&gt;&amp;lt;xsl:value&lt;/span&gt; &lt;span class="err"&gt;-of&lt;/span&gt; &lt;span class="na"&gt;select=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;pe:CutText(Title,$titlelenght,&amp;#39;…&amp;#39;)&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
         &lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
       &lt;span class="k"&gt;&amp;lt;/xsl:otherwise&amp;gt;&lt;/span&gt;
  &lt;span class="k"&gt;&amp;lt;/xsl:choose&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;&amp;lt;/xsl:template&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;&amp;lt;/xsl:stylesheet&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;（五）最后只要在相应模板中调用{PE.Label id="最新头条新闻带内容" /}即可。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Tue, 21 Aug 2012 22:51:00 +0800</pubDate><guid>tag:typecodes.com,2012-08-21:web/sfnewscontenttag.html</guid><category>动易cms</category><category>最新头条新闻带内容标签的制作</category></item><item><title>如何将SQL2008的数据库转换成SQL2005</title><link>https://typecodes.com/database/convertmssql2008to2005.html</link><description>&lt;p&gt;最近在帮一个Q友改网站的时候，我本地备份的数据库是SQL08的，而他的.NET服务器上装的是SQL Server05的，所以要把我备份的数据库转换为05的。过程如下：首先进入SQL Server Management Studio，登录服务器然后:&lt;/p&gt;
&lt;p&gt;1 如果你要转换的数据库在“对象资源管理器”中，那么右键点击将要转换的数据库（如图中的dy14数据库）&lt;/p&gt;
&lt;p&gt;&lt;img alt="数据库在“对象资源管理器”中" src="https://o3cex9zsl.qnssl.com/2012/08/12.png" title="数据库在“对象资源管理器”中" /&gt;&lt;/p&gt;


&lt;p&gt;2 如果你要转换的数据库不在“对象资源管理器中”，那么如下图操作：&lt;/p&gt;
&lt;p&gt;&lt;img alt="数据库不在“对象资源管理器”中-1" src="https://o3cex9zsl.qnssl.com/2012/08/21.png" title="数据库不在“对象资源管理器”中-1" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="数据库不在“对象资源管理器”中-2" src="https://o3cex9zsl.qnssl.com/2012/08/32.png" title="数据库不在“对象资源管理器”中-2" /&gt;&lt;/p&gt;
&lt;p&gt;3 完成后，在弹出的“脚本向导”窗口中，选中“为所选数据库中的所有对象编写脚本”&lt;/p&gt;
&lt;p&gt;&lt;img alt="为所选数据库中的所有对象编写脚本" src="https://o3cex9zsl.qnssl.com/2012/08/41.png" title="为所选数据库中的所有对象编写脚本" /&gt;&lt;/p&gt;
&lt;p&gt;4.在弹出的“选择脚本选项”选项中，如下操作：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;编写数据的脚本：True （因为有用的数据要一并生成）
编写Use DataBase的脚本：False
编写创建数据库的脚本：False （主机提供商已经有数据库，这里只生成表，不再生成数据库）
为服务器版本编写脚本：SQL Server 2005（生成2005的脚本，而不是默认的2008脚本)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="选择脚本选项-1" src="https://o3cex9zsl.qnssl.com/2012/08/51.png" title="选择脚本选项-1" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="选择脚本选项-2" src="https://o3cex9zsl.qnssl.com/2012/08/61.png" title="选择脚本选项-2" /&gt;&lt;/p&gt;
&lt;p&gt;5.接着在“输出选项”里面，如下图操作：&lt;/p&gt;
&lt;p&gt;&lt;img alt="输出选项" src="https://o3cex9zsl.qnssl.com/2012/08/71.png" title="输出选项" /&gt;&lt;/p&gt;
&lt;p&gt;6 最后点击“下一步”即可完成转换，生成一个后缀为.sql的文件（例如dy14.sql）。然后把这个文件还原到新的数据库上。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Tue, 21 Aug 2012 21:23:00 +0800</pubDate><guid>tag:typecodes.com,2012-08-21:database/convertmssql2008to2005.html</guid><category>mssql</category></item><item><title>动易SiteFactory的详细安装以及常见错误解决方案</title><link>https://typecodes.com/web/installsitefactory.html</link><description>&lt;p&gt;最近一Q友叫我帮他改一个网站，他用的是动易SiteFactory3.6的内容管理系统。因此，我对动易CMS有了进一步了解。那么，从今天开始，我将为大家做一个关于动易SiteFactory内容管理系统的系列教程（这中间免不了有错误的地方，希望大家指正）。废话不多说，直接从动易CMS的安装开始：&lt;/p&gt;
&lt;h5&gt;1 动易SiteFactory的安装&lt;/h5&gt;
&lt;p&gt;虽然动易SiteFactory的安装包里面已经附录了比较完整的安装过程，但是我想做一些重要补充和提示。&lt;/p&gt;


&lt;h6&gt;1.1 用sa账号登录Sql Server08服务器&lt;/h6&gt;
&lt;p&gt;&lt;img alt="用sa账号登录Sql Server08服务器" src="https://o3cex9zsl.qnssl.com/2012/08/11.png" title="用sa账号登录Sql Server08服务器" /&gt;&lt;/p&gt;
&lt;h6&gt;1.2 登入后新建数据库，例如：数据库名为dy&lt;/h6&gt;
&lt;p&gt;&lt;img alt="登入后新建数据库1" src="https://o3cex9zsl.qnssl.com/2012/08/2.png" title="登入后新建数据库1" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="登入后新建数据库2" src="https://o3cex9zsl.qnssl.com/2012/08/31.png" title="登入后新建数据库2" /&gt;&lt;/p&gt;
&lt;h6&gt;1.3 新建数据库用户&lt;/h6&gt;
&lt;p&gt;在Sql Server08中点击“安全性”--“登录名”--“新建登录名”：在“常规”选项中新建例如登录名为dy_user或者dy。Sql身份验证自己设置密码。&lt;/p&gt;
&lt;p&gt;&lt;img alt="新建登录名" src="https://o3cex9zsl.qnssl.com/2012/08/4.png" title="新建登录名" /&gt;&lt;/p&gt;
&lt;h6&gt;1.4 在“用户映射”中必须勾选db_owner和public&lt;/h6&gt;
&lt;p&gt;在“用户映射”选项中，选择自己命名的用户名“dy_user”或者“dy”，并且勾选db_owner和public&lt;/p&gt;
&lt;p&gt;&lt;img alt="数据库用户映射" src="https://o3cex9zsl.qnssl.com/2012/08/5.png" title="数据库用户映射" /&gt;&lt;/p&gt;
&lt;h6&gt;1.5 输入数据库的信息内容然后安装&lt;/h6&gt;
&lt;p&gt;进入网站http://127.0.0.1:90/9，“数据库”选择sqlserver2008中默认的“（local）”，“数据库名称”输入“dy_user”或者“dy”，“数据库名称”输入“dy”，然后直接点击“下一步”，不用点击“创建数据库”。&lt;/p&gt;
&lt;p&gt;&lt;img alt="安装动易" src="https://o3cex9zsl.qnssl.com/2012/08/6.png" title="安装动易" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;温馨提示：&lt;/code&gt;当你在IIS服务器上安装了多个动易数据库的时候，可以使用同一个账户。例如，将dy账户映射到如图“dy11”、“dy13”、“dy2”“dy3”的数据库上。这样就不用为每一个数据库建立多个登录用户账号了。&lt;/p&gt;
&lt;p&gt;&lt;img alt="多数据库的用户映射" src="https://o3cex9zsl.qnssl.com/2012/08/7.png" title="多数据库的用户映射" /&gt;&lt;/p&gt;
&lt;h5&gt;2 常见错误&lt;/h5&gt;
&lt;h6&gt;2.1 出现普通的“/服务程序错误”&lt;/h6&gt;
&lt;p&gt;解决方案：在网站的虚拟目录上点击右键选择“添加应用池”，再选择Classic.NET AppPool不要选择DefaultAppPool那个(除非在开始的IIS配置过程中，你已经把这两个应用池的”管道模式“都设置成了”经典“)。或者直接右键选择“转换为应用程序”。&lt;/p&gt;
&lt;h6&gt;2.2 出现“/服务程序错误。不允许远程SQL Server远程连接……”&lt;/h6&gt;
&lt;p&gt;&lt;img alt="SQL Server无法远程连接" src="https://o3cex9zsl.qnssl.com/2012/08/8.png" title="SQL Server无法远程连接" /&gt;&lt;/p&gt;
&lt;p&gt;解决方案：SQL Server的配置工具文件夹中点击“SQL Server配置管理器”，然后继续点击“SQL Server网络配置”中的“MSSQLSERVER的协议”，将“TCP/IP”和“Named Pipes”都进行启用。然后重启SQL Server即可。&lt;/p&gt;
&lt;h6&gt;2.3 出现如下图所示的“/服务程序错误”&lt;/h6&gt;
&lt;p&gt;&lt;img alt=".NET Framework 2.0补丁" src="https://o3cex9zsl.qnssl.com/2012/08/9.png" title=".NET Framework 2.0补丁" /&gt;&lt;/p&gt;
&lt;p&gt;解决方案：由于动易SiteFactory的安装要求就是需要.NET Framework 2.0 sp2的平台，所以需要将自己的.net2.0打上微软官方.net2.0 sp2的补丁（&lt;a href="http://www.microsoft.com/zh-cn/download/details.aspx?id=1639"&gt;点击下载&lt;/a&gt;）。另外，可以通过IIS管理器查看并“更改.NET Framework版本”；也可以通过打开“C:\WINDOWS\Microsoft.NET\Framework”查看自己的“.NET Framework版本”。&lt;/p&gt;
&lt;h6&gt;2.4 使用“快速安装”的方法安装动易SiteFactory出现如图“找不到数据库”&lt;/h6&gt;
&lt;p&gt;&lt;img alt="在SQL Server2008中找不到动易数据库" src="https://o3cex9zsl.qnssl.com/2012/08/10.png" title="在SQL Server2008中找不到动易数据库" /&gt;&lt;/p&gt;
&lt;p&gt;解决方案：错误原因是在安装Visual Studio2008的时候，没把同时安装“SQL Server2005”的选项去掉，导致本地计算机同时存在SQL Server2008和2005。而你使用快速安装方法安装的动易数据库就装在了2005上，但是你却使用SQL Server2008登录服务器的，所以看不到数据库。建议删掉SQL Server2005或者使用上面推荐的详细方法安装。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Sun, 19 Aug 2012 16:25:00 +0800</pubDate><guid>tag:typecodes.com,2012-08-19:web/installsitefactory.html</guid><category>动易sitefactory</category></item><item><title>对动易CMS和织梦CMS的一些认识——织梦CMS篇</title><link>https://typecodes.com/web/aboutdedecms.html</link><description>&lt;h5&gt;1 织梦CMS的概况&lt;/h5&gt;
&lt;p&gt;织梦（DEDECMS）目前有两大系列产品，即DedeCMS、DedeEIMS。这两种CMS都是基于PHP+MYSQL的开发环境的，其中，DedeCMS应该算是目前国内最受欢迎的的基于PHP环境的CMS了；DedeEIMS(全称EIMSDede Enterprise Information Management System)是针对中小型企业的CMS系统，类似动易的BizIdea。貌似现在织梦推出了一套淘宝客的程序，网上挺火的。&lt;/p&gt;
&lt;p&gt;&lt;img alt="织梦CMS" src="https://o3cex9zsl.qnssl.com/2012/08/1.jpg" title="织梦CMS" /&gt;&lt;/p&gt;


&lt;h5&gt;2 织梦CMS的优势&lt;/h5&gt;
&lt;h6&gt;2.1 基于PHP+Mysql的开源系统&lt;/h6&gt;
&lt;p&gt;PHP+Mysql应该算是目前最为流行的WEB程序开发环境了。因为其开源并且执行效率高、扩展性强、安全易用、兼容性好、可面向对象的特点，被大部分的程序猿所接纳。而且，当前很多大型的门户或者引擎大腕如如雅虎、百度、淘宝、新浪、腾讯等，它们的网站都是采用PHP+MySQL开发的。一般来说开源的服务器套件在投入成本或者维护成本上都比Windows低很多，使得目前国内PHP+MySQL开发人才愈来愈多，这也是一种Web开发趋势。当然这对微软也构成了的威胁，促使其迈向开源的世界，虽然这几乎是不可实现的。&lt;/p&gt;
&lt;h6&gt;2.2 开源性&lt;/h6&gt;
&lt;p&gt;DedeCms是国内第一家开源的内容管理系统，它的程序源代码完全开放，能较大的满足广大站长对于网站程序进行二次开发的需求。而开源的程序在能够吸引更多的开发者参与进来，这也推动了织梦CMS迈向更为灵活的产品架构、极强的可扩展性和可伸缩性能最大化。&lt;/p&gt;
&lt;h6&gt;2.3 灵活的模块组合以及极易上手的标签&lt;/h6&gt;
&lt;p&gt;织梦CMS可以由我们这些开发人员自由选择是否加入问答、圈子等一些互动型的模块功能，不用再去开发这些功能了；而且，这些可自选的模块能够很好地与DEDECMS融合。其次，织梦CMS的标签非常强大。由系统自带的那些标签几乎可以满足整个站点的需求了，对于我们这些二次开发者可以在不用自定义任何标签的情况下完成一个站点。这种特性和动易的SiteWeaver一样，标签很容易上手。这对使用动易SiteFactory、动易BizIdea这两种CMS系统中的相对难以短时间上手的标签而言，具有很大的优势。&lt;/p&gt;
&lt;h6&gt;2.4 便捷的修改和升级操作&lt;/h6&gt;
&lt;p&gt;DedeCMS的模板引擎简单、易用，采用了XML标记风格，只要懂HTML就可以修改制作模板。改版和升级只需要了解一些DedeCMS的模板标记，只要懂HTML，就能随意对模板文件进行修改，而且每次升级只需要更新模板文件即可，做到了程序和页面很大程度上的分离。&lt;/p&gt;
&lt;h6&gt;2.5 高效的动态静态页面部署&lt;/h6&gt;
&lt;p&gt;几乎当前的CMS都需要有这种特性，它能：a.减少数据库负担、降低人力维护成本；b.利于搜索引擎对网站的友好程度，提高搜索引擎对网站收录量；c.提高用户访问的效率。&lt;/p&gt;
&lt;h6&gt;2.6 强大的后期技术支持&lt;/h6&gt;
&lt;p&gt;当然这也可以归功于其开源性的功劳。目前有很多技术性的文档（包括DEDE的官方论坛以及网络上面的技术贴），这样当我们遇到问题的时候能够很快得到解决方案。这对于那些刚入门的开发者而言，具有很大的吸引力和亲和力。&lt;/p&gt;
&lt;h6&gt;2.7 接口的开放性&lt;/h6&gt;
&lt;p&gt;我觉得织梦CMS的接口还是有很大的可移植性，例如它可以和当前最为流行的论坛CMS程序——Discuz完美整合，也可以较完美的接入腾讯、新浪等开放平台的一些接口应用程序。&lt;/p&gt;
&lt;h5&gt;3 织梦CMS的不足&lt;/h5&gt;
&lt;h6&gt;3.1 标签的灵活性还不够&lt;/h6&gt;
&lt;p&gt;虽然说织梦CMS内置的标签相当强大，几乎不用我们这些开发人员改什么就可以在网站中使用了，但是这也造成了标签的灵活性不足的问题。当然，这种灵活性是相对动易SiteFactory和动易BizIdea这两种CMS而言的。&lt;/p&gt;
&lt;h6&gt;3.2 安全性&lt;/h6&gt;
&lt;p&gt;由于织梦CMS开源的特点，当然这也是很多开源程序的共性，那就是存在安全隐患。所以DEDECMS会不定期的发布一些补丁来修复相关漏洞，这也是跟动易CMS的差别。&lt;/p&gt;
&lt;h5&gt;4 其它&lt;/h5&gt;
&lt;h6&gt;4.1 资源消耗&lt;/h6&gt;
&lt;p&gt;Asp.Net程序的对运行环境的要求相对ASP/PHP要高不少，一般的100元的那种虚拟主机因为给每个网站分配的资源是非常非常少的（比如限制了1%的CPU占用率，100M的内存），不适合.Net平台的应用。而PHP环境的要求就相对较低了。因此，在选择CMS的时候，我们应该注意动易和织梦的这两个特性。&lt;/p&gt;
&lt;h6&gt;4.2 缓存机制&lt;/h6&gt;
&lt;p&gt;不管是动易SiteFactory、动易BizIdea还是织梦（DEDE），都较多的使用了缓存，这是一种以内存换速度的作法。很多主机就算没有对CPU限制得过死，但对内存占用一般都限制在100M左右，这对PHP环境的织梦CMS而言还算OK。但是可能无法满足动易SiteFactory和动易BizIdea对内存的需求，导致许多东西无法缓存，这样会造成网站的加载速度缓慢。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Sun, 19 Aug 2012 01:28:00 +0800</pubDate><guid>tag:typecodes.com,2012-08-19:web/aboutdedecms.html</guid><category>动易cms</category><category>织梦cms</category></item><item><title>对动易CMS和织梦CMS的一些认识——动易CMS篇</title><link>https://typecodes.com/web/aboutsitefactorycms.html</link><description>&lt;p&gt;最近一Q友找我帮忙修改他的一个网站，用的是动易SiteFactory3.6的内容管理系统。对于动易的话，我第一次接触也是在大二的时候。那时跟着学校实验室的坤哥混，他接手了一些网站项目然后让我和另外一同学参与了进来。其实那个时候对CMS还是闻所未闻，因为自己以前总觉得所有网站都是自己用相关的开发语言写出来的。就像当时参加学校的网页设计比赛一样，我也是自己用ASP+ACCESS写的一个应该说是比较戳的网站。&lt;/p&gt;
&lt;p&gt;可能是由于主办方觉得是一难得的奇葩吧，也让我进入了决赛。后来想想，还是觉得自己的CSS设计太戳了，就两个字“难看”。那时，坤哥推荐我用动易的CMS做网站。这样我就加入了CMS的行列。不过，在初次使用动易CMS的时候遇到的麻烦还是挺多的，所以在从那次以后也没怎么使用SiteFactory这个CMS了。直到这次，网上一Q友找我修改他的这个动易CMS网站，我又重新接触了动易SiteFactory（此前大多时候都用的是织梦的CMS）。再加上近段时间，我也在学习C#，对微软.NET平台比较感兴趣，所以还是接受了。下面，我就通过两篇文章来说说我对动易CMS和织梦CMS的一些看法（当然有一定的局限性，不妥的地方还望指正！）&lt;/p&gt;


&lt;h5&gt;1 动易CMS的概况&lt;/h5&gt;
&lt;p&gt;动易目前有三大系列产品，即动易SiteFactory、动易BizIdea和动易SiteWeaver。其中，动易SiteFactory 、动易 BizIdea 为08年新推出的基于.NET技术开发的内容管理系统和电子商务管理系统。而动易SiteWeaver是基于ASP技术的内容管理系统。当然每种大类下面还专门分类出了不同的“子系统”，比如动易SiteFactory可以具体到“政府门户网站系统”、“行业门户网站系统”等“子系统”。&lt;/p&gt;
&lt;h5&gt;2 动易CMS的优势&lt;/h5&gt;
&lt;p&gt;这里主要说明一下动易SiteFactory和动易BizIdea这两种基于.NET的系统，因为动易已经把注意力集中到了微软的.NET平台上了，当然这也是一种大的趋势。而基于ASP+Access开发环境的动易SiteWeaver已经渐渐地淡出了他们的开发团队。虽然动易SiteWeaver是动易产品里面唯一一款开源的CMS系统，但是由微软领导的.NET潮流确实势不可挡。因此，动易SiteWeaver的没落，也就没什么奇怪的了。下面我就自己的一些经验，谈一下动易SiteFactory和动易BizIdea这两种CMS的优势所在，当然也是有一定的局限性的：&lt;/p&gt;
&lt;h6&gt;2.1 基于微软.Net 2.0平台&lt;/h6&gt;
&lt;p&gt;.Net2.0目前微软帝国在Web方面极力主导和推广的开发环境。在这个封闭的王国里面还是有它的强项的，.NET2.0在Web开发的平台支持上面依然高调的贴着“高效”、“稳定”、“安全”的标签。&lt;/p&gt;
&lt;h6&gt;2.2 系统N层架构设计&lt;/h6&gt;
&lt;p&gt;这两种CMS确实跟着微软在企业架构的设计方案，采用以表现层、业务逻辑层、数据访问层为主的N层架构设计，系统结构清晰、易于维护，提高了它们的可扩展性和重用性。而这种可伸缩的N层架构设计是网站平台可持续发展的核心保证。&lt;/p&gt;
&lt;p&gt;&lt;img alt="微软.NET2.0推荐的N层架构设计" src="https://o3cex9zsl.qnssl.com/2012/08/dy.jpg" title="微软.NET2.0推荐的N层架构设计" /&gt;&lt;/p&gt;
&lt;h6&gt;2.3 管理日志&lt;/h6&gt;
&lt;p&gt;类似飞机的黑匣子一样，为网站管理员提供了安全分析的依据。管理员能够通过网站日志了解到站点异常活动或者黑客尝试性攻击，为及时预防和应对提供了宝贵的时间。&lt;/p&gt;
&lt;h6&gt;2.4 URL参数安全过滤&lt;/h6&gt;
&lt;p&gt;这两种CMS允许在开发设计的过程中，自由设置URL可传递的参数个数、类型等。而且系统内置了一些相关的模板函数，通过限制URL参数传递的方式来进行安全过滤，从而杜绝SQL等黑客攻击方式。&lt;/p&gt;
&lt;h6&gt;2.5 较快的加载和响应速度&lt;/h6&gt;
&lt;p&gt;相信大家在初次使用动易SiteFactory和动易BizIdea的时候，会感觉加载的速度比较慢。开始也以为这是这两种CMS的一大缺憾，后来查了下主要是由于Asp.Net的特性，即在第一次访问某个页面时，要进行编译过程。但当自己或他人再访问这个页面的时候，由于不需要再次编译，所以加载速度会变快。&lt;/p&gt;
&lt;h6&gt;2.6 可配置式管道处理模型（Configurable HTTP Pipeline）&lt;/h6&gt;
&lt;p&gt;通过重写HttpModule，使其模块化和可配置，根据配置文件指定哪些目录/类型文件可以通过此HttpModule。这种模块化和可配置技术，使之更适合IIS7的新功能特性并且减少无效的管道请求以提高性能。&lt;/p&gt;
&lt;h5&gt;3 动易CMS的不足&lt;/h5&gt;
&lt;h6&gt;3.1 平台整合&lt;/h6&gt;
&lt;p&gt;我觉得动易SiteFactory和动易BizIdea的平台整合性还是比较差的，例如不能够比较完美地融合Discuz论坛程序，不能够较好的接入当前比较流行的开放平台的接口应用程序。虽然官方宣称“系统内置平台整合接口，可以与论坛及博客平台进行整合，实现全站通行证效果。”&lt;/p&gt;
&lt;h6&gt;3.2 较为落后的后期技术支持&lt;/h6&gt;
&lt;p&gt;由于目前动易SiteFactory和动易BizIdea的“封闭性”，很难让更多的程序猿等开发者参与进来。所以造成了一些入门者觉得难以上手或者说是驾驭，从动易的官方论坛以及其他网络上的技术文档都是比较少的，很多问题都没得到解决方案。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Sun, 19 Aug 2012 01:24:00 +0800</pubDate><guid>tag:typecodes.com,2012-08-19:web/aboutsitefactorycms.html</guid><category>动易cms</category><category>织梦cms</category></item><item><title>Win7安装及配置IIS7教程（ASP+ASP.NET,包括动易SF的IIS配置）</title><link>https://typecodes.com/csharp/win7configiis7.html</link><description>&lt;h5&gt;1 安装IIS7&lt;/h5&gt;
&lt;p&gt;依次点击“开始 --&amp;gt; 控制面板 --&amp;gt; 程序 --&amp;gt; 打开或关闭 Windows 功能”，然后按下图操作：（注意：图中红色部分都要选中）&lt;/p&gt;
&lt;p&gt;&lt;img alt="安装IIS7" src="https://o3cex9zsl.qnssl.com/2012/08/1.jpeg" title="安装IIS7" /&gt;&lt;/p&gt;


&lt;h5&gt;2 配置IIS7&lt;/h5&gt;
&lt;h6&gt;2.1 身份验证的设置&lt;/h6&gt;
&lt;p&gt;依次点击：控制面板 --&amp;gt; 程序安全 --&amp;gt; 管理工具 --&amp;gt;Internet 信息服务(IIS)管理器，点击“Default Web Site”选择“身份验证”，然后按下图操作：&lt;/p&gt;
&lt;p&gt;&lt;img alt="身份验证——配置IIS7" src="https://o3cex9zsl.qnssl.com/2012/08/2.jpeg" title="身份验证——配置IIS7" /&gt;&lt;/p&gt;
&lt;h6&gt;2.2 IIS7 应用程序池的设置&lt;/h6&gt;
&lt;p&gt;点击“Default Web Site”，在右边选择“高级设置”，在“应用程序池”选“Classic.NET AppPool”，如图所示：&lt;/p&gt;
&lt;p&gt;&lt;img alt="IIS7 应用程序池的设置" src="https://o3cex9zsl.qnssl.com/2012/08/3.jpeg" title="IIS7 应用程序池的设置" /&gt;&lt;/p&gt;
&lt;h5&gt;3 其它配置&lt;/h5&gt;
&lt;p&gt;在应用程序池中设置defaultapppool和classic.netapp为已启动，并且托管管道模式都为经典。&lt;/p&gt;
&lt;p&gt;在“身份验证”中“Forms身份验证”的状态应设置为“已禁用”。至少要启用“Windows身份验证”、“基本身份验证”和“匿名身份验证”。&lt;/p&gt;
&lt;p&gt;由于动易SitsFactory也使用.NET2.0的平台，因此也需要配置IIS。比如常见的错误：安装时出现&lt;code&gt;/服务程序错误&lt;/code&gt;，解决办法就是在网站的虚拟目录上点击右键选择“添加应用池”，再选择Classic.NET AppPool不要选择DefaultAppPool那个(除非在开始的IIS配置过程中，你已经把这两个应用池的”管道模式“都设置成了”经典“)。或者直接右键选择“转换为应用程序”。&lt;/p&gt;
&lt;h5&gt;4 同时配置Apache&lt;/h5&gt;
&lt;p&gt;如果需要同时配置IIS的ASP/ASP.NET和支持PHP的Apache环境，建议的安装顺序是&lt;code&gt;IIS、Phpnow、Sql Server、Visual Studio&lt;/code&gt;。首先，虽然在安装IIS的时候会默认使用80端口，但是IIS的端口修改还是比较容易的。而要是先安装PHPNOW（也是默认占用80端口）在安装IIS，会出现一些问题；其次，PHPNOW要安装在SQL SERVER的前面，否则会出现端口的占用的情况（一般会是pid为4的SQL REPORT SERVICE占用了80端口，改起来比较麻烦）；而SQL SERVER也一定要安装在Visual Studio的前面，以前有过深刻教训。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Fri, 17 Aug 2012 17:08:00 +0800</pubDate><guid>tag:typecodes.com,2012-08-17:csharp/win7configiis7.html</guid><category>iis</category><category>动易sitefactory</category></item><item><title>MSSQL还原数据库时出现错误:sql Sys</title><link>https://typecodes.com/database/mssqlcannotrestore.html</link><description>&lt;p&gt;先前博主在本地备份了一个数据库文件dy11.bk，然后在MSSQL2008上新建了一个名为first的数据库，打算把dy11.bk还原到这个first数据库上。结果，MSSQL还原时出现错误:sql System.Data.SqlClient.SqlError: 无法覆盖文件'C:\Program Files\Microsoft SQL Server\MSSQL\data\dy11.mdf'。数据库'dy11'正在使用该文件。&lt;/p&gt;
&lt;p&gt;&lt;img alt="MSSQL还原数据库时出现错误-1" src="https://o3cex9zsl.qnssl.com/2012/08/1.png" title="MSSQL还原数据库时出现错误-1" /&gt;&lt;/p&gt;


&lt;p&gt;原因是：在还原数据库时，在选择“将数据库文件还原为”的mdf（SQL Server数据库文件，光盘镜像文件的一种）和ldf（SQL的日志文件）还原路径时，没有修改成当前数据库的路径（比如：当前first数据库的路径）。而是保持默认的路径（C:\Program Files\Microsoft SQL Server\MSSQL10.MSSQLSERVER\MSSQL\DATA\dy11.mdf）造成的。&lt;/p&gt;
&lt;p&gt;解决方法（按图片提示步骤即可）：&lt;/p&gt;
&lt;p&gt;&lt;img alt="MSSQL还原数据库时出现错误-2" src="https://o3cex9zsl.qnssl.com/2012/08/2.jpg" title="MSSQL还原数据库时出现错误-2" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="MSSQL还原数据库时出现错误-3" src="https://o3cex9zsl.qnssl.com/2012/08/3.png" title="MSSQL还原数据库时出现错误-3" /&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Wed, 15 Aug 2012 12:25:00 +0800</pubDate><guid>tag:typecodes.com,2012-08-15:database/mssqlcannotrestore.html</guid><category>system.data.sqlclient</category><category>mssql还原</category></item><item><title>PHP程序解决WordPress重新排列不连续的文章ID</title><link>https://typecodes.com/web/phpsolvewparticleid.html</link><description>&lt;p&gt;wordpress有个缺点，那就是在后天发表文章的时候，系统会自动等时间地帮你备份。虽然出发点是好的，但是却导致了发表的文章的ID不连续。比如，前一篇文章的网站是27.html，很可能在你发表下一篇文章的时候网站会变成45.html。至此为止，博客中总共18篇文章，在我没进行重新排序之前，文章的ID已经达到了300多了。所以趁文章还不多的，赶紧采取一些措施解决下。废话少说，贴出代码（代码中已注释）。其中数据库表的前缀默认为wp_，应该根据自己的表进行修改。(温馨提示：在任何数据库的操作前，最好先备份数据库！！！）&lt;/p&gt;


&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
    &lt;span class="sd"&gt;/**&lt;/span&gt;
&lt;span class="sd"&gt;     * WordPress重新排列不连续的文章ID&lt;/span&gt;
&lt;span class="sd"&gt;     */&lt;/span&gt;

    &lt;span class="nv"&gt;$hostname_blog&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;localhost&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="c1"&gt;//服务器名称&lt;/span&gt;
    &lt;span class="nv"&gt;$database_blog&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;dbname&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="c1"&gt;//数据库名称&lt;/span&gt;
    &lt;span class="nv"&gt;$username_blog&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;username&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="c1"&gt;//数据库账户&lt;/span&gt;
    &lt;span class="nv"&gt;$password_blog&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;password&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="c1"&gt;//数据库密码&lt;/span&gt;
    &lt;span class="nv"&gt;$blog&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;mysql_pconnect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$hostname_blog&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$username_blog&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$password_blog&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
    &lt;span class="k"&gt;or&lt;/span&gt; &lt;span class="nb"&gt;trigger_error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;mysql_error&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;&lt;span class="nx"&gt;E_USER_ERROR&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//打开一个到 MySQL 服务器的持久连接&lt;/span&gt;

    &lt;span class="nv"&gt;$no&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="c1"&gt;//初始化变量&lt;/span&gt;

    &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;change_id&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;//定义change_id（）函数&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;global&lt;/span&gt; &lt;span class="nv"&gt;$no&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;//全局变量&lt;/span&gt;

        &lt;span class="c1"&gt;// 修改post_id，并修改分类、标签、自定义字段、评论的对应关系&lt;/span&gt;
        &lt;span class="nv"&gt;$sql&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;update wp_posts set ID = &amp;#39;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$no&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39; where ID = &amp;#39;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nb"&gt;mysql_query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$sql&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nv"&gt;$sql&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;update wp_term_relationships set object_id = &amp;#39;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$no&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39; where object_id = &amp;#39;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nb"&gt;mysql_query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$sql&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nv"&gt;$sql&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;update wp_postmeta set post_id = &amp;#39;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$no&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39; where post_id = &amp;#39;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nb"&gt;mysql_query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$sql&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nv"&gt;$sql&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;update wp_comments set comment_post_ID = &amp;#39;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$no&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39; where comment_post_ID = &amp;#39;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nb"&gt;mysql_query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$sql&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="nv"&gt;$no&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$no&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nb"&gt;mysql_select_db&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$database_blog&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$blog&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="c1"&gt;//设置活动的 MySQL 数据库&lt;/span&gt;
    &lt;span class="nv"&gt;$query_postRecord&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;SELECT ID FROM wp_posts ORDER BY ID ASC&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;$all_postRecord&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;mysql_query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$query_postRecord&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nv"&gt;$row_postRecord&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;mysql_fetch_assoc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$all_postRecord&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="c1"&gt;//从结果集中取得一行作为关联数组&lt;/span&gt;

    &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;change_id&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$row_postRecord&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ID&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt; 
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$row_postRecord&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;mysql_fetch_assoc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$all_postRecord&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;&lt;span class="c1"&gt;//不断调用change_id（）函数来修改ID&lt;/span&gt;

    &lt;span class="c1"&gt;// 重新设置post id自增起点&lt;/span&gt;
    &lt;span class="nb"&gt;mysql_query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;alter table wp_posts AUTO_INCREMENT = &amp;#39;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$no&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;ResetID Succeed&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Sat, 28 Jul 2012 01:08:00 +0800</pubDate><guid>tag:typecodes.com,2012-07-28:web/phpsolvewparticleid.html</guid><category>wordpress</category></item><item><title>Some Thing about Life</title><link>https://typecodes.com/mix/thinkaboutlife.html</link><description>&lt;p&gt;生活，真的很难用一个词语来描述它。因为每个阶段，你对它会有不同的认识。而且，即使当你处在某一阶段的时候也会有不同的感悟。&lt;/p&gt;


&lt;p&gt;例如，小时候，很多人觉得生活应该是个快乐、充满神奇的世界。几乎每个人都会特别期待打开下一个画面，虽然他们早已为这块画布画满了自己的世界；到了少年的时候，会越来越佩服自己，欣赏自己。在追逐自己的世界中，他们会企图把小时候的梦想演变成现实，虽然也可能会小小地修改一下那时常出现的梦境。然而他们也会逐渐品尝到一些苦涩。不过，我相信在这段时间里这种苦涩却和甜蜜绝对是同等重要的。&lt;/p&gt;
&lt;p&gt;不知怎么的，我反而更记得那个时候自己比较苦涩的事情。比如初中的时候，课堂上跟同学开小差，结果被老师叫讲台上去解答他刚讲的题目。那时心里特别不服气，哥将来可是做xxx的。于是，站在讲台上只撂上三个字“不知道”。结果可想而知，老师给气的让我们几个开小差的在讲台旁边站了一节课。高中的时候，学校让我们对班主任的工作写评语。因为老班早上特别勤快，刚一敲起床铃他就会定点出现在我们男生寝室的门口。然后就是在窗子边上一顿大吼：“xxx，赶快起床”。而我的床位正好靠窗户，所以几乎每次都给点名。于是，在写评语的时候，我就特意用家乡话喷了几句调侃的话语。后来，老班在班会上竟然念了这段评语。不过，貌似他得了一个年级的优秀班主任的荣誉，所以也没深入纠察了。所以说，少年时期的生活，就像把小时候的甜蜜在不知不觉中的冲淡，再掺杂一些苦涩和未知的触觉，从而构成了这段奇特的岁月。&lt;/p&gt;
&lt;p&gt;渐渐地到了青年期，你看到了一些令你感觉特别“奇怪的”事情。虽然你可能还会执着于小时候的梦想，但是，老天却硬是让现实之光把你的一些梦想照成了幻想。于是，你有时会变得不像往常那么快乐，有时会变得比较郁闷甚至是沮丧。岁月用它固执的甚至是比较残忍的方式告诉你，你已经不再年轻，不要那么幼稚，不要那么幻想，不要那么……所以当你看到一些不习惯的事情，你会告诉自己这是正常的，整个世界都是这样，何必要跟整个世界过不去呢？就这样，通过梦想和现实的交融和碰撞，你造就了你的世界观和价值观。你会变得更为理性地去看待周围的一些事情，而不是冲动或者像年少的自己那样坚持错误。因为现实已经不断地告诉你，你已经不小了，要是小时候的错误还延续在现阶段的你的生活中，那将是不可原谅的。然而，现实不仅把理性写进了青年时期的画布，还残忍地用或重或淡的画笔涂抹掉了我们那些年执着的岁月或者说是那些年我们坚挺过的梦想。你可能再也不会像年少的自己有一种管他三七二十一的勇气来面对那些曾经拥有过的梦想。但是这个时期，你确实学会了很多很多，你解了什么是真正的生活，并且你也逐渐地学会了怎样去适应它，然后再调整自己的火力把梦想现实化和最大化。所以说青年时期的生活是把一些不可企及的东西摒弃掉，然后调整梦想到合适的位置，最后在现实的一些约束里把他具体化和最大化。不管生活怎么样，有一点我始终坚持的就是：“没有什么可以阻挡一颗向上的心！”&lt;/p&gt;
&lt;p&gt;PS一篇比较好的文章，题为：《在路上》&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;路是自己走出来的。

不苛求每一步的完美，只要黑暗来临时，我的脚步依然是向前的；在风雨出现时，我依然面朝前方；在阳光显现时，我用心去触摸了它的温暖；当桃花盛开时，春风会告诉我那是甜蜜幸福在驻足……

在路上有的是泥泞，够你挣扎，但请看到你站起来的身影是那样的高大伟岸；在路上有的是荆棘，够你疼痛，但请不要忘记你在劈开你生命中另一个世界；在路上有的是鲜花，请放慢你的步伐，因为这弥漫的美丽是你用汗水浇灌而来的，且受用一下这无边的惬意！

在路上，不会忘记那么一些人：他们经常唠叨着一些你暂时不爱听的东西，这是伟大的父母。可能换来的只是抱怨，但他们却无悔地持续了几十载！苦闷时，一个招呼甚至不用招呼会有人站出来，陪你聊聊天，打打球，陪你上网，陪你喝酒…甚至就只是默默地和你呆着，在他们那里看到了无尽力量，让我们有勇气继续脚下的路--朋友，朋友！

路是自己走出来的，在乎结局，也在乎过程。享受了过程，不要忘了收获结局！
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="Some Thing about Life" src="https://o3cex9zsl.qnssl.com/2012/07/12.jpg" title="Some Thing about Life" /&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Thu, 26 Jul 2012 00:00:00 +0800</pubDate><guid>tag:typecodes.com,2012-07-26:mix/thinkaboutlife.html</guid><category>生活</category></item><item><title>翻越那道墙，用谷歌Goagent打造自己的chrome利器</title><link>https://typecodes.com/mix/chromegoagent.html</link><description>&lt;p&gt;网络的crossover，有很多方法。比如，通用的Free Gate软件等，也有用vpn代理的。对于第一种方法，一般这种软件都比较贱，非要在你使用的时候，时不时地打开一些网页来提醒你它的存在；对于第二种方法，免费的vpn已经比较少了，就算有也是有流量限制或者网速限制的。这篇文章推荐使用谷歌的Goagent代理，来打造自己的cross利器！废话少说，具体步骤如下说明：&lt;/p&gt;
&lt;h5&gt;1 全过程需要有自己的Gmail账号&lt;/h5&gt;
&lt;p&gt;没有的话，请点击以下链接：&lt;a href="https://mail.google.com/mail/signup" title="Gmail注册"&gt;Gmail注册&lt;/a&gt;。&lt;/p&gt;


&lt;h5&gt;2 在谷歌GAE里创建APP应用&lt;/h5&gt;
&lt;p&gt;废话：Google App Engine（简称GAE）是一个开发、托管网络应用程序的平台，使用 Google 管理的数据中心。它使用了云计算技术。它跨越多个服务器和数据中心来虚拟化应用程序。其他基于云的平台还有 Amazon Web Services 和微软的 Azure 服务平台等。而且在用户使用一定的资源时是免费的。支付额外的费用可以获得应用程序所需的更多的存储空间、带宽或是CPU负载。GAE当前支持的编程语言是 Python 和 Java。&lt;/p&gt;
&lt;p&gt;重点：登录并创建APP应用：&lt;a href="https://appengine.google.com/start/createapp" title="登录并创建谷歌APP应用"&gt;https://appengine.google.com/start/createapp&lt;/a&gt;，第一次创建需要手机验证，填写+86 12345678912即可。手机验证后会出现一个应用填表，主要填写Application Identifier（APP应用标识号）和Application Title（APP应用名称），其余选项保持默认。&lt;/p&gt;
&lt;p&gt;&lt;img alt="翻越那道墙，用谷歌Goagent打造自己的chrome利器-1" src="https://o3cex9zsl.qnssl.com/2012/07/11.jpg" title="翻越那道墙，用谷歌Goagent打造自己的chrome利器-1" /&gt;&lt;/p&gt;
&lt;h5&gt;3 下载谷歌Goagent代理工具&lt;/h5&gt;
&lt;p&gt;废话：goagent是一个使用Python和Google Appengine SDK编写的代理软件。
重点：下载谷歌Goagent：&lt;a href="https://code.google.com/p/goagent/" title="下载谷歌Goagent"&gt;https://code.google.com/p/goagent/&lt;/a&gt;。解压后会得到两个文件夹：“local”（用来配置本地客户端）和“server”（用来配置服务端）。&lt;/p&gt;
&lt;h5&gt;4 上传goagent服务端和配置客户端&lt;/h5&gt;
&lt;h6&gt;4.1 上传服务端&lt;/h6&gt;
&lt;p&gt;如果是第一次建立这个应用的话，需要把配置文件上传到服务端；如果已建立这个应用，可以跳过这一步，直接进入下一步，即配置客户端。打开server/python路径下的“app.yaml”，将第一行的“application: “改成”application:1-vfhky（即自己创建的APP标识名称）”的形式。然后点击的“uploader.bat”，这时弹出一个DOS界面提示输入“AppID:”，填写开始创建的那个APP标识名称（例如1-vfhky）。输入正确后，又会提示输入你的Gmail的账号和密码（在输入密码时，DOS窗口不会显示密码，不用管，只要输入正确即可。然后按回车，等上传完毕后输入任意键关闭）。&lt;/p&gt;
&lt;h6&gt;4.2 配置客户端&lt;/h6&gt;
&lt;p&gt;用记事本等文本工具打开local文件夹里面的“proxy.ini”文件，把[gae]栏目下的appid=goagent换成你的AppID，例如appid = 1-vfhky。&lt;/p&gt;
&lt;h5&gt;5 配置浏览器&lt;/h5&gt;
&lt;p&gt;在自己的chrome浏览器中下载Proxy SwitchySharp插件：&lt;a href="https://chrome.google.com/webstore/detail/dpplabbmogkhghncfbfdeeokoefdjegm" title="下载谷歌Proxy SwitchySharp插件"&gt;https://chrome.google.com/webstore/detail/dpplabbmogkhghncfbfdeeokoefdjegm&lt;/a&gt;
安装后打开Proxy SwitchySharp插件的选项：在“导入/导出”栏目的最下行，“在线恢复备份”栏输入：https://raw.github.com/phus/phus-config/master/SwitchyOptions.bak或者https://goagent.googlecode.com/files/SwitchyOptions.bak，最后点击“在线恢复备份” 。&lt;/p&gt;
&lt;p&gt;&lt;img alt="翻越那道墙，用谷歌Goagent打造自己的chrome利器-2" src="https://o3cex9zsl.qnssl.com/2012/07/2.jpg" title="翻越那道墙，用谷歌Goagent打造自己的chrome利器-2" /&gt;&lt;/p&gt;
&lt;h5&gt;6 开始翻越（启动goagent.exe）&lt;/h5&gt;
&lt;p&gt;1、点击“local”文件夹下的goagent.exe（第一次运行可能需要管理员权限）。ps：如果觉得每次都要点击这个文件麻烦的话，可以设置goagent程序开机自启动，运行“local”文件夹下的“addto-startup.vbs”文件即可。&lt;/p&gt;
&lt;p&gt;2、正式翻越，一般是在chrome浏览器的地址输入栏或者插件栏可以看到Proxy SwitchySharp插件上点击选择GoAgent，然后就可以看youtube.com，facebook.com，twitter.com以及真正的谷歌大神google.com等等。&lt;/p&gt;
&lt;p&gt;&lt;img alt="翻越那道墙，用谷歌Goagent打造自己的chrome利器-3" src="https://o3cex9zsl.qnssl.com/2012/07/3.jpg" title="翻越那道墙，用谷歌Goagent打造自己的chrome利器-3" /&gt;&lt;/p&gt;
&lt;h5&gt;7 说明&lt;/h5&gt;
&lt;p&gt;Google App Engine提供给免费用户的流量是每天1GB，而且每天的流量重新清零的时间好像是北京时间下午16点整（不是24点额）。&lt;/p&gt;
&lt;h5&gt;8 UPDATE 2012.10.08&lt;/h5&gt;
&lt;p&gt;如果嫌上述操作比较麻烦，可以下载我用自己的配置好的Goagent文件，然后直接从第五步操作执行就行了。下载地址：&lt;/p&gt;
&lt;p&gt;百度云盘：http://pan.baidu.com/share/link?shareid=78704&amp;amp;uk=1879910561&lt;/p&gt;
&lt;h5&gt;9 UPDATE 2013.10.17 21:14&lt;/h5&gt;
&lt;p&gt;如果goagent软件、Proxy SwitchySharp插件和.bak文件被墙无法下载，请移步到上面网盘地址下载。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Wed, 25 Jul 2012 22:10:00 +0800</pubDate><guid>tag:typecodes.com,2012-07-25:mix/chromegoagent.html</guid><category>goagent</category><category>梯子</category></item><item><title>配置IIS出现错误的解决方法</title><link>https://typecodes.com/web/crlfloophole.html</link><description>&lt;h5&gt;1 问题描述&lt;/h5&gt;
&lt;p&gt;昨天博客重新改用了一个插件，这个插件虽然也是wordpress官方插件，但是在安装之后网站就出现了一个高危漏洞。根据WASC Threat Classification的说明，该漏洞名称叫做“HTTP响应拆分漏洞”，也叫“CRLF注入攻击”。CR、LF分别对应回车（%0d）、换行（%0a）字符。HTTP头由很多被CRLF组合分离的行构成，每行的结构都是“键：值”。如果用户输入的值部分注入了CRLF字符，它有可能改变的HTTP报头结构。&lt;/p&gt;
&lt;p&gt;HTTP响应拆分是一个新的应用程序的攻击技术，使网页缓存中毒，跨用户涂改，如各种新的攻击，劫持用户的敏感信息和跨站点脚本（XSS）的网页。&lt;/p&gt;


&lt;p&gt;&lt;img alt="小议网站HTTP响应拆分漏洞-1" src="https://o3cex9zsl.qnssl.com/2012/07/12.png" title="小议网站HTTP响应拆分漏洞-1" /&gt;&lt;/p&gt;
&lt;h5&gt;2 解决思路&lt;/h5&gt;
&lt;p&gt;根据常识，这种现象往往表现在带有参数传递的网页，例如 &lt;code&gt;typecodes.com/?page=传递的参数&lt;/code&gt; 。于是，我赶紧查看了一下这个插件。在它的一个页面里面我看到了两行代码： $post = $_GET['p'];、$download = $_GET['download']; 。然而，它后面却没有对这两个传递的参数$post和$download 进行处理。这样就很可能造成注入漏洞。例如，在数据库的操作中就很注重一些防注入的处理。在“PHP和ASP的数据库连接代码”这篇文章的conn.asp的代码中就对回车键和换行键进行了处理。所以，对参数$post和$download运用PHP语法中的正则表达式ereg_replace或者字符串处理函数str_replace进行操作。大家只要在参数被写入到数据库之前把它过滤即可。&lt;/p&gt;
&lt;h5&gt;3 解决代码&lt;/h5&gt;
&lt;p&gt;根据 ereg_replace 和 str_replace 这两个字符串处理函数可以用一下两种代码解决。&lt;/p&gt;
&lt;h6&gt;3.1 用ereg_replace函数解决&lt;/h6&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
    &lt;span class="nv"&gt;$post&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;trim&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$post&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//$post为需要过滤的参数&lt;/span&gt;
    &lt;span class="nv"&gt;$post&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;strip_tags&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$post&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//清除HTML如&amp;lt;br/&amp;gt;等代码&lt;/span&gt;
    &lt;span class="nv"&gt;$post&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;ereg_replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$post&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//去掉制表符号&lt;/span&gt;
    &lt;span class="nv"&gt;$post&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;ereg_replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\r\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$post&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//去掉回车换行符号&lt;/span&gt;
    &lt;span class="nv"&gt;$post&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;ereg_replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\r&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$post&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//去掉回车&lt;/span&gt;
    &lt;span class="nv"&gt;$post&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;ereg_replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$post&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//去掉换行&lt;/span&gt;
    &lt;span class="nv"&gt;$post&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;ereg_replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$post&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//去掉空格&lt;/span&gt;
    &lt;span class="nv"&gt;$post&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;ereg_replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;#39;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$post&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//去掉单引号&lt;/span&gt;
&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h6&gt;3.2 用str_replace函数解决&lt;/h6&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6
7
8
9&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
    &lt;span class="nv"&gt;$post&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;trim&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$post&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//$post为需要过滤的参数&lt;/span&gt;
    &lt;span class="nv"&gt;$post&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;strip_tags&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$post&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//清除HTML如&amp;lt;br/&amp;gt;等代码&lt;/span&gt;
    &lt;span class="nv"&gt;$post&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str_replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;str_replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$post&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;&lt;span class="c1"&gt;//去掉空格和换行&lt;/span&gt;
    &lt;span class="nv"&gt;$post&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str_replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$post&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//去掉制表符号&lt;/span&gt;
    &lt;span class="nv"&gt;$post&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str_replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\r\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$post&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//去掉回车换行符号&lt;/span&gt;
    &lt;span class="nv"&gt;$post&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str_replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\r&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$post&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//去掉回车&lt;/span&gt;
    &lt;span class="nv"&gt;$post&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str_replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;#39;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$post&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//去掉单引号&lt;/span&gt;
&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h6&gt;3.3 问题延伸讨论&lt;/h6&gt;
&lt;p&gt;当然对$download参数的处理也是类似的（即把上述代码中的$post全部改成$download即可），就不贴出代码了。通过这个处理，解决了“HTTP响应拆分漏洞”的问题。&lt;/p&gt;
&lt;p&gt;&lt;img alt="小议网站HTTP响应拆分-2" src="https://o3cex9zsl.qnssl.com/2012/07/22.png" title="小议网站HTTP响应拆分-2" /&gt;&lt;/p&gt;
&lt;h5&gt;4 Update 2012-12-30 18:26&lt;/h5&gt;
&lt;h6&gt;4.1 存在“http响应拆分漏洞”的CMS系统&lt;/h6&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;WordPress的wp-codebox插件
Shopex商城系统
wordpress评论者链接网址重定向跳转插件
ecshop商城系统
UCHOME
&lt;/pre&gt;&lt;/div&gt;


&lt;h6&gt;4.2 上述系统漏洞的解决方案&lt;/h6&gt;
&lt;p&gt;考虑到如果需要过滤的参数比较多的话（像Shopex的一个漏洞就需要过滤十多个参数），那么要修改的代码量就非常大，所以我把它封装在一个函数handel_http($parameter)里，这样以后只要在需要的地方调用即可。大家可以把下面任意一段代码扔到自己网站的出现漏洞的页面里面或者其它封装好的php文件中（然后在漏洞页面引入该文件并调用handel_http($parameter)即可），wordpress用户可以扔到自己主题下面的functions.php里面）&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
    &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;handel_http&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$parameter&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="nv"&gt;$parameter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;trim&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$parameter&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//$parameter为需要过滤的参数&lt;/span&gt;
        &lt;span class="nv"&gt;$parameter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;strip_tags&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$parameter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//清除HTML如&amp;lt;br/&amp;gt;等代码&lt;/span&gt;
        &lt;span class="nv"&gt;$parameter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;ereg_replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$parameter&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//去掉制表符号&lt;/span&gt;
        &lt;span class="nv"&gt;$parameter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;ereg_replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\r\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$parameter&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//去掉回车换行符号&lt;/span&gt;
        &lt;span class="nv"&gt;$parameter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;ereg_replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\r&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$parameter&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//去掉回车&lt;/span&gt;
        &lt;span class="nv"&gt;$parameter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;ereg_replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$parameter&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//去掉换行&lt;/span&gt;
        &lt;span class="nv"&gt;$parameter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;ereg_replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$parameter&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//去掉空格&lt;/span&gt;
        &lt;span class="nv"&gt;$parameter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;ereg_replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;#39;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$parameter&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//去掉单引号&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$parameter&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;

&lt;span class="x"&gt;//方法二&lt;/span&gt;

&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt; 
    &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;handel_http&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$parameter&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;  
        &lt;span class="nv"&gt;$parameter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;trim&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$parameter&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//$parameter为需要过滤的参数&lt;/span&gt;
        &lt;span class="nv"&gt;$parameter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;strip_tags&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$parameter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//清除HTML如&amp;lt;br/&amp;gt;等代码&lt;/span&gt;
        &lt;span class="nv"&gt;$parameter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str_replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;str_replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$parameter&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;&lt;span class="c1"&gt;//去掉空格和换行&lt;/span&gt;
        &lt;span class="nv"&gt;$parameter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str_replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$parameter&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//去掉制表符号&lt;/span&gt;
        &lt;span class="nv"&gt;$parameter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str_replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\r\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$parameter&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//去掉回车换行符号&lt;/span&gt;
        &lt;span class="nv"&gt;$parameter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str_replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\r&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$parameter&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//去掉回车&lt;/span&gt;
        &lt;span class="nv"&gt;$parameter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str_replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;#39;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$parameter&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//去掉单引号&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$parameter&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h6&gt;4.3 上述代码调用方法示例&lt;/h6&gt;
&lt;p&gt;例如过滤网站注册用户名username参数，那么只需要在漏洞页面的username参数值被写入到数据库之前调用一下函数：&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6
7
8&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
  &lt;span class="nv"&gt;$username&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;handel_http&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$username&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
  &lt;span class="o"&gt;/&lt;/span&gt;
  &lt;span class="o"&gt;***&lt;/span&gt;&lt;span class="nx"&gt;接下来对&lt;/span&gt;&lt;span class="nv"&gt;$username的任何操作就都安全了&lt;/span&gt;&lt;span class="o"&gt;***&lt;/span&gt;
  &lt;span class="o"&gt;***&lt;/span&gt;&lt;span class="nx"&gt;接下来对&lt;/span&gt;&lt;span class="nv"&gt;$username的任何操作就都安全了&lt;/span&gt;&lt;span class="o"&gt;***&lt;/span&gt;
  &lt;span class="o"&gt;***&lt;/span&gt;&lt;span class="nx"&gt;接下来对&lt;/span&gt;&lt;span class="nv"&gt;$username的任何操作就都安全了&lt;/span&gt;&lt;span class="o"&gt;***&lt;/span&gt;
  &lt;span class="o"&gt;/&lt;/span&gt;
&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h5&gt;5 Update 2013-03-01 21:01&lt;/h5&gt;
&lt;h6&gt;5.1 定期更新的解决方案库&lt;/h6&gt;
&lt;p&gt;针对wordpress评论者链接网址重定向跳转插件造成的http拆分响应漏洞，博主给出解决方案，链接地址：http://pan.baidu.com/share/link?shareid=78704&amp;amp;uk=1879910561。在此感谢 &lt;a href="http://vfhky.sinaapp.com/web/php/20.html/comment-page-3#div-comment-790" title="查看 冬哥 的评论"&gt;“冬哥”&lt;/a&gt; 童鞋在评论中给出漏洞代码，博主得以写出解决方案。对于剩余的那几个系统的漏洞，有兴趣的读者可以提供相应的漏洞页面的代码，发到vfhky的邮件或QQ，博主也会及时公布对应的解决方案（请勿直接在文章的留言中加入代码！！！）&lt;/p&gt;
&lt;h6&gt;5.2 UCHOME漏洞解决演示&lt;/h6&gt;
&lt;p&gt;更新于2013-03-11 20:31。针对UCHOME中的link.php造成的http拆分响应漏洞，博主给出的解决方案依然是在上面的下载地址中。大家测试看看，记得反馈额。&lt;/p&gt;
&lt;h5&gt;6 Update 2013-7-15 23:35&lt;/h5&gt;
&lt;p&gt;根据 @神情话意 的评论反馈，由于函数ereg_replace在PHP5.3中被弃用而报错，所以废除ereg_replace函数的解决方案。建议大家无论自己的服务器的PHP版本是5.2或是5.3等等，统一使用str_replace函数的解决方案。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Tue, 24 Jul 2012 13:31:00 +0800</pubDate><guid>tag:typecodes.com,2012-07-24:web/crlfloophole.html</guid><category>crlf漏洞</category><category>http响应拆分</category></item><item><title>网站的robots和.htaccess应该如何写</title><link>https://typecodes.com/web/siterobotshtaccess.html</link><description>&lt;p&gt;首先，我们了解一下robots和.htacces这两个文件是什么：①robots即文件robots.txt，存放位置为网站的根目录。它是搜索引擎中访问网站的时候要查看的第一个文件。robots.txt文件告诉蜘蛛程序在服务器上什么文件是可以被查看并收录的，而什么文件又是不能让这些搜索引擎查看和收录的。因为一旦一些服务器上的重要文件目录或者文件被别有用心的人搜索到的话，会构成网站安全的巨大威胁。所以有必要写好网站的robots。②.htaccess文件是Apache服务器中的一个配置文件，它负责相关目录下的网页配置。通过htaccess文件，可以帮我们实现：网页301重定向、自定义404错误页面、改变文件扩展名、允许/阻止特定的用户(ip)或者目录的访问、禁止目录列表、配置默认文档等功能。&lt;/p&gt;


&lt;p&gt;其次，分别了解robots和.htacces的具体写法：&lt;/p&gt;
&lt;p&gt;一、robots.txt文件：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;User-agent: *       //针对所有的搜索引擎，把*符号改成Googlebot（google蜘蛛）或者Baiduspider（百度蜘蛛）等
Disallow: /*?*      //禁止访问网站中所有的动态页面
Disallow: /wp-*     //禁止引擎蜘蛛爬行任何以 wp- 形式命名的目录下面的目录或者文件
Disallow: /wp-admin
Disallow: /?s*
Disallow: /*.gif$       //不允许抓取网页中存放的gif格式的图片
Disallow: /*.png$
Disallow: /*.bmp$
Disallow: /*.swf$
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;网站的robots.txt文件只要列出不允许（Disallow）被搜索引擎访问的内容即可，未列出的会被自动视为可以（Allow）访问并收录的内容。&lt;/p&gt;
&lt;p&gt;二、htaccess文件：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;# BEGIN WordPress
&lt;span class="nt"&gt;&amp;lt;ifmodule&lt;/span&gt; &lt;span class="err"&gt;mod_rewrite.c&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
#重定向index.php到主域名
RewriteEngine On
RewriteBase /
RewriteRule ^index\.php$ - [L]
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteRule . /index.php [L]

#阻止没有referrer requests的评论减少垃圾评论
RewriteCond %{REQUEST_METHOD} POST
RewriteCond %{REQUEST_URI} .wp-comments-post.php*
RewriteCond %{HTTP_REFERER} !.*xxx.com.* [OR]
RewriteCond %{HTTP_USER_AGENT} ^$
RewriteRule (.*) ^http://%{REMOTE_ADDR}/$ [R=301,L]

#保护wp-config文件（自动跳转到404.php）
&lt;span class="nt"&gt;&amp;lt;files&lt;/span&gt; &lt;span class="err"&gt;wp-config.php&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
order allow,deny
deny from all
&lt;span class="nt"&gt;&amp;lt;/files&amp;gt;&lt;/span&gt;

#保护.htaccess文件（自动跳转到404.php）
&lt;span class="nt"&gt;&amp;lt;files&lt;/span&gt; &lt;span class="err"&gt;.htaccess&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
order allow,deny
deny from all
&lt;span class="nt"&gt;&amp;lt;/files&amp;gt;&lt;/span&gt;

#设置缓存
FileETag MTime Size
ExpiresActive on
ExpiresDefault &amp;quot;access plus 1 year&amp;quot;

#开启gzip
AddOutputFilterByType DEFLATE text/html text/plain text/xml application/xml application/xhtml+xml text/javascript text/css application/x-javascript
BrowserMatch ^Mozilla/4 gzip-only-text/html
BrowserMatch ^Mozilla/4.0[678] no-gzip
BrowserMatch bMSIE !no-gzip !gzip-only-text/html

# 禁止列出目录(跳到404.php)
Options All -Indexes

#禁止某个ip访问整个网站（服务器500错误）
#order allow,deny
#deny from 123.123.123.123
#deny from 456.456.456.*
#deny from 789.789.*.*
#allow from all

&lt;span class="nt"&gt;&amp;lt;/ifmodule&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;END WordPress&lt;/h1&gt;
&lt;p&gt;这个也是wordpress中.htaccess文件的具体代码。具体的代码功能在上面已经通过#注释了。我想说明的是：①禁止列出目录是很重要的，比如针对博客类的网站，你可以通过访问http://网站域名/wp-admin/images/来查看网站的目录安全性。解决方法有两种，一种是使用上面的代码，另一种是在 images文件夹的目录下放置一个index.php或者index.htm文件（内容可以不填）。②设置网站的防盗链也是很有必要的，具体代码如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;RewriteBase /wp-content/uploads/
RewriteCond %{HTTP_REFERER} !^$ [NC]
RewriteCond %{HTTP_REFERER} !sina.com.cn [NC]
RewriteCond %{HTTP_REFERER} !google.com [NC]
RewriteCond %{HTTP_REFERER} !baidu.com [NC]
RewriteCond %{HTTP_REFERER} !qq.com [NC]
RewriteCond %{HTTP_REFERER} !feedsky.com [NC]
RewriteCond %{HTTP_REFERER} !xianguo.com [NC]
RewriteCond %{HTTP_REFERER} !zhuaxia.com [NC]
RewriteCond %{HTTP_REFERER} !yahoo.com [NC]
RewriteRule .*\.(gif|jpg|jpeg|png|bmp|zip|rar|7z|swf|mp3)$ http://vfhky.sinaapp.com/error.png [NC,L]
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;其中，第一行 RewriteBase /wp-content/uploads/ 表示该目录下的文件是禁止盗链的。即如果uploads目录是你上传文件图片视频音乐等文件的地方，一般盗链耗流量的大户都在这里；第二行 RewriteCond %{HTTP_REFERER} !^$ [NC] 表示如果是用户直接访问你的图片则正常显示图片；另外，像 RewriteCond %{HTTP_REFERER} !royaso.com [NC] 这样的代码表示允许像百度、谷歌、qq之类的“盗链”，也显示正常的图片；倒数第二行 RewriteRule .*.(gif|jpg|jpeg|png|bmp|zip|rar|7z|swf|mp3)$ 表示设置防盗链的文件类型：图片、压缩文件、视频、音乐；最后一行代码表示如果不是上述的几种情况，那么将会被视为盗链，盗链后显示的图片为fangdaolian.png。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Thu, 19 Jul 2012 11:36:00 +0800</pubDate><guid>tag:typecodes.com,2012-07-19:web/siterobotshtaccess.html</guid><category>robots</category><category>.htaccess</category></item><item><title>DEDE织梦和Discuz整合方法</title><link>https://typecodes.com/web/combinededediscuz.html</link><description>&lt;h5&gt;1 本地织梦和dz安装目录如下：127.0.0.1/dd，127.0.0.1/dz&lt;/h5&gt;
&lt;p&gt;其中dz已经安装了ucenter（在127.0.0.1/dz/uc_server），在dz后台的“应用管理”中可以看到有个“Discuz！Board”通信成功的应用。&lt;/p&gt;


&lt;h5&gt;2 进入dd后台配置UCenter&lt;/h5&gt;
&lt;p&gt;点击“模块”→“模块管理”→下载并安装UCenter模块后点击“UCenter配置”→其中“服务端地址”填写“http://127.0.0.1/dz/uc_server”，“创始人”填写“8888”，“服务端”填写“127.0.0.1”→点击“确认安装”。立即到dz后台的UCenter查看“应用管理”→看到除了那个“Discuz！Board”应用外，还出现了dd的一个应用（dd网站的名称，我的叫做“DEDE测试“），也显示通信成功。&lt;/p&gt;
&lt;h5&gt;3 进入dz后台配置通信密钥&lt;/h5&gt;
&lt;p&gt;在dz后台，复制“Discuz！Board”的“通信密钥”到“DEDE测试”的“通信密钥”，也就是使dd的通信密钥和dz的通信密钥相同。这时会出现“DEDE测试”显示“通信失败”。&lt;/p&gt;
&lt;h5&gt;4 进入dd后台配置相同的密钥&lt;/h5&gt;
&lt;p&gt;进入dd后台，点击“UCenter配置”，把刚复制的通信密钥粘贴到dd的UCenter的“通信密钥”，使得dd的通信密钥和dz的通信密钥相同→点击“提交保存”。这时进入dz后台的UCenter查看“应用管理”→看到“DEDE测试”显示“通信成功”。&lt;/p&gt;
&lt;h5&gt;5 整合完毕，测试能否同步&lt;/h5&gt;
&lt;p&gt;到此，整合工作已经完成。下面进行测试。&lt;/p&gt;
&lt;h5&gt;6 注册织梦账号&lt;/h5&gt;
&lt;p&gt;在织梦127.0.0.1/dd下注册一个账号hkyhky&lt;/p&gt;
&lt;p&gt;&lt;img alt="在DEDE中账号hkyhky" src="https://o3cex9zsl.qnssl.com/2012/07/11.png" title="在DEDE中账号hkyhky" /&gt;&lt;/p&gt;
&lt;h5&gt;7 dz中未激活该账号&lt;/h5&gt;
&lt;p&gt;这时进入dz首页却发现没出现hkyhky的登录信息&lt;/p&gt;
&lt;p&gt;&lt;img alt="DZ中没有出现登录信息" src="https://o3cex9zsl.qnssl.com/2012/07/21.png" title="DZ中没有出现登录信息" /&gt;&lt;/p&gt;
&lt;h5&gt;8 在dz中激活dd中的账号&lt;/h5&gt;
&lt;p&gt;这是因为账号还需要在dz中激活，于是输入账号进行激活：&lt;/p&gt;
&lt;p&gt;&lt;img alt="需要在DZ中激活账号" src="https://o3cex9zsl.qnssl.com/2012/07/31.png" title="需要在DZ中激活账号" /&gt;&lt;/p&gt;
&lt;h5&gt;9 在dz中点击激活按钮&lt;/h5&gt;
&lt;p&gt;点击“激活”即可。&lt;img alt="点击“激活”账号" src="https://o3cex9zsl.qnssl.com/2012/07/41.png" title="点击“激活”账号" /&gt;&lt;/p&gt;
&lt;h5&gt;10 在dz中测试能否同步&lt;/h5&gt;
&lt;p&gt;在dd中退出hkyhky的登录，再进入dz也可以看到hkyhky已经退出登录;同样进入dz中登录hkyhky账号，在dd中可以看到hkyhky的登录信息;而在dz中退出hkyhky的登录，在dd中可以看到hkyhky也退出登录。上述情况说明二者已经通信成功！&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Wed, 04 Jul 2012 13:40:00 +0800</pubDate><guid>tag:typecodes.com,2012-07-04:web/combinededediscuz.html</guid><category>dede整合discuz</category></item><item><title>解决C#生成的.exe文件“一闪而过”的问题</title><link>https://typecodes.com/csharp/exeflashacross.html</link><description>&lt;p&gt;在点击用C#命令提示工具生成.exe文件时，很可能会出现“一闪而过”的问题。&lt;/p&gt;
&lt;p&gt;方法1：这个方法是通用的：在.CS代码的最后加上这句 Console.ReadLine(); ，它的作用是“等待用户输入”，这样DOS窗口直到你敲击回车键才会关闭；或者在程序最后加上一句 Console.ReadKey(); ，这样DOS窗口接收一个字符才会退出。&lt;/p&gt;
&lt;p&gt;方法2：如果.CS文件是在C#项目中的话，那么运行程序的时候，不要按 F5（启动调试） ，用 Ctrl+F5  ，它的意思是“启动执行（不调试）”。&lt;/p&gt;
&lt;p&gt;方法3：在CMD下运行程序。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Wed, 04 Jul 2012 13:02:00 +0800</pubDate><guid>tag:typecodes.com,2012-07-04:csharp/exeflashacross.html</guid><category>c#</category></item><item><title>如何删除Win7任务栏上通知区域中的多余图标</title><link>https://typecodes.com/mix/delwin7surpic.html</link><description>&lt;p&gt;在Win7桌面右下角的通知区域图标中，会看到很多通知图标，但很多人会遇到这样的情况，那就是自己明明已经删除了的软件，但是它还是会以通知图标的形式出现在这个通知区域内。那么我们又如何删除这些图标从而得到一个简洁的通知图标呢？&lt;/p&gt;
&lt;p&gt;步骤1 按住 "win+R" 打开"运行"窗口，然后输入 “regedit” 打开注册表编辑器。&lt;/p&gt;


&lt;p&gt;步骤2 在注册表中一次展开 HKEY_CLASSES_ROOT\Local Settings\Software\Microsoft\Windows\CurrentVersion\TrayNotify ，在右边你会看到如下两个键值 IconStreams 和 PastIconsStream ，将它们删除即可。&lt;/p&gt;
&lt;p&gt;步骤3 重启任务管理器：按住 "ctr+shift+esc" 调出任务管理器将进程 "explorer.exe" 终止，再在任务管理器中点击"文件——新建任务"重新输入 "explorer" ——确定就可以见证奇迹的时刻了。&lt;/p&gt;
&lt;p&gt;&lt;img alt="编辑注册表" src="https://o3cex9zsl.qnssl.com/2012/07/1.jpg" title="编辑注册表" /&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Wed, 04 Jul 2012 12:24:00 +0800</pubDate><guid>tag:typecodes.com,2012-07-04:mix/delwin7surpic.html</guid><category>win7删除多余图标</category></item><item><title>配置IIS出现错误的解决方法</title><link>https://typecodes.com/web/configiiserr.html</link><description>&lt;p&gt;在给ASP或者ASP.NET等需要配置IIS服务器的过程中，很可能会遇到以下两种错误。尤其是用Win7系统的，配置IIS7.0版本比用XP系统配置IIS5.1版本而言要复杂复杂一些。当同时需要配置ASP和ASP.NET共存的IIS服务器环境时会更有挑战性。下面是我的两个总结:&lt;/p&gt;
&lt;h5&gt;1 错误提示：ADODB.Connection 错误 '800a0e7a'，未找到提供程序。&lt;/h5&gt;
&lt;p&gt;解决：原来的网站是在32位的windows环境中生成的导致在win764位中出现错误（IIS7应用程序池默认没有启用32位程序，也就是说如果使用的是64位操作系统，而没有64位的Jet 4.0驱动程序，那么就要在IIS7中启用32位程序）。此时点击IIS管理器左边的“应用程序池”在“启用32位应用程序”选择“True”。&lt;/p&gt;


&lt;h5&gt;2 错误提示：HTTP 错误 500.19&lt;/h5&gt;
&lt;p&gt;当遇到 【HTTP 错误 500.19 - Internal Server Error web.config 文件的 system.webServer/httpErrors 节中不允许绝对物理路径“C:\inetpub\custerr” 。请改用相对路径。】的错误时，可以通过以下方式解决。&lt;/p&gt;
&lt;p&gt;该错误是由于在配置ASP的过程中，配置了”错误页”中的“500.html”为“500.asp”的缘故，在ASP网站目录中生成了一个web.cofig的文件，只要打开自己的ASP网站所在的文件夹，删除该文件即可。没有的的话，就到 C:\inetpub\wwwroot\web.cofig 中删除从 httperrors 到 /httperrors 结束的这段代码即可，其中包括 %SystemDrive%\inetpub\custerr" path="500.asp" responseMode="File" 这段代码。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Tue, 03 Jul 2012 22:40:00 +0800</pubDate><guid>tag:typecodes.com,2012-07-03:web/configiiserr.html</guid><category>iis</category></item><item><title>PHP和ASP的数据库连接代码</title><link>https://typecodes.com/database/phpaspconndb.html</link><description>&lt;h5&gt;（一）PHP的连接代码&lt;/h5&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6
7
8&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
    &lt;span class="nv"&gt;$hostname&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;hostname&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="c1"&gt;//MySQL主机/服务器名&lt;/span&gt;
    &lt;span class="nv"&gt;$dbname&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;dbname&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="c1"&gt;//MySQL数据库名&lt;/span&gt;
    &lt;span class="nv"&gt;$username&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;username&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="c1"&gt;//MySQL用户名&lt;/span&gt;
    &lt;span class="nv"&gt;$password&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;password&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="c1"&gt;//MySQL密码&lt;/span&gt;
    &lt;span class="nv"&gt;$conn&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;mysql_connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$hostname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$password&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;or&lt;/span&gt; &lt;span class="nb"&gt;trigger_error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;mysql_error&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;&lt;span class="nx"&gt;E_USER_ERROR&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="c1"&gt;//登录并连接MySQL&lt;/span&gt;
    &lt;span class="nb"&gt;mysql_select_db&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$dbname&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="c1"&gt;//选择数据库dbname&lt;/span&gt;
&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;将上述代码另存为conn.php，就可以通过在页面加入 require("conn.php"); 调用了。&lt;/p&gt;


&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
    &lt;span class="k"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;conn.php&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nv"&gt;$sql&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;select * from wp_users where ID=1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;//SQL语句 &lt;/span&gt;
    &lt;span class="nv"&gt;$result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;mysql_query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$sql&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$conn&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
    &lt;span class="nv"&gt;$row&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;mysql_fetch_array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$result&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$row&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;user_login&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;$row&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ID&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;$row&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;user_pass&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nb"&gt;mysql_close&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;//关闭MySQL连接&lt;/span&gt;
    &lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;$sql =&amp;quot;select * from dbname_users where ID=1&amp;quot;; &lt;/span&gt;
&lt;span class="x"&gt;    $result = mysql_query($sql,$conn); //查询&lt;/span&gt;
&lt;span class="x"&gt;    $row = mysql_fetch_array($result);//获取结果&lt;/span&gt;
&lt;span class="x"&gt;    echo $row[&amp;#39;user_login&amp;#39;].$row[&amp;#39;ID&amp;#39;].$row[&amp;#39;user_pass&amp;#39;] ;//输出结果&lt;/span&gt;
&lt;span class="x"&gt;    mysql_close(); //关闭MySQL连接&lt;/span&gt;
&lt;span class="x"&gt;?&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h5&gt;（二）ASP的连接代码&lt;/h5&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;%&lt;/span&gt;
    &lt;span class="n"&gt;dim&lt;/span&gt; &lt;span class="n"&gt;conn&lt;/span&gt; 
    &lt;span class="n"&gt;dim&lt;/span&gt; &lt;span class="n"&gt;connstr&lt;/span&gt;
    &lt;span class="n"&gt;dim&lt;/span&gt; &lt;span class="n"&gt;db&lt;/span&gt;
    &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;database/#&amp;amp;#%24#$%da#%ta@##%conn#.asp&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="no"&gt;Access&lt;/span&gt;&lt;span class="err"&gt;数据库名称，出于安全性考虑把&lt;/span&gt;&lt;span class="n"&gt;mdb&lt;/span&gt;&lt;span class="err"&gt;后缀改为&lt;/span&gt;&lt;span class="n"&gt;asp&lt;/span&gt;
    &lt;span class="n"&gt;connstr&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Provider=Microsoft.Jet.OLEDB.4.0;Data Source=&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="no"&gt;Server&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MapPath&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;;Persist Security Info=False;Jet OLEDB:Database Password=a7612198981&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="err"&gt;数据库密码&lt;/span&gt;&lt;span class="n"&gt;a7612198981&lt;/span&gt;
    &lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;Server&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CreateObject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ADODB.Connection&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="no"&gt;Then&lt;/span&gt; 
    &lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clear&lt;/span&gt;
    &lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;nothing&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;
    &lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Open&lt;/span&gt; &lt;span class="n"&gt;connstr&lt;/span&gt;
    &lt;span class="nb"&gt;sub&lt;/span&gt; &lt;span class="no"&gt;CloseConn&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="no"&gt;Set&lt;/span&gt; &lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;nothing&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt; &lt;span class="nb"&gt;sub&lt;/span&gt;
    &lt;span class="n"&gt;function&lt;/span&gt; &lt;span class="no"&gt;Realstring&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;strsrc&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="no"&gt;Realstring&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;Replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;trim&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;strsrc&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;#39;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="err"&gt;把单引号替换成空字符&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt; &lt;span class="n"&gt;function&lt;/span&gt;
    &lt;span class="n"&gt;function&lt;/span&gt; &lt;span class="no"&gt;Convert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;strsrc&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="no"&gt;Convert&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;HTMLEncode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;trim&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;strsrc&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;#39;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="err"&gt;把单引号替换成空字符&lt;/span&gt;
    &lt;span class="no"&gt;Convert&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;Convert&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;chr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;lt;br&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="err"&gt;把回车替换成&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;br&lt;/span&gt; &lt;span class="sr"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="sr"&gt;    end function&lt;/span&gt;
&lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;将上述代码另存为conn.asp，就可以通过在页面加入&lt;code&gt;&amp;lt;--#include file="conn.asp"--&amp;gt;&lt;/code&gt;调用了。&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6
7&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;%&lt;/span&gt; 
    &lt;span class="n"&gt;sql&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;select * from dbname_users where ID=1 order by time desc &amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="n"&gt;rs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sql&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="err"&gt;执行查询&lt;/span&gt;
    &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt; &lt;span class="n"&gt;rs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;content&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="err"&gt;输出结果&lt;/span&gt;
    &lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="n"&gt;rs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;nothing&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="err"&gt;清空记录集&lt;/span&gt;
    &lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="err"&gt;关闭数据库&lt;/span&gt;
&lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Sun, 01 Jul 2012 13:27:00 +0800</pubDate><guid>tag:typecodes.com,2012-07-01:database/phpaspconndb.html</guid></item><item><title>几种编程语言的注释方法</title><link>https://typecodes.com/csharp/langannotation.html</link><description>&lt;h5&gt;1 HTML语言&lt;/h5&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;!doctype html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;en&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;UTF-8&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Document&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;HTML语言如何注释&amp;gt;/p&amp;gt;&lt;span class="c"&gt;&amp;lt;!--HTML注释文字--&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;



&lt;h5&gt;2 CSS样式&lt;/h5&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nc"&gt;.spostinfo&lt;/span&gt; &lt;span class="nt"&gt;ul&lt;/span&gt; &lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="k"&gt;line-height&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;24px&lt;/span&gt;&lt;span class="p"&gt;;}&lt;/span&gt;&lt;span class="c"&gt;/*转载注明样式*/&lt;/span&gt;
&lt;span class="nc"&gt;.backs&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="k"&gt;cursor&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;pointer&lt;/span&gt;&lt;span class="p"&gt;;}&lt;/span&gt;&lt;span class="c"&gt;/*站外引用trackback*/&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h5&gt;3 ASP语言&lt;/h5&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;%&lt;/span&gt;
    &lt;span class="n"&gt;classid1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;rs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;classid&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;sql&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;select  top 3 * from news where classid=&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;classid1&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot; order by time desc &amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="n"&gt;rs1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sql&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="no"&gt;ASP&lt;/span&gt;&lt;span class="err"&gt;注释的样式&lt;/span&gt;
    &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;rs1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;eof&lt;/span&gt;
&lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h5&gt;4 PHP语言&lt;/h5&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6
7
8&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="x"&gt;$arr_ok = str_replace(&amp;#39;&amp;quot;&amp;#39;,&amp;#39;&amp;#39;,$arr_ok);//用C++风格注释PHP&lt;/span&gt;
&lt;span class="x"&gt;$arr_ok = str_replace(&amp;quot;\n&amp;quot;, &amp;quot;&amp;quot;, str_replace(&amp;quot; &amp;quot;, &amp;quot;&amp;quot;, $arr_ok));&lt;/span&gt;
&lt;span class="x"&gt;/*&lt;/span&gt;
&lt;span class="x"&gt; 用C风格注释PHP&lt;/span&gt;
&lt;span class="x"&gt;*/&lt;/span&gt;
&lt;span class="x"&gt;$arr_ok = str_replace(&amp;quot;\t&amp;quot;,&amp;quot;&amp;quot;,$arr_ok); &lt;/span&gt;
&lt;span class="x"&gt;&amp;lt;!--用XML风格注释PHP--&amp;gt;&lt;/span&gt;
&lt;span class="x"&gt;$arr_ok = str_replace(&amp;quot;\r\n&amp;quot;,&amp;quot;&amp;quot;,$arr_ok);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h5&gt;5 Javascript语言&lt;/h5&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cm"&gt;/*&lt;/span&gt;
&lt;span class="cm"&gt;方法一：C风格注释JS&lt;/span&gt;
&lt;span class="cm"&gt;*/&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;xmlHttpObject&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
        &lt;span class="nx"&gt;xmlHttpObject&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;ActiveXObject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Microsoft.XMLHTTP&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;xmlHttpObject&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;XMLHttpRequest&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;  &lt;span class="c1"&gt;//方法二：C++风格注释JS&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;xmlHttpObject&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h5&gt;6 C语言&lt;/h5&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;#include &amp;lt;conio.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;string.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;argc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt; &lt;span class="n"&gt;argv&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;s1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Hello, Programmers!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  &lt;span class="c1"&gt;//单行C注释文字&lt;/span&gt;
    &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;s2&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;aello, programmers!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt;     *  多行C注释文字&lt;/span&gt;
&lt;span class="cm"&gt;     */&lt;/span&gt;
    &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;memcmp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;s2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;strlen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s1&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%d&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h5&gt;7.C#语言&lt;/h5&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="nn"&gt;Functions&lt;/span&gt; 
&lt;span class="p"&gt;{&lt;/span&gt; 
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Factorial&lt;/span&gt; 
    &lt;span class="p"&gt;{&lt;/span&gt; 
        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;Calc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;   &lt;span class="p"&gt;&amp;lt;!--&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="err"&gt;#的注释文字&lt;/span&gt;&lt;span class="p"&gt;--&amp;gt;&lt;/span&gt; 
        &lt;span class="p"&gt;{&lt;/span&gt; 
            &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="p"&gt;*&lt;/span&gt; &lt;span class="n"&gt;Calc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;-&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)));&lt;/span&gt;   &lt;span class="c1"&gt;//单行C#注释文字&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt;         * 多行C#注释文字&lt;/span&gt;
&lt;span class="cm"&gt;         */&lt;/span&gt;     
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Sun, 01 Jul 2012 11:19:00 +0800</pubDate><guid>tag:typecodes.com,2012-07-01:csharp/langannotation.html</guid><category>程序注释</category></item><item><title>一个简单的Ajax应用</title><link>https://typecodes.com/web/asimpajax.html</link><description>&lt;p&gt;我在上一篇文章中写了在asp中如何用Ajax技术免重载网页检查用户名是否被占用，那么这篇博文主要通过一个简单的Ajax应用来解析一下Ajax技术的原理。&lt;/p&gt;
&lt;p&gt;首先需要三个文件，simpleAjax.hml(用来看效果)，simpleAjax.js(用JavaScript中的XMLHttpRequest对象来直接与服务器进行通信)，simpleAjax.txt(可以自定义异步通信输出内容的文件)。&lt;/p&gt;


&lt;h5&gt;1 新建simpleAjax.html文件&lt;/h5&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;一个简单的Ajax应用&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;simpleAjax.js&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;button&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Ajax请求&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;onclick=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;startrequest()&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;responseResult&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;  &lt;span class="c"&gt;&amp;lt;!--节点responseResult将在simpleAjax.js中被使用，最后输出simplAjax.txt中的文字--&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h5&gt;2 新建simpleAjax.js文件&lt;/h5&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;xmlhttp&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="c1"&gt;//首先创建一个作为 XMLHttpRequest 对象使用的 xmlhttp 变量,值设为 null&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;createXMLHttpRequest&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;XMLHttpRequest&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="nx"&gt;xmlhttp&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;XMLHttpRequest&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;&lt;span class="c1"&gt;//针对 IE7+, Firefox, Chrome, Opera, Safari&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ActiveXObject&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="nx"&gt;xmlhttp&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;ActiveXObject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Microsoft.XMLHTTP&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="c1"&gt;//针对 IE6, IE5&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;//由simpleajax.html中的按钮点击调用这个函数&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;startrequest&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="nx"&gt;createXMLHttpRequest&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;&lt;span class="c1"&gt;//调用上面createXMLHttpRequest()函数&lt;/span&gt;
    &lt;span class="nx"&gt;xmlhttp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onreadystatechange&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;handlestatechange&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="c1"&gt;//调用下面handlestatechange()函数&lt;/span&gt;
    &lt;span class="nx"&gt;xmlhttp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;GET&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;simpleAjax.txt&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;xmlhttp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;handlestatechange&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;xmlhttp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;readyState&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;xmlhttp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;responseResult&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;xmlhttp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;responseText&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;名称解释：&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6
7&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;第一个函数 createXMLHttp() 的作用是根据客服端浏览器类型（IE和非IE）以及IE中安装的JavaScript技术版本的不同创建不同的XMLHttpRequest对象。XMLHttpRequest对象用于在后台与服务器交换数据。它能够：在不重新加载页面的情况下更新网页、在页面已加载后从服务器请求数据、在页面已加载后从服务器接收数据、在后台向服务器发送数据。

其中 xmlhttp.onreadystatechange 表示每当存有xmlhttprequest的状态信息的readyState改变时，就会触发 这个onreadystatechange 事件。当 readyState 等于 4 且状态为 200 时，表示响应已就绪。

其中 xmlhttp:open(bstrMethod, bstrUrl, varAsync, bstrUser, bstrPassword) 表示创建一个新的http请求(bstrUrl)，并指定此请求的方法(get,post)、URL以及varAsync布尔型，指定此请求是否为异步方式，默认为true即当状态改变时会调用onreadystatechange属性指定的回调函数。

其中 xmlhttp.send() 表示发送请求到http服务器并接收回应。
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h5&gt;3 新建simpleajax.txt文件&lt;/h5&gt;
&lt;p&gt;任意在这个txt文件里面写入内容，例如： hello,i have changed myself! 。&lt;/p&gt;
&lt;h5&gt;4 延展：simpleAjax.js的另一种形式（结果一样）&lt;/h5&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;xmlhttp&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="c1"&gt;//首先创建一个作为 XMLHttpRequest 对象使用的 XMLHttp 变量,值设为 null&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;startrequest&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;XMLHttpRequest&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;&lt;span class="c1"&gt;//针对 IE7+, Firefox, Chrome, Opera, Safari&lt;/span&gt;
        &lt;span class="nx"&gt;xmlhttp&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;XMLHttpRequest&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="c1"&gt;// 针对 IE6, IE5&lt;/span&gt;
        &lt;span class="nx"&gt;xmlhttp&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;ActiveXObject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Microsoft.XMLHTTP&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;xmlhttp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onreadystatechange&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;xmlhttp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;readyState&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;xmlhttp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
            &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;responseResult&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;xmlhttp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;responseText&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;xmlhttp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;GET&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;simpleAjax.txt&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;xmlhttp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h5&gt;5 相关截图&lt;/h5&gt;
&lt;p&gt;&lt;img alt="一个简单的Ajaxing用-1" src="https://o3cex9zsl.qnssl.com/2012/06/6.jpg" title="一个简单的Ajaxing用-1" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="一个简单的Ajax应用-2" src="https://o3cex9zsl.qnssl.com/2012/06/7.jpg" title="一个简单的Ajax应用-2" /&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Sat, 30 Jun 2012 16:51:00 +0800</pubDate><guid>tag:typecodes.com,2012-06-30:web/asimpajax.html</guid><category>ajax</category></item><item><title>浅谈初步应用Ajax技术</title><link>https://typecodes.com/web/talkajax.html</link><description>&lt;p&gt;为了避免繁重的Web空间服务器负荷，Ajax技术可以使得我们的服务器不再超负载工作了。Ajax全称是“Asynchronous JavaScript and XML”，也即异步JavaScript和XML。它通过JavaScript可使用其XMLHttpRequest对象来直接与服务器进行通信。通过这个对象，JavaScript可在不重载页面的情况与 Web 服务器交换数据。&lt;/p&gt;
&lt;p&gt;由于Ajax在客服端的浏览器与Web服务器端之间使用异步数据传输（HTTP 请求），这样就可使网页从服务器请求少量的信息，而不是整个页面，从而降低了负载。下面通过我自己建的一个ASP网站中的注册页面register.asp来说明：&lt;/p&gt;


&lt;h5&gt;1 新建register.asp文件&lt;/h5&gt;
&lt;p&gt;要点提示：在“用户名”的右边我添加了一个名叫“检测是否可用”的按钮，只要单击它就可以激活调用chkname.js文件中的chkname()函数，它的功能是检查用户要注册的用户名是否与数据库中的用户名相同。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;&amp;lt;%&lt;/span&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="n"&gt;LANGUAGE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;VBSCRIPT&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;CODEPAGE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;936&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;%&amp;gt;&amp;lt;!&lt;/span&gt;&lt;span class="n"&gt;DOCTYPE&lt;/span&gt; &lt;span class="n"&gt;html&lt;/span&gt; &lt;span class="n"&gt;PUBLIC&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;-//W3C//DTD XHTML 1.0 Transitional//EN&amp;quot;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt; &lt;span class="n"&gt;xmlns&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://www.w3.org/1999/xhtml&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;!--&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="n"&gt;include&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Connection/conn.asp&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;--&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;link&lt;/span&gt; &lt;span class="n"&gt;rel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;stylesheet&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;css/register.css&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/css&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;会员注册&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;TypeCodes&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;script&lt;/span&gt; &lt;span class="n"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;js/chkname.js&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="c1"&gt;//调用js文件&amp;lt;/script&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;link&lt;/span&gt; &lt;span class="n"&gt;rel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Shortcut Icon&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;img/logo.ico&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;link&lt;/span&gt; &lt;span class="n"&gt;rel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Bookmark&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;img/logo.ico&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;%&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;yh&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;gt;&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;or&lt;/span&gt; &lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;gly&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;gt;&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;then&lt;/span&gt; 
        &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;lt;script language=JavaScript&amp;gt;alert(&amp;#39;您已经注册并登录了！&amp;#39;);&amp;quot;&lt;/span&gt;
        &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;this.location.href=&amp;#39;index.asp&amp;#39;;&amp;lt;/script&amp;gt;&amp;quot;&lt;/span&gt; 
        &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="o"&gt;%&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;script&lt;/span&gt; &lt;span class="n"&gt;language&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;javascript&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;!--&lt;/span&gt;
            &lt;span class="n"&gt;function&lt;/span&gt; &lt;span class="n"&gt;check&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
                    &lt;span class="n"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;请填写用户名！&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                    &lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;focus&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
                    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;length&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;||&lt;/span&gt;&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;length&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
                    &lt;span class="n"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;用户名长度应该在2-10位！&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                    &lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;focus&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
                    &lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;select&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
                    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;email&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;indexOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;@&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;==-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;||&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;email&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;indexOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;==-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)){&lt;/span&gt;
                    &lt;span class="n"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Email格式有错！(正确形式：vfhky@qq.com)&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                    &lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;email&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;focus&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
                    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="c1"&gt;//--&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;script&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;%&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;%&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;body&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;div&lt;/span&gt; &lt;span class="kt"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;web&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;!--&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="n"&gt;include&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;top.html&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;--&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;div&lt;/span&gt; &lt;span class="kt"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;mid&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="o"&gt;&amp;lt;!--&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="n"&gt;include&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;left.html&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;--&amp;gt;&lt;/span&gt;
                &lt;span class="o"&gt;&amp;lt;!--&lt;/span&gt; &lt;span class="err"&gt;网站中部右边&lt;/span&gt; &lt;span class="o"&gt;--&amp;gt;&lt;/span&gt;
                &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;div&lt;/span&gt; &lt;span class="kt"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;right&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;div&lt;/span&gt; &lt;span class="kt"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;title&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;img&lt;/span&gt; &lt;span class="n"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;img/position.gif&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;strong&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;当前位置&lt;/span&gt;&lt;span class="o"&gt;:&amp;lt;/&lt;/span&gt;&lt;span class="k"&gt;strong&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;index.asp&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;_blank&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;首页&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;会员注册&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;div&lt;/span&gt; &lt;span class="kt"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;zc&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;会员注册&lt;/span&gt;&lt;span class="o"&gt;----&lt;/span&gt;&lt;span class="n"&gt;REGISTER&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;ul&lt;/span&gt; &lt;span class="kt"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;neiron&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;form&lt;/span&gt; &lt;span class="n"&gt;action&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;registerck.asp&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;method&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;post&amp;quot;&lt;/span&gt;  &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;form&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;onsubmit&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;return check(this)&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;li&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;用&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;yzm&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;户&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;h2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;名&lt;/span&gt;&lt;span class="o"&gt;:&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;input&lt;/span&gt; &lt;span class="n"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;name&amp;quot;&lt;/span&gt; &lt;span class="kt"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;name&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt; &lt;span class="kt"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;chk&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;*&lt;/span&gt;&lt;span class="err"&gt;必填，&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="err"&gt;字符&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;h2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;input&lt;/span&gt; &lt;span class="n"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;button&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;检测是否可用&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;onclick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;chkname()&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;/&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;li&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;li&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;邮&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;nc&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;箱&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;h2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;:&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;input&lt;/span&gt; &lt;span class="n"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;email&amp;quot;&lt;/span&gt; &lt;span class="kt"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;email&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;*&lt;/span&gt;&lt;span class="err"&gt;必填，格式如：&lt;/span&gt;&lt;span class="n"&gt;vfhky&lt;/span&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="n"&gt;qq&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;li&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;li&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;submit&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;input&lt;/span&gt; &lt;span class="n"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;submit&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;提交&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;input&lt;/span&gt; &lt;span class="n"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;reset&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;重新设置&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;h2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;li&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                        &lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;ul&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;!--&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="n"&gt;include&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;bottom.html&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;--&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;body&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;2 新建chkname.js文件&lt;/h5&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt; * 根据客服端浏览器类型（IE和非IE）以你IE中安装的JavaScript技术版本的不同创建不同的XMLHttpRequest对象&lt;/span&gt;
&lt;span class="cm"&gt; */&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;xmlHttpObject&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
  &lt;span class="nx"&gt;xmlHttpObject&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;ActiveXObject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Microsoft.XMLHTTP&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;xmlHttpObject&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;XMLHttpRequest&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; 
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;xmlHttpObject&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;chkname&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;chkthisname&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;chk&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  &lt;span class="c1"&gt;//获取register.asp中元素ID为chk的值（即初始值为“*必填，2-10字符”，点击按钮后会变成各种提示信息，例如后面的“正在检测中”和“汗，被别人抢先了！”）&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  &lt;span class="c1"&gt;//通过name.value获取register.asp中的控件元素（用户名）的value值，如果输入长度不在2-10个字符的话就会JS弹窗提示“请确认用户名长度为2-10字符！”，否则显示“正在检测中……”&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;backResult&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;||&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;||&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;请确认用户名长度为2-10字符！&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;focus&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;chkthisname&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;正在检测中……&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;chknameisok.asp?name1=&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;escape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;xmlHttpObject&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;GET&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;xmlHttpObject&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onreadystatechange&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;xmlHttpObject&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;readyState&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;xmlHttpObject&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
                &lt;span class="nx"&gt;backResult&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;xmlHttpObject&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;responseXML&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;documentElement&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;tagName&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;backResult&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;YES&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt; 
                    &lt;span class="nx"&gt;chkthisname&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;lt;span&amp;gt;恭喜您，此用户名有效！&amp;lt;/h2&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; 
                    &lt;span class="nx"&gt;chkthisname&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;lt;span&amp;gt;汗，被别人抢先了！&amp;lt;/h2&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nx"&gt;xmlHttpObject&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;温馨提示：第23行&lt;code&gt;var url="chknameisok.asp?name1="+escape(name.value);&lt;/code&gt;是为了通过&lt;code&gt;xmlHttpObject.open("GET",url,true);&lt;/code&gt;传递参数“name.value”给chknameisok.asp这个文件来查询数据库并验证是否存在该用户名同时返回一个验证标签（YES和NO）。后面的是xmlHttpObject的具体工作过程，有兴趣的可以自己查找相关解释。&lt;/p&gt;
&lt;h5&gt;3 新建chknameisok.asp文件&lt;/h5&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;&amp;lt;!--#include file=&amp;quot;Connection/conn.asp&amp;quot;--&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;&amp;lt;%&lt;/span&gt; 
    &lt;span class="no"&gt;Response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ContentType&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;text/xml&amp;quot;&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;确定此ASP文件是XML格式的 &lt;/span&gt;
&lt;span class="s1"&gt;    Dim name1&lt;/span&gt;
&lt;span class="s1"&gt;    Dim rs,sql&lt;/span&gt;
&lt;span class="s1"&gt;    name1=request.querystring(&amp;quot;name1&amp;quot;)&lt;/span&gt;
&lt;span class="s1"&gt;    Set rs = Server.CreateObject (&amp;quot;ADODB.Recordset&amp;quot;)&lt;/span&gt;
&lt;span class="s1"&gt;    sql = &amp;quot;Select * from alluser where name=&amp;#39;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;amp;name1&amp;amp;&amp;quot;&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;quot;&lt;/span&gt;
&lt;span class="s1"&gt;    rs.Open sql,conn,1,1&lt;/span&gt;
&lt;span class="s1"&gt;    if not (rs.eof AND rs.bof) then&lt;/span&gt;
&lt;span class="s1"&gt;        response.write(&amp;quot;&amp;lt;NO/&amp;gt;&amp;quot;)&amp;#39;&lt;/span&gt;&lt;span class="err"&gt;生成&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/err&amp;gt;标签 &lt;/span&gt;
&lt;span class="sr"&gt;    Else &lt;/span&gt;
&lt;span class="sr"&gt;        response.write(&amp;quot;&amp;lt;yes&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;yes&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;)&amp;#39;生成&amp;lt;ok&amp;gt;&amp;lt;/ok&amp;gt;标签 &lt;/span&gt;
&lt;span class="s2"&gt;    End If &lt;/span&gt;
&lt;span class="s2"&gt;    rs.close&lt;/span&gt;
&lt;span class="s2"&gt;    set rs=nothing&lt;/span&gt;
&lt;span class="s2"&gt;    conn.close&lt;/span&gt;
&lt;span class="s2"&gt;    set conn=nothing&lt;/span&gt;
&lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h5&gt;4 相关截图&lt;/h5&gt;
&lt;p&gt;&lt;img alt="浅谈初步应用Ajax技术-1" src="https://o3cex9zsl.qnssl.com/2012/06/4.jpg" title="浅谈初步应用Ajax技术-1" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="浅谈初步应用Ajax技术-2" src="https://o3cex9zsl.qnssl.com/2012/06/5.jpg" title="浅谈初步应用Ajax技术-2" /&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Sat, 30 Jun 2012 01:30:00 +0800</pubDate><guid>tag:typecodes.com,2012-06-30:web/talkajax.html</guid><category>ajax</category></item><item><title>从一段ASP代码分析HTML、CSS、ASP、SQL（二）</title><link>https://typecodes.com/web/aspanalyzetwo.html</link><description>&lt;h5&gt;（一）前台DIV+CSS布局&lt;/h5&gt;
&lt;p&gt;布局样式通过第11行 &lt;code&gt;linkrel ="stylesheet" href="css/index.css" type="text/css"&lt;/code&gt; 引入控制的。而从图中可以看出首页(index.asp)是由头部(第18行)、中部(第20行）和底部（第127行）这三个DIV层构成。其中，头部和尾部调用两个页面即可：top.html 和 bottom.html 。&lt;/p&gt;
&lt;p&gt;中部又由左边(第21行)和右边(第23行)构成，即 left.html 和 div id="right" 。中部的右边又由位于上面部分的1个flash层和2个content1层、下面部分的2个content层和1个留言板content2层。所以整个CSS布局框架就是这样的。值得注意的是中间部分嵌套了2个层(即左右两层)，右边的层又嵌套了6个层（1个flash层,2个content1层,2个content层,1个content2层）。&lt;/p&gt;


&lt;p&gt;&lt;img alt="从一段ASP代码分析HTML、CSS、ASP、SQL（二）" src="https://o3cex9zsl.qnssl.com/2012/06/3.png" title="从一段ASP代码分析HTML、CSS、ASP、SQL（二）-1" /&gt;&lt;/p&gt;
&lt;h5&gt;（二）ASP和PHP比较&lt;/h5&gt;
&lt;p&gt;1 第4行&lt;code&gt;&amp;lt;!--#include file="Connection/conn.asp"--&amp;gt;&lt;/code&gt;表示引入conn.asp(数据库Access连接文件)。在PHP中可以用两种方法引入文件：&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6
7
8&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="x"&gt;/*&lt;/span&gt;
&lt;span class="x"&gt;PHP程序在执行前，就会先读入所指定引入的文件，使它变成 PHP程序的一部份。常用的函数，亦可以这个方法将它引入网页中。&lt;/span&gt;
&lt;span class="x"&gt;*/&lt;/span&gt;
&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt; &lt;span class="k"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;left.php&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;/*&lt;/span&gt;
&lt;span class="x"&gt;这个函数一般是放在流程控制的处理部分中。PHP程序在读到include的文件时，才将它读进来。这种方式，可以把程序执行时的流程简单化。&lt;/span&gt;
&lt;span class="x"&gt;*/&lt;/span&gt;
&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt; &lt;span class="k"&gt;include&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;left.php&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;2 ASP主要利用VB语言，PHP语法方面类似C语言，这点在PHP每句后面都用分号来表示程序语句的完整性得以从分体现。&lt;/p&gt;
&lt;p&gt;3 其它具体的语法细节大家可以具体比较下，例如在ASP中用得较多的是if……else if…… end if的循环语句，在PHP中不用end if来表示循环语句的结束。&lt;/p&gt;
&lt;h5&gt;（三）SQL语句的特色&lt;/h5&gt;
&lt;p&gt;在第4行引入conn.asp(数据库Access连接文件)后，我们就可以在页面中进行数据库的“增删改查”了。例如，第68-73行&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;%&lt;/span&gt;
    &lt;span class="n"&gt;classid1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;rs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;classid&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;sql&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;select  top 3 * from news where classid=&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;classid1&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot; order by time desc &amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="n"&gt;rs1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sql&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;rs1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;eof&lt;/span&gt;

    &lt;span class="sr"&gt;/&amp;#39;循环输出部分&lt;/span&gt;

&lt;span class="sr"&gt;    end if&lt;/span&gt;
&lt;span class="sr"&gt;    rs.movenext&lt;/span&gt;
&lt;span class="sr"&gt;    loop&lt;/span&gt;
&lt;span class="sr"&gt;    rs.close&lt;/span&gt;
&lt;span class="sr"&gt;    set rs=nothing&lt;/span&gt;
&lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;首先查询&lt;code&gt;classid="&amp;amp;classid1&amp;amp;"&lt;/code&gt;最新的3条新闻信息，并按时间递减排列；然后如果所查询的记录集rs1没有结束的话则循环执行中间的循环部分，最后输出这3条信息并且关闭数据库的连接，清空记录集。这段代码是VB和SQL语句的结合。当然这个index.asp里面还有其它的SQL语句，就留给大家分析了。&lt;/p&gt;
&lt;h5&gt;（四）结语&lt;/h5&gt;
&lt;p&gt;虽然ASP和ACCESS已经退出时代舞台了，但是对那些入门WEB技术的人来说我觉得还是有很好的帮助提升作用的。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Sat, 30 Jun 2012 00:08:00 +0800</pubDate><guid>tag:typecodes.com,2012-06-30:web/aspanalyzetwo.html</guid><category>asp</category></item><item><title>从一段ASP代码分析HTML、CSS、ASP、SQL（一）</title><link>https://typecodes.com/web/aspanalyzeone.html</link><description>&lt;p&gt;在大二的时候参加学校的一个网页设计比赛，做了一个关于党建90周年的网站。这个网站是用CSS+ASP+ACCESS2003写的。虽说access数据库现在基本没人用了，但是这对初学者来说是很好的一个数据库操作平台。尤其是在学习SQL时，用Access比MSSQL和MYSQL要容易上手些，因为Access数据库很直观并且各种操作也很简洁明了。但是微软自己Access已经被MSSQL代替了，而且当前流行的Web技术都集中在了PHP上，而PHP和MYSQL向来是黄金搭档，所以几乎没人用了。随之是ASP升级为ASP.NET，搭配MSSQL数据库。我写这篇博文的目的是给一些WEB的初学者，当然也算是自己的一个心路总结了。下面是首页index.asp代码，我就从这里入手。&lt;/p&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;%&lt;/span&gt;&lt;span class="vi"&gt;@LANGUAGE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;VBSCRIPT&amp;quot;&lt;/span&gt; &lt;span class="no"&gt;CODEPAGE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;936&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html PUBLIC &amp;quot;-//W3C//DTD XHTML 1.0 Transitional//EN&amp;quot; &amp;quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&amp;quot;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;xmlns=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://www.w3.org/1999/xhtml&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="c"&gt;&amp;lt;!--#include file=&amp;quot;Connection/conn.asp&amp;quot;--&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;window.open(&amp;#39;inininin.asp&amp;#39;,&amp;#39;typecodes&amp;#39;,&amp;#39;toolbar=no,status=no,scrollbars=yes,left=60,top=50,width=280,height=170&amp;#39;)&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;robots&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;all&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt; 
        &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Copyright&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Copyright (c) http://vfhky.sinaapp.com/&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt; 
        &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Description&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;typecodes&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt; 
        &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Keywords&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;https://typecodes.com/   typecodes&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt; 
        &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;stylesheet&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;css/index.css&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/css&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;typecodes--首页&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Shortcut Icon&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;img/logo.ico&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Bookmark&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;img/logo.ico&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;web&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="c"&gt;&amp;lt;!--#include file=&amp;quot;top.html&amp;quot;--&amp;gt;&lt;/span&gt;
        &lt;span class="c"&gt;&amp;lt;!-- 网站中部 --&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;mid&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="c"&gt;&amp;lt;!--#include file=&amp;quot;left.html&amp;quot;--&amp;gt;&lt;/span&gt;
        &lt;span class="c"&gt;&amp;lt;!-- 网站中部右边 --&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;right&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="c"&gt;&amp;lt;!-- 网站中部右边幻灯片栏 --&amp;gt;&lt;/span&gt; 
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;flash&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;embed&lt;/span&gt; &lt;span class="na"&gt;height=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;172&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;width=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;230&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;pluginspage=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://www.macromedia.com/go/getflashplayer&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;application/x-shockwave-flash&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;quality=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;high&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;menu=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;false&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;flashvars=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;borderwidth=230&amp;amp;amp;borderheight=159&amp;amp;amp;textheight=22&amp;amp;amp;interval_time=6&amp;amp;amp;pics=img/hgdy.jpg|img/wjb.jpg|img/qhdx.jpg|img/hmt.jpg&amp;amp;amp;links=list.asp?classid=4|index.asp|index.asp|index.asp&amp;amp;amp;texts=typecodes|亲切接见大学生们|100周年校庆|typecodes掠影--画眉潭&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;wmode=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;opaque&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;flash/news.swf&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="c"&gt;&amp;lt;!--幻灯片结束--&amp;gt;&lt;/span&gt;
        &lt;span class="c"&gt;&amp;lt;!-- 网站中部右边四个新闻版块 --&amp;gt;&lt;/span&gt;
        &lt;span class="cp"&gt;&amp;lt;%&lt;/span&gt; &lt;span class="n"&gt;dim&lt;/span&gt; &lt;span class="n"&gt;classid1&lt;/span&gt;
        &lt;span class="n"&gt;sql&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;select * from newsclass order by classid &amp;quot;&lt;/span&gt;
        &lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="n"&gt;rs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sql&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;rs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;eof&lt;/span&gt;
        &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;
        &lt;span class="cp"&gt;&amp;lt;%&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;rs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;classid&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="n"&gt;rs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;classid&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;  &lt;span class="k"&gt;then&lt;/span&gt;&lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;content1&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; 
          &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;align=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;left&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt;&lt;span class="n"&gt;rs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;classimg&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt;&lt;span class="n"&gt;rs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;classtitle&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="ni"&gt;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;list.asp?classid=&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt;&lt;span class="n"&gt;rs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;classid&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;target=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;_blank&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;list.asp?classid=&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt;&lt;span class="n"&gt;rs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;classid&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;target=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;_blank&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;img/more.gif&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;img/fgx.jpg&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;span class="c"&gt;&amp;lt;!--前面的代码显示的是每个新闻版块的导航--&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;ul&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;neiron&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="cp"&gt;&amp;lt;%&lt;/span&gt; 
        &lt;span class="n"&gt;classid1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;rs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;classid&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;sql&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;select  top 3 * from news where classid=&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;classid1&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot; order by time desc &amp;quot;&lt;/span&gt;
        &lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="n"&gt;rs1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sql&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;rs1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;eof&lt;/span&gt;
        &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;img/page.jpg&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;detail.asp?classid=&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt;&lt;span class="n"&gt;rs1&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;classid&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;&lt;span class="s"&gt;&amp;amp;newsid=&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt;&lt;span class="n"&gt;rs1&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;newsid&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;target=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;_blank&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;%&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;rs1&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;image&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt; 
        &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;lt;font color=&amp;#39;#0000CC&amp;#39; &amp;gt;[图]&amp;lt;/font&amp;gt;&amp;quot;&lt;/span&gt;
        &lt;span class="k"&gt;end&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;trim&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rs1&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;title&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;17&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt; 
        &lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;trim&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rs1&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;title&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt; &lt;span class="n"&gt;left&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;17&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;……&amp;quot;&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt; 
        &lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;trim&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rs1&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;title&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt;
        &lt;span class="k"&gt;end&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;
        &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;font&lt;/span&gt; &lt;span class="na"&gt;color=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;#663300&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;size=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;2px&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;[&lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt;&lt;span class="n"&gt;formatdatetime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rs1&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;time&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;]&lt;span class="nt"&gt;&amp;lt;/font&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
        &lt;span class="cp"&gt;&amp;lt;%&lt;/span&gt;&lt;span class="n"&gt;rs1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;movenext&lt;/span&gt;
        &lt;span class="kp"&gt;loop&lt;/span&gt;
        &lt;span class="n"&gt;rs1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;
        &lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="n"&gt;rs1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;nothing&lt;/span&gt;
        &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="cp"&gt;&amp;lt;%&lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;content&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; 
          &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;align=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;left&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt;&lt;span class="n"&gt;rs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;classimg&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt;&lt;span class="n"&gt;rs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;classtitle&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="ni"&gt;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;list.asp?classid=&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt;&lt;span class="n"&gt;rs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;classid&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;target=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;_blank&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;list.asp?classid=&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt;&lt;span class="n"&gt;rs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;classid&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;target=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;_blank&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;img/more.gif&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;img/fgx.jpg&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;span class="c"&gt;&amp;lt;!--前面的代码显示的是每个新闻版块的导航--&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;ul&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;neiron&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="cp"&gt;&amp;lt;%&lt;/span&gt; 
        &lt;span class="n"&gt;classid1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;rs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;classid&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;sql&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;select  top 3 * from news where classid=&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;classid1&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot; order by time desc &amp;quot;&lt;/span&gt;
        &lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="n"&gt;rs1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sql&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;rs1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;eof&lt;/span&gt;
        &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;img/page.jpg&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;detail.asp?classid=&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt;&lt;span class="n"&gt;rs1&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;classid&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;&lt;span class="s"&gt;&amp;amp;newsid=&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt;&lt;span class="n"&gt;rs1&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;newsid&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;target=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;_blank&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;%&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;rs1&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;image&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt; 
        &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;lt;font color=&amp;#39;#0000CC&amp;#39; &amp;gt;[图]&amp;lt;/font&amp;gt;&amp;quot;&lt;/span&gt;
        &lt;span class="k"&gt;end&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;trim&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rs1&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;title&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;17&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt; 
        &lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;trim&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rs1&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;title&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt; &lt;span class="n"&gt;left&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;17&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;……&amp;quot;&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt; 
        &lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;trim&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rs1&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;title&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt;
        &lt;span class="k"&gt;end&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;
        &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;font&lt;/span&gt; &lt;span class="na"&gt;color=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;#663300&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;size=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;2px&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;[&lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt;&lt;span class="n"&gt;formatdatetime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rs1&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;time&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;]&lt;span class="nt"&gt;&amp;lt;/font&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
        &lt;span class="cp"&gt;&amp;lt;%&lt;/span&gt;&lt;span class="n"&gt;rs1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;movenext&lt;/span&gt;
        &lt;span class="kp"&gt;loop&lt;/span&gt;
        &lt;span class="n"&gt;rs1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;
        &lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="n"&gt;rs1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;nothing&lt;/span&gt;
        &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="cp"&gt;&amp;lt;%&lt;/span&gt;
        &lt;span class="k"&gt;end&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;
        &lt;span class="n"&gt;rs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;movenext&lt;/span&gt;
        &lt;span class="kp"&gt;loop&lt;/span&gt;
        &lt;span class="n"&gt;rs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;
        &lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="n"&gt;rs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;nothing&lt;/span&gt;
        &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;&lt;span class="c"&gt;&amp;lt;!--四个新闻版块结束--&amp;gt;&lt;/span&gt;

        &lt;span class="c"&gt;&amp;lt;!-- 网站右边留言版块 --&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;content2&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;align=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;left&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;img/newsdj.gif&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;留言&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="ni"&gt;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;message.asp&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;target=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;_blank&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;img/more.gif&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;img/fgx.jpg&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt; 
         &lt;span class="nt"&gt;&amp;lt;ul&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;neiron&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; &lt;span class="cp"&gt;&amp;lt;%&lt;/span&gt;
        &lt;span class="n"&gt;sql&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;select top 3 * from message order by time desc &amp;quot;&lt;/span&gt;
        &lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="n"&gt;rs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sql&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;rs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;eof&lt;/span&gt;
        &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt; 
          &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;img/page.jpg&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;message.asp?id=&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt;&lt;span class="n"&gt;rs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;id&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;target=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;_blank&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;%&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;trim&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;content&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt; 
          &lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;trim&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;content&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt; &lt;span class="n"&gt;left&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;…&amp;quot;&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt; 
         &lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;trim&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;content&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt; &lt;span class="n"&gt;content&lt;/span&gt;
        &lt;span class="k"&gt;end&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&amp;lt;font&lt;/span&gt; &lt;span class="na"&gt;color=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;#663300&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;size=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;2px&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;[&lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt;&lt;span class="n"&gt;formatdatetime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;time&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;]
        &lt;span class="nt"&gt;&amp;lt;/font&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
          &lt;span class="cp"&gt;&amp;lt;%&lt;/span&gt;
          &lt;span class="n"&gt;rs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;movenext&lt;/span&gt;
          &lt;span class="kp"&gt;loop&lt;/span&gt;
          &lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="n"&gt;rs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;nothing&lt;/span&gt;
          &lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;span class="c"&gt;&amp;lt;!--div id=&amp;quot;right&amp;quot;结束--&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;span class="c"&gt;&amp;lt;!--div id=&amp;quot;mid&amp;quot;结束--&amp;gt;&lt;/span&gt;

        &lt;span class="c"&gt;&amp;lt;!--#include file=&amp;quot;bottom.html&amp;quot;--&amp;gt;&lt;/span&gt;

        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;span class="c"&gt;&amp;lt;!--div id=&amp;quot;web&amp;quot;结束--&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;接下来是重点分析这里面的一些东东了，点击马上进入&lt;a href="https://typecodes.com/web/aspanalyzetwo.html" title="从一段ASP代码分析HTML、CSS、ASP、SQL（二）"&gt;《从一段ASP代码分析HTML、CSS、ASP、SQL（二）》&lt;/a&gt;。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Fri, 29 Jun 2012 21:49:00 +0800</pubDate><guid>tag:typecodes.com,2012-06-29:web/aspanalyzeone.html</guid><category>asp</category></item><item><title>如何用笔记本Win7系统建立Wifi</title><link>https://typecodes.com/mix/win7wifi.html</link><description>&lt;p&gt;这几天，好友萌神的Andriod神机由于包的流量用完了，老是一副没精神的神情。看他无所事事的样子，我就想要是自己建个Wifi，那就可以解决他的流量问题了。正好晚上班级聚餐回来，起兴的我马上行动了起来。现在和大家分享下这种在没有用无线路由器（Wireless Router）的情况下，如何利用笔记本的win7系统的无线承载网络（Wireless Hosted Network）建立一个Wifi（可以自定义Wifi名称和连接密码）。这里用笔记本的原因是台式的电脑不能无线设置，而笔记本可以。具体步骤如下：&lt;/p&gt;
&lt;p&gt;1.查看自己的笔记本无线网卡驱动是否支持“无线承载网络”，否则不能成功。一般最近买的或者通过“Windows 7徽标认证”的笔记本的网卡都支持“无线承载网络”。你也可以通过CMD命令查看：打开CMD命令，输入“netsh wlan show drivers”（无线网络连接驱动信息显示），如图所示&lt;/p&gt;


&lt;p&gt;&lt;img alt="无线网络连接驱动信息显示" src="https://o3cex9zsl.qnssl.com/2012/06/12.jpg" title="无线网络连接驱动信息显示" /&gt;&lt;/p&gt;
&lt;p&gt;从图中亮色部分可以看出我的笔记本无线网卡支持“承载网络”。&lt;/p&gt;
&lt;p&gt;2.新建一个.txt文件，把下面的代码复制进去&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;netsh wlan &lt;span class="nb"&gt;set &lt;/span&gt;hostednetwork &lt;span class="nv"&gt;mode&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;allow &lt;span class="nv"&gt;ssid&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;wireless Router&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;wireless
netsh wlan start hostednetwork
pause
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;保存之后，把后缀.txt改为.bat批处理文件。（其中可以自定义“wireless Router”表示“指定无线网络的名称（英文）”，“key”表示“指定无线网络的密码。该密码用于对无线网进行安全的WPA2加密（8位），能够很好的防止网络安全。”）&lt;/p&gt;
&lt;p&gt;3.以管理员身份运行即可成功建立一个Wifi热点。&lt;/p&gt;
&lt;p&gt;结果萌神无比高兴地找到这个叫“wireless Router”的Wifi，并输入密码“wireless”，这时他手机显示很强的连接信号。虽然连接成功了而且信号很强，但是就是不能上网。哈哈，谁叫他之前不请客给点动力呢！话虽这么说，但是总归送佛送到西嘛。于是又查了下，找到了答案。首先进入“控制面板”——“网络和网络共享中心”——“更改适配器设置”，右键单击已连接到Internet的网络连接（可以是当前笔记本有线连接的网络，例如“本地连接”），选择“属性”——“共享”，勾选“允许其共享Internet的网络连接此计算机的Internet连接（N）"，然后选择刚才建立的“wireless Router”即“无线网络连接2”，这也就是我们常说的虚拟Wifi网卡。如图所示&lt;/p&gt;
&lt;p&gt;&lt;img alt="虚拟Wifi（无线网络连接）" src="https://o3cex9zsl.qnssl.com/2012/06/2.jpg" title="虚拟Wifi（无线网络连接）" /&gt;&lt;/p&gt;
&lt;p&gt;这样就解决了他的问题。嘿嘿，结果萌神果断说请哥明天吃中饭，(&lt;em&gt;^__^&lt;/em&gt;) &lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Thu, 28 Jun 2012 15:15:00 +0800</pubDate><guid>tag:typecodes.com,2012-06-28:mix/win7wifi.html</guid><category>win7wifi</category></item><item><title>妙用IE浏览器下载各种难以下载的资源</title><link>https://typecodes.com/mix/iedownsource.html</link><description>&lt;p&gt;可能很多人会认为微软的IE浏览器是一个很鸡肋的东西，要界面没界面，要速度没速度，而且很呆板。要不是靠着自己的系统捆绑，估计没几个人会用。人家谷歌有速度，而且有很多时尚超前的App Store；火狐向来是网页标准化的先驱者，另外它也是一个开放的王国。但也只有IE死守在自己几十年前的标准，和各大浏览器厂商都争着。但随着市场的占有率逐年的下降，谁也不敢肯定这个名噪一时的浏览器会不会濒临灭亡。但我今天想说的是IE的好处，那就是用它来下载一些迅雷或者谷歌不能下载的资源。比如说腾讯的视频，很多是不能下载的，那么怎么才能download呢？IE就能派上用场了！当你用谷歌或者360极速看腾讯视频的时候，想要下载它的内容是不可能的，那么通过IE可以实现边看边下载的功能。具体操作如下：&lt;/p&gt;
&lt;p&gt;1.进入IE浏览器，在右上角找到“Internet选项”，然后在“浏览历史记录”中单击“删除”，这一步骤是为了接下来方便的找到自己要下载的视频文件。&lt;/p&gt;
&lt;p&gt;2.这时打开你想要下载的腾讯视频的地址，然后把视频完全浏览一遍，这中间最好不要快进！&lt;/p&gt;


&lt;p&gt;3.在浏览完后，马上进入“Internet选项”，然后然后在“浏览历史记录”中单击“设置”，接着选择“查看”，这时你会看到一个文件夹Temporary Internet Files（一般在目录C:\Users\vfhky\AppData\Local\Microsoft\Windows\Temporary Internet Files里面）。&lt;/p&gt;
&lt;p&gt;4.在这个文件夹空白处单击右键，在“排序方式”中选择按“大小”排序，这样像视频这种比较大的文件会排在最前面，于是乎你就成功的下载了难以企及的腾讯视频。&lt;/p&gt;
&lt;p&gt;除了下载视频这些功能以外，还有一个让一些网页开发人员比较喜欢的功能就是下载一些swf文件（它是Flash的专用格式）。swf文件不会像网页中的图片那样能用右键保存在本地的计算机，也不能直接用迅雷下载。那么可以通过IE浏览器下载，大体步骤也和上面差不多。例如下载本博客的音乐播放器。&lt;/p&gt;
&lt;p&gt;1.进入IE浏览器，然后打开我的 &lt;a href="https://typecodes.com/" title="TypeCodes"&gt;博客首页&lt;/a&gt;，然后鼠标右键“查看源代码”。&lt;/p&gt;
&lt;p&gt;&lt;img alt="右键网页swf代码截图" src="https://o3cex9zsl.qnssl.com/2012/06/1.png" title="右键网页swf代码截图" /&gt;&lt;/p&gt;
&lt;p&gt;2.看到这个“1.swf”文件，可见它是在网站的根目录下面，于是你输入网址 https://typecodes.com/1.swf，能看到图画，但此时你没办法下载。&lt;/p&gt;
&lt;p&gt;3.但在Temporary Internet Files文件夹中已经存在了这个swf播放器文件，所以你只需要找到就行了。&lt;/p&gt;
&lt;p&gt;总之，IE浏览器也有自己的一些优点，要真没点本事的话可能也早就给谷歌这样的巨头踩在脚下了，我们要做的也就是“取其精华去其糟粕”的拿来主义精神。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Tue, 26 Jun 2012 07:05:00 +0800</pubDate><guid>tag:typecodes.com,2012-06-26:mix/iedownsource.html</guid></item><item><title>如何在博客中发表评论时显示个性头像</title><link>https://typecodes.com/mix/bloggravatar.html</link><description>&lt;p&gt;当前基本上所有的博客都是开放的，可以进行互动性评论。经常看到一些朋友在发表评论时，总是使用千篇一律的头像，毫无个性可言。一部分原因是由于懒得去弄个头像，另一个原因可能是不知道还可以自定义自己的头像或者不知道怎样去设置自己喜欢的头像。那么这篇博文的主题就是教大家如何制作自己的个性头像，而且是全球通用的适用于所有的博客网站。&lt;/p&gt;
&lt;p&gt;&lt;img alt="博客评论中自定义的头像" src="https://o3cex9zsl.qnssl.com/2012/06/13.jpg" title="博客评论中自定义的头像" /&gt;&lt;/p&gt;


&lt;p&gt;步骤：&lt;/p&gt;
&lt;p&gt;1.访问&lt;a href="http://en.gravatar.com/" title="Gravatar首页"&gt;Gravatar&lt;/a&gt;，其功能是当你到任何一个支持Gravatar 的网站留言时，这个网站都就会根据你所提供的 Email账号显示出你自己定义的头像。&lt;/p&gt;
&lt;p&gt;2.选择左上角“Log in/Sign up”的“Sign up”进行注册，此时要输入你的邮箱号码，例如vfhky@qq.com。&lt;/p&gt;
&lt;p&gt;3.注册完成后进入自己输入的邮箱进行验证，并输入昵称和密码。&lt;/p&gt;
&lt;p&gt;4.设置完毕后会出现成功界面，点击 Add one by clicking here! 的链接即可进入图片选择界面，一般都会选择 My computer’s hard drive 来从本地电脑上传自己喜欢的图片（建议上传使用jpg格式的图像），上传后按自己的需求裁剪合适的大小即可。&lt;/p&gt;
&lt;p&gt;5.接下来就是选择合适的评级，一般都会选择&lt;strong&gt;G&lt;/strong&gt;（通用型），这样基本任何网站都能显示这个等级的图片。&lt;/p&gt;
&lt;p&gt;到这里自定义头像已经完成了，以后只要在支持 Gravatar 的博客留言评论时，输入你注册 Gravatar 时所填写的 email 地址，就可以在显示你的头像了。并且当你注册了一个邮箱账号后（例如注册vfhky@qq.com），你还可以添加多个邮箱账号，比如添加vfhky@sina.com，当然也可以设置另一种头像，这样就可以根据邮箱账号的不同而显示不同的头像。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Sun, 17 Jun 2012 13:44:00 +0800</pubDate><guid>tag:typecodes.com,2012-06-17:mix/bloggravatar.html</guid><category>gravatar</category></item><item><title>解决Office2010plus安装sp1更新时出现groovemui.msi错误</title><link>https://typecodes.com/mix/office2010plusgroovemuierr.html</link><description>&lt;p&gt;在安装OFFCIE2010后，win7系统的update过段时间会提示更新，但当你把下载好的更新进行安装时会莫名其妙的出现groovemui.msi的错误提示。&lt;/p&gt;
&lt;p&gt;&lt;img alt="office2010在安装sp1更新时出现的错误提示" src="https://o3cex9zsl.qnssl.com/2012/06/1.jpg" title="office2010在安装sp1更新时出现的错误提示" /&gt;&lt;/p&gt;


&lt;p&gt;这个是由于office2010的缓存文件在第一次安装office2010后被删除了的缘故（例如在第一次安装完后用360卫士、金山卫士等清理了系统的缓文件），解决方案如下：&lt;/p&gt;
&lt;p&gt;1、解压初始的office2010专业版安装包，运行安装包目录下\ProPlus.WW\ProPlusWW.msi。&lt;/p&gt;
&lt;p&gt;2、删除c:\MSOCache\All Users{90140000-001A-0804-0000-0000000FF1CE}-C\目录下所有内容。&lt;/p&gt;
&lt;p&gt;3、拷贝安装包目录下\Groove.zh-cn\目录中的所有内容到c:\MSOCache\All Users{90140000-001A-0804-0000-0000000FF1CE}-C\目录下。&lt;/p&gt;
&lt;p&gt;4、重新安装补丁包，出现如图中提示需要GrooveMUI程序时，在“使用源”中选择c:\MSOCache\All Users{90140000-001A-0804-0000-0000000FF1CE}-C\目录下的GrooveMUI.msi即可。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vfhky</dc:creator><pubDate>Sat, 16 Jun 2012 03:25:00 +0800</pubDate><guid>tag:typecodes.com,2012-06-16:mix/office2010plusgroovemuierr.html</guid><category>groovemui.msi</category></item></channel></rss>